// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "TowerMonthlyCombatRecord.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { TowerFightRecordPair } from "./TowerFightRecordPair";
/**
 * @generated from protobuf message TowerMonthlyCombatRecord
 */
export interface TowerMonthlyCombatRecord {
    /**
     * @generated from protobuf field: repeated TowerFightRecordPair most_reveal_avatar_list = 3;
     */
    mostRevealAvatarList: TowerFightRecordPair[];
    /**
     * @generated from protobuf field: TowerFightRecordPair Unk3300_EIGEGOGFJND = 8 [json_name = "Unk3300EIGEGOGFJND"];
     */
    unk3300EIGEGOGFJND?: TowerFightRecordPair;
    /**
     * @generated from protobuf field: TowerFightRecordPair Unk3300_OALLHJPBOHO = 2 [json_name = "Unk3300OALLHJPBOHO"];
     */
    unk3300OALLHJPBOHO?: TowerFightRecordPair;
    /**
     * @generated from protobuf field: TowerFightRecordPair Unk3300_KMCLPHEDNCJ = 14 [json_name = "Unk3300KMCLPHEDNCJ"];
     */
    unk3300KMCLPHEDNCJ?: TowerFightRecordPair;
    /**
     * @generated from protobuf field: TowerFightRecordPair Unk3300_KIKPMNPKLDG = 7 [json_name = "Unk3300KIKPMNPKLDG"];
     */
    unk3300KIKPMNPKLDG?: TowerFightRecordPair;
    /**
     * @generated from protobuf field: TowerFightRecordPair Unk3300_CCFHOFCIEPF = 15 [json_name = "Unk3300CCFHOFCIEPF"];
     */
    unk3300CCFHOFCIEPF?: TowerFightRecordPair;
}
// @generated message type with reflection information, may provide speed optimized methods
class TowerMonthlyCombatRecord$Type extends MessageType<TowerMonthlyCombatRecord> {
    constructor() {
        super("TowerMonthlyCombatRecord", [
            { no: 3, name: "most_reveal_avatar_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TowerFightRecordPair },
            { no: 8, name: "Unk3300_EIGEGOGFJND", kind: "message", jsonName: "Unk3300EIGEGOGFJND", T: () => TowerFightRecordPair },
            { no: 2, name: "Unk3300_OALLHJPBOHO", kind: "message", jsonName: "Unk3300OALLHJPBOHO", T: () => TowerFightRecordPair },
            { no: 14, name: "Unk3300_KMCLPHEDNCJ", kind: "message", jsonName: "Unk3300KMCLPHEDNCJ", T: () => TowerFightRecordPair },
            { no: 7, name: "Unk3300_KIKPMNPKLDG", kind: "message", jsonName: "Unk3300KIKPMNPKLDG", T: () => TowerFightRecordPair },
            { no: 15, name: "Unk3300_CCFHOFCIEPF", kind: "message", jsonName: "Unk3300CCFHOFCIEPF", T: () => TowerFightRecordPair }
        ]);
    }
    create(value?: PartialMessage<TowerMonthlyCombatRecord>): TowerMonthlyCombatRecord {
        const message = { mostRevealAvatarList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TowerMonthlyCombatRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TowerMonthlyCombatRecord): TowerMonthlyCombatRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated TowerFightRecordPair most_reveal_avatar_list */ 3:
                    message.mostRevealAvatarList.push(TowerFightRecordPair.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* TowerFightRecordPair Unk3300_EIGEGOGFJND = 8 [json_name = "Unk3300EIGEGOGFJND"];*/ 8:
                    message.unk3300EIGEGOGFJND = TowerFightRecordPair.internalBinaryRead(reader, reader.uint32(), options, message.unk3300EIGEGOGFJND);
                    break;
                case /* TowerFightRecordPair Unk3300_OALLHJPBOHO = 2 [json_name = "Unk3300OALLHJPBOHO"];*/ 2:
                    message.unk3300OALLHJPBOHO = TowerFightRecordPair.internalBinaryRead(reader, reader.uint32(), options, message.unk3300OALLHJPBOHO);
                    break;
                case /* TowerFightRecordPair Unk3300_KMCLPHEDNCJ = 14 [json_name = "Unk3300KMCLPHEDNCJ"];*/ 14:
                    message.unk3300KMCLPHEDNCJ = TowerFightRecordPair.internalBinaryRead(reader, reader.uint32(), options, message.unk3300KMCLPHEDNCJ);
                    break;
                case /* TowerFightRecordPair Unk3300_KIKPMNPKLDG = 7 [json_name = "Unk3300KIKPMNPKLDG"];*/ 7:
                    message.unk3300KIKPMNPKLDG = TowerFightRecordPair.internalBinaryRead(reader, reader.uint32(), options, message.unk3300KIKPMNPKLDG);
                    break;
                case /* TowerFightRecordPair Unk3300_CCFHOFCIEPF = 15 [json_name = "Unk3300CCFHOFCIEPF"];*/ 15:
                    message.unk3300CCFHOFCIEPF = TowerFightRecordPair.internalBinaryRead(reader, reader.uint32(), options, message.unk3300CCFHOFCIEPF);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TowerMonthlyCombatRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated TowerFightRecordPair most_reveal_avatar_list = 3; */
        for (let i = 0; i < message.mostRevealAvatarList.length; i++)
            TowerFightRecordPair.internalBinaryWrite(message.mostRevealAvatarList[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* TowerFightRecordPair Unk3300_EIGEGOGFJND = 8 [json_name = "Unk3300EIGEGOGFJND"]; */
        if (message.unk3300EIGEGOGFJND)
            TowerFightRecordPair.internalBinaryWrite(message.unk3300EIGEGOGFJND, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* TowerFightRecordPair Unk3300_OALLHJPBOHO = 2 [json_name = "Unk3300OALLHJPBOHO"]; */
        if (message.unk3300OALLHJPBOHO)
            TowerFightRecordPair.internalBinaryWrite(message.unk3300OALLHJPBOHO, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* TowerFightRecordPair Unk3300_KMCLPHEDNCJ = 14 [json_name = "Unk3300KMCLPHEDNCJ"]; */
        if (message.unk3300KMCLPHEDNCJ)
            TowerFightRecordPair.internalBinaryWrite(message.unk3300KMCLPHEDNCJ, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* TowerFightRecordPair Unk3300_KIKPMNPKLDG = 7 [json_name = "Unk3300KIKPMNPKLDG"]; */
        if (message.unk3300KIKPMNPKLDG)
            TowerFightRecordPair.internalBinaryWrite(message.unk3300KIKPMNPKLDG, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* TowerFightRecordPair Unk3300_CCFHOFCIEPF = 15 [json_name = "Unk3300CCFHOFCIEPF"]; */
        if (message.unk3300CCFHOFCIEPF)
            TowerFightRecordPair.internalBinaryWrite(message.unk3300CCFHOFCIEPF, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TowerMonthlyCombatRecord
 */
export const TowerMonthlyCombatRecord = new TowerMonthlyCombatRecord$Type();
