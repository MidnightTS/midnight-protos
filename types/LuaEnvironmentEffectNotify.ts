/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: LuaEnvironmentEffectNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class LuaEnvironmentEffectNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        type?: number;
        int_param_list?: number[];
        effect_alias?: string;
        float_param_list?: number[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [12, 14], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("type" in data && data.type != undefined) {
                this.type = data.type;
            }
            if ("int_param_list" in data && data.int_param_list != undefined) {
                this.int_param_list = data.int_param_list;
            }
            if ("effect_alias" in data && data.effect_alias != undefined) {
                this.effect_alias = data.effect_alias;
            }
            if ("float_param_list" in data && data.float_param_list != undefined) {
                this.float_param_list = data.float_param_list;
            }
        }
    }
    get type() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set type(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get int_param_list() {
        return pb_1.Message.getFieldWithDefault(this, 12, []) as number[];
    }
    set int_param_list(value: number[]) {
        pb_1.Message.setField(this, 12, value);
    }
    get effect_alias() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set effect_alias(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get float_param_list() {
        return pb_1.Message.getFieldWithDefault(this, 14, []) as number[];
    }
    set float_param_list(value: number[]) {
        pb_1.Message.setField(this, 14, value);
    }
    static fromObject(data: {
        type?: number;
        int_param_list?: number[];
        effect_alias?: string;
        float_param_list?: number[];
    }): LuaEnvironmentEffectNotify {
        const message = new LuaEnvironmentEffectNotify({});
        if (data.type != null) {
            message.type = data.type;
        }
        if (data.int_param_list != null) {
            message.int_param_list = data.int_param_list;
        }
        if (data.effect_alias != null) {
            message.effect_alias = data.effect_alias;
        }
        if (data.float_param_list != null) {
            message.float_param_list = data.float_param_list;
        }
        return message;
    }
    toObject() {
        const data: {
            type?: number;
            int_param_list?: number[];
            effect_alias?: string;
            float_param_list?: number[];
        } = {};
        if (this.type != null) {
            data.type = this.type;
        }
        if (this.int_param_list != null) {
            data.int_param_list = this.int_param_list;
        }
        if (this.effect_alias != null) {
            data.effect_alias = this.effect_alias;
        }
        if (this.float_param_list != null) {
            data.float_param_list = this.float_param_list;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.type != 0)
            writer.writeUint32(1, this.type);
        if (this.int_param_list.length)
            writer.writePackedInt32(12, this.int_param_list);
        if (this.effect_alias.length)
            writer.writeString(3, this.effect_alias);
        if (this.float_param_list.length)
            writer.writePackedFloat(14, this.float_param_list);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LuaEnvironmentEffectNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LuaEnvironmentEffectNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.type = reader.readUint32();
                    break;
                case 12:
                    message.int_param_list = reader.readPackedInt32();
                    break;
                case 3:
                    message.effect_alias = reader.readString();
                    break;
                case 14:
                    message.float_param_list = reader.readPackedFloat();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): LuaEnvironmentEffectNotify {
        return LuaEnvironmentEffectNotify.deserialize(bytes);
    }
}
