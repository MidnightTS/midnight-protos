"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _H5ActivityInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.H5ActivityInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: H5ActivityInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class H5ActivityInfo extends pb_1.Message {
    constructor(data) {
        super();
        _H5ActivityInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _H5ActivityInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("h5_activity_id" in data && data.h5_activity_id != undefined) {
                this.h5_activity_id = data.h5_activity_id;
            }
            if ("url" in data && data.url != undefined) {
                this.url = data.url;
            }
            if ("is_entrance_open" in data && data.is_entrance_open != undefined) {
                this.is_entrance_open = data.is_entrance_open;
            }
            if ("h5_schedule_id" in data && data.h5_schedule_id != undefined) {
                this.h5_schedule_id = data.h5_schedule_id;
            }
            if ("end_time" in data && data.end_time != undefined) {
                this.end_time = data.end_time;
            }
            if ("prefab_path" in data && data.prefab_path != undefined) {
                this.prefab_path = data.prefab_path;
            }
            if ("content_close_time" in data && data.content_close_time != undefined) {
                this.content_close_time = data.content_close_time;
            }
            if ("begin_time" in data && data.begin_time != undefined) {
                this.begin_time = data.begin_time;
            }
        }
    }
    get h5_activity_id() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set h5_activity_id(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get url() {
        return pb_1.Message.getFieldWithDefault(this, 4, "");
    }
    set url(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get is_entrance_open() {
        return pb_1.Message.getFieldWithDefault(this, 7, false);
    }
    set is_entrance_open(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get h5_schedule_id() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0);
    }
    set h5_schedule_id(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get end_time() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0);
    }
    set end_time(value) {
        pb_1.Message.setField(this, 10, value);
    }
    get prefab_path() {
        return pb_1.Message.getFieldWithDefault(this, 11, "");
    }
    set prefab_path(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get content_close_time() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set content_close_time(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get begin_time() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0);
    }
    set begin_time(value) {
        pb_1.Message.setField(this, 13, value);
    }
    static fromObject(data) {
        const message = new H5ActivityInfo({});
        if (data.h5_activity_id != null) {
            message.h5_activity_id = data.h5_activity_id;
        }
        if (data.url != null) {
            message.url = data.url;
        }
        if (data.is_entrance_open != null) {
            message.is_entrance_open = data.is_entrance_open;
        }
        if (data.h5_schedule_id != null) {
            message.h5_schedule_id = data.h5_schedule_id;
        }
        if (data.end_time != null) {
            message.end_time = data.end_time;
        }
        if (data.prefab_path != null) {
            message.prefab_path = data.prefab_path;
        }
        if (data.content_close_time != null) {
            message.content_close_time = data.content_close_time;
        }
        if (data.begin_time != null) {
            message.begin_time = data.begin_time;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.h5_activity_id != null) {
            data.h5_activity_id = this.h5_activity_id;
        }
        if (this.url != null) {
            data.url = this.url;
        }
        if (this.is_entrance_open != null) {
            data.is_entrance_open = this.is_entrance_open;
        }
        if (this.h5_schedule_id != null) {
            data.h5_schedule_id = this.h5_schedule_id;
        }
        if (this.end_time != null) {
            data.end_time = this.end_time;
        }
        if (this.prefab_path != null) {
            data.prefab_path = this.prefab_path;
        }
        if (this.content_close_time != null) {
            data.content_close_time = this.content_close_time;
        }
        if (this.begin_time != null) {
            data.begin_time = this.begin_time;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.h5_activity_id != 0)
            writer.writeUint32(3, this.h5_activity_id);
        if (this.url.length)
            writer.writeString(4, this.url);
        if (this.is_entrance_open != false)
            writer.writeBool(7, this.is_entrance_open);
        if (this.h5_schedule_id != 0)
            writer.writeUint32(8, this.h5_schedule_id);
        if (this.end_time != 0)
            writer.writeUint32(10, this.end_time);
        if (this.prefab_path.length)
            writer.writeString(11, this.prefab_path);
        if (this.content_close_time != 0)
            writer.writeUint32(2, this.content_close_time);
        if (this.begin_time != 0)
            writer.writeUint32(13, this.begin_time);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new H5ActivityInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 3:
                    message.h5_activity_id = reader.readUint32();
                    break;
                case 4:
                    message.url = reader.readString();
                    break;
                case 7:
                    message.is_entrance_open = reader.readBool();
                    break;
                case 8:
                    message.h5_schedule_id = reader.readUint32();
                    break;
                case 10:
                    message.end_time = reader.readUint32();
                    break;
                case 11:
                    message.prefab_path = reader.readString();
                    break;
                case 2:
                    message.content_close_time = reader.readUint32();
                    break;
                case 13:
                    message.begin_time = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return H5ActivityInfo.deserialize(bytes);
    }
}
exports.H5ActivityInfo = H5ActivityInfo;
_H5ActivityInfo_one_of_decls = new WeakMap();
