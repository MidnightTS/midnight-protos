/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CardProductRewardNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class CardProductRewardNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        hcoin?: number;
        product_id?: string;
        remain_days?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("hcoin" in data && data.hcoin != undefined) {
                this.hcoin = data.hcoin;
            }
            if ("product_id" in data && data.product_id != undefined) {
                this.product_id = data.product_id;
            }
            if ("remain_days" in data && data.remain_days != undefined) {
                this.remain_days = data.remain_days;
            }
        }
    }
    get hcoin() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set hcoin(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get product_id() {
        return pb_1.Message.getFieldWithDefault(this, 14, "") as string;
    }
    set product_id(value: string) {
        pb_1.Message.setField(this, 14, value);
    }
    get remain_days() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set remain_days(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    static fromObject(data: {
        hcoin?: number;
        product_id?: string;
        remain_days?: number;
    }): CardProductRewardNotify {
        const message = new CardProductRewardNotify({});
        if (data.hcoin != null) {
            message.hcoin = data.hcoin;
        }
        if (data.product_id != null) {
            message.product_id = data.product_id;
        }
        if (data.remain_days != null) {
            message.remain_days = data.remain_days;
        }
        return message;
    }
    toObject() {
        const data: {
            hcoin?: number;
            product_id?: string;
            remain_days?: number;
        } = {};
        if (this.hcoin != null) {
            data.hcoin = this.hcoin;
        }
        if (this.product_id != null) {
            data.product_id = this.product_id;
        }
        if (this.remain_days != null) {
            data.remain_days = this.remain_days;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.hcoin != 0)
            writer.writeUint32(6, this.hcoin);
        if (this.product_id.length)
            writer.writeString(14, this.product_id);
        if (this.remain_days != 0)
            writer.writeUint32(1, this.remain_days);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CardProductRewardNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CardProductRewardNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 6:
                    message.hcoin = reader.readUint32();
                    break;
                case 14:
                    message.product_id = reader.readString();
                    break;
                case 1:
                    message.remain_days = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): CardProductRewardNotify {
        return CardProductRewardNotify.deserialize(bytes);
    }
}
