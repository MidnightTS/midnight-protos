"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _VehicleInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.VehicleInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: VehicleInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./VehicleMember");
const pb_1 = require("google-protobuf");
class VehicleInfo extends pb_1.Message {
    constructor(data) {
        super();
        _VehicleInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], __classPrivateFieldGet(this, _VehicleInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("member_list" in data && data.member_list != undefined) {
                this.member_list = data.member_list;
            }
            if ("owner_uid" in data && data.owner_uid != undefined) {
                this.owner_uid = data.owner_uid;
            }
            if ("cur_stamina" in data && data.cur_stamina != undefined) {
                this.cur_stamina = data.cur_stamina;
            }
        }
    }
    get member_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.VehicleMember, 1);
    }
    set member_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    get owner_uid() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set owner_uid(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get cur_stamina() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set cur_stamina(value) {
        pb_1.Message.setField(this, 3, value);
    }
    static fromObject(data) {
        const message = new VehicleInfo({});
        if (data.member_list != null) {
            message.member_list = data.member_list.map(item => dependency_1.VehicleMember.fromObject(item));
        }
        if (data.owner_uid != null) {
            message.owner_uid = data.owner_uid;
        }
        if (data.cur_stamina != null) {
            message.cur_stamina = data.cur_stamina;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.member_list != null) {
            data.member_list = this.member_list.map((item) => item.toObject());
        }
        if (this.owner_uid != null) {
            data.owner_uid = this.owner_uid;
        }
        if (this.cur_stamina != null) {
            data.cur_stamina = this.cur_stamina;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.member_list.length)
            writer.writeRepeatedMessage(1, this.member_list, (item) => item.serialize(writer));
        if (this.owner_uid != 0)
            writer.writeUint32(2, this.owner_uid);
        if (this.cur_stamina != 0)
            writer.writeFloat(3, this.cur_stamina);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new VehicleInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.member_list, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.VehicleMember.deserialize(reader), dependency_1.VehicleMember));
                    break;
                case 2:
                    message.owner_uid = reader.readUint32();
                    break;
                case 3:
                    message.cur_stamina = reader.readFloat();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return VehicleInfo.deserialize(bytes);
    }
}
exports.VehicleInfo = VehicleInfo;
_VehicleInfo_one_of_decls = new WeakMap();
