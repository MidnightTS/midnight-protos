// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_skill.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AvatarSkillInfo } from "./define";
/**
 * @generated from protobuf message com.midnights.game.UnlockAvatarTalentReq
 */
export interface UnlockAvatarTalentReq {
    /**
     * @generated from protobuf field: optional uint32 talent_id = 13;
     */
    talentId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 3;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockAvatarTalentReq.CmdId
 */
export enum UnlockAvatarTalentReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1072;
     */
    CMD_ID = 1072,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.UnlockAvatarTalentRsp
 */
export interface UnlockAvatarTalentRsp {
    /**
     * @generated from protobuf field: optional uint32 talent_id = 2;
     */
    talentId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 10;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockAvatarTalentRsp.CmdId
 */
export enum UnlockAvatarTalentRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1098;
     */
    CMD_ID = 1098,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarUnlockTalentNotify
 */
export interface AvatarUnlockTalentNotify {
    /**
     * @generated from protobuf field: optional uint32 entity_id = 14;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 13;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 talent_id = 10;
     */
    talentId?: number;
    /**
     * @generated from protobuf field: optional uint32 skill_depot_id = 1;
     */
    skillDepotId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarUnlockTalentNotify.CmdId
 */
export enum AvatarUnlockTalentNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1012;
     */
    CMD_ID = 1012,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarSkillDepotChangeNotify
 */
export interface AvatarSkillDepotChangeNotify {
    /**
     * @generated from protobuf field: optional uint32 skill_depot_id = 15;
     */
    skillDepotId?: number;
    /**
     * @generated from protobuf field: map<uint32, uint32> proud_skill_extra_level_map = 14;
     */
    proudSkillExtraLevelMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: repeated uint32 talent_id_list = 9;
     */
    talentIdList: number[];
    /**
     * @generated from protobuf field: repeated uint32 proud_skill_list = 4;
     */
    proudSkillList: number[];
    /**
     * @generated from protobuf field: optional uint32 core_proud_skill_level = 2;
     */
    coreProudSkillLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 entity_id = 7;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 12;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: map<uint32, uint32> skill_level_map = 3;
     */
    skillLevelMap: {
        [key: number]: number;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarSkillDepotChangeNotify.CmdId
 */
export enum AvatarSkillDepotChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1035;
     */
    CMD_ID = 1035,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.BigTalentPointConvertReq
 */
export interface BigTalentPointConvertReq {
    /**
     * @generated from protobuf field: repeated uint64 item_guid_list = 6;
     */
    itemGuidList: bigint[];
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 3;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.BigTalentPointConvertReq.CmdId
 */
export enum BigTalentPointConvertReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1007;
     */
    CMD_ID = 1007,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.BigTalentPointConvertRsp
 */
export interface BigTalentPointConvertRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 8;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.BigTalentPointConvertRsp.CmdId
 */
export enum BigTalentPointConvertRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1021;
     */
    CMD_ID = 1021,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarSkillMaxChargeCountNotify
 */
export interface AvatarSkillMaxChargeCountNotify {
    /**
     * @generated from protobuf field: optional uint32 skill_id = 6;
     */
    skillId?: number;
    /**
     * @generated from protobuf field: optional uint32 max_charge_count = 11;
     */
    maxChargeCount?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 7;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarSkillMaxChargeCountNotify.CmdId
 */
export enum AvatarSkillMaxChargeCountNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1003;
     */
    CMD_ID = 1003,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarSkillInfoNotify
 */
export interface AvatarSkillInfoNotify {
    /**
     * @generated from protobuf field: map<uint32, com.midnights.game.AvatarSkillInfo> skill_map = 11;
     */
    skillMap: {
        [key: number]: AvatarSkillInfo;
    };
    /**
     * @generated from protobuf field: optional uint64 guid = 4;
     */
    guid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarSkillInfoNotify.CmdId
 */
export enum AvatarSkillInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1090;
     */
    CMD_ID = 1090,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ProudSkillUpgradeReq
 */
export interface ProudSkillUpgradeReq {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 5;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 old_proud_skill_level = 4;
     */
    oldProudSkillLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 proud_skill_id = 14;
     */
    proudSkillId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ProudSkillUpgradeReq.CmdId
 */
export enum ProudSkillUpgradeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1073;
     */
    CMD_ID = 1073,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ProudSkillUpgradeRsp
 */
export interface ProudSkillUpgradeRsp {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 6;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 proud_skill_id = 10;
     */
    proudSkillId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ProudSkillUpgradeRsp.CmdId
 */
export enum ProudSkillUpgradeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1099;
     */
    CMD_ID = 1099,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ProudSkillChangeNotify
 */
export interface ProudSkillChangeNotify {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 11;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 entity_id = 4;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional uint32 skill_depot_id = 8;
     */
    skillDepotId?: number;
    /**
     * @generated from protobuf field: repeated uint32 proud_skill_list = 12;
     */
    proudSkillList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.ProudSkillChangeNotify.CmdId
 */
export enum ProudSkillChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1031;
     */
    CMD_ID = 1031,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarSkillUpgradeReq
 */
export interface AvatarSkillUpgradeReq {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 7;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 old_level = 3;
     */
    oldLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_skill_id = 4;
     */
    avatarSkillId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarSkillUpgradeReq.CmdId
 */
export enum AvatarSkillUpgradeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1075;
     */
    CMD_ID = 1075,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarSkillUpgradeRsp
 */
export interface AvatarSkillUpgradeRsp {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 11;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 cur_level = 14;
     */
    curLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_skill_id = 9;
     */
    avatarSkillId?: number;
    /**
     * @generated from protobuf field: optional uint32 old_level = 3;
     */
    oldLevel?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarSkillUpgradeRsp.CmdId
 */
export enum AvatarSkillUpgradeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1048;
     */
    CMD_ID = 1048,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarSkillChangeNotify
 */
export interface AvatarSkillChangeNotify {
    /**
     * @generated from protobuf field: optional uint32 cur_level = 11;
     */
    curLevel?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 2;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 entity_id = 7;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional uint32 skill_depot_id = 13;
     */
    skillDepotId?: number;
    /**
     * @generated from protobuf field: optional uint32 old_level = 1;
     */
    oldLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_skill_id = 6;
     */
    avatarSkillId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarSkillChangeNotify.CmdId
 */
export enum AvatarSkillChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1097;
     */
    CMD_ID = 1097,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ProudSkillExtraLevelNotify
 */
export interface ProudSkillExtraLevelNotify {
    /**
     * @generated from protobuf field: optional uint32 talent_type = 11;
     */
    talentType?: number;
    /**
     * @generated from protobuf field: optional uint32 talent_index = 8;
     */
    talentIndex?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 15;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 extra_level = 3;
     */
    extraLevel?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ProudSkillExtraLevelNotify.CmdId
 */
export enum ProudSkillExtraLevelNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1081;
     */
    CMD_ID = 1081,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CanUseSkillNotify
 */
export interface CanUseSkillNotify {
    /**
     * @generated from protobuf field: optional bool is_can_use_skill = 2;
     */
    isCanUseSkill?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.CanUseSkillNotify.CmdId
 */
export enum CanUseSkillNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1005;
     */
    CMD_ID = 1005,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarTeamResonanceInfo
 */
export interface AvatarTeamResonanceInfo {
    /**
     * @generated from protobuf field: repeated uint32 add_team_resonance_id_list = 5;
     */
    addTeamResonanceIdList: number[];
    /**
     * @generated from protobuf field: optional uint32 entity_id = 11;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 3;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: repeated uint32 del_team_resonance_id_list = 14;
     */
    delTeamResonanceIdList: number[];
}
/**
 * @generated from protobuf message com.midnights.game.TeamResonanceChangeNotify
 */
export interface TeamResonanceChangeNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.AvatarTeamResonanceInfo info_list = 1;
     */
    infoList: AvatarTeamResonanceInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.TeamResonanceChangeNotify.CmdId
 */
export enum TeamResonanceChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1082;
     */
    CMD_ID = 1082,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class UnlockAvatarTalentReq$Type extends MessageType<UnlockAvatarTalentReq> {
    constructor() {
        super("com.midnights.game.UnlockAvatarTalentReq", [
            { no: 13, name: "talent_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockAvatarTalentReq>): UnlockAvatarTalentReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockAvatarTalentReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockAvatarTalentReq): UnlockAvatarTalentReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 talent_id */ 13:
                    message.talentId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 3:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockAvatarTalentReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 talent_id = 13; */
        if (message.talentId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.talentId);
        /* optional uint64 avatar_guid = 3; */
        if (message.avatarGuid !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockAvatarTalentReq
 */
export const UnlockAvatarTalentReq = new UnlockAvatarTalentReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnlockAvatarTalentRsp$Type extends MessageType<UnlockAvatarTalentRsp> {
    constructor() {
        super("com.midnights.game.UnlockAvatarTalentRsp", [
            { no: 2, name: "talent_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockAvatarTalentRsp>): UnlockAvatarTalentRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockAvatarTalentRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockAvatarTalentRsp): UnlockAvatarTalentRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 talent_id */ 2:
                    message.talentId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 avatar_guid */ 10:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockAvatarTalentRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 talent_id = 2; */
        if (message.talentId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.talentId);
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        /* optional uint64 avatar_guid = 10; */
        if (message.avatarGuid !== undefined)
            writer.tag(10, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockAvatarTalentRsp
 */
export const UnlockAvatarTalentRsp = new UnlockAvatarTalentRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarUnlockTalentNotify$Type extends MessageType<AvatarUnlockTalentNotify> {
    constructor() {
        super("com.midnights.game.AvatarUnlockTalentNotify", [
            { no: 14, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "talent_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "skill_depot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarUnlockTalentNotify>): AvatarUnlockTalentNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarUnlockTalentNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarUnlockTalentNotify): AvatarUnlockTalentNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 entity_id */ 14:
                    message.entityId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 13:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 talent_id */ 10:
                    message.talentId = reader.uint32();
                    break;
                case /* optional uint32 skill_depot_id */ 1:
                    message.skillDepotId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarUnlockTalentNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 entity_id = 14; */
        if (message.entityId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.entityId);
        /* optional uint64 avatar_guid = 13; */
        if (message.avatarGuid !== undefined)
            writer.tag(13, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 talent_id = 10; */
        if (message.talentId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.talentId);
        /* optional uint32 skill_depot_id = 1; */
        if (message.skillDepotId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.skillDepotId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarUnlockTalentNotify
 */
export const AvatarUnlockTalentNotify = new AvatarUnlockTalentNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarSkillDepotChangeNotify$Type extends MessageType<AvatarSkillDepotChangeNotify> {
    constructor() {
        super("com.midnights.game.AvatarSkillDepotChangeNotify", [
            { no: 15, name: "skill_depot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "proud_skill_extra_level_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 9, name: "talent_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "proud_skill_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "core_proud_skill_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "skill_level_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } }
        ]);
    }
    create(value?: PartialMessage<AvatarSkillDepotChangeNotify>): AvatarSkillDepotChangeNotify {
        const message = { proudSkillExtraLevelMap: {}, talentIdList: [], proudSkillList: [], skillLevelMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarSkillDepotChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarSkillDepotChangeNotify): AvatarSkillDepotChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 skill_depot_id */ 15:
                    message.skillDepotId = reader.uint32();
                    break;
                case /* map<uint32, uint32> proud_skill_extra_level_map */ 14:
                    this.binaryReadMap14(message.proudSkillExtraLevelMap, reader, options);
                    break;
                case /* repeated uint32 talent_id_list */ 9:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.talentIdList.push(reader.uint32());
                    else
                        message.talentIdList.push(reader.uint32());
                    break;
                case /* repeated uint32 proud_skill_list */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.proudSkillList.push(reader.uint32());
                    else
                        message.proudSkillList.push(reader.uint32());
                    break;
                case /* optional uint32 core_proud_skill_level */ 2:
                    message.coreProudSkillLevel = reader.uint32();
                    break;
                case /* optional uint32 entity_id */ 7:
                    message.entityId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 12:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* map<uint32, uint32> skill_level_map */ 3:
                    this.binaryReadMap3(message.skillLevelMap, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap14(map: AvatarSkillDepotChangeNotify["proudSkillExtraLevelMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarSkillDepotChangeNotify["proudSkillExtraLevelMap"] | undefined, val: AvatarSkillDepotChangeNotify["proudSkillExtraLevelMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarSkillDepotChangeNotify.proud_skill_extra_level_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    private binaryReadMap3(map: AvatarSkillDepotChangeNotify["skillLevelMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarSkillDepotChangeNotify["skillLevelMap"] | undefined, val: AvatarSkillDepotChangeNotify["skillLevelMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarSkillDepotChangeNotify.skill_level_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: AvatarSkillDepotChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 skill_depot_id = 15; */
        if (message.skillDepotId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.skillDepotId);
        /* map<uint32, uint32> proud_skill_extra_level_map = 14; */
        for (let k of Object.keys(message.proudSkillExtraLevelMap))
            writer.tag(14, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.proudSkillExtraLevelMap[k as any]).join();
        /* repeated uint32 talent_id_list = 9; */
        if (message.talentIdList.length) {
            writer.tag(9, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.talentIdList.length; i++)
                writer.uint32(message.talentIdList[i]);
            writer.join();
        }
        /* repeated uint32 proud_skill_list = 4; */
        if (message.proudSkillList.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.proudSkillList.length; i++)
                writer.uint32(message.proudSkillList[i]);
            writer.join();
        }
        /* optional uint32 core_proud_skill_level = 2; */
        if (message.coreProudSkillLevel !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.coreProudSkillLevel);
        /* optional uint32 entity_id = 7; */
        if (message.entityId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.entityId);
        /* optional uint64 avatar_guid = 12; */
        if (message.avatarGuid !== undefined)
            writer.tag(12, WireType.Varint).uint64(message.avatarGuid);
        /* map<uint32, uint32> skill_level_map = 3; */
        for (let k of Object.keys(message.skillLevelMap))
            writer.tag(3, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.skillLevelMap[k as any]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarSkillDepotChangeNotify
 */
export const AvatarSkillDepotChangeNotify = new AvatarSkillDepotChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BigTalentPointConvertReq$Type extends MessageType<BigTalentPointConvertReq> {
    constructor() {
        super("com.midnights.game.BigTalentPointConvertReq", [
            { no: 6, name: "item_guid_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<BigTalentPointConvertReq>): BigTalentPointConvertReq {
        const message = { itemGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BigTalentPointConvertReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BigTalentPointConvertReq): BigTalentPointConvertReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint64 item_guid_list */ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.itemGuidList.push(reader.uint64().toBigInt());
                    else
                        message.itemGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* optional uint64 avatar_guid */ 3:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BigTalentPointConvertReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint64 item_guid_list = 6; */
        if (message.itemGuidList.length) {
            writer.tag(6, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.itemGuidList.length; i++)
                writer.uint64(message.itemGuidList[i]);
            writer.join();
        }
        /* optional uint64 avatar_guid = 3; */
        if (message.avatarGuid !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BigTalentPointConvertReq
 */
export const BigTalentPointConvertReq = new BigTalentPointConvertReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BigTalentPointConvertRsp$Type extends MessageType<BigTalentPointConvertRsp> {
    constructor() {
        super("com.midnights.game.BigTalentPointConvertRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<BigTalentPointConvertRsp>): BigTalentPointConvertRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BigTalentPointConvertRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BigTalentPointConvertRsp): BigTalentPointConvertRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 avatar_guid */ 8:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BigTalentPointConvertRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* optional uint64 avatar_guid = 8; */
        if (message.avatarGuid !== undefined)
            writer.tag(8, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BigTalentPointConvertRsp
 */
export const BigTalentPointConvertRsp = new BigTalentPointConvertRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarSkillMaxChargeCountNotify$Type extends MessageType<AvatarSkillMaxChargeCountNotify> {
    constructor() {
        super("com.midnights.game.AvatarSkillMaxChargeCountNotify", [
            { no: 6, name: "skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "max_charge_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarSkillMaxChargeCountNotify>): AvatarSkillMaxChargeCountNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarSkillMaxChargeCountNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarSkillMaxChargeCountNotify): AvatarSkillMaxChargeCountNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 skill_id */ 6:
                    message.skillId = reader.uint32();
                    break;
                case /* optional uint32 max_charge_count */ 11:
                    message.maxChargeCount = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 7:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarSkillMaxChargeCountNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 skill_id = 6; */
        if (message.skillId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.skillId);
        /* optional uint32 max_charge_count = 11; */
        if (message.maxChargeCount !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.maxChargeCount);
        /* optional uint64 avatar_guid = 7; */
        if (message.avatarGuid !== undefined)
            writer.tag(7, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarSkillMaxChargeCountNotify
 */
export const AvatarSkillMaxChargeCountNotify = new AvatarSkillMaxChargeCountNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarSkillInfoNotify$Type extends MessageType<AvatarSkillInfoNotify> {
    constructor() {
        super("com.midnights.game.AvatarSkillInfoNotify", [
            { no: 11, name: "skill_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => AvatarSkillInfo } },
            { no: 4, name: "guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarSkillInfoNotify>): AvatarSkillInfoNotify {
        const message = { skillMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarSkillInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarSkillInfoNotify): AvatarSkillInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, com.midnights.game.AvatarSkillInfo> skill_map */ 11:
                    this.binaryReadMap11(message.skillMap, reader, options);
                    break;
                case /* optional uint64 guid */ 4:
                    message.guid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap11(map: AvatarSkillInfoNotify["skillMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarSkillInfoNotify["skillMap"] | undefined, val: AvatarSkillInfoNotify["skillMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = AvatarSkillInfo.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarSkillInfoNotify.skill_map");
            }
        }
        map[key ?? 0] = val ?? AvatarSkillInfo.create();
    }
    internalBinaryWrite(message: AvatarSkillInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, com.midnights.game.AvatarSkillInfo> skill_map = 11; */
        for (let k of Object.keys(message.skillMap)) {
            writer.tag(11, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k));
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarSkillInfo.internalBinaryWrite(message.skillMap[k as any], writer, options);
            writer.join().join();
        }
        /* optional uint64 guid = 4; */
        if (message.guid !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.guid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarSkillInfoNotify
 */
export const AvatarSkillInfoNotify = new AvatarSkillInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProudSkillUpgradeReq$Type extends MessageType<ProudSkillUpgradeReq> {
    constructor() {
        super("com.midnights.game.ProudSkillUpgradeReq", [
            { no: 5, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "old_proud_skill_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "proud_skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ProudSkillUpgradeReq>): ProudSkillUpgradeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProudSkillUpgradeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProudSkillUpgradeReq): ProudSkillUpgradeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 5:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 old_proud_skill_level */ 4:
                    message.oldProudSkillLevel = reader.uint32();
                    break;
                case /* optional uint32 proud_skill_id */ 14:
                    message.proudSkillId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProudSkillUpgradeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 5; */
        if (message.avatarGuid !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 old_proud_skill_level = 4; */
        if (message.oldProudSkillLevel !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.oldProudSkillLevel);
        /* optional uint32 proud_skill_id = 14; */
        if (message.proudSkillId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.proudSkillId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ProudSkillUpgradeReq
 */
export const ProudSkillUpgradeReq = new ProudSkillUpgradeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProudSkillUpgradeRsp$Type extends MessageType<ProudSkillUpgradeRsp> {
    constructor() {
        super("com.midnights.game.ProudSkillUpgradeRsp", [
            { no: 6, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "proud_skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ProudSkillUpgradeRsp>): ProudSkillUpgradeRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProudSkillUpgradeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProudSkillUpgradeRsp): ProudSkillUpgradeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 6:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 proud_skill_id */ 10:
                    message.proudSkillId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProudSkillUpgradeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 6; */
        if (message.avatarGuid !== undefined)
            writer.tag(6, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 proud_skill_id = 10; */
        if (message.proudSkillId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.proudSkillId);
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ProudSkillUpgradeRsp
 */
export const ProudSkillUpgradeRsp = new ProudSkillUpgradeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProudSkillChangeNotify$Type extends MessageType<ProudSkillChangeNotify> {
    constructor() {
        super("com.midnights.game.ProudSkillChangeNotify", [
            { no: 11, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "skill_depot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "proud_skill_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ProudSkillChangeNotify>): ProudSkillChangeNotify {
        const message = { proudSkillList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProudSkillChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProudSkillChangeNotify): ProudSkillChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 11:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 entity_id */ 4:
                    message.entityId = reader.uint32();
                    break;
                case /* optional uint32 skill_depot_id */ 8:
                    message.skillDepotId = reader.uint32();
                    break;
                case /* repeated uint32 proud_skill_list */ 12:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.proudSkillList.push(reader.uint32());
                    else
                        message.proudSkillList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProudSkillChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 11; */
        if (message.avatarGuid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 entity_id = 4; */
        if (message.entityId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.entityId);
        /* optional uint32 skill_depot_id = 8; */
        if (message.skillDepotId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.skillDepotId);
        /* repeated uint32 proud_skill_list = 12; */
        if (message.proudSkillList.length) {
            writer.tag(12, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.proudSkillList.length; i++)
                writer.uint32(message.proudSkillList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ProudSkillChangeNotify
 */
export const ProudSkillChangeNotify = new ProudSkillChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarSkillUpgradeReq$Type extends MessageType<AvatarSkillUpgradeReq> {
    constructor() {
        super("com.midnights.game.AvatarSkillUpgradeReq", [
            { no: 7, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "old_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "avatar_skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarSkillUpgradeReq>): AvatarSkillUpgradeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarSkillUpgradeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarSkillUpgradeReq): AvatarSkillUpgradeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 7:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 old_level */ 3:
                    message.oldLevel = reader.uint32();
                    break;
                case /* optional uint32 avatar_skill_id */ 4:
                    message.avatarSkillId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarSkillUpgradeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 7; */
        if (message.avatarGuid !== undefined)
            writer.tag(7, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 old_level = 3; */
        if (message.oldLevel !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.oldLevel);
        /* optional uint32 avatar_skill_id = 4; */
        if (message.avatarSkillId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.avatarSkillId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarSkillUpgradeReq
 */
export const AvatarSkillUpgradeReq = new AvatarSkillUpgradeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarSkillUpgradeRsp$Type extends MessageType<AvatarSkillUpgradeRsp> {
    constructor() {
        super("com.midnights.game.AvatarSkillUpgradeRsp", [
            { no: 11, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "cur_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "avatar_skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "old_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarSkillUpgradeRsp>): AvatarSkillUpgradeRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarSkillUpgradeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarSkillUpgradeRsp): AvatarSkillUpgradeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 11:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 cur_level */ 14:
                    message.curLevel = reader.uint32();
                    break;
                case /* optional uint32 avatar_skill_id */ 9:
                    message.avatarSkillId = reader.uint32();
                    break;
                case /* optional uint32 old_level */ 3:
                    message.oldLevel = reader.uint32();
                    break;
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarSkillUpgradeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 11; */
        if (message.avatarGuid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 cur_level = 14; */
        if (message.curLevel !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.curLevel);
        /* optional uint32 avatar_skill_id = 9; */
        if (message.avatarSkillId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.avatarSkillId);
        /* optional uint32 old_level = 3; */
        if (message.oldLevel !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.oldLevel);
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarSkillUpgradeRsp
 */
export const AvatarSkillUpgradeRsp = new AvatarSkillUpgradeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarSkillChangeNotify$Type extends MessageType<AvatarSkillChangeNotify> {
    constructor() {
        super("com.midnights.game.AvatarSkillChangeNotify", [
            { no: 11, name: "cur_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "skill_depot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "old_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "avatar_skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarSkillChangeNotify>): AvatarSkillChangeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarSkillChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarSkillChangeNotify): AvatarSkillChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 cur_level */ 11:
                    message.curLevel = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 2:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 entity_id */ 7:
                    message.entityId = reader.uint32();
                    break;
                case /* optional uint32 skill_depot_id */ 13:
                    message.skillDepotId = reader.uint32();
                    break;
                case /* optional uint32 old_level */ 1:
                    message.oldLevel = reader.uint32();
                    break;
                case /* optional uint32 avatar_skill_id */ 6:
                    message.avatarSkillId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarSkillChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 cur_level = 11; */
        if (message.curLevel !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.curLevel);
        /* optional uint64 avatar_guid = 2; */
        if (message.avatarGuid !== undefined)
            writer.tag(2, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 entity_id = 7; */
        if (message.entityId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.entityId);
        /* optional uint32 skill_depot_id = 13; */
        if (message.skillDepotId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.skillDepotId);
        /* optional uint32 old_level = 1; */
        if (message.oldLevel !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.oldLevel);
        /* optional uint32 avatar_skill_id = 6; */
        if (message.avatarSkillId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.avatarSkillId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarSkillChangeNotify
 */
export const AvatarSkillChangeNotify = new AvatarSkillChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProudSkillExtraLevelNotify$Type extends MessageType<ProudSkillExtraLevelNotify> {
    constructor() {
        super("com.midnights.game.ProudSkillExtraLevelNotify", [
            { no: 11, name: "talent_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "talent_index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "extra_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ProudSkillExtraLevelNotify>): ProudSkillExtraLevelNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProudSkillExtraLevelNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProudSkillExtraLevelNotify): ProudSkillExtraLevelNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 talent_type */ 11:
                    message.talentType = reader.uint32();
                    break;
                case /* optional uint32 talent_index */ 8:
                    message.talentIndex = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 15:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 extra_level */ 3:
                    message.extraLevel = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProudSkillExtraLevelNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 talent_type = 11; */
        if (message.talentType !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.talentType);
        /* optional uint32 talent_index = 8; */
        if (message.talentIndex !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.talentIndex);
        /* optional uint64 avatar_guid = 15; */
        if (message.avatarGuid !== undefined)
            writer.tag(15, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 extra_level = 3; */
        if (message.extraLevel !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.extraLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ProudSkillExtraLevelNotify
 */
export const ProudSkillExtraLevelNotify = new ProudSkillExtraLevelNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CanUseSkillNotify$Type extends MessageType<CanUseSkillNotify> {
    constructor() {
        super("com.midnights.game.CanUseSkillNotify", [
            { no: 2, name: "is_can_use_skill", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<CanUseSkillNotify>): CanUseSkillNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CanUseSkillNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CanUseSkillNotify): CanUseSkillNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_can_use_skill */ 2:
                    message.isCanUseSkill = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CanUseSkillNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_can_use_skill = 2; */
        if (message.isCanUseSkill !== undefined)
            writer.tag(2, WireType.Varint).bool(message.isCanUseSkill);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CanUseSkillNotify
 */
export const CanUseSkillNotify = new CanUseSkillNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarTeamResonanceInfo$Type extends MessageType<AvatarTeamResonanceInfo> {
    constructor() {
        super("com.midnights.game.AvatarTeamResonanceInfo", [
            { no: 5, name: "add_team_resonance_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "del_team_resonance_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarTeamResonanceInfo>): AvatarTeamResonanceInfo {
        const message = { addTeamResonanceIdList: [], delTeamResonanceIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarTeamResonanceInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarTeamResonanceInfo): AvatarTeamResonanceInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 add_team_resonance_id_list */ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.addTeamResonanceIdList.push(reader.uint32());
                    else
                        message.addTeamResonanceIdList.push(reader.uint32());
                    break;
                case /* optional uint32 entity_id */ 11:
                    message.entityId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 3:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* repeated uint32 del_team_resonance_id_list */ 14:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.delTeamResonanceIdList.push(reader.uint32());
                    else
                        message.delTeamResonanceIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarTeamResonanceInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 add_team_resonance_id_list = 5; */
        if (message.addTeamResonanceIdList.length) {
            writer.tag(5, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.addTeamResonanceIdList.length; i++)
                writer.uint32(message.addTeamResonanceIdList[i]);
            writer.join();
        }
        /* optional uint32 entity_id = 11; */
        if (message.entityId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.entityId);
        /* optional uint64 avatar_guid = 3; */
        if (message.avatarGuid !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.avatarGuid);
        /* repeated uint32 del_team_resonance_id_list = 14; */
        if (message.delTeamResonanceIdList.length) {
            writer.tag(14, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.delTeamResonanceIdList.length; i++)
                writer.uint32(message.delTeamResonanceIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarTeamResonanceInfo
 */
export const AvatarTeamResonanceInfo = new AvatarTeamResonanceInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TeamResonanceChangeNotify$Type extends MessageType<TeamResonanceChangeNotify> {
    constructor() {
        super("com.midnights.game.TeamResonanceChangeNotify", [
            { no: 1, name: "info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AvatarTeamResonanceInfo }
        ]);
    }
    create(value?: PartialMessage<TeamResonanceChangeNotify>): TeamResonanceChangeNotify {
        const message = { infoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TeamResonanceChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TeamResonanceChangeNotify): TeamResonanceChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.AvatarTeamResonanceInfo info_list */ 1:
                    message.infoList.push(AvatarTeamResonanceInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TeamResonanceChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.AvatarTeamResonanceInfo info_list = 1; */
        for (let i = 0; i < message.infoList.length; i++)
            AvatarTeamResonanceInfo.internalBinaryWrite(message.infoList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TeamResonanceChangeNotify
 */
export const TeamResonanceChangeNotify = new TeamResonanceChangeNotify$Type();
