// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "ChatInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message ChatInfo
 */
export interface ChatInfo {
    /**
     * @generated from protobuf field: bool is_read = 3;
     */
    isRead: boolean;
    /**
     * @generated from protobuf field: uint32 time = 1;
     */
    time: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_HENLDIJMIOE = 10 [json_name = "Unk3300HENLDIJMIOE"];
     */
    unk3300HENLDIJMIOE: number;
    /**
     * @generated from protobuf field: uint32 uid = 11;
     */
    uid: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_PHBEHIGHOCD = 5 [json_name = "Unk3300PHBEHIGHOCD"];
     */
    unk3300PHBEHIGHOCD: number;
    /**
     * @generated from protobuf oneof: content
     */
    content: {
        oneofKind: "text";
        /**
         * @generated from protobuf field: string text = 909;
         */
        text: string;
    } | {
        oneofKind: "icon";
        /**
         * @generated from protobuf field: uint32 icon = 990;
         */
        icon: number;
    } | {
        oneofKind: "systemHint";
        /**
         * @generated from protobuf field: ChatInfo.SystemHint system_hint = 799;
         */
        systemHint: ChatInfo_SystemHint;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message ChatInfo.SystemHint
 */
export interface ChatInfo_SystemHint {
    /**
     * @generated from protobuf field: uint32 type = 15;
     */
    type: number;
}
/**
 * @generated from protobuf enum ChatInfo.SystemHintType
 */
export enum ChatInfo_SystemHintType {
    /**
     * @generated from protobuf enum value: SYSTEM_HINT_TYPE_CHAT_NONE = 0;
     */
    CHAT_NONE = 0,
    /**
     * @generated from protobuf enum value: SYSTEM_HINT_TYPE_CHAT_ENTER_WORLD = 1;
     */
    CHAT_ENTER_WORLD = 1,
    /**
     * @generated from protobuf enum value: SYSTEM_HINT_TYPE_CHAT_LEAVE_WORLD = 2;
     */
    CHAT_LEAVE_WORLD = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class ChatInfo$Type extends MessageType<ChatInfo> {
    constructor() {
        super("ChatInfo", [
            { no: 3, name: "is_read", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 1, name: "time", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "Unk3300_HENLDIJMIOE", kind: "scalar", jsonName: "Unk3300HENLDIJMIOE", T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "uid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "Unk3300_PHBEHIGHOCD", kind: "scalar", jsonName: "Unk3300PHBEHIGHOCD", T: 13 /*ScalarType.UINT32*/ },
            { no: 909, name: "text", kind: "scalar", oneof: "content", T: 9 /*ScalarType.STRING*/ },
            { no: 990, name: "icon", kind: "scalar", oneof: "content", T: 13 /*ScalarType.UINT32*/ },
            { no: 799, name: "system_hint", kind: "message", oneof: "content", T: () => ChatInfo_SystemHint }
        ]);
    }
    create(value?: PartialMessage<ChatInfo>): ChatInfo {
        const message = { isRead: false, time: 0, unk3300HENLDIJMIOE: 0, uid: 0, unk3300PHBEHIGHOCD: 0, content: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChatInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChatInfo): ChatInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool is_read */ 3:
                    message.isRead = reader.bool();
                    break;
                case /* uint32 time */ 1:
                    message.time = reader.uint32();
                    break;
                case /* uint32 Unk3300_HENLDIJMIOE = 10 [json_name = "Unk3300HENLDIJMIOE"];*/ 10:
                    message.unk3300HENLDIJMIOE = reader.uint32();
                    break;
                case /* uint32 uid */ 11:
                    message.uid = reader.uint32();
                    break;
                case /* uint32 Unk3300_PHBEHIGHOCD = 5 [json_name = "Unk3300PHBEHIGHOCD"];*/ 5:
                    message.unk3300PHBEHIGHOCD = reader.uint32();
                    break;
                case /* string text */ 909:
                    message.content = {
                        oneofKind: "text",
                        text: reader.string()
                    };
                    break;
                case /* uint32 icon */ 990:
                    message.content = {
                        oneofKind: "icon",
                        icon: reader.uint32()
                    };
                    break;
                case /* ChatInfo.SystemHint system_hint */ 799:
                    message.content = {
                        oneofKind: "systemHint",
                        systemHint: ChatInfo_SystemHint.internalBinaryRead(reader, reader.uint32(), options, (message.content as any).systemHint)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChatInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool is_read = 3; */
        if (message.isRead !== false)
            writer.tag(3, WireType.Varint).bool(message.isRead);
        /* uint32 time = 1; */
        if (message.time !== 0)
            writer.tag(1, WireType.Varint).uint32(message.time);
        /* uint32 Unk3300_HENLDIJMIOE = 10 [json_name = "Unk3300HENLDIJMIOE"]; */
        if (message.unk3300HENLDIJMIOE !== 0)
            writer.tag(10, WireType.Varint).uint32(message.unk3300HENLDIJMIOE);
        /* uint32 uid = 11; */
        if (message.uid !== 0)
            writer.tag(11, WireType.Varint).uint32(message.uid);
        /* uint32 Unk3300_PHBEHIGHOCD = 5 [json_name = "Unk3300PHBEHIGHOCD"]; */
        if (message.unk3300PHBEHIGHOCD !== 0)
            writer.tag(5, WireType.Varint).uint32(message.unk3300PHBEHIGHOCD);
        /* string text = 909; */
        if (message.content.oneofKind === "text")
            writer.tag(909, WireType.LengthDelimited).string(message.content.text);
        /* uint32 icon = 990; */
        if (message.content.oneofKind === "icon")
            writer.tag(990, WireType.Varint).uint32(message.content.icon);
        /* ChatInfo.SystemHint system_hint = 799; */
        if (message.content.oneofKind === "systemHint")
            ChatInfo_SystemHint.internalBinaryWrite(message.content.systemHint, writer.tag(799, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ChatInfo
 */
export const ChatInfo = new ChatInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChatInfo_SystemHint$Type extends MessageType<ChatInfo_SystemHint> {
    constructor() {
        super("ChatInfo.SystemHint", [
            { no: 15, name: "type", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChatInfo_SystemHint>): ChatInfo_SystemHint {
        const message = { type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChatInfo_SystemHint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChatInfo_SystemHint): ChatInfo_SystemHint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 type */ 15:
                    message.type = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChatInfo_SystemHint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 type = 15; */
        if (message.type !== 0)
            writer.tag(15, WireType.Varint).uint32(message.type);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ChatInfo.SystemHint
 */
export const ChatInfo_SystemHint = new ChatInfo_SystemHint$Type();
