/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PlayerApplyEnterMpNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./OnlinePlayerInfo";
import * as pb_1 from "google-protobuf";
export class PlayerApplyEnterMpNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        src_thread_index?: number;
        src_app_id?: number;
        src_player_info?: dependency_1.OnlinePlayerInfo;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("src_thread_index" in data && data.src_thread_index != undefined) {
                this.src_thread_index = data.src_thread_index;
            }
            if ("src_app_id" in data && data.src_app_id != undefined) {
                this.src_app_id = data.src_app_id;
            }
            if ("src_player_info" in data && data.src_player_info != undefined) {
                this.src_player_info = data.src_player_info;
            }
        }
    }
    get src_thread_index() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set src_thread_index(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get src_app_id() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set src_app_id(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get src_player_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.OnlinePlayerInfo, 2) as dependency_1.OnlinePlayerInfo;
    }
    set src_player_info(value: dependency_1.OnlinePlayerInfo) {
        pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_src_player_info() {
        return pb_1.Message.getField(this, 2) != null;
    }
    static fromObject(data: {
        src_thread_index?: number;
        src_app_id?: number;
        src_player_info?: ReturnType<typeof dependency_1.OnlinePlayerInfo.prototype.toObject>;
    }): PlayerApplyEnterMpNotify {
        const message = new PlayerApplyEnterMpNotify({});
        if (data.src_thread_index != null) {
            message.src_thread_index = data.src_thread_index;
        }
        if (data.src_app_id != null) {
            message.src_app_id = data.src_app_id;
        }
        if (data.src_player_info != null) {
            message.src_player_info = dependency_1.OnlinePlayerInfo.fromObject(data.src_player_info);
        }
        return message;
    }
    toObject() {
        const data: {
            src_thread_index?: number;
            src_app_id?: number;
            src_player_info?: ReturnType<typeof dependency_1.OnlinePlayerInfo.prototype.toObject>;
        } = {};
        if (this.src_thread_index != null) {
            data.src_thread_index = this.src_thread_index;
        }
        if (this.src_app_id != null) {
            data.src_app_id = this.src_app_id;
        }
        if (this.src_player_info != null) {
            data.src_player_info = this.src_player_info.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.src_thread_index != 0)
            writer.writeUint32(5, this.src_thread_index);
        if (this.src_app_id != 0)
            writer.writeUint32(6, this.src_app_id);
        if (this.has_src_player_info)
            writer.writeMessage(2, this.src_player_info, () => this.src_player_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PlayerApplyEnterMpNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PlayerApplyEnterMpNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 5:
                    message.src_thread_index = reader.readUint32();
                    break;
                case 6:
                    message.src_app_id = reader.readUint32();
                    break;
                case 2:
                    reader.readMessage(message.src_player_info, () => message.src_player_info = dependency_1.OnlinePlayerInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): PlayerApplyEnterMpNotify {
        return PlayerApplyEnterMpNotify.deserialize(bytes);
    }
}
