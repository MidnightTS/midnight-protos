/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CrucibleActivityDetailInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./CrucibleBattleUidInfo";
import * as dependency_2 from "./Vector";
import * as pb_1 from "google-protobuf";
export class CrucibleActivityDetailInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        cost_time?: number;
        battle_world_level?: number;
        uid_info_list?: dependency_1.CrucibleBattleUidInfo[];
        pos?: dependency_2.Vector;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("cost_time" in data && data.cost_time != undefined) {
                this.cost_time = data.cost_time;
            }
            if ("battle_world_level" in data && data.battle_world_level != undefined) {
                this.battle_world_level = data.battle_world_level;
            }
            if ("uid_info_list" in data && data.uid_info_list != undefined) {
                this.uid_info_list = data.uid_info_list;
            }
            if ("pos" in data && data.pos != undefined) {
                this.pos = data.pos;
            }
        }
    }
    get cost_time() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set cost_time(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get battle_world_level() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set battle_world_level(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get uid_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.CrucibleBattleUidInfo, 3) as dependency_1.CrucibleBattleUidInfo[];
    }
    set uid_info_list(value: dependency_1.CrucibleBattleUidInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 3, value);
    }
    get pos() {
        return pb_1.Message.getWrapperField(this, dependency_2.Vector, 9) as dependency_2.Vector;
    }
    set pos(value: dependency_2.Vector) {
        pb_1.Message.setWrapperField(this, 9, value);
    }
    get has_pos() {
        return pb_1.Message.getField(this, 9) != null;
    }
    static fromObject(data: {
        cost_time?: number;
        battle_world_level?: number;
        uid_info_list?: ReturnType<typeof dependency_1.CrucibleBattleUidInfo.prototype.toObject>[];
        pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
    }): CrucibleActivityDetailInfo {
        const message = new CrucibleActivityDetailInfo({});
        if (data.cost_time != null) {
            message.cost_time = data.cost_time;
        }
        if (data.battle_world_level != null) {
            message.battle_world_level = data.battle_world_level;
        }
        if (data.uid_info_list != null) {
            message.uid_info_list = data.uid_info_list.map(item => dependency_1.CrucibleBattleUidInfo.fromObject(item));
        }
        if (data.pos != null) {
            message.pos = dependency_2.Vector.fromObject(data.pos);
        }
        return message;
    }
    toObject() {
        const data: {
            cost_time?: number;
            battle_world_level?: number;
            uid_info_list?: ReturnType<typeof dependency_1.CrucibleBattleUidInfo.prototype.toObject>[];
            pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
        } = {};
        if (this.cost_time != null) {
            data.cost_time = this.cost_time;
        }
        if (this.battle_world_level != null) {
            data.battle_world_level = this.battle_world_level;
        }
        if (this.uid_info_list != null) {
            data.uid_info_list = this.uid_info_list.map((item: dependency_1.CrucibleBattleUidInfo) => item.toObject());
        }
        if (this.pos != null) {
            data.pos = this.pos.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.cost_time != 0)
            writer.writeUint32(5, this.cost_time);
        if (this.battle_world_level != 0)
            writer.writeUint32(12, this.battle_world_level);
        if (this.uid_info_list.length)
            writer.writeRepeatedMessage(3, this.uid_info_list, (item: dependency_1.CrucibleBattleUidInfo) => item.serialize(writer));
        if (this.has_pos)
            writer.writeMessage(9, this.pos, () => this.pos.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CrucibleActivityDetailInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CrucibleActivityDetailInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 5:
                    message.cost_time = reader.readUint32();
                    break;
                case 12:
                    message.battle_world_level = reader.readUint32();
                    break;
                case 3:
                    reader.readMessage(message.uid_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.CrucibleBattleUidInfo.deserialize(reader), dependency_1.CrucibleBattleUidInfo));
                    break;
                case 9:
                    reader.readMessage(message.pos, () => message.pos = dependency_2.Vector.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): CrucibleActivityDetailInfo {
        return CrucibleActivityDetailInfo.deserialize(bytes);
    }
}
