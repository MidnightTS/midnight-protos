/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: MaterialDeleteInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class MaterialDeleteInfo extends pb_1.Message {
    #one_of_decls: number[][] = [[2, 3, 4]];
    constructor(data?: any[] | ({
        has_delete_config?: boolean;
    } & (({
        count_down_delete?: MaterialDeleteInfo.CountDownDelete;
        date_delete?: never;
        delay_week_count_down_delete?: never;
    } | {
        count_down_delete?: never;
        date_delete?: MaterialDeleteInfo.DateTimeDelete;
        delay_week_count_down_delete?: never;
    } | {
        count_down_delete?: never;
        date_delete?: never;
        delay_week_count_down_delete?: MaterialDeleteInfo.DelayWeekCountDownDelete;
    })))) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("has_delete_config" in data && data.has_delete_config != undefined) {
                this.has_delete_config = data.has_delete_config;
            }
            if ("count_down_delete" in data && data.count_down_delete != undefined) {
                this.count_down_delete = data.count_down_delete;
            }
            if ("date_delete" in data && data.date_delete != undefined) {
                this.date_delete = data.date_delete;
            }
            if ("delay_week_count_down_delete" in data && data.delay_week_count_down_delete != undefined) {
                this.delay_week_count_down_delete = data.delay_week_count_down_delete;
            }
        }
    }
    get has_delete_config() {
        return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
    }
    set has_delete_config(value: boolean) {
        pb_1.Message.setField(this, 1, value);
    }
    get count_down_delete() {
        return pb_1.Message.getWrapperField(this, MaterialDeleteInfo.CountDownDelete, 2) as MaterialDeleteInfo.CountDownDelete;
    }
    set count_down_delete(value: MaterialDeleteInfo.CountDownDelete) {
        pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);
    }
    get has_count_down_delete() {
        return pb_1.Message.getField(this, 2) != null;
    }
    get date_delete() {
        return pb_1.Message.getWrapperField(this, MaterialDeleteInfo.DateTimeDelete, 3) as MaterialDeleteInfo.DateTimeDelete;
    }
    set date_delete(value: MaterialDeleteInfo.DateTimeDelete) {
        pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[0], value);
    }
    get has_date_delete() {
        return pb_1.Message.getField(this, 3) != null;
    }
    get delay_week_count_down_delete() {
        return pb_1.Message.getWrapperField(this, MaterialDeleteInfo.DelayWeekCountDownDelete, 4) as MaterialDeleteInfo.DelayWeekCountDownDelete;
    }
    set delay_week_count_down_delete(value: MaterialDeleteInfo.DelayWeekCountDownDelete) {
        pb_1.Message.setOneofWrapperField(this, 4, this.#one_of_decls[0], value);
    }
    get has_delay_week_count_down_delete() {
        return pb_1.Message.getField(this, 4) != null;
    }
    get delete_info() {
        const cases: {
            [index: number]: "none" | "count_down_delete" | "date_delete" | "delay_week_count_down_delete";
        } = {
            0: "none",
            2: "count_down_delete",
            3: "date_delete",
            4: "delay_week_count_down_delete"
        };
        return cases[pb_1.Message.computeOneofCase(this, [2, 3, 4])];
    }
    static fromObject(data: {
        has_delete_config?: boolean;
        count_down_delete?: ReturnType<typeof MaterialDeleteInfo.CountDownDelete.prototype.toObject>;
        date_delete?: ReturnType<typeof MaterialDeleteInfo.DateTimeDelete.prototype.toObject>;
        delay_week_count_down_delete?: ReturnType<typeof MaterialDeleteInfo.DelayWeekCountDownDelete.prototype.toObject>;
    }): MaterialDeleteInfo {
        const message = new MaterialDeleteInfo({});
        if (data.has_delete_config != null) {
            message.has_delete_config = data.has_delete_config;
        }
        if (data.count_down_delete != null) {
            message.count_down_delete = MaterialDeleteInfo.CountDownDelete.fromObject(data.count_down_delete);
        }
        if (data.date_delete != null) {
            message.date_delete = MaterialDeleteInfo.DateTimeDelete.fromObject(data.date_delete);
        }
        if (data.delay_week_count_down_delete != null) {
            message.delay_week_count_down_delete = MaterialDeleteInfo.DelayWeekCountDownDelete.fromObject(data.delay_week_count_down_delete);
        }
        return message;
    }
    toObject() {
        const data: {
            has_delete_config?: boolean;
            count_down_delete?: ReturnType<typeof MaterialDeleteInfo.CountDownDelete.prototype.toObject>;
            date_delete?: ReturnType<typeof MaterialDeleteInfo.DateTimeDelete.prototype.toObject>;
            delay_week_count_down_delete?: ReturnType<typeof MaterialDeleteInfo.DelayWeekCountDownDelete.prototype.toObject>;
        } = {};
        if (this.has_delete_config != null) {
            data.has_delete_config = this.has_delete_config;
        }
        if (this.count_down_delete != null) {
            data.count_down_delete = this.count_down_delete.toObject();
        }
        if (this.date_delete != null) {
            data.date_delete = this.date_delete.toObject();
        }
        if (this.delay_week_count_down_delete != null) {
            data.delay_week_count_down_delete = this.delay_week_count_down_delete.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_delete_config != false)
            writer.writeBool(1, this.has_delete_config);
        if (this.has_count_down_delete)
            writer.writeMessage(2, this.count_down_delete, () => this.count_down_delete.serialize(writer));
        if (this.has_date_delete)
            writer.writeMessage(3, this.date_delete, () => this.date_delete.serialize(writer));
        if (this.has_delay_week_count_down_delete)
            writer.writeMessage(4, this.delay_week_count_down_delete, () => this.delay_week_count_down_delete.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MaterialDeleteInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MaterialDeleteInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.has_delete_config = reader.readBool();
                    break;
                case 2:
                    reader.readMessage(message.count_down_delete, () => message.count_down_delete = MaterialDeleteInfo.CountDownDelete.deserialize(reader));
                    break;
                case 3:
                    reader.readMessage(message.date_delete, () => message.date_delete = MaterialDeleteInfo.DateTimeDelete.deserialize(reader));
                    break;
                case 4:
                    reader.readMessage(message.delay_week_count_down_delete, () => message.delay_week_count_down_delete = MaterialDeleteInfo.DelayWeekCountDownDelete.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): MaterialDeleteInfo {
        return MaterialDeleteInfo.deserialize(bytes);
    }
}
export namespace MaterialDeleteInfo {
    export class CountDownDelete extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            delete_time_num_map?: Map<number, number>;
            config_count_down_time?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delete_time_num_map" in data && data.delete_time_num_map != undefined) {
                    this.delete_time_num_map = data.delete_time_num_map;
                }
                if ("config_count_down_time" in data && data.config_count_down_time != undefined) {
                    this.config_count_down_time = data.config_count_down_time;
                }
            }
            if (!this.delete_time_num_map)
                this.delete_time_num_map = new Map();
        }
        get delete_time_num_map() {
            return pb_1.Message.getField(this, 1) as any as Map<number, number>;
        }
        set delete_time_num_map(value: Map<number, number>) {
            pb_1.Message.setField(this, 1, value as any);
        }
        get config_count_down_time() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set config_count_down_time(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            delete_time_num_map?: {
                [key: number]: number;
            };
            config_count_down_time?: number;
        }): CountDownDelete {
            const message = new CountDownDelete({});
            if (typeof data.delete_time_num_map == "object") {
                message.delete_time_num_map = new Map(Object.entries(data.delete_time_num_map).map(([key, value]) => [Number(key), value]));
            }
            if (data.config_count_down_time != null) {
                message.config_count_down_time = data.config_count_down_time;
            }
            return message;
        }
        toObject() {
            const data: {
                delete_time_num_map?: {
                    [key: number]: number;
                };
                config_count_down_time?: number;
            } = {};
            if (this.delete_time_num_map.size > 0) {
                data.delete_time_num_map = (Object.fromEntries)(this.delete_time_num_map);
            }
            if (this.config_count_down_time != null) {
                data.config_count_down_time = this.config_count_down_time;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            for (const [key, value] of this.delete_time_num_map) {
                writer.writeMessage(1, this.delete_time_num_map, () => {
                    writer.writeUint32(1, key);
                    writer.writeUint32(2, value);
                });
            }
            if (this.config_count_down_time != 0)
                writer.writeUint32(2, this.config_count_down_time);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CountDownDelete {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CountDownDelete();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.delete_time_num_map as any, reader, reader.readUint32, reader.readUint32));
                        break;
                    case 2:
                        message.config_count_down_time = reader.readUint32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CountDownDelete {
            return CountDownDelete.deserialize(bytes);
        }
    }
    export class DateTimeDelete extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            delete_time?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delete_time" in data && data.delete_time != undefined) {
                    this.delete_time = data.delete_time;
                }
            }
        }
        get delete_time() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set delete_time(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            delete_time?: number;
        }): DateTimeDelete {
            const message = new DateTimeDelete({});
            if (data.delete_time != null) {
                message.delete_time = data.delete_time;
            }
            return message;
        }
        toObject() {
            const data: {
                delete_time?: number;
            } = {};
            if (this.delete_time != null) {
                data.delete_time = this.delete_time;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.delete_time != 0)
                writer.writeUint32(1, this.delete_time);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DateTimeDelete {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DateTimeDelete();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.delete_time = reader.readUint32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DateTimeDelete {
            return DateTimeDelete.deserialize(bytes);
        }
    }
    export class DelayWeekCountDownDelete extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            delete_time_num_map?: Map<number, number>;
            config_delay_week?: number;
            config_count_down_time?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("delete_time_num_map" in data && data.delete_time_num_map != undefined) {
                    this.delete_time_num_map = data.delete_time_num_map;
                }
                if ("config_delay_week" in data && data.config_delay_week != undefined) {
                    this.config_delay_week = data.config_delay_week;
                }
                if ("config_count_down_time" in data && data.config_count_down_time != undefined) {
                    this.config_count_down_time = data.config_count_down_time;
                }
            }
            if (!this.delete_time_num_map)
                this.delete_time_num_map = new Map();
        }
        get delete_time_num_map() {
            return pb_1.Message.getField(this, 1) as any as Map<number, number>;
        }
        set delete_time_num_map(value: Map<number, number>) {
            pb_1.Message.setField(this, 1, value as any);
        }
        get config_delay_week() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set config_delay_week(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get config_count_down_time() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set config_count_down_time(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            delete_time_num_map?: {
                [key: number]: number;
            };
            config_delay_week?: number;
            config_count_down_time?: number;
        }): DelayWeekCountDownDelete {
            const message = new DelayWeekCountDownDelete({});
            if (typeof data.delete_time_num_map == "object") {
                message.delete_time_num_map = new Map(Object.entries(data.delete_time_num_map).map(([key, value]) => [Number(key), value]));
            }
            if (data.config_delay_week != null) {
                message.config_delay_week = data.config_delay_week;
            }
            if (data.config_count_down_time != null) {
                message.config_count_down_time = data.config_count_down_time;
            }
            return message;
        }
        toObject() {
            const data: {
                delete_time_num_map?: {
                    [key: number]: number;
                };
                config_delay_week?: number;
                config_count_down_time?: number;
            } = {};
            if (this.delete_time_num_map.size > 0) {
                data.delete_time_num_map = (Object.fromEntries)(this.delete_time_num_map);
            }
            if (this.config_delay_week != null) {
                data.config_delay_week = this.config_delay_week;
            }
            if (this.config_count_down_time != null) {
                data.config_count_down_time = this.config_count_down_time;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            for (const [key, value] of this.delete_time_num_map) {
                writer.writeMessage(1, this.delete_time_num_map, () => {
                    writer.writeUint32(1, key);
                    writer.writeUint32(2, value);
                });
            }
            if (this.config_delay_week != 0)
                writer.writeUint32(2, this.config_delay_week);
            if (this.config_count_down_time != 0)
                writer.writeUint32(3, this.config_count_down_time);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DelayWeekCountDownDelete {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DelayWeekCountDownDelete();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.delete_time_num_map as any, reader, reader.readUint32, reader.readUint32));
                        break;
                    case 2:
                        message.config_delay_week = reader.readUint32();
                        break;
                    case 3:
                        message.config_count_down_time = reader.readUint32();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DelayWeekCountDownDelete {
            return DelayWeekCountDownDelete.deserialize(bytes);
        }
    }
}
