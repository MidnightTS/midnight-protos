/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneAudioNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class SceneAudioNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        param2?: number[];
        type?: number;
        param3?: string[];
        source_uid?: number;
        param1?: number[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [14, 11, 4], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("param2" in data && data.param2 != undefined) {
                this.param2 = data.param2;
            }
            if ("type" in data && data.type != undefined) {
                this.type = data.type;
            }
            if ("param3" in data && data.param3 != undefined) {
                this.param3 = data.param3;
            }
            if ("source_uid" in data && data.source_uid != undefined) {
                this.source_uid = data.source_uid;
            }
            if ("param1" in data && data.param1 != undefined) {
                this.param1 = data.param1;
            }
        }
    }
    get param2() {
        return pb_1.Message.getFieldWithDefault(this, 14, []) as number[];
    }
    set param2(value: number[]) {
        pb_1.Message.setField(this, 14, value);
    }
    get type() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set type(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get param3() {
        return pb_1.Message.getFieldWithDefault(this, 11, []) as string[];
    }
    set param3(value: string[]) {
        pb_1.Message.setField(this, 11, value);
    }
    get source_uid() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set source_uid(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get param1() {
        return pb_1.Message.getFieldWithDefault(this, 4, []) as number[];
    }
    set param1(value: number[]) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        param2?: number[];
        type?: number;
        param3?: string[];
        source_uid?: number;
        param1?: number[];
    }): SceneAudioNotify {
        const message = new SceneAudioNotify({});
        if (data.param2 != null) {
            message.param2 = data.param2;
        }
        if (data.type != null) {
            message.type = data.type;
        }
        if (data.param3 != null) {
            message.param3 = data.param3;
        }
        if (data.source_uid != null) {
            message.source_uid = data.source_uid;
        }
        if (data.param1 != null) {
            message.param1 = data.param1;
        }
        return message;
    }
    toObject() {
        const data: {
            param2?: number[];
            type?: number;
            param3?: string[];
            source_uid?: number;
            param1?: number[];
        } = {};
        if (this.param2 != null) {
            data.param2 = this.param2;
        }
        if (this.type != null) {
            data.type = this.type;
        }
        if (this.param3 != null) {
            data.param3 = this.param3;
        }
        if (this.source_uid != null) {
            data.source_uid = this.source_uid;
        }
        if (this.param1 != null) {
            data.param1 = this.param1;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.param2.length)
            writer.writePackedFloat(14, this.param2);
        if (this.type != 0)
            writer.writeInt32(3, this.type);
        if (this.param3.length)
            writer.writeRepeatedString(11, this.param3);
        if (this.source_uid != 0)
            writer.writeUint32(6, this.source_uid);
        if (this.param1.length)
            writer.writePackedUint32(4, this.param1);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SceneAudioNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneAudioNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 14:
                    message.param2 = reader.readPackedFloat();
                    break;
                case 3:
                    message.type = reader.readInt32();
                    break;
                case 11:
                    pb_1.Message.addToRepeatedField(message, 11, reader.readString());
                    break;
                case 6:
                    message.source_uid = reader.readUint32();
                    break;
                case 4:
                    message.param1 = reader.readPackedUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): SceneAudioNotify {
        return SceneAudioNotify.deserialize(bytes);
    }
}
