// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "VintageMarketStoreInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message VintageMarketStoreInfo
 */
export interface VintageMarketStoreInfo {
    /**
     * @generated from protobuf field: uint32 store_id = 13;
     */
    storeId: number;
    /**
     * @generated from protobuf field: repeated uint32 Unk3300_HNBGHCCENIA = 1 [json_name = "Unk3300HNBGHCCENIA"];
     */
    unk3300HNBGHCCENIA: number[];
    /**
     * @generated from protobuf field: repeated uint32 strategy_list = 10;
     */
    strategyList: number[];
    /**
     * @generated from protobuf field: repeated uint32 Unk3300_ODLLANKOEND = 7 [json_name = "Unk3300ODLLANKOEND"];
     */
    unk3300ODLLANKOEND: number[];
    /**
     * @generated from protobuf field: uint32 slot_count = 5;
     */
    slotCount: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class VintageMarketStoreInfo$Type extends MessageType<VintageMarketStoreInfo> {
    constructor() {
        super("VintageMarketStoreInfo", [
            { no: 13, name: "store_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "Unk3300_HNBGHCCENIA", kind: "scalar", jsonName: "Unk3300HNBGHCCENIA", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "strategy_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "Unk3300_ODLLANKOEND", kind: "scalar", jsonName: "Unk3300ODLLANKOEND", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "slot_count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<VintageMarketStoreInfo>): VintageMarketStoreInfo {
        const message = { storeId: 0, unk3300HNBGHCCENIA: [], strategyList: [], unk3300ODLLANKOEND: [], slotCount: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<VintageMarketStoreInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: VintageMarketStoreInfo): VintageMarketStoreInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 store_id */ 13:
                    message.storeId = reader.uint32();
                    break;
                case /* repeated uint32 Unk3300_HNBGHCCENIA = 1 [json_name = "Unk3300HNBGHCCENIA"];*/ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.unk3300HNBGHCCENIA.push(reader.uint32());
                    else
                        message.unk3300HNBGHCCENIA.push(reader.uint32());
                    break;
                case /* repeated uint32 strategy_list */ 10:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.strategyList.push(reader.uint32());
                    else
                        message.strategyList.push(reader.uint32());
                    break;
                case /* repeated uint32 Unk3300_ODLLANKOEND = 7 [json_name = "Unk3300ODLLANKOEND"];*/ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.unk3300ODLLANKOEND.push(reader.uint32());
                    else
                        message.unk3300ODLLANKOEND.push(reader.uint32());
                    break;
                case /* uint32 slot_count */ 5:
                    message.slotCount = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: VintageMarketStoreInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 store_id = 13; */
        if (message.storeId !== 0)
            writer.tag(13, WireType.Varint).uint32(message.storeId);
        /* repeated uint32 Unk3300_HNBGHCCENIA = 1 [json_name = "Unk3300HNBGHCCENIA"]; */
        if (message.unk3300HNBGHCCENIA.length) {
            writer.tag(1, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.unk3300HNBGHCCENIA.length; i++)
                writer.uint32(message.unk3300HNBGHCCENIA[i]);
            writer.join();
        }
        /* repeated uint32 strategy_list = 10; */
        if (message.strategyList.length) {
            writer.tag(10, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.strategyList.length; i++)
                writer.uint32(message.strategyList[i]);
            writer.join();
        }
        /* repeated uint32 Unk3300_ODLLANKOEND = 7 [json_name = "Unk3300ODLLANKOEND"]; */
        if (message.unk3300ODLLANKOEND.length) {
            writer.tag(7, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.unk3300ODLLANKOEND.length; i++)
                writer.uint32(message.unk3300ODLLANKOEND[i]);
            writer.join();
        }
        /* uint32 slot_count = 5; */
        if (message.slotCount !== 0)
            writer.tag(5, WireType.Varint).uint32(message.slotCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message VintageMarketStoreInfo
 */
export const VintageMarketStoreInfo = new VintageMarketStoreInfo$Type();
