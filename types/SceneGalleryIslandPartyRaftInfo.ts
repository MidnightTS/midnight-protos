// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "SceneGalleryIslandPartyRaftInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { GalleryStartSource } from "./GalleryStartSource";
/**
 * @generated from protobuf message SceneGalleryIslandPartyRaftInfo
 */
export interface SceneGalleryIslandPartyRaftInfo {
    /**
     * @generated from protobuf field: uint32 coin = 12;
     */
    coin: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_FBACMOFGPGJ = 6 [json_name = "Unk3300FBACMOFGPGJ"];
     */
    unk3300FBACMOFGPGJ: number;
    /**
     * @generated from protobuf field: uint32 point_id = 10;
     */
    pointId: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_HHEKIPECDAK = 14 [json_name = "Unk3300HHEKIPECDAK"];
     */
    unk3300HHEKIPECDAK: number;
    /**
     * @generated from protobuf field: GalleryStartSource start_source = 7;
     */
    startSource: GalleryStartSource;
    /**
     * @generated from protobuf field: uint32 Unk3300_HNECEGNMKNK = 13 [json_name = "Unk3300HNECEGNMKNK"];
     */
    unk3300HNECEGNMKNK: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class SceneGalleryIslandPartyRaftInfo$Type extends MessageType<SceneGalleryIslandPartyRaftInfo> {
    constructor() {
        super("SceneGalleryIslandPartyRaftInfo", [
            { no: 12, name: "coin", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "Unk3300_FBACMOFGPGJ", kind: "scalar", jsonName: "Unk3300FBACMOFGPGJ", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "point_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "Unk3300_HHEKIPECDAK", kind: "scalar", jsonName: "Unk3300HHEKIPECDAK", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "start_source", kind: "enum", T: () => ["GalleryStartSource", GalleryStartSource, "GALLERY_START_SOURCE_"] },
            { no: 13, name: "Unk3300_HNECEGNMKNK", kind: "scalar", jsonName: "Unk3300HNECEGNMKNK", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SceneGalleryIslandPartyRaftInfo>): SceneGalleryIslandPartyRaftInfo {
        const message = { coin: 0, unk3300FBACMOFGPGJ: 0, pointId: 0, unk3300HHEKIPECDAK: 0, startSource: 0, unk3300HNECEGNMKNK: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SceneGalleryIslandPartyRaftInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SceneGalleryIslandPartyRaftInfo): SceneGalleryIslandPartyRaftInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 coin */ 12:
                    message.coin = reader.uint32();
                    break;
                case /* uint32 Unk3300_FBACMOFGPGJ = 6 [json_name = "Unk3300FBACMOFGPGJ"];*/ 6:
                    message.unk3300FBACMOFGPGJ = reader.uint32();
                    break;
                case /* uint32 point_id */ 10:
                    message.pointId = reader.uint32();
                    break;
                case /* uint32 Unk3300_HHEKIPECDAK = 14 [json_name = "Unk3300HHEKIPECDAK"];*/ 14:
                    message.unk3300HHEKIPECDAK = reader.uint32();
                    break;
                case /* GalleryStartSource start_source */ 7:
                    message.startSource = reader.int32();
                    break;
                case /* uint32 Unk3300_HNECEGNMKNK = 13 [json_name = "Unk3300HNECEGNMKNK"];*/ 13:
                    message.unk3300HNECEGNMKNK = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SceneGalleryIslandPartyRaftInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 coin = 12; */
        if (message.coin !== 0)
            writer.tag(12, WireType.Varint).uint32(message.coin);
        /* uint32 Unk3300_FBACMOFGPGJ = 6 [json_name = "Unk3300FBACMOFGPGJ"]; */
        if (message.unk3300FBACMOFGPGJ !== 0)
            writer.tag(6, WireType.Varint).uint32(message.unk3300FBACMOFGPGJ);
        /* uint32 point_id = 10; */
        if (message.pointId !== 0)
            writer.tag(10, WireType.Varint).uint32(message.pointId);
        /* uint32 Unk3300_HHEKIPECDAK = 14 [json_name = "Unk3300HHEKIPECDAK"]; */
        if (message.unk3300HHEKIPECDAK !== 0)
            writer.tag(14, WireType.Varint).uint32(message.unk3300HHEKIPECDAK);
        /* GalleryStartSource start_source = 7; */
        if (message.startSource !== 0)
            writer.tag(7, WireType.Varint).int32(message.startSource);
        /* uint32 Unk3300_HNECEGNMKNK = 13 [json_name = "Unk3300HNECEGNMKNK"]; */
        if (message.unk3300HNECEGNMKNK !== 0)
            writer.tag(13, WireType.Varint).uint32(message.unk3300HNECEGNMKNK);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message SceneGalleryIslandPartyRaftInfo
 */
export const SceneGalleryIslandPartyRaftInfo = new SceneGalleryIslandPartyRaftInfo$Type();
