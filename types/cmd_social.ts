// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_social.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ContentAuditInfo } from "./define";
import { ShowAvatarInfo } from "./define";
import { ReportReasonType } from "./define";
import { PlatformType } from "./define";
import { ProfilePicture } from "./define";
import { FriendEnterHomeOption } from "./define";
import { Birthday } from "./define";
/**
 * @generated from protobuf message com.midnights.game.SocialShowAvatarInfo
 */
export interface SocialShowAvatarInfo {
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 1;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional uint32 level = 2;
     */
    level?: number;
    /**
     * @generated from protobuf field: optional uint32 costume_id = 3;
     */
    costumeId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.SocialDetail
 */
export interface SocialDetail {
    /**
     * @generated from protobuf field: optional uint32 uid = 1;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional string nickname = 2;
     */
    nickname?: string;
    /**
     * @generated from protobuf field: optional uint32 level = 3;
     */
    level?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 4;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional string signature = 5;
     */
    signature?: string;
    /**
     * @generated from protobuf field: optional com.midnights.game.Birthday birthday = 6;
     */
    birthday?: Birthday;
    /**
     * @generated from protobuf field: optional uint32 world_level = 7;
     */
    worldLevel?: number;
    /**
     * @generated from protobuf field: repeated uint32 reserved_list = 8;
     */
    reservedList: number[];
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendOnlineState online_state = 9;
     */
    onlineState?: FriendOnlineState;
    /**
     * @generated from protobuf field: optional uint32 param = 10;
     */
    param?: number;
    /**
     * @generated from protobuf field: optional bool is_friend = 11;
     */
    isFriend?: boolean;
    /**
     * @generated from protobuf field: optional bool is_mp_mode_available = 12;
     */
    isMpModeAvailable?: boolean;
    /**
     * @generated from protobuf field: optional string online_id = 13;
     */
    onlineId?: string;
    /**
     * @generated from protobuf field: optional uint32 name_card_id = 14;
     */
    nameCardId?: number;
    /**
     * @generated from protobuf field: optional bool is_in_blacklist = 15;
     */
    isInBlacklist?: boolean;
    /**
     * @generated from protobuf field: optional bool is_chat_no_disturb = 16;
     */
    isChatNoDisturb?: boolean;
    /**
     * @generated from protobuf field: optional string remark_name = 17;
     */
    remarkName?: string;
    /**
     * @generated from protobuf field: optional uint32 finish_achievement_num = 18;
     */
    finishAchievementNum?: number;
    /**
     * @generated from protobuf field: optional uint32 tower_floor_index = 19;
     */
    towerFloorIndex?: number;
    /**
     * @generated from protobuf field: optional uint32 tower_level_index = 20;
     */
    towerLevelIndex?: number;
    /**
     * @generated from protobuf field: optional bool is_show_avatar = 21;
     */
    isShowAvatar?: boolean;
    /**
     * @generated from protobuf field: repeated com.midnights.game.SocialShowAvatarInfo show_avatar_info_list = 22;
     */
    showAvatarInfoList: SocialShowAvatarInfo[];
    /**
     * @generated from protobuf field: repeated uint32 show_name_card_id_list = 23;
     */
    showNameCardIdList: number[];
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option = 24;
     */
    friendEnterHomeOption?: FriendEnterHomeOption;
    /**
     * @generated from protobuf field: optional com.midnights.game.ProfilePicture profile_picture = 25;
     */
    profilePicture?: ProfilePicture;
}
/**
 * @generated from protobuf message com.midnights.game.FriendBrief
 */
export interface FriendBrief {
    /**
     * @generated from protobuf field: optional uint32 uid = 1;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional string nickname = 2;
     */
    nickname?: string;
    /**
     * @generated from protobuf field: optional uint32 level = 3;
     */
    level?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 4;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional uint32 world_level = 5;
     */
    worldLevel?: number;
    /**
     * @generated from protobuf field: optional string signature = 6;
     */
    signature?: string;
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendOnlineState online_state = 7;
     */
    onlineState?: FriendOnlineState;
    /**
     * @generated from protobuf field: optional uint32 param = 8;
     */
    param?: number;
    /**
     * @generated from protobuf field: optional bool is_mp_mode_available = 10;
     */
    isMpModeAvailable?: boolean;
    /**
     * @generated from protobuf field: optional string online_id = 11;
     */
    onlineId?: string;
    /**
     * @generated from protobuf field: optional uint32 last_active_time = 12;
     */
    lastActiveTime?: number;
    /**
     * @generated from protobuf field: optional uint32 name_card_id = 13;
     */
    nameCardId?: number;
    /**
     * @generated from protobuf field: optional uint32 mp_player_num = 14;
     */
    mpPlayerNum?: number;
    /**
     * @generated from protobuf field: optional bool is_chat_no_disturb = 15;
     */
    isChatNoDisturb?: boolean;
    /**
     * @generated from protobuf field: optional uint32 chat_sequence = 16;
     */
    chatSequence?: number;
    /**
     * @generated from protobuf field: optional string remark_name = 17;
     */
    remarkName?: string;
    /**
     * @generated from protobuf field: repeated com.midnights.game.SocialShowAvatarInfo show_avatar_info_list = 22;
     */
    showAvatarInfoList: SocialShowAvatarInfo[];
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option = 23;
     */
    friendEnterHomeOption?: FriendEnterHomeOption;
    /**
     * @generated from protobuf field: optional com.midnights.game.ProfilePicture profile_picture = 24;
     */
    profilePicture?: ProfilePicture;
    /**
     * @generated from protobuf field: optional bool is_game_source = 25;
     */
    isGameSource?: boolean;
    /**
     * @generated from protobuf field: optional bool is_psn_source = 26;
     */
    isPsnSource?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.PlatformType platform_type = 27;
     */
    platformType?: PlatformType;
}
/**
 * @generated from protobuf message com.midnights.game.ChatEmojiCollectionData
 */
export interface ChatEmojiCollectionData {
    /**
     * @generated from protobuf field: repeated uint32 emoji_id_list = 1;
     */
    emojiIdList: number[];
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerFriendListReq
 */
export interface GetPlayerFriendListReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerFriendListReq.CmdId
 */
export enum GetPlayerFriendListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4072;
     */
    CMD_ID = 4072,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerFriendListRsp
 */
export interface GetPlayerFriendListRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.FriendBrief ask_friend_list = 8;
     */
    askFriendList: FriendBrief[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.FriendBrief friend_list = 14;
     */
    friendList: FriendBrief[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerFriendListRsp.CmdId
 */
export enum GetPlayerFriendListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4098;
     */
    CMD_ID = 4098,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AskAddFriendReq
 */
export interface AskAddFriendReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 7;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AskAddFriendReq.CmdId
 */
export enum AskAddFriendReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4007;
     */
    CMD_ID = 4007,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AskAddFriendRsp
 */
export interface AskAddFriendRsp {
    /**
     * @generated from protobuf field: optional uint32 param = 8;
     */
    param?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 4;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AskAddFriendRsp.CmdId
 */
export enum AskAddFriendRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4021;
     */
    CMD_ID = 4021,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DealAddFriendReq
 */
export interface DealAddFriendReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.DealAddFriendResultType deal_add_friend_result = 12;
     */
    dealAddFriendResult?: DealAddFriendResultType;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 10;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DealAddFriendReq.CmdId
 */
export enum DealAddFriendReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4003;
     */
    CMD_ID = 4003,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DealAddFriendRsp
 */
export interface DealAddFriendRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 5;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.DealAddFriendResultType deal_add_friend_result = 6;
     */
    dealAddFriendResult?: DealAddFriendResultType;
}
/**
 * @generated from protobuf enum com.midnights.game.DealAddFriendRsp.CmdId
 */
export enum DealAddFriendRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4090;
     */
    CMD_ID = 4090,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerSocialDetailReq
 */
export interface GetPlayerSocialDetailReq {
    /**
     * @generated from protobuf field: optional uint32 uid = 9;
     */
    uid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerSocialDetailReq.CmdId
 */
export enum GetPlayerSocialDetailReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4073;
     */
    CMD_ID = 4073,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerSocialDetailRsp
 */
export interface GetPlayerSocialDetailRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.SocialDetail detail_data = 12;
     */
    detailData?: SocialDetail;
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerSocialDetailRsp.CmdId
 */
export enum GetPlayerSocialDetailRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4099;
     */
    CMD_ID = 4099,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DeleteFriendReq
 */
export interface DeleteFriendReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 13;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DeleteFriendReq.CmdId
 */
export enum DeleteFriendReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4031;
     */
    CMD_ID = 4031,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DeleteFriendRsp
 */
export interface DeleteFriendRsp {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 14;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DeleteFriendRsp.CmdId
 */
export enum DeleteFriendRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4075;
     */
    CMD_ID = 4075,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetPlayerBirthdayReq
 */
export interface SetPlayerBirthdayReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.Birthday birthday = 9;
     */
    birthday?: Birthday;
}
/**
 * @generated from protobuf enum com.midnights.game.SetPlayerBirthdayReq.CmdId
 */
export enum SetPlayerBirthdayReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4048;
     */
    CMD_ID = 4048,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetPlayerBirthdayRsp
 */
export interface SetPlayerBirthdayRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.Birthday birthday = 2;
     */
    birthday?: Birthday;
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetPlayerBirthdayRsp.CmdId
 */
export enum SetPlayerBirthdayRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4097;
     */
    CMD_ID = 4097,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetPlayerSignatureReq
 */
export interface SetPlayerSignatureReq {
    /**
     * @generated from protobuf field: optional string signature = 3;
     */
    signature?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.SetPlayerSignatureReq.CmdId
 */
export enum SetPlayerSignatureReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4081;
     */
    CMD_ID = 4081,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetPlayerSignatureRsp
 */
export interface SetPlayerSignatureRsp {
    /**
     * @generated from protobuf field: optional string signature = 1;
     */
    signature?: string;
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetPlayerSignatureRsp.CmdId
 */
export enum SetPlayerSignatureRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4005;
     */
    CMD_ID = 4005,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetPlayerHeadImageReq
 */
export interface SetPlayerHeadImageReq {
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 7;
     */
    avatarId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetPlayerHeadImageReq.CmdId
 */
export enum SetPlayerHeadImageReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4082;
     */
    CMD_ID = 4082,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetPlayerHeadImageRsp
 */
export interface SetPlayerHeadImageRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.ProfilePicture profile_picture = 6;
     */
    profilePicture?: ProfilePicture;
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 5;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetPlayerHeadImageRsp.CmdId
 */
export enum SetPlayerHeadImageRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4047;
     */
    CMD_ID = 4047,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePS4FriendListNotify
 */
export interface UpdatePS4FriendListNotify {
    /**
     * @generated from protobuf field: repeated string psn_id_list = 15;
     */
    psnIdList: string[];
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePS4FriendListNotify.CmdId
 */
export enum UpdatePS4FriendListNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4039;
     */
    CMD_ID = 4039,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DeleteFriendNotify
 */
export interface DeleteFriendNotify {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 12;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DeleteFriendNotify.CmdId
 */
export enum DeleteFriendNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4053;
     */
    CMD_ID = 4053,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AddFriendNotify
 */
export interface AddFriendNotify {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 11;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendBrief target_friend_brief = 10;
     */
    targetFriendBrief?: FriendBrief;
}
/**
 * @generated from protobuf enum com.midnights.game.AddFriendNotify.CmdId
 */
export enum AddFriendNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4022;
     */
    CMD_ID = 4022,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AskAddFriendNotify
 */
export interface AskAddFriendNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendBrief target_friend_brief = 15;
     */
    targetFriendBrief?: FriendBrief;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 9;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AskAddFriendNotify.CmdId
 */
export enum AskAddFriendNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4065;
     */
    CMD_ID = 4065,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetNameCardReq
 */
export interface SetNameCardReq {
    /**
     * @generated from protobuf field: optional uint32 name_card_id = 10;
     */
    nameCardId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetNameCardReq.CmdId
 */
export enum SetNameCardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4004;
     */
    CMD_ID = 4004,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetNameCardRsp
 */
export interface SetNameCardRsp {
    /**
     * @generated from protobuf field: optional uint32 name_card_id = 11;
     */
    nameCardId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetNameCardRsp.CmdId
 */
export enum SetNameCardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4093;
     */
    CMD_ID = 4093,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAllUnlockNameCardReq
 */
export interface GetAllUnlockNameCardReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetAllUnlockNameCardReq.CmdId
 */
export enum GetAllUnlockNameCardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4027;
     */
    CMD_ID = 4027,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAllUnlockNameCardRsp
 */
export interface GetAllUnlockNameCardRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 name_card_list = 14;
     */
    nameCardList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetAllUnlockNameCardRsp.CmdId
 */
export enum GetAllUnlockNameCardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4094;
     */
    CMD_ID = 4094,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AddBlacklistReq
 */
export interface AddBlacklistReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 2;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AddBlacklistReq.CmdId
 */
export enum AddBlacklistReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4088;
     */
    CMD_ID = 4088,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AddBlacklistRsp
 */
export interface AddBlacklistRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendBrief target_friend_brief = 13;
     */
    targetFriendBrief?: FriendBrief;
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AddBlacklistRsp.CmdId
 */
export enum AddBlacklistRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4026;
     */
    CMD_ID = 4026,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.RemoveBlacklistReq
 */
export interface RemoveBlacklistReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 13;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.RemoveBlacklistReq.CmdId
 */
export enum RemoveBlacklistReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4063;
     */
    CMD_ID = 4063,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.RemoveBlacklistRsp
 */
export interface RemoveBlacklistRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 7;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.RemoveBlacklistRsp.CmdId
 */
export enum RemoveBlacklistRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4095;
     */
    CMD_ID = 4095,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UnlockNameCardNotify
 */
export interface UnlockNameCardNotify {
    /**
     * @generated from protobuf field: optional uint32 name_card_id = 8;
     */
    nameCardId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockNameCardNotify.CmdId
 */
export enum UnlockNameCardNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4006;
     */
    CMD_ID = 4006,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetRecentMpPlayerListReq
 */
export interface GetRecentMpPlayerListReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetRecentMpPlayerListReq.CmdId
 */
export enum GetRecentMpPlayerListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4034;
     */
    CMD_ID = 4034,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetRecentMpPlayerListRsp
 */
export interface GetRecentMpPlayerListRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.FriendBrief recent_mp_player_brief_list = 14;
     */
    recentMpPlayerBriefList: FriendBrief[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetRecentMpPlayerListRsp.CmdId
 */
export enum GetRecentMpPlayerListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4050;
     */
    CMD_ID = 4050,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SocialDataNotify
 */
export interface SocialDataNotify {
    /**
     * @generated from protobuf field: optional bool is_have_first_share = 11;
     */
    isHaveFirstShare?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.SocialDataNotify.CmdId
 */
export enum SocialDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4043;
     */
    CMD_ID = 4043,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeFirstShareRewardReq
 */
export interface TakeFirstShareRewardReq {
}
/**
 * @generated from protobuf enum com.midnights.game.TakeFirstShareRewardReq.CmdId
 */
export enum TakeFirstShareRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4074;
     */
    CMD_ID = 4074,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeFirstShareRewardRsp
 */
export interface TakeFirstShareRewardRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeFirstShareRewardRsp.CmdId
 */
export enum TakeFirstShareRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4076;
     */
    CMD_ID = 4076,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePS4BlockListReq
 */
export interface UpdatePS4BlockListReq {
    /**
     * @generated from protobuf field: repeated string psn_id_list = 10;
     */
    psnIdList: string[];
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePS4BlockListReq.CmdId
 */
export enum UpdatePS4BlockListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4046;
     */
    CMD_ID = 4046,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePS4BlockListRsp
 */
export interface UpdatePS4BlockListRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePS4BlockListRsp.CmdId
 */
export enum UpdatePS4BlockListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4041;
     */
    CMD_ID = 4041,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerBlacklistReq
 */
export interface GetPlayerBlacklistReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerBlacklistReq.CmdId
 */
export enum GetPlayerBlacklistReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4049;
     */
    CMD_ID = 4049,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerBlacklistRsp
 */
export interface GetPlayerBlacklistRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.FriendBrief blacklist = 3;
     */
    blacklist: FriendBrief[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerBlacklistRsp.CmdId
 */
export enum GetPlayerBlacklistRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4091;
     */
    CMD_ID = 4091,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerReportReq
 */
export interface PlayerReportReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.ReportReasonType reason = 12;
     */
    reason?: ReportReasonType;
    /**
     * @generated from protobuf field: optional string content = 8;
     */
    content?: string;
    /**
     * @generated from protobuf field: optional uint32 target_home_module_id = 5;
     */
    targetHomeModuleId?: number;
    /**
     * @generated from protobuf field: optional string target_home_module_name = 6;
     */
    targetHomeModuleName?: string;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 14;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerReportReq.CmdId
 */
export enum PlayerReportReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4024;
     */
    CMD_ID = 4024,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerReportRsp
 */
export interface PlayerReportRsp {
    /**
     * @generated from protobuf field: optional uint32 cd_time = 11;
     */
    cdTime?: number;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 6;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerReportRsp.CmdId
 */
export enum PlayerReportRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4056;
     */
    CMD_ID = 4056,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetFriendRemarkNameReq
 */
export interface SetFriendRemarkNameReq {
    /**
     * @generated from protobuf field: optional uint32 uid = 10;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional string remark_name = 8;
     */
    remarkName?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.SetFriendRemarkNameReq.CmdId
 */
export enum SetFriendRemarkNameReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4042;
     */
    CMD_ID = 4042,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetFriendRemarkNameRsp
 */
export interface SetFriendRemarkNameRsp {
    /**
     * @generated from protobuf field: optional string remark_name = 13;
     */
    remarkName?: string;
    /**
     * @generated from protobuf field: optional bool is_clear_remark = 3;
     */
    isClearRemark?: boolean;
    /**
     * @generated from protobuf field: optional uint32 uid = 10;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetFriendRemarkNameRsp.CmdId
 */
export enum SetFriendRemarkNameRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4030;
     */
    CMD_ID = 4030,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePlayerShowAvatarListReq
 */
export interface UpdatePlayerShowAvatarListReq {
    /**
     * @generated from protobuf field: optional bool is_show_avatar = 15;
     */
    isShowAvatar?: boolean;
    /**
     * @generated from protobuf field: repeated uint32 show_avatar_id_list = 13;
     */
    showAvatarIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePlayerShowAvatarListReq.CmdId
 */
export enum UpdatePlayerShowAvatarListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4067;
     */
    CMD_ID = 4067,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePlayerShowAvatarListRsp
 */
export interface UpdatePlayerShowAvatarListRsp {
    /**
     * @generated from protobuf field: repeated uint32 show_avatar_id_list = 1;
     */
    showAvatarIdList: number[];
    /**
     * @generated from protobuf field: optional bool is_show_avatar = 3;
     */
    isShowAvatar?: boolean;
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePlayerShowAvatarListRsp.CmdId
 */
export enum UpdatePlayerShowAvatarListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4058;
     */
    CMD_ID = 4058,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetFriendShowAvatarInfoReq
 */
export interface GetFriendShowAvatarInfoReq {
    /**
     * @generated from protobuf field: optional uint32 uid = 15;
     */
    uid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetFriendShowAvatarInfoReq.CmdId
 */
export enum GetFriendShowAvatarInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4070;
     */
    CMD_ID = 4070,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetFriendShowAvatarInfoRsp
 */
export interface GetFriendShowAvatarInfoRsp {
    /**
     * @generated from protobuf field: optional uint32 uid = 6;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ShowAvatarInfo show_avatar_info_list = 9;
     */
    showAvatarInfoList: ShowAvatarInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetFriendShowAvatarInfoRsp.CmdId
 */
export enum GetFriendShowAvatarInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4017;
     */
    CMD_ID = 4017,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePlayerShowNameCardListReq
 */
export interface UpdatePlayerShowNameCardListReq {
    /**
     * @generated from protobuf field: repeated uint32 show_name_card_id_list = 15;
     */
    showNameCardIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePlayerShowNameCardListReq.CmdId
 */
export enum UpdatePlayerShowNameCardListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4002;
     */
    CMD_ID = 4002,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePlayerShowNameCardListRsp
 */
export interface UpdatePlayerShowNameCardListRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 show_name_card_id_list = 12;
     */
    showNameCardIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePlayerShowNameCardListRsp.CmdId
 */
export enum UpdatePlayerShowNameCardListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4019;
     */
    CMD_ID = 4019,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetFriendShowNameCardInfoReq
 */
export interface GetFriendShowNameCardInfoReq {
    /**
     * @generated from protobuf field: optional uint32 uid = 3;
     */
    uid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetFriendShowNameCardInfoReq.CmdId
 */
export enum GetFriendShowNameCardInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4061;
     */
    CMD_ID = 4061,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetFriendShowNameCardInfoRsp
 */
export interface GetFriendShowNameCardInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 uid = 7;
     */
    uid?: number;
    /**
     * @generated from protobuf field: repeated uint32 show_name_card_id_list = 10;
     */
    showNameCardIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetFriendShowNameCardInfoRsp.CmdId
 */
export enum GetFriendShowNameCardInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4029;
     */
    CMD_ID = 4029,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ForceAddPlayerFriendReq
 */
export interface ForceAddPlayerFriendReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 15;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ForceAddPlayerFriendReq.CmdId
 */
export enum ForceAddPlayerFriendReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4057;
     */
    CMD_ID = 4057,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ForceAddPlayerFriendRsp
 */
export interface ForceAddPlayerFriendRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendBrief target_friend_brief = 2;
     */
    targetFriendBrief?: FriendBrief;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 9;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ForceAddPlayerFriendRsp.CmdId
 */
export enum ForceAddPlayerFriendRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4100;
     */
    CMD_ID = 4100,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ProfilePictureChangeNotify
 */
export interface ProfilePictureChangeNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.ProfilePicture profile_picture = 12;
     */
    profilePicture?: ProfilePicture;
}
/**
 * @generated from protobuf enum com.midnights.game.ProfilePictureChangeNotify.CmdId
 */
export enum ProfilePictureChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4016;
     */
    CMD_ID = 4016,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PSNFriendListNotify
 */
export interface PSNFriendListNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.FriendBrief psn_friend_list = 8;
     */
    psnFriendList: FriendBrief[];
}
/**
 * @generated from protobuf enum com.midnights.game.PSNFriendListNotify.CmdId
 */
export enum PSNFriendListNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4087;
     */
    CMD_ID = 4087,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PSNBlackListNotify
 */
export interface PSNBlackListNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.FriendBrief psn_blacklist = 11;
     */
    psnBlacklist: FriendBrief[];
}
/**
 * @generated from protobuf enum com.midnights.game.PSNBlackListNotify.CmdId
 */
export enum PSNBlackListNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4040;
     */
    CMD_ID = 4040,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerAskFriendListReq
 */
export interface GetPlayerAskFriendListReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerAskFriendListReq.CmdId
 */
export enum GetPlayerAskFriendListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4018;
     */
    CMD_ID = 4018,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerAskFriendListRsp
 */
export interface GetPlayerAskFriendListRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.FriendBrief ask_friend_list = 15;
     */
    askFriendList: FriendBrief[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerAskFriendListRsp.CmdId
 */
export enum GetPlayerAskFriendListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4066;
     */
    CMD_ID = 4066,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetChatEmojiCollectionReq
 */
export interface GetChatEmojiCollectionReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetChatEmojiCollectionReq.CmdId
 */
export enum GetChatEmojiCollectionReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4068;
     */
    CMD_ID = 4068,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetChatEmojiCollectionRsp
 */
export interface GetChatEmojiCollectionRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ChatEmojiCollectionData chat_emoji_collection_data = 8;
     */
    chatEmojiCollectionData?: ChatEmojiCollectionData;
}
/**
 * @generated from protobuf enum com.midnights.game.GetChatEmojiCollectionRsp.CmdId
 */
export enum GetChatEmojiCollectionRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4033;
     */
    CMD_ID = 4033,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetChatEmojiCollectionReq
 */
export interface SetChatEmojiCollectionReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.ChatEmojiCollectionData chat_emoji_collection_data = 12;
     */
    chatEmojiCollectionData?: ChatEmojiCollectionData;
}
/**
 * @generated from protobuf enum com.midnights.game.SetChatEmojiCollectionReq.CmdId
 */
export enum SetChatEmojiCollectionReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4084;
     */
    CMD_ID = 4084,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetChatEmojiCollectionRsp
 */
export interface SetChatEmojiCollectionRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetChatEmojiCollectionRsp.CmdId
 */
export enum SetChatEmojiCollectionRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4080;
     */
    CMD_ID = 4080,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePS4FriendListReq
 */
export interface UpdatePS4FriendListReq {
    /**
     * @generated from protobuf field: repeated string psn_id_list = 4;
     */
    psnIdList: string[];
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePS4FriendListReq.CmdId
 */
export enum UpdatePS4FriendListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4089;
     */
    CMD_ID = 4089,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdatePS4FriendListRsp
 */
export interface UpdatePS4FriendListRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated string psn_id_list = 2;
     */
    psnIdList: string[];
}
/**
 * @generated from protobuf enum com.midnights.game.UpdatePS4FriendListRsp.CmdId
 */
export enum UpdatePS4FriendListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4059;
     */
    CMD_ID = 4059,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FriendInfoChangeNotify
 */
export interface FriendInfoChangeNotify {
    /**
     * @generated from protobuf field: optional uint32 uid = 1;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional string online_id = 9;
     */
    onlineId?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.FriendInfoChangeNotify.CmdId
 */
export enum FriendInfoChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4032;
     */
    CMD_ID = 4032,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerSignatureAuditDataNotify
 */
export interface PlayerSignatureAuditDataNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.ContentAuditInfo info = 14;
     */
    info?: ContentAuditInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerSignatureAuditDataNotify.CmdId
 */
export enum PlayerSignatureAuditDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4060;
     */
    CMD_ID = 4060,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerSignatureNotify
 */
export interface PlayerSignatureNotify {
    /**
     * @generated from protobuf field: optional string signature = 12;
     */
    signature?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerSignatureNotify.CmdId
 */
export enum PlayerSignatureNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4014;
     */
    CMD_ID = 4014,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SignatureAuditConfigNotify
 */
export interface SignatureAuditConfigNotify {
    /**
     * @generated from protobuf field: optional bool is_open = 9;
     */
    isOpen?: boolean;
    /**
     * @generated from protobuf field: optional uint32 submit_limit = 10;
     */
    submitLimit?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SignatureAuditConfigNotify.CmdId
 */
export enum SignatureAuditConfigNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4092;
     */
    CMD_ID = 4092,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReadSignatureAuditReq
 */
export interface ReadSignatureAuditReq {
}
/**
 * @generated from protobuf enum com.midnights.game.ReadSignatureAuditReq.CmdId
 */
export enum ReadSignatureAuditReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4020;
     */
    CMD_ID = 4020,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReadSignatureAuditRsp
 */
export interface ReadSignatureAuditRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ReadSignatureAuditRsp.CmdId
 */
export enum ReadSignatureAuditRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4064;
     */
    CMD_ID = 4064,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.FriendOnlineState
 */
export enum FriendOnlineState {
    /**
     * @generated from protobuf enum value: FREIEND_DISCONNECT = 0;
     */
    FREIEND_DISCONNECT = 0,
    /**
     * @generated from protobuf enum value: FRIEND_ONLINE = 1;
     */
    FRIEND_ONLINE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.DealAddFriendResultType
 */
export enum DealAddFriendResultType {
    /**
     * @generated from protobuf enum value: DEAL_ADD_FRIEND_REJECT = 0;
     */
    DEAL_ADD_FRIEND_REJECT = 0,
    /**
     * @generated from protobuf enum value: DEAL_ADD_FRIEND_ACCEPT = 1;
     */
    DEAL_ADD_FRIEND_ACCEPT = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class SocialShowAvatarInfo$Type extends MessageType<SocialShowAvatarInfo> {
    constructor() {
        super("com.midnights.game.SocialShowAvatarInfo", [
            { no: 1, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "costume_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SocialShowAvatarInfo>): SocialShowAvatarInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SocialShowAvatarInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SocialShowAvatarInfo): SocialShowAvatarInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 avatar_id */ 1:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional uint32 level */ 2:
                    message.level = reader.uint32();
                    break;
                case /* optional uint32 costume_id */ 3:
                    message.costumeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SocialShowAvatarInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 avatar_id = 1; */
        if (message.avatarId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.avatarId);
        /* optional uint32 level = 2; */
        if (message.level !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.level);
        /* optional uint32 costume_id = 3; */
        if (message.costumeId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.costumeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SocialShowAvatarInfo
 */
export const SocialShowAvatarInfo = new SocialShowAvatarInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SocialDetail$Type extends MessageType<SocialDetail> {
    constructor() {
        super("com.midnights.game.SocialDetail", [
            { no: 1, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "nickname", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "signature", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "birthday", kind: "message", T: () => Birthday },
            { no: 7, name: "world_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "reserved_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "online_state", kind: "enum", opt: true, T: () => ["com.midnights.game.FriendOnlineState", FriendOnlineState] },
            { no: 10, name: "param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "is_friend", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "is_mp_mode_available", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "online_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "name_card_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "is_in_blacklist", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "is_chat_no_disturb", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "remark_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "finish_achievement_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 19, name: "tower_floor_index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 20, name: "tower_level_index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 21, name: "is_show_avatar", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 22, name: "show_avatar_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SocialShowAvatarInfo },
            { no: 23, name: "show_name_card_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 24, name: "friend_enter_home_option", kind: "enum", opt: true, T: () => ["com.midnights.game.FriendEnterHomeOption", FriendEnterHomeOption, "FRIEND_ENTER_HOME_OPTION_"] },
            { no: 25, name: "profile_picture", kind: "message", T: () => ProfilePicture }
        ]);
    }
    create(value?: PartialMessage<SocialDetail>): SocialDetail {
        const message = { reservedList: [], showAvatarInfoList: [], showNameCardIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SocialDetail>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SocialDetail): SocialDetail {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 1:
                    message.uid = reader.uint32();
                    break;
                case /* optional string nickname */ 2:
                    message.nickname = reader.string();
                    break;
                case /* optional uint32 level */ 3:
                    message.level = reader.uint32();
                    break;
                case /* optional uint32 avatar_id */ 4:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional string signature */ 5:
                    message.signature = reader.string();
                    break;
                case /* optional com.midnights.game.Birthday birthday */ 6:
                    message.birthday = Birthday.internalBinaryRead(reader, reader.uint32(), options, message.birthday);
                    break;
                case /* optional uint32 world_level */ 7:
                    message.worldLevel = reader.uint32();
                    break;
                case /* repeated uint32 reserved_list */ 8:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.reservedList.push(reader.uint32());
                    else
                        message.reservedList.push(reader.uint32());
                    break;
                case /* optional com.midnights.game.FriendOnlineState online_state */ 9:
                    message.onlineState = reader.int32();
                    break;
                case /* optional uint32 param */ 10:
                    message.param = reader.uint32();
                    break;
                case /* optional bool is_friend */ 11:
                    message.isFriend = reader.bool();
                    break;
                case /* optional bool is_mp_mode_available */ 12:
                    message.isMpModeAvailable = reader.bool();
                    break;
                case /* optional string online_id */ 13:
                    message.onlineId = reader.string();
                    break;
                case /* optional uint32 name_card_id */ 14:
                    message.nameCardId = reader.uint32();
                    break;
                case /* optional bool is_in_blacklist */ 15:
                    message.isInBlacklist = reader.bool();
                    break;
                case /* optional bool is_chat_no_disturb */ 16:
                    message.isChatNoDisturb = reader.bool();
                    break;
                case /* optional string remark_name */ 17:
                    message.remarkName = reader.string();
                    break;
                case /* optional uint32 finish_achievement_num */ 18:
                    message.finishAchievementNum = reader.uint32();
                    break;
                case /* optional uint32 tower_floor_index */ 19:
                    message.towerFloorIndex = reader.uint32();
                    break;
                case /* optional uint32 tower_level_index */ 20:
                    message.towerLevelIndex = reader.uint32();
                    break;
                case /* optional bool is_show_avatar */ 21:
                    message.isShowAvatar = reader.bool();
                    break;
                case /* repeated com.midnights.game.SocialShowAvatarInfo show_avatar_info_list */ 22:
                    message.showAvatarInfoList.push(SocialShowAvatarInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated uint32 show_name_card_id_list */ 23:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.showNameCardIdList.push(reader.uint32());
                    else
                        message.showNameCardIdList.push(reader.uint32());
                    break;
                case /* optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option */ 24:
                    message.friendEnterHomeOption = reader.int32();
                    break;
                case /* optional com.midnights.game.ProfilePicture profile_picture */ 25:
                    message.profilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.profilePicture);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SocialDetail, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 1; */
        if (message.uid !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.uid);
        /* optional string nickname = 2; */
        if (message.nickname !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.nickname);
        /* optional uint32 level = 3; */
        if (message.level !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.level);
        /* optional uint32 avatar_id = 4; */
        if (message.avatarId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.avatarId);
        /* optional string signature = 5; */
        if (message.signature !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.signature);
        /* optional com.midnights.game.Birthday birthday = 6; */
        if (message.birthday)
            Birthday.internalBinaryWrite(message.birthday, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 world_level = 7; */
        if (message.worldLevel !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.worldLevel);
        /* repeated uint32 reserved_list = 8; */
        if (message.reservedList.length) {
            writer.tag(8, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.reservedList.length; i++)
                writer.uint32(message.reservedList[i]);
            writer.join();
        }
        /* optional com.midnights.game.FriendOnlineState online_state = 9; */
        if (message.onlineState !== undefined)
            writer.tag(9, WireType.Varint).int32(message.onlineState);
        /* optional uint32 param = 10; */
        if (message.param !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.param);
        /* optional bool is_friend = 11; */
        if (message.isFriend !== undefined)
            writer.tag(11, WireType.Varint).bool(message.isFriend);
        /* optional bool is_mp_mode_available = 12; */
        if (message.isMpModeAvailable !== undefined)
            writer.tag(12, WireType.Varint).bool(message.isMpModeAvailable);
        /* optional string online_id = 13; */
        if (message.onlineId !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.onlineId);
        /* optional uint32 name_card_id = 14; */
        if (message.nameCardId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.nameCardId);
        /* optional bool is_in_blacklist = 15; */
        if (message.isInBlacklist !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isInBlacklist);
        /* optional bool is_chat_no_disturb = 16; */
        if (message.isChatNoDisturb !== undefined)
            writer.tag(16, WireType.Varint).bool(message.isChatNoDisturb);
        /* optional string remark_name = 17; */
        if (message.remarkName !== undefined)
            writer.tag(17, WireType.LengthDelimited).string(message.remarkName);
        /* optional uint32 finish_achievement_num = 18; */
        if (message.finishAchievementNum !== undefined)
            writer.tag(18, WireType.Varint).uint32(message.finishAchievementNum);
        /* optional uint32 tower_floor_index = 19; */
        if (message.towerFloorIndex !== undefined)
            writer.tag(19, WireType.Varint).uint32(message.towerFloorIndex);
        /* optional uint32 tower_level_index = 20; */
        if (message.towerLevelIndex !== undefined)
            writer.tag(20, WireType.Varint).uint32(message.towerLevelIndex);
        /* optional bool is_show_avatar = 21; */
        if (message.isShowAvatar !== undefined)
            writer.tag(21, WireType.Varint).bool(message.isShowAvatar);
        /* repeated com.midnights.game.SocialShowAvatarInfo show_avatar_info_list = 22; */
        for (let i = 0; i < message.showAvatarInfoList.length; i++)
            SocialShowAvatarInfo.internalBinaryWrite(message.showAvatarInfoList[i], writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint32 show_name_card_id_list = 23; */
        if (message.showNameCardIdList.length) {
            writer.tag(23, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.showNameCardIdList.length; i++)
                writer.uint32(message.showNameCardIdList[i]);
            writer.join();
        }
        /* optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option = 24; */
        if (message.friendEnterHomeOption !== undefined)
            writer.tag(24, WireType.Varint).int32(message.friendEnterHomeOption);
        /* optional com.midnights.game.ProfilePicture profile_picture = 25; */
        if (message.profilePicture)
            ProfilePicture.internalBinaryWrite(message.profilePicture, writer.tag(25, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SocialDetail
 */
export const SocialDetail = new SocialDetail$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FriendBrief$Type extends MessageType<FriendBrief> {
    constructor() {
        super("com.midnights.game.FriendBrief", [
            { no: 1, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "nickname", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "world_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "signature", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "online_state", kind: "enum", opt: true, T: () => ["com.midnights.game.FriendOnlineState", FriendOnlineState] },
            { no: 8, name: "param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "is_mp_mode_available", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "online_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "last_active_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "name_card_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "mp_player_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "is_chat_no_disturb", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "chat_sequence", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 17, name: "remark_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 22, name: "show_avatar_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SocialShowAvatarInfo },
            { no: 23, name: "friend_enter_home_option", kind: "enum", opt: true, T: () => ["com.midnights.game.FriendEnterHomeOption", FriendEnterHomeOption, "FRIEND_ENTER_HOME_OPTION_"] },
            { no: 24, name: "profile_picture", kind: "message", T: () => ProfilePicture },
            { no: 25, name: "is_game_source", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 26, name: "is_psn_source", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 27, name: "platform_type", kind: "enum", opt: true, T: () => ["com.midnights.game.PlatformType", PlatformType] }
        ]);
    }
    create(value?: PartialMessage<FriendBrief>): FriendBrief {
        const message = { showAvatarInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FriendBrief>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FriendBrief): FriendBrief {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 1:
                    message.uid = reader.uint32();
                    break;
                case /* optional string nickname */ 2:
                    message.nickname = reader.string();
                    break;
                case /* optional uint32 level */ 3:
                    message.level = reader.uint32();
                    break;
                case /* optional uint32 avatar_id */ 4:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional uint32 world_level */ 5:
                    message.worldLevel = reader.uint32();
                    break;
                case /* optional string signature */ 6:
                    message.signature = reader.string();
                    break;
                case /* optional com.midnights.game.FriendOnlineState online_state */ 7:
                    message.onlineState = reader.int32();
                    break;
                case /* optional uint32 param */ 8:
                    message.param = reader.uint32();
                    break;
                case /* optional bool is_mp_mode_available */ 10:
                    message.isMpModeAvailable = reader.bool();
                    break;
                case /* optional string online_id */ 11:
                    message.onlineId = reader.string();
                    break;
                case /* optional uint32 last_active_time */ 12:
                    message.lastActiveTime = reader.uint32();
                    break;
                case /* optional uint32 name_card_id */ 13:
                    message.nameCardId = reader.uint32();
                    break;
                case /* optional uint32 mp_player_num */ 14:
                    message.mpPlayerNum = reader.uint32();
                    break;
                case /* optional bool is_chat_no_disturb */ 15:
                    message.isChatNoDisturb = reader.bool();
                    break;
                case /* optional uint32 chat_sequence */ 16:
                    message.chatSequence = reader.uint32();
                    break;
                case /* optional string remark_name */ 17:
                    message.remarkName = reader.string();
                    break;
                case /* repeated com.midnights.game.SocialShowAvatarInfo show_avatar_info_list */ 22:
                    message.showAvatarInfoList.push(SocialShowAvatarInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option */ 23:
                    message.friendEnterHomeOption = reader.int32();
                    break;
                case /* optional com.midnights.game.ProfilePicture profile_picture */ 24:
                    message.profilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.profilePicture);
                    break;
                case /* optional bool is_game_source */ 25:
                    message.isGameSource = reader.bool();
                    break;
                case /* optional bool is_psn_source */ 26:
                    message.isPsnSource = reader.bool();
                    break;
                case /* optional com.midnights.game.PlatformType platform_type */ 27:
                    message.platformType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FriendBrief, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 1; */
        if (message.uid !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.uid);
        /* optional string nickname = 2; */
        if (message.nickname !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.nickname);
        /* optional uint32 level = 3; */
        if (message.level !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.level);
        /* optional uint32 avatar_id = 4; */
        if (message.avatarId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.avatarId);
        /* optional uint32 world_level = 5; */
        if (message.worldLevel !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.worldLevel);
        /* optional string signature = 6; */
        if (message.signature !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.signature);
        /* optional com.midnights.game.FriendOnlineState online_state = 7; */
        if (message.onlineState !== undefined)
            writer.tag(7, WireType.Varint).int32(message.onlineState);
        /* optional uint32 param = 8; */
        if (message.param !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.param);
        /* optional bool is_mp_mode_available = 10; */
        if (message.isMpModeAvailable !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isMpModeAvailable);
        /* optional string online_id = 11; */
        if (message.onlineId !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.onlineId);
        /* optional uint32 last_active_time = 12; */
        if (message.lastActiveTime !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.lastActiveTime);
        /* optional uint32 name_card_id = 13; */
        if (message.nameCardId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.nameCardId);
        /* optional uint32 mp_player_num = 14; */
        if (message.mpPlayerNum !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.mpPlayerNum);
        /* optional bool is_chat_no_disturb = 15; */
        if (message.isChatNoDisturb !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isChatNoDisturb);
        /* optional uint32 chat_sequence = 16; */
        if (message.chatSequence !== undefined)
            writer.tag(16, WireType.Varint).uint32(message.chatSequence);
        /* optional string remark_name = 17; */
        if (message.remarkName !== undefined)
            writer.tag(17, WireType.LengthDelimited).string(message.remarkName);
        /* repeated com.midnights.game.SocialShowAvatarInfo show_avatar_info_list = 22; */
        for (let i = 0; i < message.showAvatarInfoList.length; i++)
            SocialShowAvatarInfo.internalBinaryWrite(message.showAvatarInfoList[i], writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option = 23; */
        if (message.friendEnterHomeOption !== undefined)
            writer.tag(23, WireType.Varint).int32(message.friendEnterHomeOption);
        /* optional com.midnights.game.ProfilePicture profile_picture = 24; */
        if (message.profilePicture)
            ProfilePicture.internalBinaryWrite(message.profilePicture, writer.tag(24, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_game_source = 25; */
        if (message.isGameSource !== undefined)
            writer.tag(25, WireType.Varint).bool(message.isGameSource);
        /* optional bool is_psn_source = 26; */
        if (message.isPsnSource !== undefined)
            writer.tag(26, WireType.Varint).bool(message.isPsnSource);
        /* optional com.midnights.game.PlatformType platform_type = 27; */
        if (message.platformType !== undefined)
            writer.tag(27, WireType.Varint).int32(message.platformType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FriendBrief
 */
export const FriendBrief = new FriendBrief$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChatEmojiCollectionData$Type extends MessageType<ChatEmojiCollectionData> {
    constructor() {
        super("com.midnights.game.ChatEmojiCollectionData", [
            { no: 1, name: "emoji_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChatEmojiCollectionData>): ChatEmojiCollectionData {
        const message = { emojiIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChatEmojiCollectionData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChatEmojiCollectionData): ChatEmojiCollectionData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 emoji_id_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.emojiIdList.push(reader.uint32());
                    else
                        message.emojiIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChatEmojiCollectionData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 emoji_id_list = 1; */
        if (message.emojiIdList.length) {
            writer.tag(1, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.emojiIdList.length; i++)
                writer.uint32(message.emojiIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChatEmojiCollectionData
 */
export const ChatEmojiCollectionData = new ChatEmojiCollectionData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerFriendListReq$Type extends MessageType<GetPlayerFriendListReq> {
    constructor() {
        super("com.midnights.game.GetPlayerFriendListReq", []);
    }
    create(value?: PartialMessage<GetPlayerFriendListReq>): GetPlayerFriendListReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerFriendListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerFriendListReq): GetPlayerFriendListReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetPlayerFriendListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerFriendListReq
 */
export const GetPlayerFriendListReq = new GetPlayerFriendListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerFriendListRsp$Type extends MessageType<GetPlayerFriendListRsp> {
    constructor() {
        super("com.midnights.game.GetPlayerFriendListRsp", [
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "ask_friend_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FriendBrief },
            { no: 14, name: "friend_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FriendBrief }
        ]);
    }
    create(value?: PartialMessage<GetPlayerFriendListRsp>): GetPlayerFriendListRsp {
        const message = { askFriendList: [], friendList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerFriendListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerFriendListRsp): GetPlayerFriendListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.FriendBrief ask_friend_list */ 8:
                    message.askFriendList.push(FriendBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.FriendBrief friend_list */ 14:
                    message.friendList.push(FriendBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPlayerFriendListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.FriendBrief ask_friend_list = 8; */
        for (let i = 0; i < message.askFriendList.length; i++)
            FriendBrief.internalBinaryWrite(message.askFriendList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.FriendBrief friend_list = 14; */
        for (let i = 0; i < message.friendList.length; i++)
            FriendBrief.internalBinaryWrite(message.friendList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerFriendListRsp
 */
export const GetPlayerFriendListRsp = new GetPlayerFriendListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AskAddFriendReq$Type extends MessageType<AskAddFriendReq> {
    constructor() {
        super("com.midnights.game.AskAddFriendReq", [
            { no: 7, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AskAddFriendReq>): AskAddFriendReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AskAddFriendReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AskAddFriendReq): AskAddFriendReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 7:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AskAddFriendReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 7; */
        if (message.targetUid !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AskAddFriendReq
 */
export const AskAddFriendReq = new AskAddFriendReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AskAddFriendRsp$Type extends MessageType<AskAddFriendRsp> {
    constructor() {
        super("com.midnights.game.AskAddFriendRsp", [
            { no: 8, name: "param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AskAddFriendRsp>): AskAddFriendRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AskAddFriendRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AskAddFriendRsp): AskAddFriendRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 param */ 8:
                    message.param = reader.uint32();
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 target_uid */ 4:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AskAddFriendRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 param = 8; */
        if (message.param !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.param);
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        /* optional uint32 target_uid = 4; */
        if (message.targetUid !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AskAddFriendRsp
 */
export const AskAddFriendRsp = new AskAddFriendRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DealAddFriendReq$Type extends MessageType<DealAddFriendReq> {
    constructor() {
        super("com.midnights.game.DealAddFriendReq", [
            { no: 12, name: "deal_add_friend_result", kind: "enum", opt: true, T: () => ["com.midnights.game.DealAddFriendResultType", DealAddFriendResultType] },
            { no: 10, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DealAddFriendReq>): DealAddFriendReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DealAddFriendReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DealAddFriendReq): DealAddFriendReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.DealAddFriendResultType deal_add_friend_result */ 12:
                    message.dealAddFriendResult = reader.int32();
                    break;
                case /* optional uint32 target_uid */ 10:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DealAddFriendReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.DealAddFriendResultType deal_add_friend_result = 12; */
        if (message.dealAddFriendResult !== undefined)
            writer.tag(12, WireType.Varint).int32(message.dealAddFriendResult);
        /* optional uint32 target_uid = 10; */
        if (message.targetUid !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DealAddFriendReq
 */
export const DealAddFriendReq = new DealAddFriendReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DealAddFriendRsp$Type extends MessageType<DealAddFriendRsp> {
    constructor() {
        super("com.midnights.game.DealAddFriendRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "deal_add_friend_result", kind: "enum", opt: true, T: () => ["com.midnights.game.DealAddFriendResultType", DealAddFriendResultType] }
        ]);
    }
    create(value?: PartialMessage<DealAddFriendRsp>): DealAddFriendRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DealAddFriendRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DealAddFriendRsp): DealAddFriendRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 target_uid */ 5:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional com.midnights.game.DealAddFriendResultType deal_add_friend_result */ 6:
                    message.dealAddFriendResult = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DealAddFriendRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* optional uint32 target_uid = 5; */
        if (message.targetUid !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.targetUid);
        /* optional com.midnights.game.DealAddFriendResultType deal_add_friend_result = 6; */
        if (message.dealAddFriendResult !== undefined)
            writer.tag(6, WireType.Varint).int32(message.dealAddFriendResult);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DealAddFriendRsp
 */
export const DealAddFriendRsp = new DealAddFriendRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerSocialDetailReq$Type extends MessageType<GetPlayerSocialDetailReq> {
    constructor() {
        super("com.midnights.game.GetPlayerSocialDetailReq", [
            { no: 9, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetPlayerSocialDetailReq>): GetPlayerSocialDetailReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerSocialDetailReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerSocialDetailReq): GetPlayerSocialDetailReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 9:
                    message.uid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPlayerSocialDetailReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 9; */
        if (message.uid !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.uid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerSocialDetailReq
 */
export const GetPlayerSocialDetailReq = new GetPlayerSocialDetailReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerSocialDetailRsp$Type extends MessageType<GetPlayerSocialDetailRsp> {
    constructor() {
        super("com.midnights.game.GetPlayerSocialDetailRsp", [
            { no: 12, name: "detail_data", kind: "message", T: () => SocialDetail },
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetPlayerSocialDetailRsp>): GetPlayerSocialDetailRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerSocialDetailRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerSocialDetailRsp): GetPlayerSocialDetailRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.SocialDetail detail_data */ 12:
                    message.detailData = SocialDetail.internalBinaryRead(reader, reader.uint32(), options, message.detailData);
                    break;
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPlayerSocialDetailRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.SocialDetail detail_data = 12; */
        if (message.detailData)
            SocialDetail.internalBinaryWrite(message.detailData, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerSocialDetailRsp
 */
export const GetPlayerSocialDetailRsp = new GetPlayerSocialDetailRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteFriendReq$Type extends MessageType<DeleteFriendReq> {
    constructor() {
        super("com.midnights.game.DeleteFriendReq", [
            { no: 13, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DeleteFriendReq>): DeleteFriendReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteFriendReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteFriendReq): DeleteFriendReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 13:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteFriendReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 13; */
        if (message.targetUid !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DeleteFriendReq
 */
export const DeleteFriendReq = new DeleteFriendReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteFriendRsp$Type extends MessageType<DeleteFriendRsp> {
    constructor() {
        super("com.midnights.game.DeleteFriendRsp", [
            { no: 14, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<DeleteFriendRsp>): DeleteFriendRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteFriendRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteFriendRsp): DeleteFriendRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 14:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteFriendRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 14; */
        if (message.targetUid !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.targetUid);
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DeleteFriendRsp
 */
export const DeleteFriendRsp = new DeleteFriendRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetPlayerBirthdayReq$Type extends MessageType<SetPlayerBirthdayReq> {
    constructor() {
        super("com.midnights.game.SetPlayerBirthdayReq", [
            { no: 9, name: "birthday", kind: "message", T: () => Birthday }
        ]);
    }
    create(value?: PartialMessage<SetPlayerBirthdayReq>): SetPlayerBirthdayReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetPlayerBirthdayReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetPlayerBirthdayReq): SetPlayerBirthdayReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Birthday birthday */ 9:
                    message.birthday = Birthday.internalBinaryRead(reader, reader.uint32(), options, message.birthday);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetPlayerBirthdayReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Birthday birthday = 9; */
        if (message.birthday)
            Birthday.internalBinaryWrite(message.birthday, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetPlayerBirthdayReq
 */
export const SetPlayerBirthdayReq = new SetPlayerBirthdayReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetPlayerBirthdayRsp$Type extends MessageType<SetPlayerBirthdayRsp> {
    constructor() {
        super("com.midnights.game.SetPlayerBirthdayRsp", [
            { no: 2, name: "birthday", kind: "message", T: () => Birthday },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetPlayerBirthdayRsp>): SetPlayerBirthdayRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetPlayerBirthdayRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetPlayerBirthdayRsp): SetPlayerBirthdayRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Birthday birthday */ 2:
                    message.birthday = Birthday.internalBinaryRead(reader, reader.uint32(), options, message.birthday);
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetPlayerBirthdayRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Birthday birthday = 2; */
        if (message.birthday)
            Birthday.internalBinaryWrite(message.birthday, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetPlayerBirthdayRsp
 */
export const SetPlayerBirthdayRsp = new SetPlayerBirthdayRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetPlayerSignatureReq$Type extends MessageType<SetPlayerSignatureReq> {
    constructor() {
        super("com.midnights.game.SetPlayerSignatureReq", [
            { no: 3, name: "signature", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SetPlayerSignatureReq>): SetPlayerSignatureReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetPlayerSignatureReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetPlayerSignatureReq): SetPlayerSignatureReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string signature */ 3:
                    message.signature = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetPlayerSignatureReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string signature = 3; */
        if (message.signature !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.signature);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetPlayerSignatureReq
 */
export const SetPlayerSignatureReq = new SetPlayerSignatureReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetPlayerSignatureRsp$Type extends MessageType<SetPlayerSignatureRsp> {
    constructor() {
        super("com.midnights.game.SetPlayerSignatureRsp", [
            { no: 1, name: "signature", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetPlayerSignatureRsp>): SetPlayerSignatureRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetPlayerSignatureRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetPlayerSignatureRsp): SetPlayerSignatureRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string signature */ 1:
                    message.signature = reader.string();
                    break;
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetPlayerSignatureRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string signature = 1; */
        if (message.signature !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.signature);
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetPlayerSignatureRsp
 */
export const SetPlayerSignatureRsp = new SetPlayerSignatureRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetPlayerHeadImageReq$Type extends MessageType<SetPlayerHeadImageReq> {
    constructor() {
        super("com.midnights.game.SetPlayerHeadImageReq", [
            { no: 7, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetPlayerHeadImageReq>): SetPlayerHeadImageReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetPlayerHeadImageReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetPlayerHeadImageReq): SetPlayerHeadImageReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 avatar_id */ 7:
                    message.avatarId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetPlayerHeadImageReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 avatar_id = 7; */
        if (message.avatarId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.avatarId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetPlayerHeadImageReq
 */
export const SetPlayerHeadImageReq = new SetPlayerHeadImageReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetPlayerHeadImageRsp$Type extends MessageType<SetPlayerHeadImageRsp> {
    constructor() {
        super("com.midnights.game.SetPlayerHeadImageRsp", [
            { no: 6, name: "profile_picture", kind: "message", T: () => ProfilePicture },
            { no: 5, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetPlayerHeadImageRsp>): SetPlayerHeadImageRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetPlayerHeadImageRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetPlayerHeadImageRsp): SetPlayerHeadImageRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ProfilePicture profile_picture */ 6:
                    message.profilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.profilePicture);
                    break;
                case /* optional uint32 avatar_id */ 5:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetPlayerHeadImageRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ProfilePicture profile_picture = 6; */
        if (message.profilePicture)
            ProfilePicture.internalBinaryWrite(message.profilePicture, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 avatar_id = 5; */
        if (message.avatarId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.avatarId);
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetPlayerHeadImageRsp
 */
export const SetPlayerHeadImageRsp = new SetPlayerHeadImageRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePS4FriendListNotify$Type extends MessageType<UpdatePS4FriendListNotify> {
    constructor() {
        super("com.midnights.game.UpdatePS4FriendListNotify", [
            { no: 15, name: "psn_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePS4FriendListNotify>): UpdatePS4FriendListNotify {
        const message = { psnIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePS4FriendListNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePS4FriendListNotify): UpdatePS4FriendListNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string psn_id_list */ 15:
                    message.psnIdList.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePS4FriendListNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string psn_id_list = 15; */
        for (let i = 0; i < message.psnIdList.length; i++)
            writer.tag(15, WireType.LengthDelimited).string(message.psnIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePS4FriendListNotify
 */
export const UpdatePS4FriendListNotify = new UpdatePS4FriendListNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DeleteFriendNotify$Type extends MessageType<DeleteFriendNotify> {
    constructor() {
        super("com.midnights.game.DeleteFriendNotify", [
            { no: 12, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DeleteFriendNotify>): DeleteFriendNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DeleteFriendNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DeleteFriendNotify): DeleteFriendNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 12:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DeleteFriendNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 12; */
        if (message.targetUid !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DeleteFriendNotify
 */
export const DeleteFriendNotify = new DeleteFriendNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddFriendNotify$Type extends MessageType<AddFriendNotify> {
    constructor() {
        super("com.midnights.game.AddFriendNotify", [
            { no: 11, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "target_friend_brief", kind: "message", T: () => FriendBrief }
        ]);
    }
    create(value?: PartialMessage<AddFriendNotify>): AddFriendNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddFriendNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddFriendNotify): AddFriendNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 11:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional com.midnights.game.FriendBrief target_friend_brief */ 10:
                    message.targetFriendBrief = FriendBrief.internalBinaryRead(reader, reader.uint32(), options, message.targetFriendBrief);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddFriendNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 11; */
        if (message.targetUid !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.targetUid);
        /* optional com.midnights.game.FriendBrief target_friend_brief = 10; */
        if (message.targetFriendBrief)
            FriendBrief.internalBinaryWrite(message.targetFriendBrief, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddFriendNotify
 */
export const AddFriendNotify = new AddFriendNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AskAddFriendNotify$Type extends MessageType<AskAddFriendNotify> {
    constructor() {
        super("com.midnights.game.AskAddFriendNotify", [
            { no: 15, name: "target_friend_brief", kind: "message", T: () => FriendBrief },
            { no: 9, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AskAddFriendNotify>): AskAddFriendNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AskAddFriendNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AskAddFriendNotify): AskAddFriendNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.FriendBrief target_friend_brief */ 15:
                    message.targetFriendBrief = FriendBrief.internalBinaryRead(reader, reader.uint32(), options, message.targetFriendBrief);
                    break;
                case /* optional uint32 target_uid */ 9:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AskAddFriendNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.FriendBrief target_friend_brief = 15; */
        if (message.targetFriendBrief)
            FriendBrief.internalBinaryWrite(message.targetFriendBrief, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 target_uid = 9; */
        if (message.targetUid !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AskAddFriendNotify
 */
export const AskAddFriendNotify = new AskAddFriendNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetNameCardReq$Type extends MessageType<SetNameCardReq> {
    constructor() {
        super("com.midnights.game.SetNameCardReq", [
            { no: 10, name: "name_card_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetNameCardReq>): SetNameCardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetNameCardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetNameCardReq): SetNameCardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 name_card_id */ 10:
                    message.nameCardId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetNameCardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 name_card_id = 10; */
        if (message.nameCardId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.nameCardId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetNameCardReq
 */
export const SetNameCardReq = new SetNameCardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetNameCardRsp$Type extends MessageType<SetNameCardRsp> {
    constructor() {
        super("com.midnights.game.SetNameCardRsp", [
            { no: 11, name: "name_card_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetNameCardRsp>): SetNameCardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetNameCardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetNameCardRsp): SetNameCardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 name_card_id */ 11:
                    message.nameCardId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetNameCardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 name_card_id = 11; */
        if (message.nameCardId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.nameCardId);
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetNameCardRsp
 */
export const SetNameCardRsp = new SetNameCardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAllUnlockNameCardReq$Type extends MessageType<GetAllUnlockNameCardReq> {
    constructor() {
        super("com.midnights.game.GetAllUnlockNameCardReq", []);
    }
    create(value?: PartialMessage<GetAllUnlockNameCardReq>): GetAllUnlockNameCardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAllUnlockNameCardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAllUnlockNameCardReq): GetAllUnlockNameCardReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetAllUnlockNameCardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAllUnlockNameCardReq
 */
export const GetAllUnlockNameCardReq = new GetAllUnlockNameCardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAllUnlockNameCardRsp$Type extends MessageType<GetAllUnlockNameCardRsp> {
    constructor() {
        super("com.midnights.game.GetAllUnlockNameCardRsp", [
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "name_card_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetAllUnlockNameCardRsp>): GetAllUnlockNameCardRsp {
        const message = { nameCardList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAllUnlockNameCardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAllUnlockNameCardRsp): GetAllUnlockNameCardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 name_card_list */ 14:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.nameCardList.push(reader.uint32());
                    else
                        message.nameCardList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetAllUnlockNameCardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        /* repeated uint32 name_card_list = 14; */
        if (message.nameCardList.length) {
            writer.tag(14, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.nameCardList.length; i++)
                writer.uint32(message.nameCardList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAllUnlockNameCardRsp
 */
export const GetAllUnlockNameCardRsp = new GetAllUnlockNameCardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddBlacklistReq$Type extends MessageType<AddBlacklistReq> {
    constructor() {
        super("com.midnights.game.AddBlacklistReq", [
            { no: 2, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AddBlacklistReq>): AddBlacklistReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddBlacklistReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddBlacklistReq): AddBlacklistReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 2:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddBlacklistReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 2; */
        if (message.targetUid !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddBlacklistReq
 */
export const AddBlacklistReq = new AddBlacklistReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddBlacklistRsp$Type extends MessageType<AddBlacklistRsp> {
    constructor() {
        super("com.midnights.game.AddBlacklistRsp", [
            { no: 13, name: "target_friend_brief", kind: "message", T: () => FriendBrief },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AddBlacklistRsp>): AddBlacklistRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddBlacklistRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddBlacklistRsp): AddBlacklistRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.FriendBrief target_friend_brief */ 13:
                    message.targetFriendBrief = FriendBrief.internalBinaryRead(reader, reader.uint32(), options, message.targetFriendBrief);
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddBlacklistRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.FriendBrief target_friend_brief = 13; */
        if (message.targetFriendBrief)
            FriendBrief.internalBinaryWrite(message.targetFriendBrief, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddBlacklistRsp
 */
export const AddBlacklistRsp = new AddBlacklistRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveBlacklistReq$Type extends MessageType<RemoveBlacklistReq> {
    constructor() {
        super("com.midnights.game.RemoveBlacklistReq", [
            { no: 13, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<RemoveBlacklistReq>): RemoveBlacklistReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RemoveBlacklistReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RemoveBlacklistReq): RemoveBlacklistReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 13:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RemoveBlacklistReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 13; */
        if (message.targetUid !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RemoveBlacklistReq
 */
export const RemoveBlacklistReq = new RemoveBlacklistReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveBlacklistRsp$Type extends MessageType<RemoveBlacklistRsp> {
    constructor() {
        super("com.midnights.game.RemoveBlacklistRsp", [
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<RemoveBlacklistRsp>): RemoveBlacklistRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RemoveBlacklistRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RemoveBlacklistRsp): RemoveBlacklistRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 target_uid */ 7:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RemoveBlacklistRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        /* optional uint32 target_uid = 7; */
        if (message.targetUid !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RemoveBlacklistRsp
 */
export const RemoveBlacklistRsp = new RemoveBlacklistRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnlockNameCardNotify$Type extends MessageType<UnlockNameCardNotify> {
    constructor() {
        super("com.midnights.game.UnlockNameCardNotify", [
            { no: 8, name: "name_card_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockNameCardNotify>): UnlockNameCardNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockNameCardNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockNameCardNotify): UnlockNameCardNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 name_card_id */ 8:
                    message.nameCardId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockNameCardNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 name_card_id = 8; */
        if (message.nameCardId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.nameCardId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockNameCardNotify
 */
export const UnlockNameCardNotify = new UnlockNameCardNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRecentMpPlayerListReq$Type extends MessageType<GetRecentMpPlayerListReq> {
    constructor() {
        super("com.midnights.game.GetRecentMpPlayerListReq", []);
    }
    create(value?: PartialMessage<GetRecentMpPlayerListReq>): GetRecentMpPlayerListReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetRecentMpPlayerListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetRecentMpPlayerListReq): GetRecentMpPlayerListReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetRecentMpPlayerListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetRecentMpPlayerListReq
 */
export const GetRecentMpPlayerListReq = new GetRecentMpPlayerListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRecentMpPlayerListRsp$Type extends MessageType<GetRecentMpPlayerListRsp> {
    constructor() {
        super("com.midnights.game.GetRecentMpPlayerListRsp", [
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "recent_mp_player_brief_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FriendBrief }
        ]);
    }
    create(value?: PartialMessage<GetRecentMpPlayerListRsp>): GetRecentMpPlayerListRsp {
        const message = { recentMpPlayerBriefList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetRecentMpPlayerListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetRecentMpPlayerListRsp): GetRecentMpPlayerListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.FriendBrief recent_mp_player_brief_list */ 14:
                    message.recentMpPlayerBriefList.push(FriendBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetRecentMpPlayerListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.FriendBrief recent_mp_player_brief_list = 14; */
        for (let i = 0; i < message.recentMpPlayerBriefList.length; i++)
            FriendBrief.internalBinaryWrite(message.recentMpPlayerBriefList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetRecentMpPlayerListRsp
 */
export const GetRecentMpPlayerListRsp = new GetRecentMpPlayerListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SocialDataNotify$Type extends MessageType<SocialDataNotify> {
    constructor() {
        super("com.midnights.game.SocialDataNotify", [
            { no: 11, name: "is_have_first_share", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<SocialDataNotify>): SocialDataNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SocialDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SocialDataNotify): SocialDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_have_first_share */ 11:
                    message.isHaveFirstShare = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SocialDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_have_first_share = 11; */
        if (message.isHaveFirstShare !== undefined)
            writer.tag(11, WireType.Varint).bool(message.isHaveFirstShare);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SocialDataNotify
 */
export const SocialDataNotify = new SocialDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeFirstShareRewardReq$Type extends MessageType<TakeFirstShareRewardReq> {
    constructor() {
        super("com.midnights.game.TakeFirstShareRewardReq", []);
    }
    create(value?: PartialMessage<TakeFirstShareRewardReq>): TakeFirstShareRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeFirstShareRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeFirstShareRewardReq): TakeFirstShareRewardReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: TakeFirstShareRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeFirstShareRewardReq
 */
export const TakeFirstShareRewardReq = new TakeFirstShareRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeFirstShareRewardRsp$Type extends MessageType<TakeFirstShareRewardRsp> {
    constructor() {
        super("com.midnights.game.TakeFirstShareRewardRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeFirstShareRewardRsp>): TakeFirstShareRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeFirstShareRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeFirstShareRewardRsp): TakeFirstShareRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeFirstShareRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeFirstShareRewardRsp
 */
export const TakeFirstShareRewardRsp = new TakeFirstShareRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePS4BlockListReq$Type extends MessageType<UpdatePS4BlockListReq> {
    constructor() {
        super("com.midnights.game.UpdatePS4BlockListReq", [
            { no: 10, name: "psn_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePS4BlockListReq>): UpdatePS4BlockListReq {
        const message = { psnIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePS4BlockListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePS4BlockListReq): UpdatePS4BlockListReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string psn_id_list */ 10:
                    message.psnIdList.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePS4BlockListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string psn_id_list = 10; */
        for (let i = 0; i < message.psnIdList.length; i++)
            writer.tag(10, WireType.LengthDelimited).string(message.psnIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePS4BlockListReq
 */
export const UpdatePS4BlockListReq = new UpdatePS4BlockListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePS4BlockListRsp$Type extends MessageType<UpdatePS4BlockListRsp> {
    constructor() {
        super("com.midnights.game.UpdatePS4BlockListRsp", [
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePS4BlockListRsp>): UpdatePS4BlockListRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePS4BlockListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePS4BlockListRsp): UpdatePS4BlockListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePS4BlockListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePS4BlockListRsp
 */
export const UpdatePS4BlockListRsp = new UpdatePS4BlockListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerBlacklistReq$Type extends MessageType<GetPlayerBlacklistReq> {
    constructor() {
        super("com.midnights.game.GetPlayerBlacklistReq", []);
    }
    create(value?: PartialMessage<GetPlayerBlacklistReq>): GetPlayerBlacklistReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerBlacklistReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerBlacklistReq): GetPlayerBlacklistReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetPlayerBlacklistReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerBlacklistReq
 */
export const GetPlayerBlacklistReq = new GetPlayerBlacklistReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerBlacklistRsp$Type extends MessageType<GetPlayerBlacklistRsp> {
    constructor() {
        super("com.midnights.game.GetPlayerBlacklistRsp", [
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "blacklist", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FriendBrief }
        ]);
    }
    create(value?: PartialMessage<GetPlayerBlacklistRsp>): GetPlayerBlacklistRsp {
        const message = { blacklist: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerBlacklistRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerBlacklistRsp): GetPlayerBlacklistRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.FriendBrief blacklist */ 3:
                    message.blacklist.push(FriendBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPlayerBlacklistRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.FriendBrief blacklist = 3; */
        for (let i = 0; i < message.blacklist.length; i++)
            FriendBrief.internalBinaryWrite(message.blacklist[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerBlacklistRsp
 */
export const GetPlayerBlacklistRsp = new GetPlayerBlacklistRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerReportReq$Type extends MessageType<PlayerReportReq> {
    constructor() {
        super("com.midnights.game.PlayerReportReq", [
            { no: 12, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.ReportReasonType", ReportReasonType] },
            { no: 8, name: "content", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "target_home_module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "target_home_module_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerReportReq>): PlayerReportReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerReportReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerReportReq): PlayerReportReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ReportReasonType reason */ 12:
                    message.reason = reader.int32();
                    break;
                case /* optional string content */ 8:
                    message.content = reader.string();
                    break;
                case /* optional uint32 target_home_module_id */ 5:
                    message.targetHomeModuleId = reader.uint32();
                    break;
                case /* optional string target_home_module_name */ 6:
                    message.targetHomeModuleName = reader.string();
                    break;
                case /* optional uint32 target_uid */ 14:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerReportReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ReportReasonType reason = 12; */
        if (message.reason !== undefined)
            writer.tag(12, WireType.Varint).int32(message.reason);
        /* optional string content = 8; */
        if (message.content !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.content);
        /* optional uint32 target_home_module_id = 5; */
        if (message.targetHomeModuleId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.targetHomeModuleId);
        /* optional string target_home_module_name = 6; */
        if (message.targetHomeModuleName !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.targetHomeModuleName);
        /* optional uint32 target_uid = 14; */
        if (message.targetUid !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerReportReq
 */
export const PlayerReportReq = new PlayerReportReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerReportRsp$Type extends MessageType<PlayerReportRsp> {
    constructor() {
        super("com.midnights.game.PlayerReportRsp", [
            { no: 11, name: "cd_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerReportRsp>): PlayerReportRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerReportRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerReportRsp): PlayerReportRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 cd_time */ 11:
                    message.cdTime = reader.uint32();
                    break;
                case /* optional uint32 target_uid */ 6:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerReportRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 cd_time = 11; */
        if (message.cdTime !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.cdTime);
        /* optional uint32 target_uid = 6; */
        if (message.targetUid !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.targetUid);
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerReportRsp
 */
export const PlayerReportRsp = new PlayerReportRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetFriendRemarkNameReq$Type extends MessageType<SetFriendRemarkNameReq> {
    constructor() {
        super("com.midnights.game.SetFriendRemarkNameReq", [
            { no: 10, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "remark_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SetFriendRemarkNameReq>): SetFriendRemarkNameReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetFriendRemarkNameReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetFriendRemarkNameReq): SetFriendRemarkNameReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 10:
                    message.uid = reader.uint32();
                    break;
                case /* optional string remark_name */ 8:
                    message.remarkName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetFriendRemarkNameReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 10; */
        if (message.uid !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.uid);
        /* optional string remark_name = 8; */
        if (message.remarkName !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.remarkName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetFriendRemarkNameReq
 */
export const SetFriendRemarkNameReq = new SetFriendRemarkNameReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetFriendRemarkNameRsp$Type extends MessageType<SetFriendRemarkNameRsp> {
    constructor() {
        super("com.midnights.game.SetFriendRemarkNameRsp", [
            { no: 13, name: "remark_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_clear_remark", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetFriendRemarkNameRsp>): SetFriendRemarkNameRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetFriendRemarkNameRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetFriendRemarkNameRsp): SetFriendRemarkNameRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string remark_name */ 13:
                    message.remarkName = reader.string();
                    break;
                case /* optional bool is_clear_remark */ 3:
                    message.isClearRemark = reader.bool();
                    break;
                case /* optional uint32 uid */ 10:
                    message.uid = reader.uint32();
                    break;
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetFriendRemarkNameRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string remark_name = 13; */
        if (message.remarkName !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.remarkName);
        /* optional bool is_clear_remark = 3; */
        if (message.isClearRemark !== undefined)
            writer.tag(3, WireType.Varint).bool(message.isClearRemark);
        /* optional uint32 uid = 10; */
        if (message.uid !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.uid);
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetFriendRemarkNameRsp
 */
export const SetFriendRemarkNameRsp = new SetFriendRemarkNameRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePlayerShowAvatarListReq$Type extends MessageType<UpdatePlayerShowAvatarListReq> {
    constructor() {
        super("com.midnights.game.UpdatePlayerShowAvatarListReq", [
            { no: 15, name: "is_show_avatar", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "show_avatar_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePlayerShowAvatarListReq>): UpdatePlayerShowAvatarListReq {
        const message = { showAvatarIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePlayerShowAvatarListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePlayerShowAvatarListReq): UpdatePlayerShowAvatarListReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_show_avatar */ 15:
                    message.isShowAvatar = reader.bool();
                    break;
                case /* repeated uint32 show_avatar_id_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.showAvatarIdList.push(reader.uint32());
                    else
                        message.showAvatarIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePlayerShowAvatarListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_show_avatar = 15; */
        if (message.isShowAvatar !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isShowAvatar);
        /* repeated uint32 show_avatar_id_list = 13; */
        if (message.showAvatarIdList.length) {
            writer.tag(13, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.showAvatarIdList.length; i++)
                writer.uint32(message.showAvatarIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePlayerShowAvatarListReq
 */
export const UpdatePlayerShowAvatarListReq = new UpdatePlayerShowAvatarListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePlayerShowAvatarListRsp$Type extends MessageType<UpdatePlayerShowAvatarListRsp> {
    constructor() {
        super("com.midnights.game.UpdatePlayerShowAvatarListRsp", [
            { no: 1, name: "show_avatar_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "is_show_avatar", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePlayerShowAvatarListRsp>): UpdatePlayerShowAvatarListRsp {
        const message = { showAvatarIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePlayerShowAvatarListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePlayerShowAvatarListRsp): UpdatePlayerShowAvatarListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 show_avatar_id_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.showAvatarIdList.push(reader.uint32());
                    else
                        message.showAvatarIdList.push(reader.uint32());
                    break;
                case /* optional bool is_show_avatar */ 3:
                    message.isShowAvatar = reader.bool();
                    break;
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePlayerShowAvatarListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 show_avatar_id_list = 1; */
        if (message.showAvatarIdList.length) {
            writer.tag(1, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.showAvatarIdList.length; i++)
                writer.uint32(message.showAvatarIdList[i]);
            writer.join();
        }
        /* optional bool is_show_avatar = 3; */
        if (message.isShowAvatar !== undefined)
            writer.tag(3, WireType.Varint).bool(message.isShowAvatar);
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePlayerShowAvatarListRsp
 */
export const UpdatePlayerShowAvatarListRsp = new UpdatePlayerShowAvatarListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFriendShowAvatarInfoReq$Type extends MessageType<GetFriendShowAvatarInfoReq> {
    constructor() {
        super("com.midnights.game.GetFriendShowAvatarInfoReq", [
            { no: 15, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetFriendShowAvatarInfoReq>): GetFriendShowAvatarInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFriendShowAvatarInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFriendShowAvatarInfoReq): GetFriendShowAvatarInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 15:
                    message.uid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFriendShowAvatarInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 15; */
        if (message.uid !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.uid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetFriendShowAvatarInfoReq
 */
export const GetFriendShowAvatarInfoReq = new GetFriendShowAvatarInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFriendShowAvatarInfoRsp$Type extends MessageType<GetFriendShowAvatarInfoRsp> {
    constructor() {
        super("com.midnights.game.GetFriendShowAvatarInfoRsp", [
            { no: 6, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "show_avatar_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ShowAvatarInfo }
        ]);
    }
    create(value?: PartialMessage<GetFriendShowAvatarInfoRsp>): GetFriendShowAvatarInfoRsp {
        const message = { showAvatarInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFriendShowAvatarInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFriendShowAvatarInfoRsp): GetFriendShowAvatarInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 6:
                    message.uid = reader.uint32();
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.ShowAvatarInfo show_avatar_info_list */ 9:
                    message.showAvatarInfoList.push(ShowAvatarInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFriendShowAvatarInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 6; */
        if (message.uid !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.uid);
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.ShowAvatarInfo show_avatar_info_list = 9; */
        for (let i = 0; i < message.showAvatarInfoList.length; i++)
            ShowAvatarInfo.internalBinaryWrite(message.showAvatarInfoList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetFriendShowAvatarInfoRsp
 */
export const GetFriendShowAvatarInfoRsp = new GetFriendShowAvatarInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePlayerShowNameCardListReq$Type extends MessageType<UpdatePlayerShowNameCardListReq> {
    constructor() {
        super("com.midnights.game.UpdatePlayerShowNameCardListReq", [
            { no: 15, name: "show_name_card_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePlayerShowNameCardListReq>): UpdatePlayerShowNameCardListReq {
        const message = { showNameCardIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePlayerShowNameCardListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePlayerShowNameCardListReq): UpdatePlayerShowNameCardListReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 show_name_card_id_list */ 15:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.showNameCardIdList.push(reader.uint32());
                    else
                        message.showNameCardIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePlayerShowNameCardListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 show_name_card_id_list = 15; */
        if (message.showNameCardIdList.length) {
            writer.tag(15, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.showNameCardIdList.length; i++)
                writer.uint32(message.showNameCardIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePlayerShowNameCardListReq
 */
export const UpdatePlayerShowNameCardListReq = new UpdatePlayerShowNameCardListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePlayerShowNameCardListRsp$Type extends MessageType<UpdatePlayerShowNameCardListRsp> {
    constructor() {
        super("com.midnights.game.UpdatePlayerShowNameCardListRsp", [
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "show_name_card_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePlayerShowNameCardListRsp>): UpdatePlayerShowNameCardListRsp {
        const message = { showNameCardIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePlayerShowNameCardListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePlayerShowNameCardListRsp): UpdatePlayerShowNameCardListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 show_name_card_id_list */ 12:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.showNameCardIdList.push(reader.uint32());
                    else
                        message.showNameCardIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePlayerShowNameCardListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        /* repeated uint32 show_name_card_id_list = 12; */
        if (message.showNameCardIdList.length) {
            writer.tag(12, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.showNameCardIdList.length; i++)
                writer.uint32(message.showNameCardIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePlayerShowNameCardListRsp
 */
export const UpdatePlayerShowNameCardListRsp = new UpdatePlayerShowNameCardListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFriendShowNameCardInfoReq$Type extends MessageType<GetFriendShowNameCardInfoReq> {
    constructor() {
        super("com.midnights.game.GetFriendShowNameCardInfoReq", [
            { no: 3, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetFriendShowNameCardInfoReq>): GetFriendShowNameCardInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFriendShowNameCardInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFriendShowNameCardInfoReq): GetFriendShowNameCardInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 3:
                    message.uid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFriendShowNameCardInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 3; */
        if (message.uid !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.uid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetFriendShowNameCardInfoReq
 */
export const GetFriendShowNameCardInfoReq = new GetFriendShowNameCardInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFriendShowNameCardInfoRsp$Type extends MessageType<GetFriendShowNameCardInfoRsp> {
    constructor() {
        super("com.midnights.game.GetFriendShowNameCardInfoRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "show_name_card_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetFriendShowNameCardInfoRsp>): GetFriendShowNameCardInfoRsp {
        const message = { showNameCardIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFriendShowNameCardInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFriendShowNameCardInfoRsp): GetFriendShowNameCardInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 uid */ 7:
                    message.uid = reader.uint32();
                    break;
                case /* repeated uint32 show_name_card_id_list */ 10:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.showNameCardIdList.push(reader.uint32());
                    else
                        message.showNameCardIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetFriendShowNameCardInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        /* optional uint32 uid = 7; */
        if (message.uid !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.uid);
        /* repeated uint32 show_name_card_id_list = 10; */
        if (message.showNameCardIdList.length) {
            writer.tag(10, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.showNameCardIdList.length; i++)
                writer.uint32(message.showNameCardIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetFriendShowNameCardInfoRsp
 */
export const GetFriendShowNameCardInfoRsp = new GetFriendShowNameCardInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ForceAddPlayerFriendReq$Type extends MessageType<ForceAddPlayerFriendReq> {
    constructor() {
        super("com.midnights.game.ForceAddPlayerFriendReq", [
            { no: 15, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ForceAddPlayerFriendReq>): ForceAddPlayerFriendReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ForceAddPlayerFriendReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ForceAddPlayerFriendReq): ForceAddPlayerFriendReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 15:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ForceAddPlayerFriendReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 15; */
        if (message.targetUid !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ForceAddPlayerFriendReq
 */
export const ForceAddPlayerFriendReq = new ForceAddPlayerFriendReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ForceAddPlayerFriendRsp$Type extends MessageType<ForceAddPlayerFriendRsp> {
    constructor() {
        super("com.midnights.game.ForceAddPlayerFriendRsp", [
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "target_friend_brief", kind: "message", T: () => FriendBrief },
            { no: 9, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ForceAddPlayerFriendRsp>): ForceAddPlayerFriendRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ForceAddPlayerFriendRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ForceAddPlayerFriendRsp): ForceAddPlayerFriendRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.FriendBrief target_friend_brief */ 2:
                    message.targetFriendBrief = FriendBrief.internalBinaryRead(reader, reader.uint32(), options, message.targetFriendBrief);
                    break;
                case /* optional uint32 target_uid */ 9:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ForceAddPlayerFriendRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.FriendBrief target_friend_brief = 2; */
        if (message.targetFriendBrief)
            FriendBrief.internalBinaryWrite(message.targetFriendBrief, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 target_uid = 9; */
        if (message.targetUid !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ForceAddPlayerFriendRsp
 */
export const ForceAddPlayerFriendRsp = new ForceAddPlayerFriendRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProfilePictureChangeNotify$Type extends MessageType<ProfilePictureChangeNotify> {
    constructor() {
        super("com.midnights.game.ProfilePictureChangeNotify", [
            { no: 12, name: "profile_picture", kind: "message", T: () => ProfilePicture }
        ]);
    }
    create(value?: PartialMessage<ProfilePictureChangeNotify>): ProfilePictureChangeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProfilePictureChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProfilePictureChangeNotify): ProfilePictureChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ProfilePicture profile_picture */ 12:
                    message.profilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.profilePicture);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProfilePictureChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ProfilePicture profile_picture = 12; */
        if (message.profilePicture)
            ProfilePicture.internalBinaryWrite(message.profilePicture, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ProfilePictureChangeNotify
 */
export const ProfilePictureChangeNotify = new ProfilePictureChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PSNFriendListNotify$Type extends MessageType<PSNFriendListNotify> {
    constructor() {
        super("com.midnights.game.PSNFriendListNotify", [
            { no: 8, name: "psn_friend_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FriendBrief }
        ]);
    }
    create(value?: PartialMessage<PSNFriendListNotify>): PSNFriendListNotify {
        const message = { psnFriendList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PSNFriendListNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PSNFriendListNotify): PSNFriendListNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.FriendBrief psn_friend_list */ 8:
                    message.psnFriendList.push(FriendBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PSNFriendListNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.FriendBrief psn_friend_list = 8; */
        for (let i = 0; i < message.psnFriendList.length; i++)
            FriendBrief.internalBinaryWrite(message.psnFriendList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PSNFriendListNotify
 */
export const PSNFriendListNotify = new PSNFriendListNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PSNBlackListNotify$Type extends MessageType<PSNBlackListNotify> {
    constructor() {
        super("com.midnights.game.PSNBlackListNotify", [
            { no: 11, name: "psn_blacklist", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FriendBrief }
        ]);
    }
    create(value?: PartialMessage<PSNBlackListNotify>): PSNBlackListNotify {
        const message = { psnBlacklist: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PSNBlackListNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PSNBlackListNotify): PSNBlackListNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.FriendBrief psn_blacklist */ 11:
                    message.psnBlacklist.push(FriendBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PSNBlackListNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.FriendBrief psn_blacklist = 11; */
        for (let i = 0; i < message.psnBlacklist.length; i++)
            FriendBrief.internalBinaryWrite(message.psnBlacklist[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PSNBlackListNotify
 */
export const PSNBlackListNotify = new PSNBlackListNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerAskFriendListReq$Type extends MessageType<GetPlayerAskFriendListReq> {
    constructor() {
        super("com.midnights.game.GetPlayerAskFriendListReq", []);
    }
    create(value?: PartialMessage<GetPlayerAskFriendListReq>): GetPlayerAskFriendListReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerAskFriendListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerAskFriendListReq): GetPlayerAskFriendListReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetPlayerAskFriendListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerAskFriendListReq
 */
export const GetPlayerAskFriendListReq = new GetPlayerAskFriendListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerAskFriendListRsp$Type extends MessageType<GetPlayerAskFriendListRsp> {
    constructor() {
        super("com.midnights.game.GetPlayerAskFriendListRsp", [
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "ask_friend_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FriendBrief }
        ]);
    }
    create(value?: PartialMessage<GetPlayerAskFriendListRsp>): GetPlayerAskFriendListRsp {
        const message = { askFriendList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerAskFriendListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerAskFriendListRsp): GetPlayerAskFriendListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.FriendBrief ask_friend_list */ 15:
                    message.askFriendList.push(FriendBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPlayerAskFriendListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.FriendBrief ask_friend_list = 15; */
        for (let i = 0; i < message.askFriendList.length; i++)
            FriendBrief.internalBinaryWrite(message.askFriendList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerAskFriendListRsp
 */
export const GetPlayerAskFriendListRsp = new GetPlayerAskFriendListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetChatEmojiCollectionReq$Type extends MessageType<GetChatEmojiCollectionReq> {
    constructor() {
        super("com.midnights.game.GetChatEmojiCollectionReq", []);
    }
    create(value?: PartialMessage<GetChatEmojiCollectionReq>): GetChatEmojiCollectionReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetChatEmojiCollectionReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetChatEmojiCollectionReq): GetChatEmojiCollectionReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetChatEmojiCollectionReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetChatEmojiCollectionReq
 */
export const GetChatEmojiCollectionReq = new GetChatEmojiCollectionReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetChatEmojiCollectionRsp$Type extends MessageType<GetChatEmojiCollectionRsp> {
    constructor() {
        super("com.midnights.game.GetChatEmojiCollectionRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "chat_emoji_collection_data", kind: "message", T: () => ChatEmojiCollectionData }
        ]);
    }
    create(value?: PartialMessage<GetChatEmojiCollectionRsp>): GetChatEmojiCollectionRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetChatEmojiCollectionRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetChatEmojiCollectionRsp): GetChatEmojiCollectionRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.ChatEmojiCollectionData chat_emoji_collection_data */ 8:
                    message.chatEmojiCollectionData = ChatEmojiCollectionData.internalBinaryRead(reader, reader.uint32(), options, message.chatEmojiCollectionData);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetChatEmojiCollectionRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.ChatEmojiCollectionData chat_emoji_collection_data = 8; */
        if (message.chatEmojiCollectionData)
            ChatEmojiCollectionData.internalBinaryWrite(message.chatEmojiCollectionData, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetChatEmojiCollectionRsp
 */
export const GetChatEmojiCollectionRsp = new GetChatEmojiCollectionRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetChatEmojiCollectionReq$Type extends MessageType<SetChatEmojiCollectionReq> {
    constructor() {
        super("com.midnights.game.SetChatEmojiCollectionReq", [
            { no: 12, name: "chat_emoji_collection_data", kind: "message", T: () => ChatEmojiCollectionData }
        ]);
    }
    create(value?: PartialMessage<SetChatEmojiCollectionReq>): SetChatEmojiCollectionReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetChatEmojiCollectionReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetChatEmojiCollectionReq): SetChatEmojiCollectionReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ChatEmojiCollectionData chat_emoji_collection_data */ 12:
                    message.chatEmojiCollectionData = ChatEmojiCollectionData.internalBinaryRead(reader, reader.uint32(), options, message.chatEmojiCollectionData);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetChatEmojiCollectionReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ChatEmojiCollectionData chat_emoji_collection_data = 12; */
        if (message.chatEmojiCollectionData)
            ChatEmojiCollectionData.internalBinaryWrite(message.chatEmojiCollectionData, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetChatEmojiCollectionReq
 */
export const SetChatEmojiCollectionReq = new SetChatEmojiCollectionReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetChatEmojiCollectionRsp$Type extends MessageType<SetChatEmojiCollectionRsp> {
    constructor() {
        super("com.midnights.game.SetChatEmojiCollectionRsp", [
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetChatEmojiCollectionRsp>): SetChatEmojiCollectionRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetChatEmojiCollectionRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetChatEmojiCollectionRsp): SetChatEmojiCollectionRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetChatEmojiCollectionRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetChatEmojiCollectionRsp
 */
export const SetChatEmojiCollectionRsp = new SetChatEmojiCollectionRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePS4FriendListReq$Type extends MessageType<UpdatePS4FriendListReq> {
    constructor() {
        super("com.midnights.game.UpdatePS4FriendListReq", [
            { no: 4, name: "psn_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePS4FriendListReq>): UpdatePS4FriendListReq {
        const message = { psnIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePS4FriendListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePS4FriendListReq): UpdatePS4FriendListReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string psn_id_list */ 4:
                    message.psnIdList.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePS4FriendListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated string psn_id_list = 4; */
        for (let i = 0; i < message.psnIdList.length; i++)
            writer.tag(4, WireType.LengthDelimited).string(message.psnIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePS4FriendListReq
 */
export const UpdatePS4FriendListReq = new UpdatePS4FriendListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdatePS4FriendListRsp$Type extends MessageType<UpdatePS4FriendListRsp> {
    constructor() {
        super("com.midnights.game.UpdatePS4FriendListRsp", [
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "psn_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<UpdatePS4FriendListRsp>): UpdatePS4FriendListRsp {
        const message = { psnIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdatePS4FriendListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdatePS4FriendListRsp): UpdatePS4FriendListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                case /* repeated string psn_id_list */ 2:
                    message.psnIdList.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdatePS4FriendListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        /* repeated string psn_id_list = 2; */
        for (let i = 0; i < message.psnIdList.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.psnIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdatePS4FriendListRsp
 */
export const UpdatePS4FriendListRsp = new UpdatePS4FriendListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FriendInfoChangeNotify$Type extends MessageType<FriendInfoChangeNotify> {
    constructor() {
        super("com.midnights.game.FriendInfoChangeNotify", [
            { no: 1, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "online_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<FriendInfoChangeNotify>): FriendInfoChangeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FriendInfoChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FriendInfoChangeNotify): FriendInfoChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 1:
                    message.uid = reader.uint32();
                    break;
                case /* optional string online_id */ 9:
                    message.onlineId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FriendInfoChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 1; */
        if (message.uid !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.uid);
        /* optional string online_id = 9; */
        if (message.onlineId !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.onlineId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FriendInfoChangeNotify
 */
export const FriendInfoChangeNotify = new FriendInfoChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerSignatureAuditDataNotify$Type extends MessageType<PlayerSignatureAuditDataNotify> {
    constructor() {
        super("com.midnights.game.PlayerSignatureAuditDataNotify", [
            { no: 14, name: "info", kind: "message", T: () => ContentAuditInfo }
        ]);
    }
    create(value?: PartialMessage<PlayerSignatureAuditDataNotify>): PlayerSignatureAuditDataNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerSignatureAuditDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerSignatureAuditDataNotify): PlayerSignatureAuditDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ContentAuditInfo info */ 14:
                    message.info = ContentAuditInfo.internalBinaryRead(reader, reader.uint32(), options, message.info);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerSignatureAuditDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ContentAuditInfo info = 14; */
        if (message.info)
            ContentAuditInfo.internalBinaryWrite(message.info, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerSignatureAuditDataNotify
 */
export const PlayerSignatureAuditDataNotify = new PlayerSignatureAuditDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerSignatureNotify$Type extends MessageType<PlayerSignatureNotify> {
    constructor() {
        super("com.midnights.game.PlayerSignatureNotify", [
            { no: 12, name: "signature", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerSignatureNotify>): PlayerSignatureNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerSignatureNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerSignatureNotify): PlayerSignatureNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string signature */ 12:
                    message.signature = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerSignatureNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string signature = 12; */
        if (message.signature !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.signature);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerSignatureNotify
 */
export const PlayerSignatureNotify = new PlayerSignatureNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignatureAuditConfigNotify$Type extends MessageType<SignatureAuditConfigNotify> {
    constructor() {
        super("com.midnights.game.SignatureAuditConfigNotify", [
            { no: 9, name: "is_open", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "submit_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SignatureAuditConfigNotify>): SignatureAuditConfigNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SignatureAuditConfigNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SignatureAuditConfigNotify): SignatureAuditConfigNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_open */ 9:
                    message.isOpen = reader.bool();
                    break;
                case /* optional uint32 submit_limit */ 10:
                    message.submitLimit = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SignatureAuditConfigNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_open = 9; */
        if (message.isOpen !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isOpen);
        /* optional uint32 submit_limit = 10; */
        if (message.submitLimit !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.submitLimit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SignatureAuditConfigNotify
 */
export const SignatureAuditConfigNotify = new SignatureAuditConfigNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReadSignatureAuditReq$Type extends MessageType<ReadSignatureAuditReq> {
    constructor() {
        super("com.midnights.game.ReadSignatureAuditReq", []);
    }
    create(value?: PartialMessage<ReadSignatureAuditReq>): ReadSignatureAuditReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReadSignatureAuditReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReadSignatureAuditReq): ReadSignatureAuditReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ReadSignatureAuditReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReadSignatureAuditReq
 */
export const ReadSignatureAuditReq = new ReadSignatureAuditReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReadSignatureAuditRsp$Type extends MessageType<ReadSignatureAuditRsp> {
    constructor() {
        super("com.midnights.game.ReadSignatureAuditRsp", [
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ReadSignatureAuditRsp>): ReadSignatureAuditRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReadSignatureAuditRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReadSignatureAuditRsp): ReadSignatureAuditRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReadSignatureAuditRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReadSignatureAuditRsp
 */
export const ReadSignatureAuditRsp = new ReadSignatureAuditRsp$Type();
