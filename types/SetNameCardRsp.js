"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SetNameCardRsp_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SetNameCardRsp = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SetNameCardRsp.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class SetNameCardRsp extends pb_1.Message {
    constructor(data) {
        super();
        _SetNameCardRsp_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _SetNameCardRsp_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("name_card_id" in data && data.name_card_id != undefined) {
                this.name_card_id = data.name_card_id;
            }
            if ("retcode" in data && data.retcode != undefined) {
                this.retcode = data.retcode;
            }
        }
    }
    get name_card_id() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set name_card_id(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get retcode() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set retcode(value) {
        pb_1.Message.setField(this, 12, value);
    }
    static fromObject(data) {
        const message = new SetNameCardRsp({});
        if (data.name_card_id != null) {
            message.name_card_id = data.name_card_id;
        }
        if (data.retcode != null) {
            message.retcode = data.retcode;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.name_card_id != null) {
            data.name_card_id = this.name_card_id;
        }
        if (this.retcode != null) {
            data.retcode = this.retcode;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.name_card_id != 0)
            writer.writeUint32(11, this.name_card_id);
        if (this.retcode != 0)
            writer.writeInt32(12, this.retcode);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SetNameCardRsp();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 11:
                    message.name_card_id = reader.readUint32();
                    break;
                case 12:
                    message.retcode = reader.readInt32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return SetNameCardRsp.deserialize(bytes);
    }
}
exports.SetNameCardRsp = SetNameCardRsp;
_SetNameCardRsp_one_of_decls = new WeakMap();
