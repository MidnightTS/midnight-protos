// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "PlayerApplyEnterMpResultNotify.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * enum CmdId {
 *   option allow_alias = true;
 *   NONE = 0;
 *   CMD_ID = 1835;
 *   ENET_CHANNEL_ID = 0;
 *   ENET_IS_RELIABLE = 1;
 * }
 *
 * @generated from protobuf message PlayerApplyEnterMpResultNotify
 */
export interface PlayerApplyEnterMpResultNotify {
    /**
     * @generated from protobuf field: PlayerApplyEnterMpResultNotify.Reason reason = 10;
     */
    reason: PlayerApplyEnterMpResultNotify_Reason;
    /**
     * @generated from protobuf field: string target_nickname = 5;
     */
    targetNickname: string;
    /**
     * @generated from protobuf field: bool is_agreed = 2;
     */
    isAgreed: boolean;
    /**
     * @generated from protobuf field: uint32 target_uid = 4;
     */
    targetUid: number;
}
/**
 * @generated from protobuf enum PlayerApplyEnterMpResultNotify.Reason
 */
export enum PlayerApplyEnterMpResultNotify_Reason {
    /**
     * @generated from protobuf enum value: REASON_PLAYER_JUDGE = 0;
     */
    PLAYER_JUDGE = 0,
    /**
     * @generated from protobuf enum value: REASON_SCENE_CANNOT_ENTER = 1;
     */
    SCENE_CANNOT_ENTER = 1,
    /**
     * @generated from protobuf enum value: REASON_PLAYER_CANNOT_ENTER_MP = 2;
     */
    PLAYER_CANNOT_ENTER_MP = 2,
    /**
     * @generated from protobuf enum value: REASON_SYSTEM_JUDGE = 3;
     */
    SYSTEM_JUDGE = 3,
    /**
     * @generated from protobuf enum value: REASON_ALLOW_ENTER_PLAYER_FULL = 4;
     */
    ALLOW_ENTER_PLAYER_FULL = 4,
    /**
     * @generated from protobuf enum value: REASON_WORLD_LEVEL_LOWER_THAN_HOST = 5;
     */
    WORLD_LEVEL_LOWER_THAN_HOST = 5,
    /**
     * @generated from protobuf enum value: REASON_HOST_IN_MATCH = 6;
     */
    HOST_IN_MATCH = 6,
    /**
     * @generated from protobuf enum value: REASON_PLAYER_IN_BLACKLIST = 7;
     */
    PLAYER_IN_BLACKLIST = 7,
    /**
     * @generated from protobuf enum value: REASON_PS_PLAYER_NOT_ACCEPT_OTHERS = 8;
     */
    PS_PLAYER_NOT_ACCEPT_OTHERS = 8,
    /**
     * @generated from protobuf enum value: REASON_HOST_IS_BLOCKED = 9;
     */
    HOST_IS_BLOCKED = 9,
    /**
     * @generated from protobuf enum value: REASON_OTHER_DATA_VERSION_NOT_LATEST = 10;
     */
    OTHER_DATA_VERSION_NOT_LATEST = 10,
    /**
     * @generated from protobuf enum value: REASON_DATA_VERSION_NOT_LATEST = 11;
     */
    DATA_VERSION_NOT_LATEST = 11,
    /**
     * @generated from protobuf enum value: REASON_PLAYER_NOT_IN_PLAYER_WORLD = 12;
     */
    PLAYER_NOT_IN_PLAYER_WORLD = 12,
    /**
     * @generated from protobuf enum value: REASON_MAX_PLAYER = 13;
     */
    MAX_PLAYER = 13
}
// @generated message type with reflection information, may provide speed optimized methods
class PlayerApplyEnterMpResultNotify$Type extends MessageType<PlayerApplyEnterMpResultNotify> {
    constructor() {
        super("PlayerApplyEnterMpResultNotify", [
            { no: 10, name: "reason", kind: "enum", T: () => ["PlayerApplyEnterMpResultNotify.Reason", PlayerApplyEnterMpResultNotify_Reason, "REASON_"] },
            { no: 5, name: "target_nickname", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "is_agreed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "target_uid", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerApplyEnterMpResultNotify>): PlayerApplyEnterMpResultNotify {
        const message = { reason: 0, targetNickname: "", isAgreed: false, targetUid: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerApplyEnterMpResultNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerApplyEnterMpResultNotify): PlayerApplyEnterMpResultNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* PlayerApplyEnterMpResultNotify.Reason reason */ 10:
                    message.reason = reader.int32();
                    break;
                case /* string target_nickname */ 5:
                    message.targetNickname = reader.string();
                    break;
                case /* bool is_agreed */ 2:
                    message.isAgreed = reader.bool();
                    break;
                case /* uint32 target_uid */ 4:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerApplyEnterMpResultNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* PlayerApplyEnterMpResultNotify.Reason reason = 10; */
        if (message.reason !== 0)
            writer.tag(10, WireType.Varint).int32(message.reason);
        /* string target_nickname = 5; */
        if (message.targetNickname !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.targetNickname);
        /* bool is_agreed = 2; */
        if (message.isAgreed !== false)
            writer.tag(2, WireType.Varint).bool(message.isAgreed);
        /* uint32 target_uid = 4; */
        if (message.targetUid !== 0)
            writer.tag(4, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message PlayerApplyEnterMpResultNotify
 */
export const PlayerApplyEnterMpResultNotify = new PlayerApplyEnterMpResultNotify$Type();
