"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _BlossomBriefInfoNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.BlossomBriefInfoNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: BlossomBriefInfoNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./BlossomBriefInfo");
const pb_1 = require("google-protobuf");
class BlossomBriefInfoNotify extends pb_1.Message {
    constructor(data) {
        super();
        _BlossomBriefInfoNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], __classPrivateFieldGet(this, _BlossomBriefInfoNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("brief_info_list" in data && data.brief_info_list != undefined) {
                this.brief_info_list = data.brief_info_list;
            }
        }
    }
    get brief_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.BlossomBriefInfo, 4);
    }
    set brief_info_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 4, value);
    }
    static fromObject(data) {
        const message = new BlossomBriefInfoNotify({});
        if (data.brief_info_list != null) {
            message.brief_info_list = data.brief_info_list.map(item => dependency_1.BlossomBriefInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.brief_info_list != null) {
            data.brief_info_list = this.brief_info_list.map((item) => item.toObject());
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.brief_info_list.length)
            writer.writeRepeatedMessage(4, this.brief_info_list, (item) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BlossomBriefInfoNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 4:
                    reader.readMessage(message.brief_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_1.BlossomBriefInfo.deserialize(reader), dependency_1.BlossomBriefInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return BlossomBriefInfoNotify.deserialize(bytes);
    }
}
exports.BlossomBriefInfoNotify = BlossomBriefInfoNotify;
_BlossomBriefInfoNotify_one_of_decls = new WeakMap();
