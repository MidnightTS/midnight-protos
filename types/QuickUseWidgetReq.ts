// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "QuickUseWidgetReq.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { WidgetThunderBirdFeatherInfo } from "./WidgetThunderBirdFeatherInfo";
import { WidgetCreatorInfo } from "./WidgetCreatorInfo";
import { WidgetCameraInfo } from "./WidgetCameraInfo";
import { WidgetCreateLocationInfo } from "./WidgetCreateLocationInfo";
/**
 * @generated from protobuf message QuickUseWidgetReq
 */
export interface QuickUseWidgetReq {
    /**
     * @generated from protobuf oneof: param
     */
    param: {
        oneofKind: "locationInfo";
        /**
         * @generated from protobuf field: WidgetCreateLocationInfo location_info = 1872;
         */
        locationInfo: WidgetCreateLocationInfo;
    } | {
        oneofKind: "cameraInfo";
        /**
         * @generated from protobuf field: WidgetCameraInfo camera_info = 1835;
         */
        cameraInfo: WidgetCameraInfo;
    } | {
        oneofKind: "creatorInfo";
        /**
         * @generated from protobuf field: WidgetCreatorInfo creator_info = 72;
         */
        creatorInfo: WidgetCreatorInfo;
    } | {
        oneofKind: "thunderBirdFeatherInfo";
        /**
         * @generated from protobuf field: WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 491;
         */
        thunderBirdFeatherInfo: WidgetThunderBirdFeatherInfo;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class QuickUseWidgetReq$Type extends MessageType<QuickUseWidgetReq> {
    constructor() {
        super("QuickUseWidgetReq", [
            { no: 1872, name: "location_info", kind: "message", oneof: "param", T: () => WidgetCreateLocationInfo },
            { no: 1835, name: "camera_info", kind: "message", oneof: "param", T: () => WidgetCameraInfo },
            { no: 72, name: "creator_info", kind: "message", oneof: "param", T: () => WidgetCreatorInfo },
            { no: 491, name: "thunder_bird_feather_info", kind: "message", oneof: "param", T: () => WidgetThunderBirdFeatherInfo }
        ]);
    }
    create(value?: PartialMessage<QuickUseWidgetReq>): QuickUseWidgetReq {
        const message = { param: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuickUseWidgetReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuickUseWidgetReq): QuickUseWidgetReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* WidgetCreateLocationInfo location_info */ 1872:
                    message.param = {
                        oneofKind: "locationInfo",
                        locationInfo: WidgetCreateLocationInfo.internalBinaryRead(reader, reader.uint32(), options, (message.param as any).locationInfo)
                    };
                    break;
                case /* WidgetCameraInfo camera_info */ 1835:
                    message.param = {
                        oneofKind: "cameraInfo",
                        cameraInfo: WidgetCameraInfo.internalBinaryRead(reader, reader.uint32(), options, (message.param as any).cameraInfo)
                    };
                    break;
                case /* WidgetCreatorInfo creator_info */ 72:
                    message.param = {
                        oneofKind: "creatorInfo",
                        creatorInfo: WidgetCreatorInfo.internalBinaryRead(reader, reader.uint32(), options, (message.param as any).creatorInfo)
                    };
                    break;
                case /* WidgetThunderBirdFeatherInfo thunder_bird_feather_info */ 491:
                    message.param = {
                        oneofKind: "thunderBirdFeatherInfo",
                        thunderBirdFeatherInfo: WidgetThunderBirdFeatherInfo.internalBinaryRead(reader, reader.uint32(), options, (message.param as any).thunderBirdFeatherInfo)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuickUseWidgetReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* WidgetCreateLocationInfo location_info = 1872; */
        if (message.param.oneofKind === "locationInfo")
            WidgetCreateLocationInfo.internalBinaryWrite(message.param.locationInfo, writer.tag(1872, WireType.LengthDelimited).fork(), options).join();
        /* WidgetCameraInfo camera_info = 1835; */
        if (message.param.oneofKind === "cameraInfo")
            WidgetCameraInfo.internalBinaryWrite(message.param.cameraInfo, writer.tag(1835, WireType.LengthDelimited).fork(), options).join();
        /* WidgetCreatorInfo creator_info = 72; */
        if (message.param.oneofKind === "creatorInfo")
            WidgetCreatorInfo.internalBinaryWrite(message.param.creatorInfo, writer.tag(72, WireType.LengthDelimited).fork(), options).join();
        /* WidgetThunderBirdFeatherInfo thunder_bird_feather_info = 491; */
        if (message.param.oneofKind === "thunderBirdFeatherInfo")
            WidgetThunderBirdFeatherInfo.internalBinaryWrite(message.param.thunderBirdFeatherInfo, writer.tag(491, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message QuickUseWidgetReq
 */
export const QuickUseWidgetReq = new QuickUseWidgetReq$Type();
