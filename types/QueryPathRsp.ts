/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: QueryPathRsp.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./Vector";
import * as pb_1 from "google-protobuf";
export class QueryPathRsp extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        query_id?: number;
        corners?: dependency_1.Vector[];
        query_status?: QueryPathRsp.PathStatusType;
        retcode?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [6], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("query_id" in data && data.query_id != undefined) {
                this.query_id = data.query_id;
            }
            if ("corners" in data && data.corners != undefined) {
                this.corners = data.corners;
            }
            if ("query_status" in data && data.query_status != undefined) {
                this.query_status = data.query_status;
            }
            if ("retcode" in data && data.retcode != undefined) {
                this.retcode = data.retcode;
            }
        }
    }
    get query_id() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set query_id(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get corners() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.Vector, 6) as dependency_1.Vector[];
    }
    set corners(value: dependency_1.Vector[]) {
        pb_1.Message.setRepeatedWrapperField(this, 6, value);
    }
    get query_status() {
        return pb_1.Message.getFieldWithDefault(this, 8, QueryPathRsp.PathStatusType.PATH_STATUS_TYPE_FAIL) as QueryPathRsp.PathStatusType;
    }
    set query_status(value: QueryPathRsp.PathStatusType) {
        pb_1.Message.setField(this, 8, value);
    }
    get retcode() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set retcode(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    static fromObject(data: {
        query_id?: number;
        corners?: ReturnType<typeof dependency_1.Vector.prototype.toObject>[];
        query_status?: QueryPathRsp.PathStatusType;
        retcode?: number;
    }): QueryPathRsp {
        const message = new QueryPathRsp({});
        if (data.query_id != null) {
            message.query_id = data.query_id;
        }
        if (data.corners != null) {
            message.corners = data.corners.map(item => dependency_1.Vector.fromObject(item));
        }
        if (data.query_status != null) {
            message.query_status = data.query_status;
        }
        if (data.retcode != null) {
            message.retcode = data.retcode;
        }
        return message;
    }
    toObject() {
        const data: {
            query_id?: number;
            corners?: ReturnType<typeof dependency_1.Vector.prototype.toObject>[];
            query_status?: QueryPathRsp.PathStatusType;
            retcode?: number;
        } = {};
        if (this.query_id != null) {
            data.query_id = this.query_id;
        }
        if (this.corners != null) {
            data.corners = this.corners.map((item: dependency_1.Vector) => item.toObject());
        }
        if (this.query_status != null) {
            data.query_status = this.query_status;
        }
        if (this.retcode != null) {
            data.retcode = this.retcode;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.query_id != 0)
            writer.writeInt32(12, this.query_id);
        if (this.corners.length)
            writer.writeRepeatedMessage(6, this.corners, (item: dependency_1.Vector) => item.serialize(writer));
        if (this.query_status != QueryPathRsp.PathStatusType.PATH_STATUS_TYPE_FAIL)
            writer.writeEnum(8, this.query_status);
        if (this.retcode != 0)
            writer.writeInt32(1, this.retcode);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryPathRsp {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryPathRsp();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 12:
                    message.query_id = reader.readInt32();
                    break;
                case 6:
                    reader.readMessage(message.corners, () => pb_1.Message.addToRepeatedWrapperField(message, 6, dependency_1.Vector.deserialize(reader), dependency_1.Vector));
                    break;
                case 8:
                    message.query_status = reader.readEnum();
                    break;
                case 1:
                    message.retcode = reader.readInt32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): QueryPathRsp {
        return QueryPathRsp.deserialize(bytes);
    }
}
export namespace QueryPathRsp {
    export enum PathStatusType {
        PATH_STATUS_TYPE_FAIL = 0,
        PATH_STATUS_TYPE_SUCC = 1,
        PATH_STATUS_TYPE_PARTIAL = 2
    }
}
