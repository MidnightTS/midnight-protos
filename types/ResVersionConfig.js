"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ResVersionConfig_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResVersionConfig = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ResVersionConfig.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class ResVersionConfig extends pb_1.Message {
    constructor(data) {
        super();
        _ResVersionConfig_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ResVersionConfig_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("version" in data && data.version != undefined) {
                this.version = data.version;
            }
            if ("relogin" in data && data.relogin != undefined) {
                this.relogin = data.relogin;
            }
            if ("md5" in data && data.md5 != undefined) {
                this.md5 = data.md5;
            }
            if ("release_total_size" in data && data.release_total_size != undefined) {
                this.release_total_size = data.release_total_size;
            }
            if ("version_suffix" in data && data.version_suffix != undefined) {
                this.version_suffix = data.version_suffix;
            }
            if ("branch" in data && data.branch != undefined) {
                this.branch = data.branch;
            }
            if ("next_script_version" in data && data.next_script_version != undefined) {
                this.next_script_version = data.next_script_version;
            }
        }
    }
    get version() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0);
    }
    set version(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get relogin() {
        return pb_1.Message.getFieldWithDefault(this, 2, false);
    }
    set relogin(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get md5() {
        return pb_1.Message.getFieldWithDefault(this, 3, "");
    }
    set md5(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get release_total_size() {
        return pb_1.Message.getFieldWithDefault(this, 4, "");
    }
    set release_total_size(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get version_suffix() {
        return pb_1.Message.getFieldWithDefault(this, 5, "");
    }
    set version_suffix(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get branch() {
        return pb_1.Message.getFieldWithDefault(this, 6, "");
    }
    set branch(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get next_script_version() {
        return pb_1.Message.getFieldWithDefault(this, 7, "");
    }
    set next_script_version(value) {
        pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data) {
        const message = new ResVersionConfig({});
        if (data.version != null) {
            message.version = data.version;
        }
        if (data.relogin != null) {
            message.relogin = data.relogin;
        }
        if (data.md5 != null) {
            message.md5 = data.md5;
        }
        if (data.release_total_size != null) {
            message.release_total_size = data.release_total_size;
        }
        if (data.version_suffix != null) {
            message.version_suffix = data.version_suffix;
        }
        if (data.branch != null) {
            message.branch = data.branch;
        }
        if (data.next_script_version != null) {
            message.next_script_version = data.next_script_version;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.version != null) {
            data.version = this.version;
        }
        if (this.relogin != null) {
            data.relogin = this.relogin;
        }
        if (this.md5 != null) {
            data.md5 = this.md5;
        }
        if (this.release_total_size != null) {
            data.release_total_size = this.release_total_size;
        }
        if (this.version_suffix != null) {
            data.version_suffix = this.version_suffix;
        }
        if (this.branch != null) {
            data.branch = this.branch;
        }
        if (this.next_script_version != null) {
            data.next_script_version = this.next_script_version;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.version != 0)
            writer.writeUint32(1, this.version);
        if (this.relogin != false)
            writer.writeBool(2, this.relogin);
        if (this.md5.length)
            writer.writeString(3, this.md5);
        if (this.release_total_size.length)
            writer.writeString(4, this.release_total_size);
        if (this.version_suffix.length)
            writer.writeString(5, this.version_suffix);
        if (this.branch.length)
            writer.writeString(6, this.branch);
        if (this.next_script_version.length)
            writer.writeString(7, this.next_script_version);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ResVersionConfig();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.version = reader.readUint32();
                    break;
                case 2:
                    message.relogin = reader.readBool();
                    break;
                case 3:
                    message.md5 = reader.readString();
                    break;
                case 4:
                    message.release_total_size = reader.readString();
                    break;
                case 5:
                    message.version_suffix = reader.readString();
                    break;
                case 6:
                    message.branch = reader.readString();
                    break;
                case 7:
                    message.next_script_version = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return ResVersionConfig.deserialize(bytes);
    }
}
exports.ResVersionConfig = ResVersionConfig;
_ResVersionConfig_one_of_decls = new WeakMap();
