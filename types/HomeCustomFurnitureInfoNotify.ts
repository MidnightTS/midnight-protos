/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeCustomFurnitureInfoNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./HomeCustomFurnitureInfo";
import * as pb_1 from "google-protobuf";
export class HomeCustomFurnitureInfoNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        delete_custom_furniture_list?: number[];
        used_sub_furniture_count_map?: Map<number, number>;
        custom_furniture_info_list?: dependency_1.HomeCustomFurnitureInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4, 11], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("delete_custom_furniture_list" in data && data.delete_custom_furniture_list != undefined) {
                this.delete_custom_furniture_list = data.delete_custom_furniture_list;
            }
            if ("used_sub_furniture_count_map" in data && data.used_sub_furniture_count_map != undefined) {
                this.used_sub_furniture_count_map = data.used_sub_furniture_count_map;
            }
            if ("custom_furniture_info_list" in data && data.custom_furniture_info_list != undefined) {
                this.custom_furniture_info_list = data.custom_furniture_info_list;
            }
        }
        if (!this.used_sub_furniture_count_map)
            this.used_sub_furniture_count_map = new Map();
    }
    get delete_custom_furniture_list() {
        return pb_1.Message.getFieldWithDefault(this, 4, []) as number[];
    }
    set delete_custom_furniture_list(value: number[]) {
        pb_1.Message.setField(this, 4, value);
    }
    get used_sub_furniture_count_map() {
        return pb_1.Message.getField(this, 15) as any as Map<number, number>;
    }
    set used_sub_furniture_count_map(value: Map<number, number>) {
        pb_1.Message.setField(this, 15, value as any);
    }
    get custom_furniture_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.HomeCustomFurnitureInfo, 11) as dependency_1.HomeCustomFurnitureInfo[];
    }
    set custom_furniture_info_list(value: dependency_1.HomeCustomFurnitureInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 11, value);
    }
    static fromObject(data: {
        delete_custom_furniture_list?: number[];
        used_sub_furniture_count_map?: {
            [key: number]: number;
        };
        custom_furniture_info_list?: ReturnType<typeof dependency_1.HomeCustomFurnitureInfo.prototype.toObject>[];
    }): HomeCustomFurnitureInfoNotify {
        const message = new HomeCustomFurnitureInfoNotify({});
        if (data.delete_custom_furniture_list != null) {
            message.delete_custom_furniture_list = data.delete_custom_furniture_list;
        }
        if (typeof data.used_sub_furniture_count_map == "object") {
            message.used_sub_furniture_count_map = new Map(Object.entries(data.used_sub_furniture_count_map).map(([key, value]) => [Number(key), value]));
        }
        if (data.custom_furniture_info_list != null) {
            message.custom_furniture_info_list = data.custom_furniture_info_list.map(item => dependency_1.HomeCustomFurnitureInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            delete_custom_furniture_list?: number[];
            used_sub_furniture_count_map?: {
                [key: number]: number;
            };
            custom_furniture_info_list?: ReturnType<typeof dependency_1.HomeCustomFurnitureInfo.prototype.toObject>[];
        } = {};
        if (this.delete_custom_furniture_list != null) {
            data.delete_custom_furniture_list = this.delete_custom_furniture_list;
        }
        if (this.used_sub_furniture_count_map.size > 0) {
            data.used_sub_furniture_count_map = (Object.fromEntries)(this.used_sub_furniture_count_map);
        }
        if (this.custom_furniture_info_list != null) {
            data.custom_furniture_info_list = this.custom_furniture_info_list.map((item: dependency_1.HomeCustomFurnitureInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.delete_custom_furniture_list.length)
            writer.writePackedUint32(4, this.delete_custom_furniture_list);
        for (const [key, value] of this.used_sub_furniture_count_map) {
            writer.writeMessage(15, this.used_sub_furniture_count_map, () => {
                writer.writeUint32(1, key);
                writer.writeUint32(2, value);
            });
        }
        if (this.custom_furniture_info_list.length)
            writer.writeRepeatedMessage(11, this.custom_furniture_info_list, (item: dependency_1.HomeCustomFurnitureInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): HomeCustomFurnitureInfoNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeCustomFurnitureInfoNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 4:
                    message.delete_custom_furniture_list = reader.readPackedUint32();
                    break;
                case 15:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.used_sub_furniture_count_map as any, reader, reader.readUint32, reader.readUint32));
                    break;
                case 11:
                    reader.readMessage(message.custom_furniture_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 11, dependency_1.HomeCustomFurnitureInfo.deserialize(reader), dependency_1.HomeCustomFurnitureInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): HomeCustomFurnitureInfoNotify {
        return HomeCustomFurnitureInfoNotify.deserialize(bytes);
    }
}
