/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: MonsterPointArrayRouteUpdateNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./MonsterRoute";
import * as pb_1 from "google-protobuf";
export class MonsterPointArrayRouteUpdateNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        entity_id?: number;
        monster_route?: dependency_1.MonsterRoute;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
            if ("monster_route" in data && data.monster_route != undefined) {
                this.monster_route = data.monster_route;
            }
        }
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
    }
    set entity_id(value: number) {
        pb_1.Message.setField(this, 7, value);
    }
    get monster_route() {
        return pb_1.Message.getWrapperField(this, dependency_1.MonsterRoute, 5) as dependency_1.MonsterRoute;
    }
    set monster_route(value: dependency_1.MonsterRoute) {
        pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_monster_route() {
        return pb_1.Message.getField(this, 5) != null;
    }
    static fromObject(data: {
        entity_id?: number;
        monster_route?: ReturnType<typeof dependency_1.MonsterRoute.prototype.toObject>;
    }): MonsterPointArrayRouteUpdateNotify {
        const message = new MonsterPointArrayRouteUpdateNotify({});
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        if (data.monster_route != null) {
            message.monster_route = dependency_1.MonsterRoute.fromObject(data.monster_route);
        }
        return message;
    }
    toObject() {
        const data: {
            entity_id?: number;
            monster_route?: ReturnType<typeof dependency_1.MonsterRoute.prototype.toObject>;
        } = {};
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        if (this.monster_route != null) {
            data.monster_route = this.monster_route.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.entity_id != 0)
            writer.writeUint32(7, this.entity_id);
        if (this.has_monster_route)
            writer.writeMessage(5, this.monster_route, () => this.monster_route.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MonsterPointArrayRouteUpdateNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MonsterPointArrayRouteUpdateNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 7:
                    message.entity_id = reader.readUint32();
                    break;
                case 5:
                    reader.readMessage(message.monster_route, () => message.monster_route = dependency_1.MonsterRoute.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): MonsterPointArrayRouteUpdateNotify {
        return MonsterPointArrayRouteUpdateNotify.deserialize(bytes);
    }
}
