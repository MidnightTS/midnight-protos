"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _GetPlayerTokenReq_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetPlayerTokenReq = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: GetPlayerTokenReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class GetPlayerTokenReq extends pb_1.Message {
    constructor(data) {
        super();
        _GetPlayerTokenReq_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _GetPlayerTokenReq_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("account_token" in data && data.account_token != undefined) {
                this.account_token = data.account_token;
            }
            if ("account_uid" in data && data.account_uid != undefined) {
                this.account_uid = data.account_uid;
            }
            if ("psn_region" in data && data.psn_region != undefined) {
                this.psn_region = data.psn_region;
            }
            if ("online_id" in data && data.online_id != undefined) {
                this.online_id = data.online_id;
            }
            if ("channel_id" in data && data.channel_id != undefined) {
                this.channel_id = data.channel_id;
            }
            if ("account_ext" in data && data.account_ext != undefined) {
                this.account_ext = data.account_ext;
            }
            if ("country_code" in data && data.country_code != undefined) {
                this.country_code = data.country_code;
            }
            if ("client_seed" in data && data.client_seed != undefined) {
                this.client_seed = data.client_seed;
            }
            if ("is_guest" in data && data.is_guest != undefined) {
                this.is_guest = data.is_guest;
            }
            if ("birthday" in data && data.birthday != undefined) {
                this.birthday = data.birthday;
            }
            if ("sub_channel_id" in data && data.sub_channel_id != undefined) {
                this.sub_channel_id = data.sub_channel_id;
            }
            if ("platform_type" in data && data.platform_type != undefined) {
                this.platform_type = data.platform_type;
            }
            if ("client_ip_str" in data && data.client_ip_str != undefined) {
                this.client_ip_str = data.client_ip_str;
            }
            if ("psn_id" in data && data.psn_id != undefined) {
                this.psn_id = data.psn_id;
            }
            if ("account_type" in data && data.account_type != undefined) {
                this.account_type = data.account_type;
            }
            if ("Unk2700_NOJPEHIBDJH" in data && data.Unk2700_NOJPEHIBDJH != undefined) {
                this.Unk2700_NOJPEHIBDJH = data.Unk2700_NOJPEHIBDJH;
            }
            if ("cloud_client_ip" in data && data.cloud_client_ip != undefined) {
                this.cloud_client_ip = data.cloud_client_ip;
            }
            if ("key_id" in data && data.key_id != undefined) {
                this.key_id = data.key_id;
            }
            if ("uid" in data && data.uid != undefined) {
                this.uid = data.uid;
            }
        }
    }
    get account_token() {
        return pb_1.Message.getFieldWithDefault(this, 10, "");
    }
    set account_token(value) {
        pb_1.Message.setField(this, 10, value);
    }
    get account_uid() {
        return pb_1.Message.getFieldWithDefault(this, 11, "");
    }
    set account_uid(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get psn_region() {
        return pb_1.Message.getFieldWithDefault(this, 4, "");
    }
    set psn_region(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get online_id() {
        return pb_1.Message.getFieldWithDefault(this, 7, "");
    }
    set online_id(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get channel_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set channel_id(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get account_ext() {
        return pb_1.Message.getFieldWithDefault(this, 9, "");
    }
    set account_ext(value) {
        pb_1.Message.setField(this, 9, value);
    }
    get country_code() {
        return pb_1.Message.getFieldWithDefault(this, 5, "");
    }
    set country_code(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get client_seed() {
        return pb_1.Message.getFieldWithDefault(this, 760, "");
    }
    set client_seed(value) {
        pb_1.Message.setField(this, 760, value);
    }
    get is_guest() {
        return pb_1.Message.getFieldWithDefault(this, 6, false);
    }
    set is_guest(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get birthday() {
        return pb_1.Message.getFieldWithDefault(this, 1718, "");
    }
    set birthday(value) {
        pb_1.Message.setField(this, 1718, value);
    }
    get sub_channel_id() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0);
    }
    set sub_channel_id(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get platform_type() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set platform_type(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get client_ip_str() {
        return pb_1.Message.getFieldWithDefault(this, 3, "");
    }
    set client_ip_str(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get psn_id() {
        return pb_1.Message.getFieldWithDefault(this, 13, "");
    }
    set psn_id(value) {
        pb_1.Message.setField(this, 13, value);
    }
    get account_type() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0);
    }
    set account_type(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get Unk2700_NOJPEHIBDJH() {
        return pb_1.Message.getFieldWithDefault(this, 995, 0);
    }
    set Unk2700_NOJPEHIBDJH(value) {
        pb_1.Message.setField(this, 995, value);
    }
    get cloud_client_ip() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0);
    }
    set cloud_client_ip(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get key_id() {
        return pb_1.Message.getFieldWithDefault(this, 1787, 0);
    }
    set key_id(value) {
        pb_1.Message.setField(this, 1787, value);
    }
    get uid() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set uid(value) {
        pb_1.Message.setField(this, 2, value);
    }
    static fromObject(data) {
        const message = new GetPlayerTokenReq({});
        if (data.account_token != null) {
            message.account_token = data.account_token;
        }
        if (data.account_uid != null) {
            message.account_uid = data.account_uid;
        }
        if (data.psn_region != null) {
            message.psn_region = data.psn_region;
        }
        if (data.online_id != null) {
            message.online_id = data.online_id;
        }
        if (data.channel_id != null) {
            message.channel_id = data.channel_id;
        }
        if (data.account_ext != null) {
            message.account_ext = data.account_ext;
        }
        if (data.country_code != null) {
            message.country_code = data.country_code;
        }
        if (data.client_seed != null) {
            message.client_seed = data.client_seed;
        }
        if (data.is_guest != null) {
            message.is_guest = data.is_guest;
        }
        if (data.birthday != null) {
            message.birthday = data.birthday;
        }
        if (data.sub_channel_id != null) {
            message.sub_channel_id = data.sub_channel_id;
        }
        if (data.platform_type != null) {
            message.platform_type = data.platform_type;
        }
        if (data.client_ip_str != null) {
            message.client_ip_str = data.client_ip_str;
        }
        if (data.psn_id != null) {
            message.psn_id = data.psn_id;
        }
        if (data.account_type != null) {
            message.account_type = data.account_type;
        }
        if (data.Unk2700_NOJPEHIBDJH != null) {
            message.Unk2700_NOJPEHIBDJH = data.Unk2700_NOJPEHIBDJH;
        }
        if (data.cloud_client_ip != null) {
            message.cloud_client_ip = data.cloud_client_ip;
        }
        if (data.key_id != null) {
            message.key_id = data.key_id;
        }
        if (data.uid != null) {
            message.uid = data.uid;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.account_token != null) {
            data.account_token = this.account_token;
        }
        if (this.account_uid != null) {
            data.account_uid = this.account_uid;
        }
        if (this.psn_region != null) {
            data.psn_region = this.psn_region;
        }
        if (this.online_id != null) {
            data.online_id = this.online_id;
        }
        if (this.channel_id != null) {
            data.channel_id = this.channel_id;
        }
        if (this.account_ext != null) {
            data.account_ext = this.account_ext;
        }
        if (this.country_code != null) {
            data.country_code = this.country_code;
        }
        if (this.client_seed != null) {
            data.client_seed = this.client_seed;
        }
        if (this.is_guest != null) {
            data.is_guest = this.is_guest;
        }
        if (this.birthday != null) {
            data.birthday = this.birthday;
        }
        if (this.sub_channel_id != null) {
            data.sub_channel_id = this.sub_channel_id;
        }
        if (this.platform_type != null) {
            data.platform_type = this.platform_type;
        }
        if (this.client_ip_str != null) {
            data.client_ip_str = this.client_ip_str;
        }
        if (this.psn_id != null) {
            data.psn_id = this.psn_id;
        }
        if (this.account_type != null) {
            data.account_type = this.account_type;
        }
        if (this.Unk2700_NOJPEHIBDJH != null) {
            data.Unk2700_NOJPEHIBDJH = this.Unk2700_NOJPEHIBDJH;
        }
        if (this.cloud_client_ip != null) {
            data.cloud_client_ip = this.cloud_client_ip;
        }
        if (this.key_id != null) {
            data.key_id = this.key_id;
        }
        if (this.uid != null) {
            data.uid = this.uid;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.account_token.length)
            writer.writeString(10, this.account_token);
        if (this.account_uid.length)
            writer.writeString(11, this.account_uid);
        if (this.psn_region.length)
            writer.writeString(4, this.psn_region);
        if (this.online_id.length)
            writer.writeString(7, this.online_id);
        if (this.channel_id != 0)
            writer.writeUint32(15, this.channel_id);
        if (this.account_ext.length)
            writer.writeString(9, this.account_ext);
        if (this.country_code.length)
            writer.writeString(5, this.country_code);
        if (this.client_seed.length)
            writer.writeString(760, this.client_seed);
        if (this.is_guest != false)
            writer.writeBool(6, this.is_guest);
        if (this.birthday.length)
            writer.writeString(1718, this.birthday);
        if (this.sub_channel_id != 0)
            writer.writeUint32(8, this.sub_channel_id);
        if (this.platform_type != 0)
            writer.writeUint32(12, this.platform_type);
        if (this.client_ip_str.length)
            writer.writeString(3, this.client_ip_str);
        if (this.psn_id.length)
            writer.writeString(13, this.psn_id);
        if (this.account_type != 0)
            writer.writeUint32(1, this.account_type);
        if (this.Unk2700_NOJPEHIBDJH != 0)
            writer.writeUint32(995, this.Unk2700_NOJPEHIBDJH);
        if (this.cloud_client_ip != 0)
            writer.writeUint32(14, this.cloud_client_ip);
        if (this.key_id != 0)
            writer.writeUint32(1787, this.key_id);
        if (this.uid != 0)
            writer.writeUint32(2, this.uid);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GetPlayerTokenReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 10:
                    message.account_token = reader.readString();
                    break;
                case 11:
                    message.account_uid = reader.readString();
                    break;
                case 4:
                    message.psn_region = reader.readString();
                    break;
                case 7:
                    message.online_id = reader.readString();
                    break;
                case 15:
                    message.channel_id = reader.readUint32();
                    break;
                case 9:
                    message.account_ext = reader.readString();
                    break;
                case 5:
                    message.country_code = reader.readString();
                    break;
                case 760:
                    message.client_seed = reader.readString();
                    break;
                case 6:
                    message.is_guest = reader.readBool();
                    break;
                case 1718:
                    message.birthday = reader.readString();
                    break;
                case 8:
                    message.sub_channel_id = reader.readUint32();
                    break;
                case 12:
                    message.platform_type = reader.readUint32();
                    break;
                case 3:
                    message.client_ip_str = reader.readString();
                    break;
                case 13:
                    message.psn_id = reader.readString();
                    break;
                case 1:
                    message.account_type = reader.readUint32();
                    break;
                case 995:
                    message.Unk2700_NOJPEHIBDJH = reader.readUint32();
                    break;
                case 14:
                    message.cloud_client_ip = reader.readUint32();
                    break;
                case 1787:
                    message.key_id = reader.readUint32();
                    break;
                case 2:
                    message.uid = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return GetPlayerTokenReq.deserialize(bytes);
    }
}
exports.GetPlayerTokenReq = GetPlayerTokenReq;
_GetPlayerTokenReq_one_of_decls = new WeakMap();
