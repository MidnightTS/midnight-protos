// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "DoGachaRsp.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { GachaItem } from "./GachaItem";
/**
 * enum CmdId {
 *   option allow_alias = true;
 *   NONE = 0;
 *   CMD_ID = 1519;
 *   ENET_CHANNEL_ID = 0;
 *   ENET_IS_RELIABLE = 1;
 * }
 *
 * @generated from protobuf message DoGachaRsp
 */
export interface DoGachaRsp {
    /**
     * @generated from protobuf field: bool Unk3300_OHFMHIHJHPJ = 1812 [json_name = "Unk3300OHFMHIHJHPJ"];
     */
    unk3300OHFMHIHJHPJ: boolean;
    /**
     * @generated from protobuf field: uint32 Unk3300_JLELMHELIDC = 3 [json_name = "Unk3300JLELMHELIDC"];
     */
    unk3300JLELMHELIDC: number;
    /**
     * @generated from protobuf field: repeated GachaItem gacha_item_list = 9;
     */
    gachaItemList: GachaItem[];
    /**
     * @generated from protobuf field: bool Unk3300_HBILIAEIHNK = 1887 [json_name = "Unk3300HBILIAEIHNK"];
     */
    unk3300HBILIAEIHNK: boolean;
    /**
     * @generated from protobuf field: uint32 gacha_type = 10;
     */
    gachaType: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_OPGAHAGHEPF = 6 [json_name = "Unk3300OPGAHAGHEPF"];
     */
    unk3300OPGAHAGHEPF: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_NMOKGFGDFFC = 1 [json_name = "Unk3300NMOKGFGDFFC"];
     */
    unk3300NMOKGFGDFFC: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_BLLMPAJNCPI = 5 [json_name = "Unk3300BLLMPAJNCPI"];
     */
    unk3300BLLMPAJNCPI: number;
    /**
     * @generated from protobuf field: uint32 gacha_times = 4;
     */
    gachaTimes: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_GLPMIEMBGGL = 15 [json_name = "Unk3300GLPMIEMBGGL"];
     */
    unk3300GLPMIEMBGGL: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_KEIJFMKAKDH = 12 [json_name = "Unk3300KEIJFMKAKDH"];
     */
    unk3300KEIJFMKAKDH: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_DBFMKAMNPCL = 13 [json_name = "Unk3300DBFMKAMNPCL"];
     */
    unk3300DBFMKAMNPCL: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_JLBFLPEMAPP = 8 [json_name = "Unk3300JLBFLPEMAPP"];
     */
    unk3300JLBFLPEMAPP: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_MEDMCPFCIOO = 2 [json_name = "Unk3300MEDMCPFCIOO"];
     */
    unk3300MEDMCPFCIOO: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_HLANONBCBLM = 1550 [json_name = "Unk3300HLANONBCBLM"];
     */
    unk3300HLANONBCBLM: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_PLFMMOFNGAG = 7 [json_name = "Unk3300PLFMMOFNGAG"];
     */
    unk3300PLFMMOFNGAG: number;
    /**
     * @generated from protobuf field: uint32 gacha_schedule_id = 14;
     */
    gachaScheduleId: number;
    /**
     * @generated from protobuf field: uint32 daily_gacha_times = 467;
     */
    dailyGachaTimes: number;
    /**
     * @generated from protobuf field: int32 retcode = 11;
     */
    retcode: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class DoGachaRsp$Type extends MessageType<DoGachaRsp> {
    constructor() {
        super("DoGachaRsp", [
            { no: 1812, name: "Unk3300_OHFMHIHJHPJ", kind: "scalar", jsonName: "Unk3300OHFMHIHJHPJ", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "Unk3300_JLELMHELIDC", kind: "scalar", jsonName: "Unk3300JLELMHELIDC", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "gacha_item_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => GachaItem },
            { no: 1887, name: "Unk3300_HBILIAEIHNK", kind: "scalar", jsonName: "Unk3300HBILIAEIHNK", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "gacha_type", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "Unk3300_OPGAHAGHEPF", kind: "scalar", jsonName: "Unk3300OPGAHAGHEPF", T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "Unk3300_NMOKGFGDFFC", kind: "scalar", jsonName: "Unk3300NMOKGFGDFFC", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "Unk3300_BLLMPAJNCPI", kind: "scalar", jsonName: "Unk3300BLLMPAJNCPI", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "gacha_times", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "Unk3300_GLPMIEMBGGL", kind: "scalar", jsonName: "Unk3300GLPMIEMBGGL", T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "Unk3300_KEIJFMKAKDH", kind: "scalar", jsonName: "Unk3300KEIJFMKAKDH", T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "Unk3300_DBFMKAMNPCL", kind: "scalar", jsonName: "Unk3300DBFMKAMNPCL", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "Unk3300_JLBFLPEMAPP", kind: "scalar", jsonName: "Unk3300JLBFLPEMAPP", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "Unk3300_MEDMCPFCIOO", kind: "scalar", jsonName: "Unk3300MEDMCPFCIOO", T: 13 /*ScalarType.UINT32*/ },
            { no: 1550, name: "Unk3300_HLANONBCBLM", kind: "scalar", jsonName: "Unk3300HLANONBCBLM", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "Unk3300_PLFMMOFNGAG", kind: "scalar", jsonName: "Unk3300PLFMMOFNGAG", T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "gacha_schedule_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 467, name: "daily_gacha_times", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "retcode", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<DoGachaRsp>): DoGachaRsp {
        const message = { unk3300OHFMHIHJHPJ: false, unk3300JLELMHELIDC: 0, gachaItemList: [], unk3300HBILIAEIHNK: false, gachaType: 0, unk3300OPGAHAGHEPF: 0, unk3300NMOKGFGDFFC: 0, unk3300BLLMPAJNCPI: 0, gachaTimes: 0, unk3300GLPMIEMBGGL: 0, unk3300KEIJFMKAKDH: 0, unk3300DBFMKAMNPCL: 0, unk3300JLBFLPEMAPP: 0, unk3300MEDMCPFCIOO: 0, unk3300HLANONBCBLM: 0, unk3300PLFMMOFNGAG: 0, gachaScheduleId: 0, dailyGachaTimes: 0, retcode: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DoGachaRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DoGachaRsp): DoGachaRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool Unk3300_OHFMHIHJHPJ = 1812 [json_name = "Unk3300OHFMHIHJHPJ"];*/ 1812:
                    message.unk3300OHFMHIHJHPJ = reader.bool();
                    break;
                case /* uint32 Unk3300_JLELMHELIDC = 3 [json_name = "Unk3300JLELMHELIDC"];*/ 3:
                    message.unk3300JLELMHELIDC = reader.uint32();
                    break;
                case /* repeated GachaItem gacha_item_list */ 9:
                    message.gachaItemList.push(GachaItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool Unk3300_HBILIAEIHNK = 1887 [json_name = "Unk3300HBILIAEIHNK"];*/ 1887:
                    message.unk3300HBILIAEIHNK = reader.bool();
                    break;
                case /* uint32 gacha_type */ 10:
                    message.gachaType = reader.uint32();
                    break;
                case /* uint32 Unk3300_OPGAHAGHEPF = 6 [json_name = "Unk3300OPGAHAGHEPF"];*/ 6:
                    message.unk3300OPGAHAGHEPF = reader.uint32();
                    break;
                case /* uint32 Unk3300_NMOKGFGDFFC = 1 [json_name = "Unk3300NMOKGFGDFFC"];*/ 1:
                    message.unk3300NMOKGFGDFFC = reader.uint32();
                    break;
                case /* uint32 Unk3300_BLLMPAJNCPI = 5 [json_name = "Unk3300BLLMPAJNCPI"];*/ 5:
                    message.unk3300BLLMPAJNCPI = reader.uint32();
                    break;
                case /* uint32 gacha_times */ 4:
                    message.gachaTimes = reader.uint32();
                    break;
                case /* uint32 Unk3300_GLPMIEMBGGL = 15 [json_name = "Unk3300GLPMIEMBGGL"];*/ 15:
                    message.unk3300GLPMIEMBGGL = reader.uint32();
                    break;
                case /* uint32 Unk3300_KEIJFMKAKDH = 12 [json_name = "Unk3300KEIJFMKAKDH"];*/ 12:
                    message.unk3300KEIJFMKAKDH = reader.uint32();
                    break;
                case /* uint32 Unk3300_DBFMKAMNPCL = 13 [json_name = "Unk3300DBFMKAMNPCL"];*/ 13:
                    message.unk3300DBFMKAMNPCL = reader.uint32();
                    break;
                case /* uint32 Unk3300_JLBFLPEMAPP = 8 [json_name = "Unk3300JLBFLPEMAPP"];*/ 8:
                    message.unk3300JLBFLPEMAPP = reader.uint32();
                    break;
                case /* uint32 Unk3300_MEDMCPFCIOO = 2 [json_name = "Unk3300MEDMCPFCIOO"];*/ 2:
                    message.unk3300MEDMCPFCIOO = reader.uint32();
                    break;
                case /* uint32 Unk3300_HLANONBCBLM = 1550 [json_name = "Unk3300HLANONBCBLM"];*/ 1550:
                    message.unk3300HLANONBCBLM = reader.uint32();
                    break;
                case /* uint32 Unk3300_PLFMMOFNGAG = 7 [json_name = "Unk3300PLFMMOFNGAG"];*/ 7:
                    message.unk3300PLFMMOFNGAG = reader.uint32();
                    break;
                case /* uint32 gacha_schedule_id */ 14:
                    message.gachaScheduleId = reader.uint32();
                    break;
                case /* uint32 daily_gacha_times */ 467:
                    message.dailyGachaTimes = reader.uint32();
                    break;
                case /* int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DoGachaRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool Unk3300_OHFMHIHJHPJ = 1812 [json_name = "Unk3300OHFMHIHJHPJ"]; */
        if (message.unk3300OHFMHIHJHPJ !== false)
            writer.tag(1812, WireType.Varint).bool(message.unk3300OHFMHIHJHPJ);
        /* uint32 Unk3300_JLELMHELIDC = 3 [json_name = "Unk3300JLELMHELIDC"]; */
        if (message.unk3300JLELMHELIDC !== 0)
            writer.tag(3, WireType.Varint).uint32(message.unk3300JLELMHELIDC);
        /* repeated GachaItem gacha_item_list = 9; */
        for (let i = 0; i < message.gachaItemList.length; i++)
            GachaItem.internalBinaryWrite(message.gachaItemList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* bool Unk3300_HBILIAEIHNK = 1887 [json_name = "Unk3300HBILIAEIHNK"]; */
        if (message.unk3300HBILIAEIHNK !== false)
            writer.tag(1887, WireType.Varint).bool(message.unk3300HBILIAEIHNK);
        /* uint32 gacha_type = 10; */
        if (message.gachaType !== 0)
            writer.tag(10, WireType.Varint).uint32(message.gachaType);
        /* uint32 Unk3300_OPGAHAGHEPF = 6 [json_name = "Unk3300OPGAHAGHEPF"]; */
        if (message.unk3300OPGAHAGHEPF !== 0)
            writer.tag(6, WireType.Varint).uint32(message.unk3300OPGAHAGHEPF);
        /* uint32 Unk3300_NMOKGFGDFFC = 1 [json_name = "Unk3300NMOKGFGDFFC"]; */
        if (message.unk3300NMOKGFGDFFC !== 0)
            writer.tag(1, WireType.Varint).uint32(message.unk3300NMOKGFGDFFC);
        /* uint32 Unk3300_BLLMPAJNCPI = 5 [json_name = "Unk3300BLLMPAJNCPI"]; */
        if (message.unk3300BLLMPAJNCPI !== 0)
            writer.tag(5, WireType.Varint).uint32(message.unk3300BLLMPAJNCPI);
        /* uint32 gacha_times = 4; */
        if (message.gachaTimes !== 0)
            writer.tag(4, WireType.Varint).uint32(message.gachaTimes);
        /* uint32 Unk3300_GLPMIEMBGGL = 15 [json_name = "Unk3300GLPMIEMBGGL"]; */
        if (message.unk3300GLPMIEMBGGL !== 0)
            writer.tag(15, WireType.Varint).uint32(message.unk3300GLPMIEMBGGL);
        /* uint32 Unk3300_KEIJFMKAKDH = 12 [json_name = "Unk3300KEIJFMKAKDH"]; */
        if (message.unk3300KEIJFMKAKDH !== 0)
            writer.tag(12, WireType.Varint).uint32(message.unk3300KEIJFMKAKDH);
        /* uint32 Unk3300_DBFMKAMNPCL = 13 [json_name = "Unk3300DBFMKAMNPCL"]; */
        if (message.unk3300DBFMKAMNPCL !== 0)
            writer.tag(13, WireType.Varint).uint32(message.unk3300DBFMKAMNPCL);
        /* uint32 Unk3300_JLBFLPEMAPP = 8 [json_name = "Unk3300JLBFLPEMAPP"]; */
        if (message.unk3300JLBFLPEMAPP !== 0)
            writer.tag(8, WireType.Varint).uint32(message.unk3300JLBFLPEMAPP);
        /* uint32 Unk3300_MEDMCPFCIOO = 2 [json_name = "Unk3300MEDMCPFCIOO"]; */
        if (message.unk3300MEDMCPFCIOO !== 0)
            writer.tag(2, WireType.Varint).uint32(message.unk3300MEDMCPFCIOO);
        /* uint32 Unk3300_HLANONBCBLM = 1550 [json_name = "Unk3300HLANONBCBLM"]; */
        if (message.unk3300HLANONBCBLM !== 0)
            writer.tag(1550, WireType.Varint).uint32(message.unk3300HLANONBCBLM);
        /* uint32 Unk3300_PLFMMOFNGAG = 7 [json_name = "Unk3300PLFMMOFNGAG"]; */
        if (message.unk3300PLFMMOFNGAG !== 0)
            writer.tag(7, WireType.Varint).uint32(message.unk3300PLFMMOFNGAG);
        /* uint32 gacha_schedule_id = 14; */
        if (message.gachaScheduleId !== 0)
            writer.tag(14, WireType.Varint).uint32(message.gachaScheduleId);
        /* uint32 daily_gacha_times = 467; */
        if (message.dailyGachaTimes !== 0)
            writer.tag(467, WireType.Varint).uint32(message.dailyGachaTimes);
        /* int32 retcode = 11; */
        if (message.retcode !== 0)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message DoGachaRsp
 */
export const DoGachaRsp = new DoGachaRsp$Type();
