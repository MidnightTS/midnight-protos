"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _IrodoriChessInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.IrodoriChessInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: IrodoriChessInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./Unk2700_IBEKDNOGMLA");
const pb_1 = require("google-protobuf");
class IrodoriChessInfo extends pb_1.Message {
    constructor(data) {
        super();
        _IrodoriChessInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [13], __classPrivateFieldGet(this, _IrodoriChessInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("mystery_info" in data && data.mystery_info != undefined) {
                this.mystery_info = data.mystery_info;
            }
            if ("left_monsters" in data && data.left_monsters != undefined) {
                this.left_monsters = data.left_monsters;
            }
            if ("Unk2700_MABMPAAGHCJ" in data && data.Unk2700_MABMPAAGHCJ != undefined) {
                this.Unk2700_MABMPAAGHCJ = data.Unk2700_MABMPAAGHCJ;
            }
            if ("building_points" in data && data.building_points != undefined) {
                this.building_points = data.building_points;
            }
            if ("Unk2700_CDOKENJJJMH" in data && data.Unk2700_CDOKENJJJMH != undefined) {
                this.Unk2700_CDOKENJJJMH = data.Unk2700_CDOKENJJJMH;
            }
        }
    }
    get mystery_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.Unk2700_IBEKDNOGMLA, 3);
    }
    set mystery_info(value) {
        pb_1.Message.setWrapperField(this, 3, value);
    }
    get has_mystery_info() {
        return pb_1.Message.getField(this, 3) != null;
    }
    get left_monsters() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set left_monsters(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get Unk2700_MABMPAAGHCJ() {
        return pb_1.Message.getFieldWithDefault(this, 13, []);
    }
    set Unk2700_MABMPAAGHCJ(value) {
        pb_1.Message.setField(this, 13, value);
    }
    get building_points() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set building_points(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get Unk2700_CDOKENJJJMH() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set Unk2700_CDOKENJJJMH(value) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data) {
        const message = new IrodoriChessInfo({});
        if (data.mystery_info != null) {
            message.mystery_info = dependency_1.Unk2700_IBEKDNOGMLA.fromObject(data.mystery_info);
        }
        if (data.left_monsters != null) {
            message.left_monsters = data.left_monsters;
        }
        if (data.Unk2700_MABMPAAGHCJ != null) {
            message.Unk2700_MABMPAAGHCJ = data.Unk2700_MABMPAAGHCJ;
        }
        if (data.building_points != null) {
            message.building_points = data.building_points;
        }
        if (data.Unk2700_CDOKENJJJMH != null) {
            message.Unk2700_CDOKENJJJMH = data.Unk2700_CDOKENJJJMH;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.mystery_info != null) {
            data.mystery_info = this.mystery_info.toObject();
        }
        if (this.left_monsters != null) {
            data.left_monsters = this.left_monsters;
        }
        if (this.Unk2700_MABMPAAGHCJ != null) {
            data.Unk2700_MABMPAAGHCJ = this.Unk2700_MABMPAAGHCJ;
        }
        if (this.building_points != null) {
            data.building_points = this.building_points;
        }
        if (this.Unk2700_CDOKENJJJMH != null) {
            data.Unk2700_CDOKENJJJMH = this.Unk2700_CDOKENJJJMH;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_mystery_info)
            writer.writeMessage(3, this.mystery_info, () => this.mystery_info.serialize(writer));
        if (this.left_monsters != 0)
            writer.writeUint32(12, this.left_monsters);
        if (this.Unk2700_MABMPAAGHCJ.length)
            writer.writePackedUint32(13, this.Unk2700_MABMPAAGHCJ);
        if (this.building_points != 0)
            writer.writeUint32(7, this.building_points);
        if (this.Unk2700_CDOKENJJJMH != 0)
            writer.writeUint32(4, this.Unk2700_CDOKENJJJMH);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new IrodoriChessInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 3:
                    reader.readMessage(message.mystery_info, () => message.mystery_info = dependency_1.Unk2700_IBEKDNOGMLA.deserialize(reader));
                    break;
                case 12:
                    message.left_monsters = reader.readUint32();
                    break;
                case 13:
                    message.Unk2700_MABMPAAGHCJ = reader.readPackedUint32();
                    break;
                case 7:
                    message.building_points = reader.readUint32();
                    break;
                case 4:
                    message.Unk2700_CDOKENJJJMH = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return IrodoriChessInfo.deserialize(bytes);
    }
}
exports.IrodoriChessInfo = IrodoriChessInfo;
_IrodoriChessInfo_one_of_decls = new WeakMap();
