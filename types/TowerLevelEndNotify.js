"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _TowerLevelEndNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.TowerLevelEndNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: TowerLevelEndNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./ItemParam");
const pb_1 = require("google-protobuf");
class TowerLevelEndNotify extends pb_1.Message {
    constructor(data) {
        super();
        _TowerLevelEndNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [12, 6], __classPrivateFieldGet(this, _TowerLevelEndNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("next_floor_id" in data && data.next_floor_id != undefined) {
                this.next_floor_id = data.next_floor_id;
            }
            if ("reward_item_list" in data && data.reward_item_list != undefined) {
                this.reward_item_list = data.reward_item_list;
            }
            if ("continue_state" in data && data.continue_state != undefined) {
                this.continue_state = data.continue_state;
            }
            if ("is_success" in data && data.is_success != undefined) {
                this.is_success = data.is_success;
            }
            if ("finished_star_cond_list" in data && data.finished_star_cond_list != undefined) {
                this.finished_star_cond_list = data.finished_star_cond_list;
            }
        }
    }
    get next_floor_id() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set next_floor_id(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get reward_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 12);
    }
    set reward_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 12, value);
    }
    get continue_state() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set continue_state(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get is_success() {
        return pb_1.Message.getFieldWithDefault(this, 5, false);
    }
    set is_success(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get finished_star_cond_list() {
        return pb_1.Message.getFieldWithDefault(this, 6, []);
    }
    set finished_star_cond_list(value) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data) {
        const message = new TowerLevelEndNotify({});
        if (data.next_floor_id != null) {
            message.next_floor_id = data.next_floor_id;
        }
        if (data.reward_item_list != null) {
            message.reward_item_list = data.reward_item_list.map(item => dependency_1.ItemParam.fromObject(item));
        }
        if (data.continue_state != null) {
            message.continue_state = data.continue_state;
        }
        if (data.is_success != null) {
            message.is_success = data.is_success;
        }
        if (data.finished_star_cond_list != null) {
            message.finished_star_cond_list = data.finished_star_cond_list;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.next_floor_id != null) {
            data.next_floor_id = this.next_floor_id;
        }
        if (this.reward_item_list != null) {
            data.reward_item_list = this.reward_item_list.map((item) => item.toObject());
        }
        if (this.continue_state != null) {
            data.continue_state = this.continue_state;
        }
        if (this.is_success != null) {
            data.is_success = this.is_success;
        }
        if (this.finished_star_cond_list != null) {
            data.finished_star_cond_list = this.finished_star_cond_list;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.next_floor_id != 0)
            writer.writeUint32(4, this.next_floor_id);
        if (this.reward_item_list.length)
            writer.writeRepeatedMessage(12, this.reward_item_list, (item) => item.serialize(writer));
        if (this.continue_state != 0)
            writer.writeUint32(15, this.continue_state);
        if (this.is_success != false)
            writer.writeBool(5, this.is_success);
        if (this.finished_star_cond_list.length)
            writer.writePackedUint32(6, this.finished_star_cond_list);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TowerLevelEndNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 4:
                    message.next_floor_id = reader.readUint32();
                    break;
                case 12:
                    reader.readMessage(message.reward_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 12, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                    break;
                case 15:
                    message.continue_state = reader.readUint32();
                    break;
                case 5:
                    message.is_success = reader.readBool();
                    break;
                case 6:
                    message.finished_star_cond_list = reader.readPackedUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return TowerLevelEndNotify.deserialize(bytes);
    }
}
exports.TowerLevelEndNotify = TowerLevelEndNotify;
_TowerLevelEndNotify_one_of_decls = new WeakMap();
(function (TowerLevelEndNotify) {
    let ContinueStateType;
    (function (ContinueStateType) {
        ContinueStateType[ContinueStateType["CONTINUE_STATE_TYPE_CAN_NOT_CONTINUE"] = 0] = "CONTINUE_STATE_TYPE_CAN_NOT_CONTINUE";
        ContinueStateType[ContinueStateType["CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_LEVEL"] = 1] = "CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_LEVEL";
        ContinueStateType[ContinueStateType["CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_FLOOR"] = 2] = "CONTINUE_STATE_TYPE_CAN_ENTER_NEXT_FLOOR";
    })(ContinueStateType = TowerLevelEndNotify.ContinueStateType || (TowerLevelEndNotify.ContinueStateType = {}));
})(TowerLevelEndNotify = exports.TowerLevelEndNotify || (exports.TowerLevelEndNotify = {}));
