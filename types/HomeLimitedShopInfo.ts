/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeLimitedShopInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./Vector";
import * as pb_1 from "google-protobuf";
export class HomeLimitedShopInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        next_close_time?: number;
        next_guest_open_time?: number;
        djinn_rot?: dependency_1.Vector;
        uid?: number;
        next_open_time?: number;
        djinn_pos?: dependency_1.Vector;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("next_close_time" in data && data.next_close_time != undefined) {
                this.next_close_time = data.next_close_time;
            }
            if ("next_guest_open_time" in data && data.next_guest_open_time != undefined) {
                this.next_guest_open_time = data.next_guest_open_time;
            }
            if ("djinn_rot" in data && data.djinn_rot != undefined) {
                this.djinn_rot = data.djinn_rot;
            }
            if ("uid" in data && data.uid != undefined) {
                this.uid = data.uid;
            }
            if ("next_open_time" in data && data.next_open_time != undefined) {
                this.next_open_time = data.next_open_time;
            }
            if ("djinn_pos" in data && data.djinn_pos != undefined) {
                this.djinn_pos = data.djinn_pos;
            }
        }
    }
    get next_close_time() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set next_close_time(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get next_guest_open_time() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0) as number;
    }
    set next_guest_open_time(value: number) {
        pb_1.Message.setField(this, 11, value);
    }
    get djinn_rot() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 7) as dependency_1.Vector;
    }
    set djinn_rot(value: dependency_1.Vector) {
        pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_djinn_rot() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get uid() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set uid(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get next_open_time() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set next_open_time(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get djinn_pos() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 2) as dependency_1.Vector;
    }
    set djinn_pos(value: dependency_1.Vector) {
        pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_djinn_pos() {
        return pb_1.Message.getField(this, 2) != null;
    }
    static fromObject(data: {
        next_close_time?: number;
        next_guest_open_time?: number;
        djinn_rot?: ReturnType<typeof dependency_1.Vector.prototype.toObject>;
        uid?: number;
        next_open_time?: number;
        djinn_pos?: ReturnType<typeof dependency_1.Vector.prototype.toObject>;
    }): HomeLimitedShopInfo {
        const message = new HomeLimitedShopInfo({});
        if (data.next_close_time != null) {
            message.next_close_time = data.next_close_time;
        }
        if (data.next_guest_open_time != null) {
            message.next_guest_open_time = data.next_guest_open_time;
        }
        if (data.djinn_rot != null) {
            message.djinn_rot = dependency_1.Vector.fromObject(data.djinn_rot);
        }
        if (data.uid != null) {
            message.uid = data.uid;
        }
        if (data.next_open_time != null) {
            message.next_open_time = data.next_open_time;
        }
        if (data.djinn_pos != null) {
            message.djinn_pos = dependency_1.Vector.fromObject(data.djinn_pos);
        }
        return message;
    }
    toObject() {
        const data: {
            next_close_time?: number;
            next_guest_open_time?: number;
            djinn_rot?: ReturnType<typeof dependency_1.Vector.prototype.toObject>;
            uid?: number;
            next_open_time?: number;
            djinn_pos?: ReturnType<typeof dependency_1.Vector.prototype.toObject>;
        } = {};
        if (this.next_close_time != null) {
            data.next_close_time = this.next_close_time;
        }
        if (this.next_guest_open_time != null) {
            data.next_guest_open_time = this.next_guest_open_time;
        }
        if (this.djinn_rot != null) {
            data.djinn_rot = this.djinn_rot.toObject();
        }
        if (this.uid != null) {
            data.uid = this.uid;
        }
        if (this.next_open_time != null) {
            data.next_open_time = this.next_open_time;
        }
        if (this.djinn_pos != null) {
            data.djinn_pos = this.djinn_pos.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.next_close_time != 0)
            writer.writeFixed32(9, this.next_close_time);
        if (this.next_guest_open_time != 0)
            writer.writeFixed32(11, this.next_guest_open_time);
        if (this.has_djinn_rot)
            writer.writeMessage(7, this.djinn_rot, () => this.djinn_rot.serialize(writer));
        if (this.uid != 0)
            writer.writeUint32(4, this.uid);
        if (this.next_open_time != 0)
            writer.writeFixed32(6, this.next_open_time);
        if (this.has_djinn_pos)
            writer.writeMessage(2, this.djinn_pos, () => this.djinn_pos.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): HomeLimitedShopInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeLimitedShopInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 9:
                    message.next_close_time = reader.readFixed32();
                    break;
                case 11:
                    message.next_guest_open_time = reader.readFixed32();
                    break;
                case 7:
                    reader.readMessage(message.djinn_rot, () => message.djinn_rot = dependency_1.Vector.deserialize(reader));
                    break;
                case 4:
                    message.uid = reader.readUint32();
                    break;
                case 6:
                    message.next_open_time = reader.readFixed32();
                    break;
                case 2:
                    reader.readMessage(message.djinn_pos, () => message.djinn_pos = dependency_1.Vector.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): HomeLimitedShopInfo {
        return HomeLimitedShopInfo.deserialize(bytes);
    }
}
