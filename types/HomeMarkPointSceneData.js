"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _HomeMarkPointSceneData_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.HomeMarkPointSceneData = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeMarkPointSceneData.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./HomeMarkPointFurnitureData");
const dependency_2 = require("./Vector");
const pb_1 = require("google-protobuf");
class HomeMarkPointSceneData extends pb_1.Message {
    constructor(data) {
        super();
        _HomeMarkPointSceneData_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [6], __classPrivateFieldGet(this, _HomeMarkPointSceneData_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("furniture_list" in data && data.furniture_list != undefined) {
                this.furniture_list = data.furniture_list;
            }
            if ("teapot_spirit_pos" in data && data.teapot_spirit_pos != undefined) {
                this.teapot_spirit_pos = data.teapot_spirit_pos;
            }
            if ("scene_id" in data && data.scene_id != undefined) {
                this.scene_id = data.scene_id;
            }
            if ("module_id" in data && data.module_id != undefined) {
                this.module_id = data.module_id;
            }
            if ("Unk3100_ABBFBELGECB" in data && data.Unk3100_ABBFBELGECB != undefined) {
                this.Unk3100_ABBFBELGECB = data.Unk3100_ABBFBELGECB;
            }
        }
    }
    get furniture_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.HomeMarkPointFurnitureData, 6);
    }
    set furniture_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 6, value);
    }
    get teapot_spirit_pos() {
        return pb_1.Message.getWrapperField(this, dependency_2.Vector, 4);
    }
    set teapot_spirit_pos(value) {
        pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_teapot_spirit_pos() {
        return pb_1.Message.getField(this, 4) != null;
    }
    get scene_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set scene_id(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get module_id() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0);
    }
    set module_id(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get Unk3100_ABBFBELGECB() {
        return pb_1.Message.getWrapperField(this, dependency_2.Vector, 11);
    }
    set Unk3100_ABBFBELGECB(value) {
        pb_1.Message.setWrapperField(this, 11, value);
    }
    get has_Unk3100_ABBFBELGECB() {
        return pb_1.Message.getField(this, 11) != null;
    }
    static fromObject(data) {
        const message = new HomeMarkPointSceneData({});
        if (data.furniture_list != null) {
            message.furniture_list = data.furniture_list.map(item => dependency_1.HomeMarkPointFurnitureData.fromObject(item));
        }
        if (data.teapot_spirit_pos != null) {
            message.teapot_spirit_pos = dependency_2.Vector.fromObject(data.teapot_spirit_pos);
        }
        if (data.scene_id != null) {
            message.scene_id = data.scene_id;
        }
        if (data.module_id != null) {
            message.module_id = data.module_id;
        }
        if (data.Unk3100_ABBFBELGECB != null) {
            message.Unk3100_ABBFBELGECB = dependency_2.Vector.fromObject(data.Unk3100_ABBFBELGECB);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.furniture_list != null) {
            data.furniture_list = this.furniture_list.map((item) => item.toObject());
        }
        if (this.teapot_spirit_pos != null) {
            data.teapot_spirit_pos = this.teapot_spirit_pos.toObject();
        }
        if (this.scene_id != null) {
            data.scene_id = this.scene_id;
        }
        if (this.module_id != null) {
            data.module_id = this.module_id;
        }
        if (this.Unk3100_ABBFBELGECB != null) {
            data.Unk3100_ABBFBELGECB = this.Unk3100_ABBFBELGECB.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.furniture_list.length)
            writer.writeRepeatedMessage(6, this.furniture_list, (item) => item.serialize(writer));
        if (this.has_teapot_spirit_pos)
            writer.writeMessage(4, this.teapot_spirit_pos, () => this.teapot_spirit_pos.serialize(writer));
        if (this.scene_id != 0)
            writer.writeUint32(2, this.scene_id);
        if (this.module_id != 0)
            writer.writeUint32(5, this.module_id);
        if (this.has_Unk3100_ABBFBELGECB)
            writer.writeMessage(11, this.Unk3100_ABBFBELGECB, () => this.Unk3100_ABBFBELGECB.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeMarkPointSceneData();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 6:
                    reader.readMessage(message.furniture_list, () => pb_1.Message.addToRepeatedWrapperField(message, 6, dependency_1.HomeMarkPointFurnitureData.deserialize(reader), dependency_1.HomeMarkPointFurnitureData));
                    break;
                case 4:
                    reader.readMessage(message.teapot_spirit_pos, () => message.teapot_spirit_pos = dependency_2.Vector.deserialize(reader));
                    break;
                case 2:
                    message.scene_id = reader.readUint32();
                    break;
                case 5:
                    message.module_id = reader.readUint32();
                    break;
                case 11:
                    reader.readMessage(message.Unk3100_ABBFBELGECB, () => message.Unk3100_ABBFBELGECB = dependency_2.Vector.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return HomeMarkPointSceneData.deserialize(bytes);
    }
}
exports.HomeMarkPointSceneData = HomeMarkPointSceneData;
_HomeMarkPointSceneData_one_of_decls = new WeakMap();
