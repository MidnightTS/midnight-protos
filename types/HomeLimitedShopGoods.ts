/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeLimitedShopGoods.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ItemParam";
import * as pb_1 from "google-protobuf";
export class HomeLimitedShopGoods extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        buy_limit?: number;
        cost_item_list?: dependency_1.ItemParam[];
        bought_num?: number;
        goods_item?: dependency_1.ItemParam;
        goods_id?: number;
        disable_type?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [15], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("buy_limit" in data && data.buy_limit != undefined) {
                this.buy_limit = data.buy_limit;
            }
            if ("cost_item_list" in data && data.cost_item_list != undefined) {
                this.cost_item_list = data.cost_item_list;
            }
            if ("bought_num" in data && data.bought_num != undefined) {
                this.bought_num = data.bought_num;
            }
            if ("goods_item" in data && data.goods_item != undefined) {
                this.goods_item = data.goods_item;
            }
            if ("goods_id" in data && data.goods_id != undefined) {
                this.goods_id = data.goods_id;
            }
            if ("disable_type" in data && data.disable_type != undefined) {
                this.disable_type = data.disable_type;
            }
        }
    }
    get buy_limit() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
    }
    set buy_limit(value: number) {
        pb_1.Message.setField(this, 8, value);
    }
    get cost_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 15) as dependency_1.ItemParam[];
    }
    set cost_item_list(value: dependency_1.ItemParam[]) {
        pb_1.Message.setRepeatedWrapperField(this, 15, value);
    }
    get bought_num() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set bought_num(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get goods_item() {
        return pb_1.Message.getWrapperField(this, dependency_1.ItemParam, 6) as dependency_1.ItemParam;
    }
    set goods_item(value: dependency_1.ItemParam) {
        pb_1.Message.setWrapperField(this, 6, value);
    }
    get has_goods_item() {
        return pb_1.Message.getField(this, 6) != null;
    }
    get goods_id() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set goods_id(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    get disable_type() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set disable_type(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    static fromObject(data: {
        buy_limit?: number;
        cost_item_list?: ReturnType<typeof dependency_1.ItemParam.prototype.toObject>[];
        bought_num?: number;
        goods_item?: ReturnType<typeof dependency_1.ItemParam.prototype.toObject>;
        goods_id?: number;
        disable_type?: number;
    }): HomeLimitedShopGoods {
        const message = new HomeLimitedShopGoods({});
        if (data.buy_limit != null) {
            message.buy_limit = data.buy_limit;
        }
        if (data.cost_item_list != null) {
            message.cost_item_list = data.cost_item_list.map(item => dependency_1.ItemParam.fromObject(item));
        }
        if (data.bought_num != null) {
            message.bought_num = data.bought_num;
        }
        if (data.goods_item != null) {
            message.goods_item = dependency_1.ItemParam.fromObject(data.goods_item);
        }
        if (data.goods_id != null) {
            message.goods_id = data.goods_id;
        }
        if (data.disable_type != null) {
            message.disable_type = data.disable_type;
        }
        return message;
    }
    toObject() {
        const data: {
            buy_limit?: number;
            cost_item_list?: ReturnType<typeof dependency_1.ItemParam.prototype.toObject>[];
            bought_num?: number;
            goods_item?: ReturnType<typeof dependency_1.ItemParam.prototype.toObject>;
            goods_id?: number;
            disable_type?: number;
        } = {};
        if (this.buy_limit != null) {
            data.buy_limit = this.buy_limit;
        }
        if (this.cost_item_list != null) {
            data.cost_item_list = this.cost_item_list.map((item: dependency_1.ItemParam) => item.toObject());
        }
        if (this.bought_num != null) {
            data.bought_num = this.bought_num;
        }
        if (this.goods_item != null) {
            data.goods_item = this.goods_item.toObject();
        }
        if (this.goods_id != null) {
            data.goods_id = this.goods_id;
        }
        if (this.disable_type != null) {
            data.disable_type = this.disable_type;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.buy_limit != 0)
            writer.writeUint32(8, this.buy_limit);
        if (this.cost_item_list.length)
            writer.writeRepeatedMessage(15, this.cost_item_list, (item: dependency_1.ItemParam) => item.serialize(writer));
        if (this.bought_num != 0)
            writer.writeUint32(1, this.bought_num);
        if (this.has_goods_item)
            writer.writeMessage(6, this.goods_item, () => this.goods_item.serialize(writer));
        if (this.goods_id != 0)
            writer.writeUint32(13, this.goods_id);
        if (this.disable_type != 0)
            writer.writeUint32(3, this.disable_type);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): HomeLimitedShopGoods {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeLimitedShopGoods();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.buy_limit = reader.readUint32();
                    break;
                case 15:
                    reader.readMessage(message.cost_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 15, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                    break;
                case 1:
                    message.bought_num = reader.readUint32();
                    break;
                case 6:
                    reader.readMessage(message.goods_item, () => message.goods_item = dependency_1.ItemParam.deserialize(reader));
                    break;
                case 13:
                    message.goods_id = reader.readUint32();
                    break;
                case 3:
                    message.disable_type = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): HomeLimitedShopGoods {
        return HomeLimitedShopGoods.deserialize(bytes);
    }
}
