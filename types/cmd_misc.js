"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckSegmentCRCNotify = exports.SegmentCRCInfo = exports.SegmentInfo = exports.GetOnlinePlayerInfoRsp = exports.GetOnlinePlayerInfoReq = exports.UnionCmdNotify = exports.UnionCmd = exports.ClientReportNotify = exports.RobotPushPlayerDataNotify = exports.ClientReconnectNotify = exports.ServerLogNotify = exports.ServerTimeNotify = exports.GetOnlinePlayerListRsp = exports.GetOnlinePlayerListReq = exports.PingRsp = exports.PingReq = exports.ShowMessageNotify = exports.MsgParam = exports.GmTalkRsp = exports.GmTalkReq = exports.KeepAliveNotify = exports.ClientReconnectReason = exports.ServerLogLevel = exports.ServerLogType = exports.SvrMsgId = exports.LastPacketPrintNotify_CmdId = exports.GmTalkNotify_CmdId = exports.ChangeServerGlobalValueNotify_CmdId = exports.ClientBulletCreateNotify_CmdId = exports.UpdateRedPointNotify_CmdId = exports.EchoNotify_CmdId = exports.WorldPlayerRTTNotify_CmdId = exports.CheckSegmentCRCReq_CmdId = exports.CheckSegmentCRCNotify_CmdId = exports.GetOnlinePlayerInfoRsp_CmdId = exports.GetOnlinePlayerInfoReq_CmdId = exports.UnionCmdNotify_CmdId = exports.ClientReportNotify_CmdId = exports.RobotPushPlayerDataNotify_CmdId = exports.ClientReconnectNotify_CmdId = exports.ServerLogNotify_CmdId = exports.ServerTimeNotify_CmdId = exports.GetOnlinePlayerListRsp_CmdId = exports.GetOnlinePlayerListReq_CmdId = exports.PingRsp_CmdId = exports.PingReq_CmdId = exports.ShowMessageNotify_CmdId = exports.GmTalkRsp_CmdId = exports.GmTalkReq_CmdId = exports.KeepAliveNotify_CmdId = void 0;
exports.LastPacketPrintNotify = exports.GmTalkNotify = exports.ChangeServerGlobalValueNotify = exports.ClientBulletCreateNotify = exports.UpdateRedPointNotify = exports.EchoNotify = exports.WorldPlayerRTTNotify = exports.PlayerRTTInfo = exports.CheckSegmentCRCReq = void 0;
// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_misc.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
const runtime_1 = require("@protobuf-ts/runtime");
const runtime_2 = require("@protobuf-ts/runtime");
const runtime_3 = require("@protobuf-ts/runtime");
const runtime_4 = require("@protobuf-ts/runtime");
const runtime_5 = require("@protobuf-ts/runtime");
const define_1 = require("./define");
const define_2 = require("./define");
/**
 * @generated from protobuf enum com.midnights.game.KeepAliveNotify.CmdId
 */
var KeepAliveNotify_CmdId;
(function (KeepAliveNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    KeepAliveNotify_CmdId[KeepAliveNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 72;
     */
    KeepAliveNotify_CmdId[KeepAliveNotify_CmdId["CMD_ID"] = 72] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    KeepAliveNotify_CmdId[KeepAliveNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    KeepAliveNotify_CmdId[KeepAliveNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(KeepAliveNotify_CmdId = exports.KeepAliveNotify_CmdId || (exports.KeepAliveNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.GmTalkReq.CmdId
 */
var GmTalkReq_CmdId;
(function (GmTalkReq_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GmTalkReq_CmdId[GmTalkReq_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 98;
     */
    GmTalkReq_CmdId[GmTalkReq_CmdId["CMD_ID"] = 98] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GmTalkReq_CmdId[GmTalkReq_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GmTalkReq_CmdId[GmTalkReq_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GmTalkReq_CmdId[GmTalkReq_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(GmTalkReq_CmdId = exports.GmTalkReq_CmdId || (exports.GmTalkReq_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.GmTalkRsp.CmdId
 */
var GmTalkRsp_CmdId;
(function (GmTalkRsp_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GmTalkRsp_CmdId[GmTalkRsp_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 12;
     */
    GmTalkRsp_CmdId[GmTalkRsp_CmdId["CMD_ID"] = 12] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GmTalkRsp_CmdId[GmTalkRsp_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GmTalkRsp_CmdId[GmTalkRsp_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(GmTalkRsp_CmdId = exports.GmTalkRsp_CmdId || (exports.GmTalkRsp_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.ShowMessageNotify.CmdId
 */
var ShowMessageNotify_CmdId;
(function (ShowMessageNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ShowMessageNotify_CmdId[ShowMessageNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 35;
     */
    ShowMessageNotify_CmdId[ShowMessageNotify_CmdId["CMD_ID"] = 35] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ShowMessageNotify_CmdId[ShowMessageNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ShowMessageNotify_CmdId[ShowMessageNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(ShowMessageNotify_CmdId = exports.ShowMessageNotify_CmdId || (exports.ShowMessageNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.PingReq.CmdId
 */
var PingReq_CmdId;
(function (PingReq_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    PingReq_CmdId[PingReq_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 7;
     */
    PingReq_CmdId[PingReq_CmdId["CMD_ID"] = 7] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    PingReq_CmdId[PingReq_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    PingReq_CmdId[PingReq_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    PingReq_CmdId[PingReq_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(PingReq_CmdId = exports.PingReq_CmdId || (exports.PingReq_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.PingRsp.CmdId
 */
var PingRsp_CmdId;
(function (PingRsp_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    PingRsp_CmdId[PingRsp_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 21;
     */
    PingRsp_CmdId[PingRsp_CmdId["CMD_ID"] = 21] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    PingRsp_CmdId[PingRsp_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    PingRsp_CmdId[PingRsp_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(PingRsp_CmdId = exports.PingRsp_CmdId || (exports.PingRsp_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.GetOnlinePlayerListReq.CmdId
 */
var GetOnlinePlayerListReq_CmdId;
(function (GetOnlinePlayerListReq_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GetOnlinePlayerListReq_CmdId[GetOnlinePlayerListReq_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 90;
     */
    GetOnlinePlayerListReq_CmdId[GetOnlinePlayerListReq_CmdId["CMD_ID"] = 90] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GetOnlinePlayerListReq_CmdId[GetOnlinePlayerListReq_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GetOnlinePlayerListReq_CmdId[GetOnlinePlayerListReq_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GetOnlinePlayerListReq_CmdId[GetOnlinePlayerListReq_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(GetOnlinePlayerListReq_CmdId = exports.GetOnlinePlayerListReq_CmdId || (exports.GetOnlinePlayerListReq_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.GetOnlinePlayerListRsp.CmdId
 */
var GetOnlinePlayerListRsp_CmdId;
(function (GetOnlinePlayerListRsp_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GetOnlinePlayerListRsp_CmdId[GetOnlinePlayerListRsp_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 73;
     */
    GetOnlinePlayerListRsp_CmdId[GetOnlinePlayerListRsp_CmdId["CMD_ID"] = 73] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GetOnlinePlayerListRsp_CmdId[GetOnlinePlayerListRsp_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GetOnlinePlayerListRsp_CmdId[GetOnlinePlayerListRsp_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(GetOnlinePlayerListRsp_CmdId = exports.GetOnlinePlayerListRsp_CmdId || (exports.GetOnlinePlayerListRsp_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.ServerTimeNotify.CmdId
 */
var ServerTimeNotify_CmdId;
(function (ServerTimeNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ServerTimeNotify_CmdId[ServerTimeNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 99;
     */
    ServerTimeNotify_CmdId[ServerTimeNotify_CmdId["CMD_ID"] = 99] = "CMD_ID";
    /**
     * @generated from protobuf enum value: ENET_CHANNEL_ID = 1;
     */
    ServerTimeNotify_CmdId[ServerTimeNotify_CmdId["ENET_CHANNEL_ID"] = 1] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_CHANNEL_ID = 1;
     */
    ServerTimeNotify_CmdId[ServerTimeNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(ServerTimeNotify_CmdId = exports.ServerTimeNotify_CmdId || (exports.ServerTimeNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.ServerLogNotify.CmdId
 */
var ServerLogNotify_CmdId;
(function (ServerLogNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ServerLogNotify_CmdId[ServerLogNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 31;
     */
    ServerLogNotify_CmdId[ServerLogNotify_CmdId["CMD_ID"] = 31] = "CMD_ID";
    /**
     * @generated from protobuf enum value: ENET_CHANNEL_ID = 1;
     */
    ServerLogNotify_CmdId[ServerLogNotify_CmdId["ENET_CHANNEL_ID"] = 1] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_CHANNEL_ID = 1;
     */
    ServerLogNotify_CmdId[ServerLogNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(ServerLogNotify_CmdId = exports.ServerLogNotify_CmdId || (exports.ServerLogNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.ClientReconnectNotify.CmdId
 */
var ClientReconnectNotify_CmdId;
(function (ClientReconnectNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ClientReconnectNotify_CmdId[ClientReconnectNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 75;
     */
    ClientReconnectNotify_CmdId[ClientReconnectNotify_CmdId["CMD_ID"] = 75] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ClientReconnectNotify_CmdId[ClientReconnectNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ClientReconnectNotify_CmdId[ClientReconnectNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(ClientReconnectNotify_CmdId = exports.ClientReconnectNotify_CmdId || (exports.ClientReconnectNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.RobotPushPlayerDataNotify.CmdId
 */
var RobotPushPlayerDataNotify_CmdId;
(function (RobotPushPlayerDataNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    RobotPushPlayerDataNotify_CmdId[RobotPushPlayerDataNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 97;
     */
    RobotPushPlayerDataNotify_CmdId[RobotPushPlayerDataNotify_CmdId["CMD_ID"] = 97] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    RobotPushPlayerDataNotify_CmdId[RobotPushPlayerDataNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    RobotPushPlayerDataNotify_CmdId[RobotPushPlayerDataNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(RobotPushPlayerDataNotify_CmdId = exports.RobotPushPlayerDataNotify_CmdId || (exports.RobotPushPlayerDataNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.ClientReportNotify.CmdId
 */
var ClientReportNotify_CmdId;
(function (ClientReportNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ClientReportNotify_CmdId[ClientReportNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 81;
     */
    ClientReportNotify_CmdId[ClientReportNotify_CmdId["CMD_ID"] = 81] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ClientReportNotify_CmdId[ClientReportNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ClientReportNotify_CmdId[ClientReportNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ClientReportNotify_CmdId[ClientReportNotify_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(ClientReportNotify_CmdId = exports.ClientReportNotify_CmdId || (exports.ClientReportNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.UnionCmdNotify.CmdId
 */
var UnionCmdNotify_CmdId;
(function (UnionCmdNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    UnionCmdNotify_CmdId[UnionCmdNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 5;
     */
    UnionCmdNotify_CmdId[UnionCmdNotify_CmdId["CMD_ID"] = 5] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    UnionCmdNotify_CmdId[UnionCmdNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    UnionCmdNotify_CmdId[UnionCmdNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    UnionCmdNotify_CmdId[UnionCmdNotify_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(UnionCmdNotify_CmdId = exports.UnionCmdNotify_CmdId || (exports.UnionCmdNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.GetOnlinePlayerInfoReq.CmdId
 */
var GetOnlinePlayerInfoReq_CmdId;
(function (GetOnlinePlayerInfoReq_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GetOnlinePlayerInfoReq_CmdId[GetOnlinePlayerInfoReq_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 82;
     */
    GetOnlinePlayerInfoReq_CmdId[GetOnlinePlayerInfoReq_CmdId["CMD_ID"] = 82] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GetOnlinePlayerInfoReq_CmdId[GetOnlinePlayerInfoReq_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GetOnlinePlayerInfoReq_CmdId[GetOnlinePlayerInfoReq_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GetOnlinePlayerInfoReq_CmdId[GetOnlinePlayerInfoReq_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(GetOnlinePlayerInfoReq_CmdId = exports.GetOnlinePlayerInfoReq_CmdId || (exports.GetOnlinePlayerInfoReq_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.GetOnlinePlayerInfoRsp.CmdId
 */
var GetOnlinePlayerInfoRsp_CmdId;
(function (GetOnlinePlayerInfoRsp_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GetOnlinePlayerInfoRsp_CmdId[GetOnlinePlayerInfoRsp_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 47;
     */
    GetOnlinePlayerInfoRsp_CmdId[GetOnlinePlayerInfoRsp_CmdId["CMD_ID"] = 47] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GetOnlinePlayerInfoRsp_CmdId[GetOnlinePlayerInfoRsp_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GetOnlinePlayerInfoRsp_CmdId[GetOnlinePlayerInfoRsp_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(GetOnlinePlayerInfoRsp_CmdId = exports.GetOnlinePlayerInfoRsp_CmdId || (exports.GetOnlinePlayerInfoRsp_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.CheckSegmentCRCNotify.CmdId
 */
var CheckSegmentCRCNotify_CmdId;
(function (CheckSegmentCRCNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    CheckSegmentCRCNotify_CmdId[CheckSegmentCRCNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 39;
     */
    CheckSegmentCRCNotify_CmdId[CheckSegmentCRCNotify_CmdId["CMD_ID"] = 39] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    CheckSegmentCRCNotify_CmdId[CheckSegmentCRCNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    CheckSegmentCRCNotify_CmdId[CheckSegmentCRCNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(CheckSegmentCRCNotify_CmdId = exports.CheckSegmentCRCNotify_CmdId || (exports.CheckSegmentCRCNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.CheckSegmentCRCReq.CmdId
 */
var CheckSegmentCRCReq_CmdId;
(function (CheckSegmentCRCReq_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    CheckSegmentCRCReq_CmdId[CheckSegmentCRCReq_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 53;
     */
    CheckSegmentCRCReq_CmdId[CheckSegmentCRCReq_CmdId["CMD_ID"] = 53] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    CheckSegmentCRCReq_CmdId[CheckSegmentCRCReq_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    CheckSegmentCRCReq_CmdId[CheckSegmentCRCReq_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    CheckSegmentCRCReq_CmdId[CheckSegmentCRCReq_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(CheckSegmentCRCReq_CmdId = exports.CheckSegmentCRCReq_CmdId || (exports.CheckSegmentCRCReq_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.WorldPlayerRTTNotify.CmdId
 */
var WorldPlayerRTTNotify_CmdId;
(function (WorldPlayerRTTNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    WorldPlayerRTTNotify_CmdId[WorldPlayerRTTNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 22;
     */
    WorldPlayerRTTNotify_CmdId[WorldPlayerRTTNotify_CmdId["CMD_ID"] = 22] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    WorldPlayerRTTNotify_CmdId[WorldPlayerRTTNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    WorldPlayerRTTNotify_CmdId[WorldPlayerRTTNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(WorldPlayerRTTNotify_CmdId = exports.WorldPlayerRTTNotify_CmdId || (exports.WorldPlayerRTTNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.EchoNotify.CmdId
 */
var EchoNotify_CmdId;
(function (EchoNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    EchoNotify_CmdId[EchoNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 65;
     */
    EchoNotify_CmdId[EchoNotify_CmdId["CMD_ID"] = 65] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    EchoNotify_CmdId[EchoNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    EchoNotify_CmdId[EchoNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(EchoNotify_CmdId = exports.EchoNotify_CmdId || (exports.EchoNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.UpdateRedPointNotify.CmdId
 */
var UpdateRedPointNotify_CmdId;
(function (UpdateRedPointNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    UpdateRedPointNotify_CmdId[UpdateRedPointNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 93;
     */
    UpdateRedPointNotify_CmdId[UpdateRedPointNotify_CmdId["CMD_ID"] = 93] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    UpdateRedPointNotify_CmdId[UpdateRedPointNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    UpdateRedPointNotify_CmdId[UpdateRedPointNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(UpdateRedPointNotify_CmdId = exports.UpdateRedPointNotify_CmdId || (exports.UpdateRedPointNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.ClientBulletCreateNotify.CmdId
 */
var ClientBulletCreateNotify_CmdId;
(function (ClientBulletCreateNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ClientBulletCreateNotify_CmdId[ClientBulletCreateNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 4;
     */
    ClientBulletCreateNotify_CmdId[ClientBulletCreateNotify_CmdId["CMD_ID"] = 4] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ClientBulletCreateNotify_CmdId[ClientBulletCreateNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ClientBulletCreateNotify_CmdId[ClientBulletCreateNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ClientBulletCreateNotify_CmdId[ClientBulletCreateNotify_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(ClientBulletCreateNotify_CmdId = exports.ClientBulletCreateNotify_CmdId || (exports.ClientBulletCreateNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.ChangeServerGlobalValueNotify.CmdId
 */
var ChangeServerGlobalValueNotify_CmdId;
(function (ChangeServerGlobalValueNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ChangeServerGlobalValueNotify_CmdId[ChangeServerGlobalValueNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 27;
     */
    ChangeServerGlobalValueNotify_CmdId[ChangeServerGlobalValueNotify_CmdId["CMD_ID"] = 27] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ChangeServerGlobalValueNotify_CmdId[ChangeServerGlobalValueNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ChangeServerGlobalValueNotify_CmdId[ChangeServerGlobalValueNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ChangeServerGlobalValueNotify_CmdId[ChangeServerGlobalValueNotify_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(ChangeServerGlobalValueNotify_CmdId = exports.ChangeServerGlobalValueNotify_CmdId || (exports.ChangeServerGlobalValueNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.GmTalkNotify.CmdId
 */
var GmTalkNotify_CmdId;
(function (GmTalkNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GmTalkNotify_CmdId[GmTalkNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 94;
     */
    GmTalkNotify_CmdId[GmTalkNotify_CmdId["CMD_ID"] = 94] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    GmTalkNotify_CmdId[GmTalkNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    GmTalkNotify_CmdId[GmTalkNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
})(GmTalkNotify_CmdId = exports.GmTalkNotify_CmdId || (exports.GmTalkNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.LastPacketPrintNotify.CmdId
 */
var LastPacketPrintNotify_CmdId;
(function (LastPacketPrintNotify_CmdId) {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    LastPacketPrintNotify_CmdId[LastPacketPrintNotify_CmdId["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: CMD_ID = 88;
     */
    LastPacketPrintNotify_CmdId[LastPacketPrintNotify_CmdId["CMD_ID"] = 88] = "CMD_ID";
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    LastPacketPrintNotify_CmdId[LastPacketPrintNotify_CmdId["ENET_CHANNEL_ID"] = 0] = "ENET_CHANNEL_ID";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    LastPacketPrintNotify_CmdId[LastPacketPrintNotify_CmdId["ENET_IS_RELIABLE"] = 1] = "ENET_IS_RELIABLE";
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    LastPacketPrintNotify_CmdId[LastPacketPrintNotify_CmdId["IS_ALLOW_CLIENT"] = 1] = "IS_ALLOW_CLIENT";
})(LastPacketPrintNotify_CmdId = exports.LastPacketPrintNotify_CmdId || (exports.LastPacketPrintNotify_CmdId = {}));
/**
 * @generated from protobuf enum com.midnights.game.SvrMsgId
 */
var SvrMsgId;
(function (SvrMsgId) {
    /**
     * @generated from protobuf enum value: MSG_UNKNOWN = 0;
     */
    SvrMsgId[SvrMsgId["MSG_UNKNOWN"] = 0] = "MSG_UNKNOWN";
    /**
     * @generated from protobuf enum value: MSG_BLOCK_REFRESH_COUNTDOWN = 1;
     */
    SvrMsgId[SvrMsgId["MSG_BLOCK_REFRESH_COUNTDOWN"] = 1] = "MSG_BLOCK_REFRESH_COUNTDOWN";
    /**
     * @generated from protobuf enum value: MSG_AVATAR_REVIVE_BY_STATUE = 2;
     */
    SvrMsgId[SvrMsgId["MSG_AVATAR_REVIVE_BY_STATUE"] = 2] = "MSG_AVATAR_REVIVE_BY_STATUE";
    /**
     * @generated from protobuf enum value: MSG_DAILY_TASK_REWARD_MAX_NUM = 3;
     */
    SvrMsgId[SvrMsgId["MSG_DAILY_TASK_REWARD_MAX_NUM"] = 3] = "MSG_DAILY_TASK_REWARD_MAX_NUM";
    /**
     * @generated from protobuf enum value: MSG_ROUTINE_TYPE_NOT_OPEN = 4;
     */
    SvrMsgId[SvrMsgId["MSG_ROUTINE_TYPE_NOT_OPEN"] = 4] = "MSG_ROUTINE_TYPE_NOT_OPEN";
    /**
     * @generated from protobuf enum value: MSG_ROUTINE_TYPE_REWARD_MAX_NUM = 5;
     */
    SvrMsgId[SvrMsgId["MSG_ROUTINE_TYPE_REWARD_MAX_NUM"] = 5] = "MSG_ROUTINE_TYPE_REWARD_MAX_NUM";
    /**
     * @generated from protobuf enum value: MSG_MECHANICUS_COIN_LIMIT = 6;
     */
    SvrMsgId[SvrMsgId["MSG_MECHANICUS_COIN_LIMIT"] = 6] = "MSG_MECHANICUS_COIN_LIMIT";
})(SvrMsgId = exports.SvrMsgId || (exports.SvrMsgId = {}));
/**
 * @generated from protobuf enum com.midnights.game.ServerLogType
 */
var ServerLogType;
(function (ServerLogType) {
    /**
     * @generated from protobuf enum value: SERVER_LOG_NONE = 0;
     */
    ServerLogType[ServerLogType["SERVER_LOG_NONE"] = 0] = "SERVER_LOG_NONE";
    /**
     * @generated from protobuf enum value: SERVER_LOG_ABILITY = 1;
     */
    ServerLogType[ServerLogType["SERVER_LOG_ABILITY"] = 1] = "SERVER_LOG_ABILITY";
    /**
     * @generated from protobuf enum value: SERVER_LOG_LEVEL = 2;
     */
    ServerLogType[ServerLogType["SERVER_LOG_LEVEL"] = 2] = "SERVER_LOG_LEVEL";
    /**
     * @generated from protobuf enum value: SERVER_LOG_ENTITY = 3;
     */
    ServerLogType[ServerLogType["SERVER_LOG_ENTITY"] = 3] = "SERVER_LOG_ENTITY";
    /**
     * @generated from protobuf enum value: SERVER_LOG_LUA = 4;
     */
    ServerLogType[ServerLogType["SERVER_LOG_LUA"] = 4] = "SERVER_LOG_LUA";
})(ServerLogType = exports.ServerLogType || (exports.ServerLogType = {}));
/**
 * @generated from protobuf enum com.midnights.game.ServerLogLevel
 */
var ServerLogLevel;
(function (ServerLogLevel) {
    /**
     * @generated from protobuf enum value: LOG_LEVEL_NONE = 0;
     */
    ServerLogLevel[ServerLogLevel["LOG_LEVEL_NONE"] = 0] = "LOG_LEVEL_NONE";
    /**
     * @generated from protobuf enum value: LOG_LEVEL_DEBUG = 1;
     */
    ServerLogLevel[ServerLogLevel["LOG_LEVEL_DEBUG"] = 1] = "LOG_LEVEL_DEBUG";
    /**
     * @generated from protobuf enum value: LOG_LEVEL_INFO = 2;
     */
    ServerLogLevel[ServerLogLevel["LOG_LEVEL_INFO"] = 2] = "LOG_LEVEL_INFO";
    /**
     * @generated from protobuf enum value: LOG_LEVEL_WARNING = 3;
     */
    ServerLogLevel[ServerLogLevel["LOG_LEVEL_WARNING"] = 3] = "LOG_LEVEL_WARNING";
    /**
     * @generated from protobuf enum value: LOG_LEVEL_ERROR = 4;
     */
    ServerLogLevel[ServerLogLevel["LOG_LEVEL_ERROR"] = 4] = "LOG_LEVEL_ERROR";
})(ServerLogLevel = exports.ServerLogLevel || (exports.ServerLogLevel = {}));
/**
 * @generated from protobuf enum com.midnights.game.ClientReconnectReason
 */
var ClientReconnectReason;
(function (ClientReconnectReason) {
    /**
     * @generated from protobuf enum value: CLIENT_RECONNNECT_NONE = 0;
     */
    ClientReconnectReason[ClientReconnectReason["CLIENT_RECONNNECT_NONE"] = 0] = "CLIENT_RECONNNECT_NONE";
    /**
     * @generated from protobuf enum value: CLIENT_RECONNNECT_QUIT_MP = 1;
     */
    ClientReconnectReason[ClientReconnectReason["CLIENT_RECONNNECT_QUIT_MP"] = 1] = "CLIENT_RECONNNECT_QUIT_MP";
})(ClientReconnectReason = exports.ClientReconnectReason || (exports.ClientReconnectReason = {}));
// @generated message type with reflection information, may provide speed optimized methods
class KeepAliveNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.KeepAliveNotify", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.KeepAliveNotify
 */
exports.KeepAliveNotify = new KeepAliveNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GmTalkReq$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.GmTalkReq", [
            { no: 13, name: "msg", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string msg */ 13:
                    message.msg = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string msg = 13; */
        if (message.msg !== undefined)
            writer.tag(13, runtime_1.WireType.LengthDelimited).string(message.msg);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GmTalkReq
 */
exports.GmTalkReq = new GmTalkReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GmTalkRsp$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.GmTalkRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "retmsg", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "msg", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                case /* optional string retmsg */ 3:
                    message.retmsg = reader.string();
                    break;
                case /* optional string msg */ 13:
                    message.msg = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, runtime_1.WireType.Varint).int32(message.retcode);
        /* optional string retmsg = 3; */
        if (message.retmsg !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.retmsg);
        /* optional string msg = 13; */
        if (message.msg !== undefined)
            writer.tag(13, runtime_1.WireType.LengthDelimited).string(message.msg);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GmTalkRsp
 */
exports.GmTalkRsp = new GmTalkRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MsgParam$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.MsgParam", [
            { no: 9, name: "int_param", kind: "scalar", oneof: "param", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "flt_param", kind: "scalar", oneof: "param", T: 2 /*ScalarType.FLOAT*/ },
            { no: 4, name: "str_param", kind: "scalar", oneof: "param", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { param: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 int_param */ 9:
                    message.param = {
                        oneofKind: "intParam",
                        intParam: reader.uint32()
                    };
                    break;
                case /* float flt_param */ 7:
                    message.param = {
                        oneofKind: "fltParam",
                        fltParam: reader.float()
                    };
                    break;
                case /* string str_param */ 4:
                    message.param = {
                        oneofKind: "strParam",
                        strParam: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* uint32 int_param = 9; */
        if (message.param.oneofKind === "intParam")
            writer.tag(9, runtime_1.WireType.Varint).uint32(message.param.intParam);
        /* float flt_param = 7; */
        if (message.param.oneofKind === "fltParam")
            writer.tag(7, runtime_1.WireType.Bit32).float(message.param.fltParam);
        /* string str_param = 4; */
        if (message.param.oneofKind === "strParam")
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.param.strParam);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MsgParam
 */
exports.MsgParam = new MsgParam$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShowMessageNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.ShowMessageNotify", [
            { no: 14, name: "msg_id", kind: "enum", opt: true, T: () => ["com.midnights.game.SvrMsgId", SvrMsgId] },
            { no: 13, name: "params", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => exports.MsgParam }
        ]);
    }
    create(value) {
        const message = { params: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.SvrMsgId msg_id */ 14:
                    message.msgId = reader.int32();
                    break;
                case /* repeated com.midnights.game.MsgParam params */ 13:
                    message.params.push(exports.MsgParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional com.midnights.game.SvrMsgId msg_id = 14; */
        if (message.msgId !== undefined)
            writer.tag(14, runtime_1.WireType.Varint).int32(message.msgId);
        /* repeated com.midnights.game.MsgParam params = 13; */
        for (let i = 0; i < message.params.length; i++)
            exports.MsgParam.internalBinaryWrite(message.params[i], writer.tag(13, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ShowMessageNotify
 */
exports.ShowMessageNotify = new ShowMessageNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PingReq$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.PingReq", [
            { no: 12, name: "client_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "ue_time", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/ },
            { no: 6, name: "total_tick_time", kind: "scalar", opt: true, T: 1 /*ScalarType.DOUBLE*/ },
            { no: 10, name: "sc_data", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 3, name: "seq", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 client_time */ 12:
                    message.clientTime = reader.uint32();
                    break;
                case /* optional float ue_time */ 14:
                    message.ueTime = reader.float();
                    break;
                case /* optional double total_tick_time */ 6:
                    message.totalTickTime = reader.double();
                    break;
                case /* optional bytes sc_data */ 10:
                    message.scData = reader.bytes();
                    break;
                case /* optional uint32 seq */ 3:
                    message.seq = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint32 client_time = 12; */
        if (message.clientTime !== undefined)
            writer.tag(12, runtime_1.WireType.Varint).uint32(message.clientTime);
        /* optional float ue_time = 14; */
        if (message.ueTime !== undefined)
            writer.tag(14, runtime_1.WireType.Bit32).float(message.ueTime);
        /* optional double total_tick_time = 6; */
        if (message.totalTickTime !== undefined)
            writer.tag(6, runtime_1.WireType.Bit64).double(message.totalTickTime);
        /* optional bytes sc_data = 10; */
        if (message.scData !== undefined)
            writer.tag(10, runtime_1.WireType.LengthDelimited).bytes(message.scData);
        /* optional uint32 seq = 3; */
        if (message.seq !== undefined)
            writer.tag(3, runtime_1.WireType.Varint).uint32(message.seq);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PingReq
 */
exports.PingReq = new PingReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PingRsp$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.PingRsp", [
            { no: 15, name: "client_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "seq", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 client_time */ 15:
                    message.clientTime = reader.uint32();
                    break;
                case /* optional int32 retcode */ 6:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 seq */ 13:
                    message.seq = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint32 client_time = 15; */
        if (message.clientTime !== undefined)
            writer.tag(15, runtime_1.WireType.Varint).uint32(message.clientTime);
        /* optional int32 retcode = 6; */
        if (message.retcode !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int32(message.retcode);
        /* optional uint32 seq = 13; */
        if (message.seq !== undefined)
            writer.tag(13, runtime_1.WireType.Varint).uint32(message.seq);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PingRsp
 */
exports.PingRsp = new PingRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOnlinePlayerListReq$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.GetOnlinePlayerListReq", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetOnlinePlayerListReq
 */
exports.GetOnlinePlayerListReq = new GetOnlinePlayerListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOnlinePlayerListRsp$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.GetOnlinePlayerListRsp", [
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "player_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => define_2.OnlinePlayerInfo }
        ]);
    }
    create(value) {
        const message = { playerInfoList: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 param */ 11:
                    message.param = reader.uint32();
                    break;
                case /* repeated com.midnights.game.OnlinePlayerInfo player_info_list */ 5:
                    message.playerInfoList.push(define_2.OnlinePlayerInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).int32(message.retcode);
        /* optional uint32 param = 11; */
        if (message.param !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).uint32(message.param);
        /* repeated com.midnights.game.OnlinePlayerInfo player_info_list = 5; */
        for (let i = 0; i < message.playerInfoList.length; i++)
            define_2.OnlinePlayerInfo.internalBinaryWrite(message.playerInfoList[i], writer.tag(5, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetOnlinePlayerListRsp
 */
exports.GetOnlinePlayerListRsp = new GetOnlinePlayerListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerTimeNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.ServerTimeNotify", [
            { no: 5, name: "server_time", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 server_time */ 5:
                    message.serverTime = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint64 server_time = 5; */
        if (message.serverTime !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).uint64(message.serverTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ServerTimeNotify
 */
exports.ServerTimeNotify = new ServerTimeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerLogNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.ServerLogNotify", [
            { no: 7, name: "server_log", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "log_type", kind: "enum", opt: true, T: () => ["com.midnights.game.ServerLogType", ServerLogType] },
            { no: 15, name: "log_level", kind: "enum", opt: true, T: () => ["com.midnights.game.ServerLogLevel", ServerLogLevel] }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string server_log */ 7:
                    message.serverLog = reader.string();
                    break;
                case /* optional com.midnights.game.ServerLogType log_type */ 9:
                    message.logType = reader.int32();
                    break;
                case /* optional com.midnights.game.ServerLogLevel log_level */ 15:
                    message.logLevel = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string server_log = 7; */
        if (message.serverLog !== undefined)
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.serverLog);
        /* optional com.midnights.game.ServerLogType log_type = 9; */
        if (message.logType !== undefined)
            writer.tag(9, runtime_1.WireType.Varint).int32(message.logType);
        /* optional com.midnights.game.ServerLogLevel log_level = 15; */
        if (message.logLevel !== undefined)
            writer.tag(15, runtime_1.WireType.Varint).int32(message.logLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ServerLogNotify
 */
exports.ServerLogNotify = new ServerLogNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ClientReconnectNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.ClientReconnectNotify", [
            { no: 6, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.ClientReconnectReason", ClientReconnectReason] }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ClientReconnectReason reason */ 6:
                    message.reason = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional com.midnights.game.ClientReconnectReason reason = 6; */
        if (message.reason !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).int32(message.reason);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ClientReconnectNotify
 */
exports.ClientReconnectNotify = new ClientReconnectNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RobotPushPlayerDataNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.RobotPushPlayerDataNotify", [
            { no: 6, name: "bin", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bytes bin */ 6:
                    message.bin = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional bytes bin = 6; */
        if (message.bin !== undefined)
            writer.tag(6, runtime_1.WireType.LengthDelimited).bytes(message.bin);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RobotPushPlayerDataNotify
 */
exports.RobotPushPlayerDataNotify = new RobotPushPlayerDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ClientReportNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.ClientReportNotify", [
            { no: 1, name: "report_type", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "report_value", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string report_type */ 1:
                    message.reportType = reader.string();
                    break;
                case /* optional string report_value */ 4:
                    message.reportValue = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string report_type = 1; */
        if (message.reportType !== undefined)
            writer.tag(1, runtime_1.WireType.LengthDelimited).string(message.reportType);
        /* optional string report_value = 4; */
        if (message.reportValue !== undefined)
            writer.tag(4, runtime_1.WireType.LengthDelimited).string(message.reportValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ClientReportNotify
 */
exports.ClientReportNotify = new ClientReportNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnionCmd$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.UnionCmd", [
            { no: 14, name: "body", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ },
            { no: 8, name: "message_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bytes body */ 14:
                    message.body = reader.bytes();
                    break;
                case /* optional uint32 message_id */ 8:
                    message.messageId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional bytes body = 14; */
        if (message.body !== undefined)
            writer.tag(14, runtime_1.WireType.LengthDelimited).bytes(message.body);
        /* optional uint32 message_id = 8; */
        if (message.messageId !== undefined)
            writer.tag(8, runtime_1.WireType.Varint).uint32(message.messageId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnionCmd
 */
exports.UnionCmd = new UnionCmd$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnionCmdNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.UnionCmdNotify", [
            { no: 1, name: "cmd_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => exports.UnionCmd }
        ]);
    }
    create(value) {
        const message = { cmdList: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.UnionCmd cmd_list */ 1:
                    message.cmdList.push(exports.UnionCmd.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated com.midnights.game.UnionCmd cmd_list = 1; */
        for (let i = 0; i < message.cmdList.length; i++)
            exports.UnionCmd.internalBinaryWrite(message.cmdList[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnionCmdNotify
 */
exports.UnionCmdNotify = new UnionCmdNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOnlinePlayerInfoReq$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.GetOnlinePlayerInfoReq", [
            { no: 15, name: "is_online_id", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "target_uid", kind: "scalar", oneof: "playerId", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "online_id", kind: "scalar", oneof: "playerId", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "psn_id", kind: "scalar", oneof: "playerId", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { playerId: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_online_id */ 15:
                    message.isOnlineId = reader.bool();
                    break;
                case /* uint32 target_uid */ 9:
                    message.playerId = {
                        oneofKind: "targetUid",
                        targetUid: reader.uint32()
                    };
                    break;
                case /* string online_id */ 7:
                    message.playerId = {
                        oneofKind: "onlineId",
                        onlineId: reader.string()
                    };
                    break;
                case /* string psn_id */ 2:
                    message.playerId = {
                        oneofKind: "psnId",
                        psnId: reader.string()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional bool is_online_id = 15; */
        if (message.isOnlineId !== undefined)
            writer.tag(15, runtime_1.WireType.Varint).bool(message.isOnlineId);
        /* uint32 target_uid = 9; */
        if (message.playerId.oneofKind === "targetUid")
            writer.tag(9, runtime_1.WireType.Varint).uint32(message.playerId.targetUid);
        /* string online_id = 7; */
        if (message.playerId.oneofKind === "onlineId")
            writer.tag(7, runtime_1.WireType.LengthDelimited).string(message.playerId.onlineId);
        /* string psn_id = 2; */
        if (message.playerId.oneofKind === "psnId")
            writer.tag(2, runtime_1.WireType.LengthDelimited).string(message.playerId.psnId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetOnlinePlayerInfoReq
 */
exports.GetOnlinePlayerInfoReq = new GetOnlinePlayerInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetOnlinePlayerInfoRsp$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.GetOnlinePlayerInfoRsp", [
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "target_player_info", kind: "message", T: () => define_2.OnlinePlayerInfo }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 target_uid */ 7:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional uint32 param */ 4:
                    message.param = reader.uint32();
                    break;
                case /* optional com.midnights.game.OnlinePlayerInfo target_player_info */ 14:
                    message.targetPlayerInfo = define_2.OnlinePlayerInfo.internalBinaryRead(reader, reader.uint32(), options, message.targetPlayerInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).int32(message.retcode);
        /* optional uint32 target_uid = 7; */
        if (message.targetUid !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).uint32(message.targetUid);
        /* optional uint32 param = 4; */
        if (message.param !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).uint32(message.param);
        /* optional com.midnights.game.OnlinePlayerInfo target_player_info = 14; */
        if (message.targetPlayerInfo)
            define_2.OnlinePlayerInfo.internalBinaryWrite(message.targetPlayerInfo, writer.tag(14, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetOnlinePlayerInfoRsp
 */
exports.GetOnlinePlayerInfoRsp = new GetOnlinePlayerInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SegmentInfo$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.SegmentInfo", [
            { no: 3, name: "offset", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "module", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "size", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 offset */ 3:
                    message.offset = reader.uint32();
                    break;
                case /* optional uint32 module */ 7:
                    message.module = reader.uint32();
                    break;
                case /* optional uint32 size */ 8:
                    message.size = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint32 offset = 3; */
        if (message.offset !== undefined)
            writer.tag(3, runtime_1.WireType.Varint).uint32(message.offset);
        /* optional uint32 module = 7; */
        if (message.module !== undefined)
            writer.tag(7, runtime_1.WireType.Varint).uint32(message.module);
        /* optional uint32 size = 8; */
        if (message.size !== undefined)
            writer.tag(8, runtime_1.WireType.Varint).uint32(message.size);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SegmentInfo
 */
exports.SegmentInfo = new SegmentInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SegmentCRCInfo$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.SegmentCRCInfo", [
            { no: 13, name: "module", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "size", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "crc", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "offset", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 module */ 13:
                    message.module = reader.uint32();
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 size */ 10:
                    message.size = reader.uint32();
                    break;
                case /* optional string crc */ 3:
                    message.crc = reader.string();
                    break;
                case /* optional uint32 offset */ 11:
                    message.offset = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint32 module = 13; */
        if (message.module !== undefined)
            writer.tag(13, runtime_1.WireType.Varint).uint32(message.module);
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, runtime_1.WireType.Varint).int32(message.retcode);
        /* optional uint32 size = 10; */
        if (message.size !== undefined)
            writer.tag(10, runtime_1.WireType.Varint).uint32(message.size);
        /* optional string crc = 3; */
        if (message.crc !== undefined)
            writer.tag(3, runtime_1.WireType.LengthDelimited).string(message.crc);
        /* optional uint32 offset = 11; */
        if (message.offset !== undefined)
            writer.tag(11, runtime_1.WireType.Varint).uint32(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SegmentCRCInfo
 */
exports.SegmentCRCInfo = new SegmentCRCInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckSegmentCRCNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.CheckSegmentCRCNotify", [
            { no: 6, name: "info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => exports.SegmentInfo }
        ]);
    }
    create(value) {
        const message = { infoList: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.SegmentInfo info_list */ 6:
                    message.infoList.push(exports.SegmentInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated com.midnights.game.SegmentInfo info_list = 6; */
        for (let i = 0; i < message.infoList.length; i++)
            exports.SegmentInfo.internalBinaryWrite(message.infoList[i], writer.tag(6, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CheckSegmentCRCNotify
 */
exports.CheckSegmentCRCNotify = new CheckSegmentCRCNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CheckSegmentCRCReq$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.CheckSegmentCRCReq", [
            { no: 1, name: "info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => exports.SegmentCRCInfo }
        ]);
    }
    create(value) {
        const message = { infoList: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.SegmentCRCInfo info_list */ 1:
                    message.infoList.push(exports.SegmentCRCInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated com.midnights.game.SegmentCRCInfo info_list = 1; */
        for (let i = 0; i < message.infoList.length; i++)
            exports.SegmentCRCInfo.internalBinaryWrite(message.infoList[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CheckSegmentCRCReq
 */
exports.CheckSegmentCRCReq = new CheckSegmentCRCReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerRTTInfo$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.PlayerRTTInfo", [
            { no: 2, name: "rtt", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 rtt */ 2:
                    message.rtt = reader.uint32();
                    break;
                case /* optional uint32 uid */ 1:
                    message.uid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint32 rtt = 2; */
        if (message.rtt !== undefined)
            writer.tag(2, runtime_1.WireType.Varint).uint32(message.rtt);
        /* optional uint32 uid = 1; */
        if (message.uid !== undefined)
            writer.tag(1, runtime_1.WireType.Varint).uint32(message.uid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerRTTInfo
 */
exports.PlayerRTTInfo = new PlayerRTTInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldPlayerRTTNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.WorldPlayerRTTNotify", [
            { no: 1, name: "player_rtt_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => exports.PlayerRTTInfo }
        ]);
    }
    create(value) {
        const message = { playerRttList: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.PlayerRTTInfo player_rtt_list */ 1:
                    message.playerRttList.push(exports.PlayerRTTInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated com.midnights.game.PlayerRTTInfo player_rtt_list = 1; */
        for (let i = 0; i < message.playerRttList.length; i++)
            exports.PlayerRTTInfo.internalBinaryWrite(message.playerRttList[i], writer.tag(1, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldPlayerRTTNotify
 */
exports.WorldPlayerRTTNotify = new WorldPlayerRTTNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EchoNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.EchoNotify", [
            { no: 4, name: "seq_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "content", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 seq_id */ 4:
                    message.seqId = reader.uint32();
                    break;
                case /* optional string content */ 9:
                    message.content = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint32 seq_id = 4; */
        if (message.seqId !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).uint32(message.seqId);
        /* optional string content = 9; */
        if (message.content !== undefined)
            writer.tag(9, runtime_1.WireType.LengthDelimited).string(message.content);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EchoNotify
 */
exports.EchoNotify = new EchoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateRedPointNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.UpdateRedPointNotify", [
            { no: 12, name: "red_point_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => define_1.RedPointData }
        ]);
    }
    create(value) {
        const message = { redPointList: [] };
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.RedPointData red_point_list */ 12:
                    message.redPointList.push(define_1.RedPointData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated com.midnights.game.RedPointData red_point_list = 12; */
        for (let i = 0; i < message.redPointList.length; i++)
            define_1.RedPointData.internalBinaryWrite(message.redPointList[i], writer.tag(12, runtime_1.WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdateRedPointNotify
 */
exports.UpdateRedPointNotify = new UpdateRedPointNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ClientBulletCreateNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.ClientBulletCreateNotify", [
            { no: 6, name: "param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 param */ 6:
                    message.param = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint32 param = 6; */
        if (message.param !== undefined)
            writer.tag(6, runtime_1.WireType.Varint).uint32(message.param);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ClientBulletCreateNotify
 */
exports.ClientBulletCreateNotify = new ClientBulletCreateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeServerGlobalValueNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.ChangeServerGlobalValueNotify", [
            { no: 4, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 entity_id */ 4:
                    message.entityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional uint32 entity_id = 4; */
        if (message.entityId !== undefined)
            writer.tag(4, runtime_1.WireType.Varint).uint32(message.entityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeServerGlobalValueNotify
 */
exports.ChangeServerGlobalValueNotify = new ChangeServerGlobalValueNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GmTalkNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.GmTalkNotify", [
            { no: 5, name: "msg", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string msg */ 5:
                    message.msg = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? runtime_2.UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* optional string msg = 5; */
        if (message.msg !== undefined)
            writer.tag(5, runtime_1.WireType.LengthDelimited).string(message.msg);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GmTalkNotify
 */
exports.GmTalkNotify = new GmTalkNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LastPacketPrintNotify$Type extends runtime_5.MessageType {
    constructor() {
        super("com.midnights.game.LastPacketPrintNotify", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, runtime_4.MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            (0, runtime_3.reflectionMergePartial)(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? runtime_2.UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.LastPacketPrintNotify
 */
exports.LastPacketPrintNotify = new LastPacketPrintNotify$Type();
