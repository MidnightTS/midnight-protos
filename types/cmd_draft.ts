// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_draft.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message com.midnights.game.DraftOwnerStartInviteReq
 */
export interface DraftOwnerStartInviteReq {
    /**
     * @generated from protobuf field: optional uint32 draft_id = 14;
     */
    draftId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftOwnerStartInviteReq.CmdId
 */
export enum DraftOwnerStartInviteReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5412;
     */
    CMD_ID = 5412,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftInviteFailInfo
 */
export interface DraftInviteFailInfo {
    /**
     * @generated from protobuf field: optional uint32 uid = 8;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.DraftInviteFailReason reason = 5;
     */
    reason?: DraftInviteFailReason;
}
/**
 * @generated from protobuf message com.midnights.game.DraftOwnerStartInviteRsp
 */
export interface DraftOwnerStartInviteRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.DraftInviteFailInfo invite_fail_info_list = 15;
     */
    inviteFailInfoList: DraftInviteFailInfo[];
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 wrong_uid = 3;
     */
    wrongUid?: number;
    /**
     * @generated from protobuf field: optional uint32 draft_id = 14;
     */
    draftId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftOwnerStartInviteRsp.CmdId
 */
export enum DraftOwnerStartInviteRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5435;
     */
    CMD_ID = 5435,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftOwnerInviteNotify
 */
export interface DraftOwnerInviteNotify {
    /**
     * @generated from protobuf field: optional uint32 draft_id = 4;
     */
    draftId?: number;
    /**
     * @generated from protobuf field: optional uint32 invite_deadline_time = 15;
     */
    inviteDeadlineTime?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftOwnerInviteNotify.CmdId
 */
export enum DraftOwnerInviteNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5407;
     */
    CMD_ID = 5407,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftGuestReplyInviteReq
 */
export interface DraftGuestReplyInviteReq {
    /**
     * @generated from protobuf field: optional uint32 draft_id = 10;
     */
    draftId?: number;
    /**
     * @generated from protobuf field: optional bool is_agree = 3;
     */
    isAgree?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftGuestReplyInviteReq.CmdId
 */
export enum DraftGuestReplyInviteReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5421;
     */
    CMD_ID = 5421,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftGuestReplyInviteRsp
 */
export interface DraftGuestReplyInviteRsp {
    /**
     * @generated from protobuf field: optional uint32 draft_id = 3;
     */
    draftId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional bool is_agree = 10;
     */
    isAgree?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftGuestReplyInviteRsp.CmdId
 */
export enum DraftGuestReplyInviteRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5403;
     */
    CMD_ID = 5403,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftGuestReplyInviteNotify
 */
export interface DraftGuestReplyInviteNotify {
    /**
     * @generated from protobuf field: optional uint32 draft_id = 5;
     */
    draftId?: number;
    /**
     * @generated from protobuf field: optional bool is_agree = 9;
     */
    isAgree?: boolean;
    /**
     * @generated from protobuf field: optional uint32 guest_uid = 10;
     */
    guestUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftGuestReplyInviteNotify.CmdId
 */
export enum DraftGuestReplyInviteNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5490;
     */
    CMD_ID = 5490,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftInviteResultNotify
 */
export interface DraftInviteResultNotify {
    /**
     * @generated from protobuf field: optional bool is_all_argee = 9;
     */
    isAllArgee?: boolean;
    /**
     * @generated from protobuf field: optional uint32 draft_id = 13;
     */
    draftId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftInviteResultNotify.CmdId
 */
export enum DraftInviteResultNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5473;
     */
    CMD_ID = 5473,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftOwnerTwiceConfirmNotify
 */
export interface DraftOwnerTwiceConfirmNotify {
    /**
     * @generated from protobuf field: optional uint32 twice_confirm_deadline_time = 15;
     */
    twiceConfirmDeadlineTime?: number;
    /**
     * @generated from protobuf field: optional uint32 draft_id = 14;
     */
    draftId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftOwnerTwiceConfirmNotify.CmdId
 */
export enum DraftOwnerTwiceConfirmNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5499;
     */
    CMD_ID = 5499,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftGuestReplyTwiceConfirmReq
 */
export interface DraftGuestReplyTwiceConfirmReq {
    /**
     * @generated from protobuf field: optional bool is_agree = 15;
     */
    isAgree?: boolean;
    /**
     * @generated from protobuf field: optional uint32 draft_id = 14;
     */
    draftId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftGuestReplyTwiceConfirmReq.CmdId
 */
export enum DraftGuestReplyTwiceConfirmReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5431;
     */
    CMD_ID = 5431,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftGuestReplyTwiceConfirmRsp
 */
export interface DraftGuestReplyTwiceConfirmRsp {
    /**
     * @generated from protobuf field: optional uint32 draft_id = 5;
     */
    draftId?: number;
    /**
     * @generated from protobuf field: optional bool is_agree = 13;
     */
    isAgree?: boolean;
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftGuestReplyTwiceConfirmRsp.CmdId
 */
export enum DraftGuestReplyTwiceConfirmRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5475;
     */
    CMD_ID = 5475,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftTwiceConfirmResultNotify
 */
export interface DraftTwiceConfirmResultNotify {
    /**
     * @generated from protobuf field: optional bool is_all_argee = 7;
     */
    isAllArgee?: boolean;
    /**
     * @generated from protobuf field: optional uint32 draft_id = 1;
     */
    draftId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftTwiceConfirmResultNotify.CmdId
 */
export enum DraftTwiceConfirmResultNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5448;
     */
    CMD_ID = 5448,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DraftGuestReplyTwiceConfirmNotify
 */
export interface DraftGuestReplyTwiceConfirmNotify {
    /**
     * @generated from protobuf field: optional bool is_agree = 14;
     */
    isAgree?: boolean;
    /**
     * @generated from protobuf field: optional uint32 draft_id = 15;
     */
    draftId?: number;
    /**
     * @generated from protobuf field: optional uint32 guest_uid = 7;
     */
    guestUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DraftGuestReplyTwiceConfirmNotify.CmdId
 */
export enum DraftGuestReplyTwiceConfirmNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5497;
     */
    CMD_ID = 5497,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.DraftInviteFailReason
 */
export enum DraftInviteFailReason {
    /**
     * @generated from protobuf enum value: DRAFT_FAIL_UNKNOWN = 0;
     */
    DRAFT_FAIL_UNKNOWN = 0,
    /**
     * @generated from protobuf enum value: DRAFT_ACTIVITY_NOT_OPEN = 1;
     */
    DRAFT_ACTIVITY_NOT_OPEN = 1,
    /**
     * @generated from protobuf enum value: DRAFT_ACTIVITY_PLAY_NOT_OPEN = 2;
     */
    DRAFT_ACTIVITY_PLAY_NOT_OPEN = 2,
    /**
     * @generated from protobuf enum value: DRAFT_SCENE_NOT_MEET = 3;
     */
    DRAFT_SCENE_NOT_MEET = 3,
    /**
     * @generated from protobuf enum value: DRAFT_WORLD_NOT_MEET = 4;
     */
    DRAFT_WORLD_NOT_MEET = 4,
    /**
     * @generated from protobuf enum value: DRAFT_PLAY_LIMIT_NOT_MEET = 5;
     */
    DRAFT_PLAY_LIMIT_NOT_MEET = 5
}
// @generated message type with reflection information, may provide speed optimized methods
class DraftOwnerStartInviteReq$Type extends MessageType<DraftOwnerStartInviteReq> {
    constructor() {
        super("com.midnights.game.DraftOwnerStartInviteReq", [
            { no: 14, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftOwnerStartInviteReq>): DraftOwnerStartInviteReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftOwnerStartInviteReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftOwnerStartInviteReq): DraftOwnerStartInviteReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 draft_id */ 14:
                    message.draftId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftOwnerStartInviteReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 draft_id = 14; */
        if (message.draftId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.draftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftOwnerStartInviteReq
 */
export const DraftOwnerStartInviteReq = new DraftOwnerStartInviteReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftInviteFailInfo$Type extends MessageType<DraftInviteFailInfo> {
    constructor() {
        super("com.midnights.game.DraftInviteFailInfo", [
            { no: 8, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.DraftInviteFailReason", DraftInviteFailReason] }
        ]);
    }
    create(value?: PartialMessage<DraftInviteFailInfo>): DraftInviteFailInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftInviteFailInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftInviteFailInfo): DraftInviteFailInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 8:
                    message.uid = reader.uint32();
                    break;
                case /* optional com.midnights.game.DraftInviteFailReason reason */ 5:
                    message.reason = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftInviteFailInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 8; */
        if (message.uid !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.uid);
        /* optional com.midnights.game.DraftInviteFailReason reason = 5; */
        if (message.reason !== undefined)
            writer.tag(5, WireType.Varint).int32(message.reason);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftInviteFailInfo
 */
export const DraftInviteFailInfo = new DraftInviteFailInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftOwnerStartInviteRsp$Type extends MessageType<DraftOwnerStartInviteRsp> {
    constructor() {
        super("com.midnights.game.DraftOwnerStartInviteRsp", [
            { no: 15, name: "invite_fail_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => DraftInviteFailInfo },
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "wrong_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftOwnerStartInviteRsp>): DraftOwnerStartInviteRsp {
        const message = { inviteFailInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftOwnerStartInviteRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftOwnerStartInviteRsp): DraftOwnerStartInviteRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.DraftInviteFailInfo invite_fail_info_list */ 15:
                    message.inviteFailInfoList.push(DraftInviteFailInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 wrong_uid */ 3:
                    message.wrongUid = reader.uint32();
                    break;
                case /* optional uint32 draft_id */ 14:
                    message.draftId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftOwnerStartInviteRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.DraftInviteFailInfo invite_fail_info_list = 15; */
        for (let i = 0; i < message.inviteFailInfoList.length; i++)
            DraftInviteFailInfo.internalBinaryWrite(message.inviteFailInfoList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        /* optional uint32 wrong_uid = 3; */
        if (message.wrongUid !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.wrongUid);
        /* optional uint32 draft_id = 14; */
        if (message.draftId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.draftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftOwnerStartInviteRsp
 */
export const DraftOwnerStartInviteRsp = new DraftOwnerStartInviteRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftOwnerInviteNotify$Type extends MessageType<DraftOwnerInviteNotify> {
    constructor() {
        super("com.midnights.game.DraftOwnerInviteNotify", [
            { no: 4, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "invite_deadline_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftOwnerInviteNotify>): DraftOwnerInviteNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftOwnerInviteNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftOwnerInviteNotify): DraftOwnerInviteNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 draft_id */ 4:
                    message.draftId = reader.uint32();
                    break;
                case /* optional uint32 invite_deadline_time */ 15:
                    message.inviteDeadlineTime = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftOwnerInviteNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 draft_id = 4; */
        if (message.draftId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.draftId);
        /* optional uint32 invite_deadline_time = 15; */
        if (message.inviteDeadlineTime !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.inviteDeadlineTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftOwnerInviteNotify
 */
export const DraftOwnerInviteNotify = new DraftOwnerInviteNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftGuestReplyInviteReq$Type extends MessageType<DraftGuestReplyInviteReq> {
    constructor() {
        super("com.midnights.game.DraftGuestReplyInviteReq", [
            { no: 10, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "is_agree", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<DraftGuestReplyInviteReq>): DraftGuestReplyInviteReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftGuestReplyInviteReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftGuestReplyInviteReq): DraftGuestReplyInviteReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 draft_id */ 10:
                    message.draftId = reader.uint32();
                    break;
                case /* optional bool is_agree */ 3:
                    message.isAgree = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftGuestReplyInviteReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 draft_id = 10; */
        if (message.draftId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.draftId);
        /* optional bool is_agree = 3; */
        if (message.isAgree !== undefined)
            writer.tag(3, WireType.Varint).bool(message.isAgree);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftGuestReplyInviteReq
 */
export const DraftGuestReplyInviteReq = new DraftGuestReplyInviteReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftGuestReplyInviteRsp$Type extends MessageType<DraftGuestReplyInviteRsp> {
    constructor() {
        super("com.midnights.game.DraftGuestReplyInviteRsp", [
            { no: 3, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "is_agree", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<DraftGuestReplyInviteRsp>): DraftGuestReplyInviteRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftGuestReplyInviteRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftGuestReplyInviteRsp): DraftGuestReplyInviteRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 draft_id */ 3:
                    message.draftId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* optional bool is_agree */ 10:
                    message.isAgree = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftGuestReplyInviteRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 draft_id = 3; */
        if (message.draftId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.draftId);
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* optional bool is_agree = 10; */
        if (message.isAgree !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isAgree);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftGuestReplyInviteRsp
 */
export const DraftGuestReplyInviteRsp = new DraftGuestReplyInviteRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftGuestReplyInviteNotify$Type extends MessageType<DraftGuestReplyInviteNotify> {
    constructor() {
        super("com.midnights.game.DraftGuestReplyInviteNotify", [
            { no: 5, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "is_agree", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "guest_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftGuestReplyInviteNotify>): DraftGuestReplyInviteNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftGuestReplyInviteNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftGuestReplyInviteNotify): DraftGuestReplyInviteNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 draft_id */ 5:
                    message.draftId = reader.uint32();
                    break;
                case /* optional bool is_agree */ 9:
                    message.isAgree = reader.bool();
                    break;
                case /* optional uint32 guest_uid */ 10:
                    message.guestUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftGuestReplyInviteNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 draft_id = 5; */
        if (message.draftId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.draftId);
        /* optional bool is_agree = 9; */
        if (message.isAgree !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isAgree);
        /* optional uint32 guest_uid = 10; */
        if (message.guestUid !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.guestUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftGuestReplyInviteNotify
 */
export const DraftGuestReplyInviteNotify = new DraftGuestReplyInviteNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftInviteResultNotify$Type extends MessageType<DraftInviteResultNotify> {
    constructor() {
        super("com.midnights.game.DraftInviteResultNotify", [
            { no: 9, name: "is_all_argee", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftInviteResultNotify>): DraftInviteResultNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftInviteResultNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftInviteResultNotify): DraftInviteResultNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_all_argee */ 9:
                    message.isAllArgee = reader.bool();
                    break;
                case /* optional uint32 draft_id */ 13:
                    message.draftId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftInviteResultNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_all_argee = 9; */
        if (message.isAllArgee !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isAllArgee);
        /* optional uint32 draft_id = 13; */
        if (message.draftId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.draftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftInviteResultNotify
 */
export const DraftInviteResultNotify = new DraftInviteResultNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftOwnerTwiceConfirmNotify$Type extends MessageType<DraftOwnerTwiceConfirmNotify> {
    constructor() {
        super("com.midnights.game.DraftOwnerTwiceConfirmNotify", [
            { no: 15, name: "twice_confirm_deadline_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftOwnerTwiceConfirmNotify>): DraftOwnerTwiceConfirmNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftOwnerTwiceConfirmNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftOwnerTwiceConfirmNotify): DraftOwnerTwiceConfirmNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 twice_confirm_deadline_time */ 15:
                    message.twiceConfirmDeadlineTime = reader.uint32();
                    break;
                case /* optional uint32 draft_id */ 14:
                    message.draftId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftOwnerTwiceConfirmNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 twice_confirm_deadline_time = 15; */
        if (message.twiceConfirmDeadlineTime !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.twiceConfirmDeadlineTime);
        /* optional uint32 draft_id = 14; */
        if (message.draftId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.draftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftOwnerTwiceConfirmNotify
 */
export const DraftOwnerTwiceConfirmNotify = new DraftOwnerTwiceConfirmNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftGuestReplyTwiceConfirmReq$Type extends MessageType<DraftGuestReplyTwiceConfirmReq> {
    constructor() {
        super("com.midnights.game.DraftGuestReplyTwiceConfirmReq", [
            { no: 15, name: "is_agree", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftGuestReplyTwiceConfirmReq>): DraftGuestReplyTwiceConfirmReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftGuestReplyTwiceConfirmReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftGuestReplyTwiceConfirmReq): DraftGuestReplyTwiceConfirmReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_agree */ 15:
                    message.isAgree = reader.bool();
                    break;
                case /* optional uint32 draft_id */ 14:
                    message.draftId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftGuestReplyTwiceConfirmReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_agree = 15; */
        if (message.isAgree !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isAgree);
        /* optional uint32 draft_id = 14; */
        if (message.draftId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.draftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftGuestReplyTwiceConfirmReq
 */
export const DraftGuestReplyTwiceConfirmReq = new DraftGuestReplyTwiceConfirmReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftGuestReplyTwiceConfirmRsp$Type extends MessageType<DraftGuestReplyTwiceConfirmRsp> {
    constructor() {
        super("com.midnights.game.DraftGuestReplyTwiceConfirmRsp", [
            { no: 5, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "is_agree", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftGuestReplyTwiceConfirmRsp>): DraftGuestReplyTwiceConfirmRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftGuestReplyTwiceConfirmRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftGuestReplyTwiceConfirmRsp): DraftGuestReplyTwiceConfirmRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 draft_id */ 5:
                    message.draftId = reader.uint32();
                    break;
                case /* optional bool is_agree */ 13:
                    message.isAgree = reader.bool();
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftGuestReplyTwiceConfirmRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 draft_id = 5; */
        if (message.draftId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.draftId);
        /* optional bool is_agree = 13; */
        if (message.isAgree !== undefined)
            writer.tag(13, WireType.Varint).bool(message.isAgree);
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftGuestReplyTwiceConfirmRsp
 */
export const DraftGuestReplyTwiceConfirmRsp = new DraftGuestReplyTwiceConfirmRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftTwiceConfirmResultNotify$Type extends MessageType<DraftTwiceConfirmResultNotify> {
    constructor() {
        super("com.midnights.game.DraftTwiceConfirmResultNotify", [
            { no: 7, name: "is_all_argee", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 1, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftTwiceConfirmResultNotify>): DraftTwiceConfirmResultNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftTwiceConfirmResultNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftTwiceConfirmResultNotify): DraftTwiceConfirmResultNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_all_argee */ 7:
                    message.isAllArgee = reader.bool();
                    break;
                case /* optional uint32 draft_id */ 1:
                    message.draftId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftTwiceConfirmResultNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_all_argee = 7; */
        if (message.isAllArgee !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isAllArgee);
        /* optional uint32 draft_id = 1; */
        if (message.draftId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.draftId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftTwiceConfirmResultNotify
 */
export const DraftTwiceConfirmResultNotify = new DraftTwiceConfirmResultNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DraftGuestReplyTwiceConfirmNotify$Type extends MessageType<DraftGuestReplyTwiceConfirmNotify> {
    constructor() {
        super("com.midnights.game.DraftGuestReplyTwiceConfirmNotify", [
            { no: 14, name: "is_agree", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "draft_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "guest_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DraftGuestReplyTwiceConfirmNotify>): DraftGuestReplyTwiceConfirmNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DraftGuestReplyTwiceConfirmNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DraftGuestReplyTwiceConfirmNotify): DraftGuestReplyTwiceConfirmNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_agree */ 14:
                    message.isAgree = reader.bool();
                    break;
                case /* optional uint32 draft_id */ 15:
                    message.draftId = reader.uint32();
                    break;
                case /* optional uint32 guest_uid */ 7:
                    message.guestUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DraftGuestReplyTwiceConfirmNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_agree = 14; */
        if (message.isAgree !== undefined)
            writer.tag(14, WireType.Varint).bool(message.isAgree);
        /* optional uint32 draft_id = 15; */
        if (message.draftId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.draftId);
        /* optional uint32 guest_uid = 7; */
        if (message.guestUid !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.guestUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DraftGuestReplyTwiceConfirmNotify
 */
export const DraftGuestReplyTwiceConfirmNotify = new DraftGuestReplyTwiceConfirmNotify$Type();
