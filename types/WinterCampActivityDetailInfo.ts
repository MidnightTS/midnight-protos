// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "WinterCampActivityDetailInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { WinterCampRaceStageInfo } from "./WinterCampRaceStageInfo";
import { ItemParam } from "./ItemParam";
import { WinterCampStageInfo } from "./WinterCampStageInfo";
/**
 * @generated from protobuf message WinterCampActivityDetailInfo
 */
export interface WinterCampActivityDetailInfo {
    /**
     * @generated from protobuf field: WinterCampStageInfo explore_info = 3;
     */
    exploreInfo?: WinterCampStageInfo;
    /**
     * @generated from protobuf field: repeated uint32 Unk3300_KCGKNJFGCFC = 4 [json_name = "Unk3300KCGKNJFGCFC"];
     */
    unk3300KCGKNJFGCFC: number[];
    /**
     * @generated from protobuf field: bool is_content_closed = 12;
     */
    isContentClosed: boolean;
    /**
     * @generated from protobuf field: repeated uint32 Unk3300_CMNIBPMOECO = 5 [json_name = "Unk3300CMNIBPMOECO"];
     */
    unk3300CMNIBPMOECO: number[];
    /**
     * @generated from protobuf field: repeated uint32 Unk3300_FHNNJJDGLOO = 6 [json_name = "Unk3300FHNNJJDGLOO"];
     */
    unk3300FHNNJJDGLOO: number[];
    /**
     * @generated from protobuf field: repeated ItemParam used_item_list = 14;
     */
    usedItemList: ItemParam[];
    /**
     * @generated from protobuf field: WinterCampStageInfo battle_info = 9;
     */
    battleInfo?: WinterCampStageInfo;
    /**
     * @generated from protobuf field: repeated WinterCampRaceStageInfo race_info_list = 13;
     */
    raceInfoList: WinterCampRaceStageInfo[];
}
// @generated message type with reflection information, may provide speed optimized methods
class WinterCampActivityDetailInfo$Type extends MessageType<WinterCampActivityDetailInfo> {
    constructor() {
        super("WinterCampActivityDetailInfo", [
            { no: 3, name: "explore_info", kind: "message", T: () => WinterCampStageInfo },
            { no: 4, name: "Unk3300_KCGKNJFGCFC", kind: "scalar", jsonName: "Unk3300KCGKNJFGCFC", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "is_content_closed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "Unk3300_CMNIBPMOECO", kind: "scalar", jsonName: "Unk3300CMNIBPMOECO", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "Unk3300_FHNNJJDGLOO", kind: "scalar", jsonName: "Unk3300FHNNJJDGLOO", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "used_item_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ItemParam },
            { no: 9, name: "battle_info", kind: "message", T: () => WinterCampStageInfo },
            { no: 13, name: "race_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => WinterCampRaceStageInfo }
        ]);
    }
    create(value?: PartialMessage<WinterCampActivityDetailInfo>): WinterCampActivityDetailInfo {
        const message = { unk3300KCGKNJFGCFC: [], isContentClosed: false, unk3300CMNIBPMOECO: [], unk3300FHNNJJDGLOO: [], usedItemList: [], raceInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WinterCampActivityDetailInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WinterCampActivityDetailInfo): WinterCampActivityDetailInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* WinterCampStageInfo explore_info */ 3:
                    message.exploreInfo = WinterCampStageInfo.internalBinaryRead(reader, reader.uint32(), options, message.exploreInfo);
                    break;
                case /* repeated uint32 Unk3300_KCGKNJFGCFC = 4 [json_name = "Unk3300KCGKNJFGCFC"];*/ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.unk3300KCGKNJFGCFC.push(reader.uint32());
                    else
                        message.unk3300KCGKNJFGCFC.push(reader.uint32());
                    break;
                case /* bool is_content_closed */ 12:
                    message.isContentClosed = reader.bool();
                    break;
                case /* repeated uint32 Unk3300_CMNIBPMOECO = 5 [json_name = "Unk3300CMNIBPMOECO"];*/ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.unk3300CMNIBPMOECO.push(reader.uint32());
                    else
                        message.unk3300CMNIBPMOECO.push(reader.uint32());
                    break;
                case /* repeated uint32 Unk3300_FHNNJJDGLOO = 6 [json_name = "Unk3300FHNNJJDGLOO"];*/ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.unk3300FHNNJJDGLOO.push(reader.uint32());
                    else
                        message.unk3300FHNNJJDGLOO.push(reader.uint32());
                    break;
                case /* repeated ItemParam used_item_list */ 14:
                    message.usedItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* WinterCampStageInfo battle_info */ 9:
                    message.battleInfo = WinterCampStageInfo.internalBinaryRead(reader, reader.uint32(), options, message.battleInfo);
                    break;
                case /* repeated WinterCampRaceStageInfo race_info_list */ 13:
                    message.raceInfoList.push(WinterCampRaceStageInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WinterCampActivityDetailInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* WinterCampStageInfo explore_info = 3; */
        if (message.exploreInfo)
            WinterCampStageInfo.internalBinaryWrite(message.exploreInfo, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint32 Unk3300_KCGKNJFGCFC = 4 [json_name = "Unk3300KCGKNJFGCFC"]; */
        if (message.unk3300KCGKNJFGCFC.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.unk3300KCGKNJFGCFC.length; i++)
                writer.uint32(message.unk3300KCGKNJFGCFC[i]);
            writer.join();
        }
        /* bool is_content_closed = 12; */
        if (message.isContentClosed !== false)
            writer.tag(12, WireType.Varint).bool(message.isContentClosed);
        /* repeated uint32 Unk3300_CMNIBPMOECO = 5 [json_name = "Unk3300CMNIBPMOECO"]; */
        if (message.unk3300CMNIBPMOECO.length) {
            writer.tag(5, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.unk3300CMNIBPMOECO.length; i++)
                writer.uint32(message.unk3300CMNIBPMOECO[i]);
            writer.join();
        }
        /* repeated uint32 Unk3300_FHNNJJDGLOO = 6 [json_name = "Unk3300FHNNJJDGLOO"]; */
        if (message.unk3300FHNNJJDGLOO.length) {
            writer.tag(6, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.unk3300FHNNJJDGLOO.length; i++)
                writer.uint32(message.unk3300FHNNJJDGLOO[i]);
            writer.join();
        }
        /* repeated ItemParam used_item_list = 14; */
        for (let i = 0; i < message.usedItemList.length; i++)
            ItemParam.internalBinaryWrite(message.usedItemList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* WinterCampStageInfo battle_info = 9; */
        if (message.battleInfo)
            WinterCampStageInfo.internalBinaryWrite(message.battleInfo, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* repeated WinterCampRaceStageInfo race_info_list = 13; */
        for (let i = 0; i < message.raceInfoList.length; i++)
            WinterCampRaceStageInfo.internalBinaryWrite(message.raceInfoList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WinterCampActivityDetailInfo
 */
export const WinterCampActivityDetailInfo = new WinterCampActivityDetailInfo$Type();
