// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "ShowEquip.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Weapon } from "./Weapon";
import { Reliquary } from "./Reliquary";
/**
 * @generated from protobuf message com.midnights.game.ShowEquip
 */
export interface ShowEquip {
    /**
     * @generated from protobuf field: optional uint32 item_id = 1;
     */
    itemId?: number;
    /**
     * @generated from protobuf oneof: detail
     */
    detail: {
        oneofKind: "reliquary";
        /**
         * @generated from protobuf field: com.midnights.game.Reliquary reliquary = 2;
         */
        reliquary: Reliquary;
    } | {
        oneofKind: "weapon";
        /**
         * @generated from protobuf field: com.midnights.game.Weapon weapon = 3;
         */
        weapon: Weapon;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class ShowEquip$Type extends MessageType<ShowEquip> {
    constructor() {
        super("com.midnights.game.ShowEquip", [
            { no: 1, name: "item_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "reliquary", kind: "message", oneof: "detail", T: () => Reliquary },
            { no: 3, name: "weapon", kind: "message", oneof: "detail", T: () => Weapon }
        ]);
    }
    create(value?: PartialMessage<ShowEquip>): ShowEquip {
        const message = { detail: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ShowEquip>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ShowEquip): ShowEquip {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 item_id */ 1:
                    message.itemId = reader.uint32();
                    break;
                case /* com.midnights.game.Reliquary reliquary */ 2:
                    message.detail = {
                        oneofKind: "reliquary",
                        reliquary: Reliquary.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).reliquary)
                    };
                    break;
                case /* com.midnights.game.Weapon weapon */ 3:
                    message.detail = {
                        oneofKind: "weapon",
                        weapon: Weapon.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).weapon)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ShowEquip, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 item_id = 1; */
        if (message.itemId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.itemId);
        /* com.midnights.game.Reliquary reliquary = 2; */
        if (message.detail.oneofKind === "reliquary")
            Reliquary.internalBinaryWrite(message.detail.reliquary, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* com.midnights.game.Weapon weapon = 3; */
        if (message.detail.oneofKind === "weapon")
            Weapon.internalBinaryWrite(message.detail.weapon, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ShowEquip
 */
export const ShowEquip = new ShowEquip$Type();
