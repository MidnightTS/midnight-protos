/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: OpActivityInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./BonusOpActivityInfo";
import * as pb_1 from "google-protobuf";
export class OpActivityInfo extends pb_1.Message {
    #one_of_decls: number[][] = [[12]];
    constructor(data?: any[] | ({
        activity_id?: number;
        end_time?: number;
        begin_time?: number;
        is_has_change?: boolean;
        schedule_id?: number;
    } & (({
        bonus_info?: dependency_1.BonusOpActivityInfo;
    })))) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("activity_id" in data && data.activity_id != undefined) {
                this.activity_id = data.activity_id;
            }
            if ("end_time" in data && data.end_time != undefined) {
                this.end_time = data.end_time;
            }
            if ("begin_time" in data && data.begin_time != undefined) {
                this.begin_time = data.begin_time;
            }
            if ("is_has_change" in data && data.is_has_change != undefined) {
                this.is_has_change = data.is_has_change;
            }
            if ("schedule_id" in data && data.schedule_id != undefined) {
                this.schedule_id = data.schedule_id;
            }
            if ("bonus_info" in data && data.bonus_info != undefined) {
                this.bonus_info = data.bonus_info;
            }
        }
    }
    get activity_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set activity_id(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get end_time() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set end_time(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get begin_time() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set begin_time(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get is_has_change() {
        return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
    }
    set is_has_change(value: boolean) {
        pb_1.Message.setField(this, 1, value);
    }
    get schedule_id() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set schedule_id(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    get bonus_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.BonusOpActivityInfo, 12) as dependency_1.BonusOpActivityInfo;
    }
    set bonus_info(value: dependency_1.BonusOpActivityInfo) {
        pb_1.Message.setOneofWrapperField(this, 12, this.#one_of_decls[0], value);
    }
    get has_bonus_info() {
        return pb_1.Message.getField(this, 12) != null;
    }
    get detail() {
        const cases: {
            [index: number]: "none" | "bonus_info";
        } = {
            0: "none",
            12: "bonus_info"
        };
        return cases[pb_1.Message.computeOneofCase(this, [12])];
    }
    static fromObject(data: {
        activity_id?: number;
        end_time?: number;
        begin_time?: number;
        is_has_change?: boolean;
        schedule_id?: number;
        bonus_info?: ReturnType<typeof dependency_1.BonusOpActivityInfo.prototype.toObject>;
    }): OpActivityInfo {
        const message = new OpActivityInfo({});
        if (data.activity_id != null) {
            message.activity_id = data.activity_id;
        }
        if (data.end_time != null) {
            message.end_time = data.end_time;
        }
        if (data.begin_time != null) {
            message.begin_time = data.begin_time;
        }
        if (data.is_has_change != null) {
            message.is_has_change = data.is_has_change;
        }
        if (data.schedule_id != null) {
            message.schedule_id = data.schedule_id;
        }
        if (data.bonus_info != null) {
            message.bonus_info = dependency_1.BonusOpActivityInfo.fromObject(data.bonus_info);
        }
        return message;
    }
    toObject() {
        const data: {
            activity_id?: number;
            end_time?: number;
            begin_time?: number;
            is_has_change?: boolean;
            schedule_id?: number;
            bonus_info?: ReturnType<typeof dependency_1.BonusOpActivityInfo.prototype.toObject>;
        } = {};
        if (this.activity_id != null) {
            data.activity_id = this.activity_id;
        }
        if (this.end_time != null) {
            data.end_time = this.end_time;
        }
        if (this.begin_time != null) {
            data.begin_time = this.begin_time;
        }
        if (this.is_has_change != null) {
            data.is_has_change = this.is_has_change;
        }
        if (this.schedule_id != null) {
            data.schedule_id = this.schedule_id;
        }
        if (this.bonus_info != null) {
            data.bonus_info = this.bonus_info.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.activity_id != 0)
            writer.writeUint32(2, this.activity_id);
        if (this.end_time != 0)
            writer.writeUint32(6, this.end_time);
        if (this.begin_time != 0)
            writer.writeUint32(5, this.begin_time);
        if (this.is_has_change != false)
            writer.writeBool(1, this.is_has_change);
        if (this.schedule_id != 0)
            writer.writeUint32(13, this.schedule_id);
        if (this.has_bonus_info)
            writer.writeMessage(12, this.bonus_info, () => this.bonus_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): OpActivityInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new OpActivityInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 2:
                    message.activity_id = reader.readUint32();
                    break;
                case 6:
                    message.end_time = reader.readUint32();
                    break;
                case 5:
                    message.begin_time = reader.readUint32();
                    break;
                case 1:
                    message.is_has_change = reader.readBool();
                    break;
                case 13:
                    message.schedule_id = reader.readUint32();
                    break;
                case 12:
                    reader.readMessage(message.bonus_info, () => message.bonus_info = dependency_1.BonusOpActivityInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): OpActivityInfo {
        return OpActivityInfo.deserialize(bytes);
    }
}
