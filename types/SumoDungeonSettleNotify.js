"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SumoDungeonSettleNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SumoDungeonSettleNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SumoDungeonSettleNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class SumoDungeonSettleNotify extends pb_1.Message {
    constructor(data) {
        super();
        _SumoDungeonSettleNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _SumoDungeonSettleNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("final_score" in data && data.final_score != undefined) {
                this.final_score = data.final_score;
            }
            if ("difficulty_id" in data && data.difficulty_id != undefined) {
                this.difficulty_id = data.difficulty_id;
            }
            if ("kill_elite_monster_num" in data && data.kill_elite_monster_num != undefined) {
                this.kill_elite_monster_num = data.kill_elite_monster_num;
            }
            if ("stage_id" in data && data.stage_id != undefined) {
                this.stage_id = data.stage_id;
            }
            if ("kill_monster_num" in data && data.kill_monster_num != undefined) {
                this.kill_monster_num = data.kill_monster_num;
            }
            if ("is_new_record" in data && data.is_new_record != undefined) {
                this.is_new_record = data.is_new_record;
            }
        }
    }
    get final_score() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set final_score(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get difficulty_id() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0);
    }
    set difficulty_id(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get kill_elite_monster_num() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set kill_elite_monster_num(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get stage_id() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set stage_id(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get kill_monster_num() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set kill_monster_num(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get is_new_record() {
        return pb_1.Message.getFieldWithDefault(this, 5, false);
    }
    set is_new_record(value) {
        pb_1.Message.setField(this, 5, value);
    }
    static fromObject(data) {
        const message = new SumoDungeonSettleNotify({});
        if (data.final_score != null) {
            message.final_score = data.final_score;
        }
        if (data.difficulty_id != null) {
            message.difficulty_id = data.difficulty_id;
        }
        if (data.kill_elite_monster_num != null) {
            message.kill_elite_monster_num = data.kill_elite_monster_num;
        }
        if (data.stage_id != null) {
            message.stage_id = data.stage_id;
        }
        if (data.kill_monster_num != null) {
            message.kill_monster_num = data.kill_monster_num;
        }
        if (data.is_new_record != null) {
            message.is_new_record = data.is_new_record;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.final_score != null) {
            data.final_score = this.final_score;
        }
        if (this.difficulty_id != null) {
            data.difficulty_id = this.difficulty_id;
        }
        if (this.kill_elite_monster_num != null) {
            data.kill_elite_monster_num = this.kill_elite_monster_num;
        }
        if (this.stage_id != null) {
            data.stage_id = this.stage_id;
        }
        if (this.kill_monster_num != null) {
            data.kill_monster_num = this.kill_monster_num;
        }
        if (this.is_new_record != null) {
            data.is_new_record = this.is_new_record;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.final_score != 0)
            writer.writeUint32(7, this.final_score);
        if (this.difficulty_id != 0)
            writer.writeUint32(14, this.difficulty_id);
        if (this.kill_elite_monster_num != 0)
            writer.writeUint32(15, this.kill_elite_monster_num);
        if (this.stage_id != 0)
            writer.writeUint32(12, this.stage_id);
        if (this.kill_monster_num != 0)
            writer.writeUint32(4, this.kill_monster_num);
        if (this.is_new_record != false)
            writer.writeBool(5, this.is_new_record);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SumoDungeonSettleNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 7:
                    message.final_score = reader.readUint32();
                    break;
                case 14:
                    message.difficulty_id = reader.readUint32();
                    break;
                case 15:
                    message.kill_elite_monster_num = reader.readUint32();
                    break;
                case 12:
                    message.stage_id = reader.readUint32();
                    break;
                case 4:
                    message.kill_monster_num = reader.readUint32();
                    break;
                case 5:
                    message.is_new_record = reader.readBool();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return SumoDungeonSettleNotify.deserialize(bytes);
    }
}
exports.SumoDungeonSettleNotify = SumoDungeonSettleNotify;
_SumoDungeonSettleNotify_one_of_decls = new WeakMap();
