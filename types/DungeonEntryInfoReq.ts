/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: DungeonEntryInfoReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./Uint32Pair";
import * as pb_1 from "google-protobuf";
export class DungeonEntryInfoReq extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        point_id?: number;
        scene_id?: number;
        Unk2800_GGAMJDFELPH?: dependency_1.Uint32Pair[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("point_id" in data && data.point_id != undefined) {
                this.point_id = data.point_id;
            }
            if ("scene_id" in data && data.scene_id != undefined) {
                this.scene_id = data.scene_id;
            }
            if ("Unk2800_GGAMJDFELPH" in data && data.Unk2800_GGAMJDFELPH != undefined) {
                this.Unk2800_GGAMJDFELPH = data.Unk2800_GGAMJDFELPH;
            }
        }
    }
    get point_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set point_id(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get scene_id() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set scene_id(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get Unk2800_GGAMJDFELPH() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.Uint32Pair, 4) as dependency_1.Uint32Pair[];
    }
    set Unk2800_GGAMJDFELPH(value: dependency_1.Uint32Pair[]) {
        pb_1.Message.setRepeatedWrapperField(this, 4, value);
    }
    static fromObject(data: {
        point_id?: number;
        scene_id?: number;
        Unk2800_GGAMJDFELPH?: ReturnType<typeof dependency_1.Uint32Pair.prototype.toObject>[];
    }): DungeonEntryInfoReq {
        const message = new DungeonEntryInfoReq({});
        if (data.point_id != null) {
            message.point_id = data.point_id;
        }
        if (data.scene_id != null) {
            message.scene_id = data.scene_id;
        }
        if (data.Unk2800_GGAMJDFELPH != null) {
            message.Unk2800_GGAMJDFELPH = data.Unk2800_GGAMJDFELPH.map(item => dependency_1.Uint32Pair.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            point_id?: number;
            scene_id?: number;
            Unk2800_GGAMJDFELPH?: ReturnType<typeof dependency_1.Uint32Pair.prototype.toObject>[];
        } = {};
        if (this.point_id != null) {
            data.point_id = this.point_id;
        }
        if (this.scene_id != null) {
            data.scene_id = this.scene_id;
        }
        if (this.Unk2800_GGAMJDFELPH != null) {
            data.Unk2800_GGAMJDFELPH = this.Unk2800_GGAMJDFELPH.map((item: dependency_1.Uint32Pair) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.point_id != 0)
            writer.writeUint32(2, this.point_id);
        if (this.scene_id != 0)
            writer.writeUint32(9, this.scene_id);
        if (this.Unk2800_GGAMJDFELPH.length)
            writer.writeRepeatedMessage(4, this.Unk2800_GGAMJDFELPH, (item: dependency_1.Uint32Pair) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DungeonEntryInfoReq {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DungeonEntryInfoReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 2:
                    message.point_id = reader.readUint32();
                    break;
                case 9:
                    message.scene_id = reader.readUint32();
                    break;
                case 4:
                    reader.readMessage(message.Unk2800_GGAMJDFELPH, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_1.Uint32Pair.deserialize(reader), dependency_1.Uint32Pair));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): DungeonEntryInfoReq {
        return DungeonEntryInfoReq.deserialize(bytes);
    }
}
