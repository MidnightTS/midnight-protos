/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: TriggerRoguelikeCurseNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class TriggerRoguelikeCurseNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        effect_param_list?: number[];
        curse_group_id?: number;
        is_trigger_curse?: boolean;
        curse_level?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [14], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("effect_param_list" in data && data.effect_param_list != undefined) {
                this.effect_param_list = data.effect_param_list;
            }
            if ("curse_group_id" in data && data.curse_group_id != undefined) {
                this.curse_group_id = data.curse_group_id;
            }
            if ("is_trigger_curse" in data && data.is_trigger_curse != undefined) {
                this.is_trigger_curse = data.is_trigger_curse;
            }
            if ("curse_level" in data && data.curse_level != undefined) {
                this.curse_level = data.curse_level;
            }
        }
    }
    get effect_param_list() {
        return pb_1.Message.getFieldWithDefault(this, 14, []) as number[];
    }
    set effect_param_list(value: number[]) {
        pb_1.Message.setField(this, 14, value);
    }
    get curse_group_id() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set curse_group_id(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get is_trigger_curse() {
        return pb_1.Message.getFieldWithDefault(this, 13, false) as boolean;
    }
    set is_trigger_curse(value: boolean) {
        pb_1.Message.setField(this, 13, value);
    }
    get curse_level() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set curse_level(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    static fromObject(data: {
        effect_param_list?: number[];
        curse_group_id?: number;
        is_trigger_curse?: boolean;
        curse_level?: number;
    }): TriggerRoguelikeCurseNotify {
        const message = new TriggerRoguelikeCurseNotify({});
        if (data.effect_param_list != null) {
            message.effect_param_list = data.effect_param_list;
        }
        if (data.curse_group_id != null) {
            message.curse_group_id = data.curse_group_id;
        }
        if (data.is_trigger_curse != null) {
            message.is_trigger_curse = data.is_trigger_curse;
        }
        if (data.curse_level != null) {
            message.curse_level = data.curse_level;
        }
        return message;
    }
    toObject() {
        const data: {
            effect_param_list?: number[];
            curse_group_id?: number;
            is_trigger_curse?: boolean;
            curse_level?: number;
        } = {};
        if (this.effect_param_list != null) {
            data.effect_param_list = this.effect_param_list;
        }
        if (this.curse_group_id != null) {
            data.curse_group_id = this.curse_group_id;
        }
        if (this.is_trigger_curse != null) {
            data.is_trigger_curse = this.is_trigger_curse;
        }
        if (this.curse_level != null) {
            data.curse_level = this.curse_level;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.effect_param_list.length)
            writer.writePackedUint32(14, this.effect_param_list);
        if (this.curse_group_id != 0)
            writer.writeUint32(9, this.curse_group_id);
        if (this.is_trigger_curse != false)
            writer.writeBool(13, this.is_trigger_curse);
        if (this.curse_level != 0)
            writer.writeUint32(3, this.curse_level);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TriggerRoguelikeCurseNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TriggerRoguelikeCurseNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 14:
                    message.effect_param_list = reader.readPackedUint32();
                    break;
                case 9:
                    message.curse_group_id = reader.readUint32();
                    break;
                case 13:
                    message.is_trigger_curse = reader.readBool();
                    break;
                case 3:
                    message.curse_level = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): TriggerRoguelikeCurseNotify {
        return TriggerRoguelikeCurseNotify.deserialize(bytes);
    }
}
