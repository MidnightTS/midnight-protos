/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PlayerOfferingData.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class PlayerOfferingData extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        offering_id?: number;
        is_first_interact?: boolean;
        level?: number;
        taken_level_reward_list?: number[];
        is_new_max_level?: boolean;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [8], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("offering_id" in data && data.offering_id != undefined) {
                this.offering_id = data.offering_id;
            }
            if ("is_first_interact" in data && data.is_first_interact != undefined) {
                this.is_first_interact = data.is_first_interact;
            }
            if ("level" in data && data.level != undefined) {
                this.level = data.level;
            }
            if ("taken_level_reward_list" in data && data.taken_level_reward_list != undefined) {
                this.taken_level_reward_list = data.taken_level_reward_list;
            }
            if ("is_new_max_level" in data && data.is_new_max_level != undefined) {
                this.is_new_max_level = data.is_new_max_level;
            }
        }
    }
    get offering_id() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set offering_id(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get is_first_interact() {
        return pb_1.Message.getFieldWithDefault(this, 15, false) as boolean;
    }
    set is_first_interact(value: boolean) {
        pb_1.Message.setField(this, 15, value);
    }
    get level() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set level(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get taken_level_reward_list() {
        return pb_1.Message.getFieldWithDefault(this, 8, []) as number[];
    }
    set taken_level_reward_list(value: number[]) {
        pb_1.Message.setField(this, 8, value);
    }
    get is_new_max_level() {
        return pb_1.Message.getFieldWithDefault(this, 6, false) as boolean;
    }
    set is_new_max_level(value: boolean) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data: {
        offering_id?: number;
        is_first_interact?: boolean;
        level?: number;
        taken_level_reward_list?: number[];
        is_new_max_level?: boolean;
    }): PlayerOfferingData {
        const message = new PlayerOfferingData({});
        if (data.offering_id != null) {
            message.offering_id = data.offering_id;
        }
        if (data.is_first_interact != null) {
            message.is_first_interact = data.is_first_interact;
        }
        if (data.level != null) {
            message.level = data.level;
        }
        if (data.taken_level_reward_list != null) {
            message.taken_level_reward_list = data.taken_level_reward_list;
        }
        if (data.is_new_max_level != null) {
            message.is_new_max_level = data.is_new_max_level;
        }
        return message;
    }
    toObject() {
        const data: {
            offering_id?: number;
            is_first_interact?: boolean;
            level?: number;
            taken_level_reward_list?: number[];
            is_new_max_level?: boolean;
        } = {};
        if (this.offering_id != null) {
            data.offering_id = this.offering_id;
        }
        if (this.is_first_interact != null) {
            data.is_first_interact = this.is_first_interact;
        }
        if (this.level != null) {
            data.level = this.level;
        }
        if (this.taken_level_reward_list != null) {
            data.taken_level_reward_list = this.taken_level_reward_list;
        }
        if (this.is_new_max_level != null) {
            data.is_new_max_level = this.is_new_max_level;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.offering_id != 0)
            writer.writeUint32(1, this.offering_id);
        if (this.is_first_interact != false)
            writer.writeBool(15, this.is_first_interact);
        if (this.level != 0)
            writer.writeUint32(12, this.level);
        if (this.taken_level_reward_list.length)
            writer.writePackedUint32(8, this.taken_level_reward_list);
        if (this.is_new_max_level != false)
            writer.writeBool(6, this.is_new_max_level);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PlayerOfferingData {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PlayerOfferingData();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.offering_id = reader.readUint32();
                    break;
                case 15:
                    message.is_first_interact = reader.readBool();
                    break;
                case 12:
                    message.level = reader.readUint32();
                    break;
                case 8:
                    message.taken_level_reward_list = reader.readPackedUint32();
                    break;
                case 6:
                    message.is_new_max_level = reader.readBool();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): PlayerOfferingData {
        return PlayerOfferingData.deserialize(bytes);
    }
}
