// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "AvatarPropChangeReasonNotify.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PropChangeReason } from "./PropChangeReason";
/**
 * enum CmdId {
 *   option allow_alias = true;
 *   NONE = 0;
 *   CMD_ID = 1278;
 *   ENET_CHANNEL_ID = 0;
 *   ENET_IS_RELIABLE = 1;
 * }
 *
 * @generated from protobuf message AvatarPropChangeReasonNotify
 */
export interface AvatarPropChangeReasonNotify {
    /**
     * @generated from protobuf field: uint32 prop_type = 7;
     */
    propType: number;
    /**
     * @generated from protobuf field: PropChangeReason reason = 15;
     */
    reason: PropChangeReason;
    /**
     * @generated from protobuf field: float cur_value = 14;
     */
    curValue: number;
    /**
     * @generated from protobuf field: uint64 avatar_guid = 3;
     */
    avatarGuid: bigint;
    /**
     * @generated from protobuf field: float old_value = 13;
     */
    oldValue: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class AvatarPropChangeReasonNotify$Type extends MessageType<AvatarPropChangeReasonNotify> {
    constructor() {
        super("AvatarPropChangeReasonNotify", [
            { no: 7, name: "prop_type", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "reason", kind: "enum", T: () => ["PropChangeReason", PropChangeReason, "PROP_CHANGE_REASON_"] },
            { no: 14, name: "cur_value", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 3, name: "avatar_guid", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "old_value", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarPropChangeReasonNotify>): AvatarPropChangeReasonNotify {
        const message = { propType: 0, reason: 0, curValue: 0, avatarGuid: 0n, oldValue: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarPropChangeReasonNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarPropChangeReasonNotify): AvatarPropChangeReasonNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 prop_type */ 7:
                    message.propType = reader.uint32();
                    break;
                case /* PropChangeReason reason */ 15:
                    message.reason = reader.int32();
                    break;
                case /* float cur_value */ 14:
                    message.curValue = reader.float();
                    break;
                case /* uint64 avatar_guid */ 3:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* float old_value */ 13:
                    message.oldValue = reader.float();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarPropChangeReasonNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 prop_type = 7; */
        if (message.propType !== 0)
            writer.tag(7, WireType.Varint).uint32(message.propType);
        /* PropChangeReason reason = 15; */
        if (message.reason !== 0)
            writer.tag(15, WireType.Varint).int32(message.reason);
        /* float cur_value = 14; */
        if (message.curValue !== 0)
            writer.tag(14, WireType.Bit32).float(message.curValue);
        /* uint64 avatar_guid = 3; */
        if (message.avatarGuid !== 0n)
            writer.tag(3, WireType.Varint).uint64(message.avatarGuid);
        /* float old_value = 13; */
        if (message.oldValue !== 0)
            writer.tag(13, WireType.Bit32).float(message.oldValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AvatarPropChangeReasonNotify
 */
export const AvatarPropChangeReasonNotify = new AvatarPropChangeReasonNotify$Type();
