/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EntityForceSyncReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./MotionInfo";
import * as pb_1 from "google-protobuf";
export class EntityForceSyncReq extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        room_id?: number;
        motion_info?: dependency_1.MotionInfo;
        entity_id?: number;
        scene_time?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("room_id" in data && data.room_id != undefined) {
                this.room_id = data.room_id;
            }
            if ("motion_info" in data && data.motion_info != undefined) {
                this.motion_info = data.motion_info;
            }
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
            if ("scene_time" in data && data.scene_time != undefined) {
                this.scene_time = data.scene_time;
            }
        }
    }
    get room_id() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set room_id(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get motion_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.MotionInfo, 11) as dependency_1.MotionInfo;
    }
    set motion_info(value: dependency_1.MotionInfo) {
        pb_1.Message.setWrapperField(this, 11, value);
    }
    get has_motion_info() {
        return pb_1.Message.getField(this, 11) != null;
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set entity_id(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    get scene_time() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set scene_time(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    static fromObject(data: {
        room_id?: number;
        motion_info?: ReturnType<typeof dependency_1.MotionInfo.prototype.toObject>;
        entity_id?: number;
        scene_time?: number;
    }): EntityForceSyncReq {
        const message = new EntityForceSyncReq({});
        if (data.room_id != null) {
            message.room_id = data.room_id;
        }
        if (data.motion_info != null) {
            message.motion_info = dependency_1.MotionInfo.fromObject(data.motion_info);
        }
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        if (data.scene_time != null) {
            message.scene_time = data.scene_time;
        }
        return message;
    }
    toObject() {
        const data: {
            room_id?: number;
            motion_info?: ReturnType<typeof dependency_1.MotionInfo.prototype.toObject>;
            entity_id?: number;
            scene_time?: number;
        } = {};
        if (this.room_id != null) {
            data.room_id = this.room_id;
        }
        if (this.motion_info != null) {
            data.motion_info = this.motion_info.toObject();
        }
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        if (this.scene_time != null) {
            data.scene_time = this.scene_time;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.room_id != 0)
            writer.writeUint32(1, this.room_id);
        if (this.has_motion_info)
            writer.writeMessage(11, this.motion_info, () => this.motion_info.serialize(writer));
        if (this.entity_id != 0)
            writer.writeUint32(13, this.entity_id);
        if (this.scene_time != 0)
            writer.writeUint32(12, this.scene_time);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EntityForceSyncReq {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EntityForceSyncReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.room_id = reader.readUint32();
                    break;
                case 11:
                    reader.readMessage(message.motion_info, () => message.motion_info = dependency_1.MotionInfo.deserialize(reader));
                    break;
                case 13:
                    message.entity_id = reader.readUint32();
                    break;
                case 12:
                    message.scene_time = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): EntityForceSyncReq {
        return EntityForceSyncReq.deserialize(bytes);
    }
}
