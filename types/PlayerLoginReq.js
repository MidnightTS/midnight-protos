"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PlayerLoginReq_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerLoginReq = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PlayerLoginReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./AdjustTrackingInfo");
const dependency_2 = require("./TrackingIOInfo");
const pb_1 = require("google-protobuf");
class PlayerLoginReq extends pb_1.Message {
    constructor(data) {
        super();
        _PlayerLoginReq_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _PlayerLoginReq_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("language_type" in data && data.language_type != undefined) {
                this.language_type = data.language_type;
            }
            if ("reg_platform" in data && data.reg_platform != undefined) {
                this.reg_platform = data.reg_platform;
            }
            if ("tracking_io_info" in data && data.tracking_io_info != undefined) {
                this.tracking_io_info = data.tracking_io_info;
            }
            if ("account_type" in data && data.account_type != undefined) {
                this.account_type = data.account_type;
            }
            if ("token" in data && data.token != undefined) {
                this.token = data.token;
            }
            if ("extra_bin_data" in data && data.extra_bin_data != undefined) {
                this.extra_bin_data = data.extra_bin_data;
            }
            if ("channel_id" in data && data.channel_id != undefined) {
                this.channel_id = data.channel_id;
            }
            if ("client_data_version" in data && data.client_data_version != undefined) {
                this.client_data_version = data.client_data_version;
            }
            if ("account_uid" in data && data.account_uid != undefined) {
                this.account_uid = data.account_uid;
            }
            if ("client_version" in data && data.client_version != undefined) {
                this.client_version = data.client_version;
            }
            if ("Unk2700_NGKCNPKKIKB" in data && data.Unk2700_NGKCNPKKIKB != undefined) {
                this.Unk2700_NGKCNPKKIKB = data.Unk2700_NGKCNPKKIKB;
            }
            if ("country_code" in data && data.country_code != undefined) {
                this.country_code = data.country_code;
            }
            if ("psn_id" in data && data.psn_id != undefined) {
                this.psn_id = data.psn_id;
            }
            if ("Unk2700_GPPBEMDGEHH" in data && data.Unk2700_GPPBEMDGEHH != undefined) {
                this.Unk2700_GPPBEMDGEHH = data.Unk2700_GPPBEMDGEHH;
            }
            if ("device_name" in data && data.device_name != undefined) {
                this.device_name = data.device_name;
            }
            if ("cps" in data && data.cps != undefined) {
                this.cps = data.cps;
            }
            if ("login_rand" in data && data.login_rand != undefined) {
                this.login_rand = data.login_rand;
            }
            if ("target_home_param" in data && data.target_home_param != undefined) {
                this.target_home_param = data.target_home_param;
            }
            if ("adjust_tracking_info" in data && data.adjust_tracking_info != undefined) {
                this.adjust_tracking_info = data.adjust_tracking_info;
            }
            if ("is_transfer" in data && data.is_transfer != undefined) {
                this.is_transfer = data.is_transfer;
            }
            if ("tag" in data && data.tag != undefined) {
                this.tag = data.tag;
            }
            if ("is_guest" in data && data.is_guest != undefined) {
                this.is_guest = data.is_guest;
            }
            if ("environment_error_code" in data && data.environment_error_code != undefined) {
                this.environment_error_code = data.environment_error_code;
            }
            if ("online_id" in data && data.online_id != undefined) {
                this.online_id = data.online_id;
            }
            if ("is_editor" in data && data.is_editor != undefined) {
                this.is_editor = data.is_editor;
            }
            if ("checksum_client_version" in data && data.checksum_client_version != undefined) {
                this.checksum_client_version = data.checksum_client_version;
            }
            if ("security_cmd_reply" in data && data.security_cmd_reply != undefined) {
                this.security_cmd_reply = data.security_cmd_reply;
            }
            if ("Unk2700_JNDKPBBCACB" in data && data.Unk2700_JNDKPBBCACB != undefined) {
                this.Unk2700_JNDKPBBCACB = data.Unk2700_JNDKPBBCACB;
            }
            if ("birthday" in data && data.birthday != undefined) {
                this.birthday = data.birthday;
            }
            if ("device_uuid" in data && data.device_uuid != undefined) {
                this.device_uuid = data.device_uuid;
            }
            if ("client_token" in data && data.client_token != undefined) {
                this.client_token = data.client_token;
            }
            if ("sub_channel_id" in data && data.sub_channel_id != undefined) {
                this.sub_channel_id = data.sub_channel_id;
            }
            if ("target_uid" in data && data.target_uid != undefined) {
                this.target_uid = data.target_uid;
            }
            if ("device_info" in data && data.device_info != undefined) {
                this.device_info = data.device_info;
            }
            if ("client_verison_hash" in data && data.client_verison_hash != undefined) {
                this.client_verison_hash = data.client_verison_hash;
            }
            if ("checksum" in data && data.checksum != undefined) {
                this.checksum = data.checksum;
            }
            if ("platform_type" in data && data.platform_type != undefined) {
                this.platform_type = data.platform_type;
            }
            if ("target_home_owner_uid" in data && data.target_home_owner_uid != undefined) {
                this.target_home_owner_uid = data.target_home_owner_uid;
            }
            if ("cloud_client_ip" in data && data.cloud_client_ip != undefined) {
                this.cloud_client_ip = data.cloud_client_ip;
            }
            if ("gm_uid" in data && data.gm_uid != undefined) {
                this.gm_uid = data.gm_uid;
            }
            if ("system_version" in data && data.system_version != undefined) {
                this.system_version = data.system_version;
            }
            if ("platform" in data && data.platform != undefined) {
                this.platform = data.platform;
            }
        }
    }
    get language_type() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set language_type(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get reg_platform() {
        return pb_1.Message.getFieldWithDefault(this, 615, 0);
    }
    set reg_platform(value) {
        pb_1.Message.setField(this, 615, value);
    }
    get tracking_io_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.TrackingIOInfo, 1660);
    }
    set tracking_io_info(value) {
        pb_1.Message.setWrapperField(this, 1660, value);
    }
    get has_tracking_io_info() {
        return pb_1.Message.getField(this, 1660) != null;
    }
    get account_type() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0);
    }
    set account_type(value) {
        pb_1.Message.setField(this, 13, value);
    }
    get token() {
        return pb_1.Message.getFieldWithDefault(this, 15, "");
    }
    set token(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get extra_bin_data() {
        return pb_1.Message.getFieldWithDefault(this, 1458, new Uint8Array());
    }
    set extra_bin_data(value) {
        pb_1.Message.setField(this, 1458, value);
    }
    get channel_id() {
        return pb_1.Message.getFieldWithDefault(this, 1314, 0);
    }
    set channel_id(value) {
        pb_1.Message.setField(this, 1314, value);
    }
    get client_data_version() {
        return pb_1.Message.getFieldWithDefault(this, 688, 0);
    }
    set client_data_version(value) {
        pb_1.Message.setField(this, 688, value);
    }
    get account_uid() {
        return pb_1.Message.getFieldWithDefault(this, 2, "");
    }
    set account_uid(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get client_version() {
        return pb_1.Message.getFieldWithDefault(this, 12, "");
    }
    set client_version(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get Unk2700_NGKCNPKKIKB() {
        return pb_1.Message.getFieldWithDefault(this, 772, "");
    }
    set Unk2700_NGKCNPKKIKB(value) {
        pb_1.Message.setField(this, 772, value);
    }
    get country_code() {
        return pb_1.Message.getFieldWithDefault(this, 2000, "");
    }
    set country_code(value) {
        pb_1.Message.setField(this, 2000, value);
    }
    get psn_id() {
        return pb_1.Message.getFieldWithDefault(this, 1268, "");
    }
    set psn_id(value) {
        pb_1.Message.setField(this, 1268, value);
    }
    get Unk2700_GPPBEMDGEHH() {
        return pb_1.Message.getFieldWithDefault(this, 431, 0);
    }
    set Unk2700_GPPBEMDGEHH(value) {
        pb_1.Message.setField(this, 431, value);
    }
    get device_name() {
        return pb_1.Message.getFieldWithDefault(this, 9, "");
    }
    set device_name(value) {
        pb_1.Message.setField(this, 9, value);
    }
    get cps() {
        return pb_1.Message.getFieldWithDefault(this, 1163, "");
    }
    set cps(value) {
        pb_1.Message.setField(this, 1163, value);
    }
    get login_rand() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set login_rand(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get target_home_param() {
        return pb_1.Message.getFieldWithDefault(this, 984, 0);
    }
    set target_home_param(value) {
        pb_1.Message.setField(this, 984, value);
    }
    get adjust_tracking_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.AdjustTrackingInfo, 1816);
    }
    set adjust_tracking_info(value) {
        pb_1.Message.setWrapperField(this, 1816, value);
    }
    get has_adjust_tracking_info() {
        return pb_1.Message.getField(this, 1816) != null;
    }
    get is_transfer() {
        return pb_1.Message.getFieldWithDefault(this, 908, false);
    }
    set is_transfer(value) {
        pb_1.Message.setField(this, 908, value);
    }
    get tag() {
        return pb_1.Message.getFieldWithDefault(this, 1787, 0);
    }
    set tag(value) {
        pb_1.Message.setField(this, 1787, value);
    }
    get is_guest() {
        return pb_1.Message.getFieldWithDefault(this, 5, false);
    }
    set is_guest(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get environment_error_code() {
        return pb_1.Message.getFieldWithDefault(this, 2026, new Uint8Array());
    }
    set environment_error_code(value) {
        pb_1.Message.setField(this, 2026, value);
    }
    get online_id() {
        return pb_1.Message.getFieldWithDefault(this, 903, "");
    }
    set online_id(value) {
        pb_1.Message.setField(this, 903, value);
    }
    get is_editor() {
        return pb_1.Message.getFieldWithDefault(this, 8, false);
    }
    set is_editor(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get checksum_client_version() {
        return pb_1.Message.getFieldWithDefault(this, 861, "");
    }
    set checksum_client_version(value) {
        pb_1.Message.setField(this, 861, value);
    }
    get security_cmd_reply() {
        return pb_1.Message.getFieldWithDefault(this, 1995, new Uint8Array());
    }
    set security_cmd_reply(value) {
        pb_1.Message.setField(this, 1995, value);
    }
    get Unk2700_JNDKPBBCACB() {
        return pb_1.Message.getFieldWithDefault(this, 1213, "");
    }
    set Unk2700_JNDKPBBCACB(value) {
        pb_1.Message.setField(this, 1213, value);
    }
    get birthday() {
        return pb_1.Message.getFieldWithDefault(this, 1652, "");
    }
    set birthday(value) {
        pb_1.Message.setField(this, 1652, value);
    }
    get device_uuid() {
        return pb_1.Message.getFieldWithDefault(this, 4, "");
    }
    set device_uuid(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get client_token() {
        return pb_1.Message.getFieldWithDefault(this, 1546, 0);
    }
    set client_token(value) {
        pb_1.Message.setField(this, 1546, value);
    }
    get sub_channel_id() {
        return pb_1.Message.getFieldWithDefault(this, 23, 0);
    }
    set sub_channel_id(value) {
        pb_1.Message.setField(this, 23, value);
    }
    get target_uid() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set target_uid(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get device_info() {
        return pb_1.Message.getFieldWithDefault(this, 1, "");
    }
    set device_info(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get client_verison_hash() {
        return pb_1.Message.getFieldWithDefault(this, 1707, "");
    }
    set client_verison_hash(value) {
        pb_1.Message.setField(this, 1707, value);
    }
    get checksum() {
        return pb_1.Message.getFieldWithDefault(this, 1532, "");
    }
    set checksum(value) {
        pb_1.Message.setField(this, 1532, value);
    }
    get platform_type() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0);
    }
    set platform_type(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get target_home_owner_uid() {
        return pb_1.Message.getFieldWithDefault(this, 1864, 0);
    }
    set target_home_owner_uid(value) {
        pb_1.Message.setField(this, 1864, value);
    }
    get cloud_client_ip() {
        return pb_1.Message.getFieldWithDefault(this, 1335, 0);
    }
    set cloud_client_ip(value) {
        pb_1.Message.setField(this, 1335, value);
    }
    get gm_uid() {
        return pb_1.Message.getFieldWithDefault(this, 612, 0);
    }
    set gm_uid(value) {
        pb_1.Message.setField(this, 612, value);
    }
    get system_version() {
        return pb_1.Message.getFieldWithDefault(this, 10, "");
    }
    set system_version(value) {
        pb_1.Message.setField(this, 10, value);
    }
    get platform() {
        return pb_1.Message.getFieldWithDefault(this, 7, "");
    }
    set platform(value) {
        pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data) {
        const message = new PlayerLoginReq({});
        if (data.language_type != null) {
            message.language_type = data.language_type;
        }
        if (data.reg_platform != null) {
            message.reg_platform = data.reg_platform;
        }
        if (data.tracking_io_info != null) {
            message.tracking_io_info = dependency_2.TrackingIOInfo.fromObject(data.tracking_io_info);
        }
        if (data.account_type != null) {
            message.account_type = data.account_type;
        }
        if (data.token != null) {
            message.token = data.token;
        }
        if (data.extra_bin_data != null) {
            message.extra_bin_data = data.extra_bin_data;
        }
        if (data.channel_id != null) {
            message.channel_id = data.channel_id;
        }
        if (data.client_data_version != null) {
            message.client_data_version = data.client_data_version;
        }
        if (data.account_uid != null) {
            message.account_uid = data.account_uid;
        }
        if (data.client_version != null) {
            message.client_version = data.client_version;
        }
        if (data.Unk2700_NGKCNPKKIKB != null) {
            message.Unk2700_NGKCNPKKIKB = data.Unk2700_NGKCNPKKIKB;
        }
        if (data.country_code != null) {
            message.country_code = data.country_code;
        }
        if (data.psn_id != null) {
            message.psn_id = data.psn_id;
        }
        if (data.Unk2700_GPPBEMDGEHH != null) {
            message.Unk2700_GPPBEMDGEHH = data.Unk2700_GPPBEMDGEHH;
        }
        if (data.device_name != null) {
            message.device_name = data.device_name;
        }
        if (data.cps != null) {
            message.cps = data.cps;
        }
        if (data.login_rand != null) {
            message.login_rand = data.login_rand;
        }
        if (data.target_home_param != null) {
            message.target_home_param = data.target_home_param;
        }
        if (data.adjust_tracking_info != null) {
            message.adjust_tracking_info = dependency_1.AdjustTrackingInfo.fromObject(data.adjust_tracking_info);
        }
        if (data.is_transfer != null) {
            message.is_transfer = data.is_transfer;
        }
        if (data.tag != null) {
            message.tag = data.tag;
        }
        if (data.is_guest != null) {
            message.is_guest = data.is_guest;
        }
        if (data.environment_error_code != null) {
            message.environment_error_code = data.environment_error_code;
        }
        if (data.online_id != null) {
            message.online_id = data.online_id;
        }
        if (data.is_editor != null) {
            message.is_editor = data.is_editor;
        }
        if (data.checksum_client_version != null) {
            message.checksum_client_version = data.checksum_client_version;
        }
        if (data.security_cmd_reply != null) {
            message.security_cmd_reply = data.security_cmd_reply;
        }
        if (data.Unk2700_JNDKPBBCACB != null) {
            message.Unk2700_JNDKPBBCACB = data.Unk2700_JNDKPBBCACB;
        }
        if (data.birthday != null) {
            message.birthday = data.birthday;
        }
        if (data.device_uuid != null) {
            message.device_uuid = data.device_uuid;
        }
        if (data.client_token != null) {
            message.client_token = data.client_token;
        }
        if (data.sub_channel_id != null) {
            message.sub_channel_id = data.sub_channel_id;
        }
        if (data.target_uid != null) {
            message.target_uid = data.target_uid;
        }
        if (data.device_info != null) {
            message.device_info = data.device_info;
        }
        if (data.client_verison_hash != null) {
            message.client_verison_hash = data.client_verison_hash;
        }
        if (data.checksum != null) {
            message.checksum = data.checksum;
        }
        if (data.platform_type != null) {
            message.platform_type = data.platform_type;
        }
        if (data.target_home_owner_uid != null) {
            message.target_home_owner_uid = data.target_home_owner_uid;
        }
        if (data.cloud_client_ip != null) {
            message.cloud_client_ip = data.cloud_client_ip;
        }
        if (data.gm_uid != null) {
            message.gm_uid = data.gm_uid;
        }
        if (data.system_version != null) {
            message.system_version = data.system_version;
        }
        if (data.platform != null) {
            message.platform = data.platform;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.language_type != null) {
            data.language_type = this.language_type;
        }
        if (this.reg_platform != null) {
            data.reg_platform = this.reg_platform;
        }
        if (this.tracking_io_info != null) {
            data.tracking_io_info = this.tracking_io_info.toObject();
        }
        if (this.account_type != null) {
            data.account_type = this.account_type;
        }
        if (this.token != null) {
            data.token = this.token;
        }
        if (this.extra_bin_data != null) {
            data.extra_bin_data = this.extra_bin_data;
        }
        if (this.channel_id != null) {
            data.channel_id = this.channel_id;
        }
        if (this.client_data_version != null) {
            data.client_data_version = this.client_data_version;
        }
        if (this.account_uid != null) {
            data.account_uid = this.account_uid;
        }
        if (this.client_version != null) {
            data.client_version = this.client_version;
        }
        if (this.Unk2700_NGKCNPKKIKB != null) {
            data.Unk2700_NGKCNPKKIKB = this.Unk2700_NGKCNPKKIKB;
        }
        if (this.country_code != null) {
            data.country_code = this.country_code;
        }
        if (this.psn_id != null) {
            data.psn_id = this.psn_id;
        }
        if (this.Unk2700_GPPBEMDGEHH != null) {
            data.Unk2700_GPPBEMDGEHH = this.Unk2700_GPPBEMDGEHH;
        }
        if (this.device_name != null) {
            data.device_name = this.device_name;
        }
        if (this.cps != null) {
            data.cps = this.cps;
        }
        if (this.login_rand != null) {
            data.login_rand = this.login_rand;
        }
        if (this.target_home_param != null) {
            data.target_home_param = this.target_home_param;
        }
        if (this.adjust_tracking_info != null) {
            data.adjust_tracking_info = this.adjust_tracking_info.toObject();
        }
        if (this.is_transfer != null) {
            data.is_transfer = this.is_transfer;
        }
        if (this.tag != null) {
            data.tag = this.tag;
        }
        if (this.is_guest != null) {
            data.is_guest = this.is_guest;
        }
        if (this.environment_error_code != null) {
            data.environment_error_code = this.environment_error_code;
        }
        if (this.online_id != null) {
            data.online_id = this.online_id;
        }
        if (this.is_editor != null) {
            data.is_editor = this.is_editor;
        }
        if (this.checksum_client_version != null) {
            data.checksum_client_version = this.checksum_client_version;
        }
        if (this.security_cmd_reply != null) {
            data.security_cmd_reply = this.security_cmd_reply;
        }
        if (this.Unk2700_JNDKPBBCACB != null) {
            data.Unk2700_JNDKPBBCACB = this.Unk2700_JNDKPBBCACB;
        }
        if (this.birthday != null) {
            data.birthday = this.birthday;
        }
        if (this.device_uuid != null) {
            data.device_uuid = this.device_uuid;
        }
        if (this.client_token != null) {
            data.client_token = this.client_token;
        }
        if (this.sub_channel_id != null) {
            data.sub_channel_id = this.sub_channel_id;
        }
        if (this.target_uid != null) {
            data.target_uid = this.target_uid;
        }
        if (this.device_info != null) {
            data.device_info = this.device_info;
        }
        if (this.client_verison_hash != null) {
            data.client_verison_hash = this.client_verison_hash;
        }
        if (this.checksum != null) {
            data.checksum = this.checksum;
        }
        if (this.platform_type != null) {
            data.platform_type = this.platform_type;
        }
        if (this.target_home_owner_uid != null) {
            data.target_home_owner_uid = this.target_home_owner_uid;
        }
        if (this.cloud_client_ip != null) {
            data.cloud_client_ip = this.cloud_client_ip;
        }
        if (this.gm_uid != null) {
            data.gm_uid = this.gm_uid;
        }
        if (this.system_version != null) {
            data.system_version = this.system_version;
        }
        if (this.platform != null) {
            data.platform = this.platform;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.language_type != 0)
            writer.writeUint32(6, this.language_type);
        if (this.reg_platform != 0)
            writer.writeUint32(615, this.reg_platform);
        if (this.has_tracking_io_info)
            writer.writeMessage(1660, this.tracking_io_info, () => this.tracking_io_info.serialize(writer));
        if (this.account_type != 0)
            writer.writeUint32(13, this.account_type);
        if (this.token.length)
            writer.writeString(15, this.token);
        if (this.extra_bin_data.length)
            writer.writeBytes(1458, this.extra_bin_data);
        if (this.channel_id != 0)
            writer.writeUint32(1314, this.channel_id);
        if (this.client_data_version != 0)
            writer.writeUint32(688, this.client_data_version);
        if (this.account_uid.length)
            writer.writeString(2, this.account_uid);
        if (this.client_version.length)
            writer.writeString(12, this.client_version);
        if (this.Unk2700_NGKCNPKKIKB.length)
            writer.writeString(772, this.Unk2700_NGKCNPKKIKB);
        if (this.country_code.length)
            writer.writeString(2000, this.country_code);
        if (this.psn_id.length)
            writer.writeString(1268, this.psn_id);
        if (this.Unk2700_GPPBEMDGEHH != 0)
            writer.writeUint32(431, this.Unk2700_GPPBEMDGEHH);
        if (this.device_name.length)
            writer.writeString(9, this.device_name);
        if (this.cps.length)
            writer.writeString(1163, this.cps);
        if (this.login_rand != 0)
            writer.writeUint64(3, this.login_rand);
        if (this.target_home_param != 0)
            writer.writeUint32(984, this.target_home_param);
        if (this.has_adjust_tracking_info)
            writer.writeMessage(1816, this.adjust_tracking_info, () => this.adjust_tracking_info.serialize(writer));
        if (this.is_transfer != false)
            writer.writeBool(908, this.is_transfer);
        if (this.tag != 0)
            writer.writeUint32(1787, this.tag);
        if (this.is_guest != false)
            writer.writeBool(5, this.is_guest);
        if (this.environment_error_code.length)
            writer.writeBytes(2026, this.environment_error_code);
        if (this.online_id.length)
            writer.writeString(903, this.online_id);
        if (this.is_editor != false)
            writer.writeBool(8, this.is_editor);
        if (this.checksum_client_version.length)
            writer.writeString(861, this.checksum_client_version);
        if (this.security_cmd_reply.length)
            writer.writeBytes(1995, this.security_cmd_reply);
        if (this.Unk2700_JNDKPBBCACB.length)
            writer.writeString(1213, this.Unk2700_JNDKPBBCACB);
        if (this.birthday.length)
            writer.writeString(1652, this.birthday);
        if (this.device_uuid.length)
            writer.writeString(4, this.device_uuid);
        if (this.client_token != 0)
            writer.writeUint32(1546, this.client_token);
        if (this.sub_channel_id != 0)
            writer.writeUint32(23, this.sub_channel_id);
        if (this.target_uid != 0)
            writer.writeUint32(11, this.target_uid);
        if (this.device_info.length)
            writer.writeString(1, this.device_info);
        if (this.client_verison_hash.length)
            writer.writeString(1707, this.client_verison_hash);
        if (this.checksum.length)
            writer.writeString(1532, this.checksum);
        if (this.platform_type != 0)
            writer.writeUint32(14, this.platform_type);
        if (this.target_home_owner_uid != 0)
            writer.writeUint32(1864, this.target_home_owner_uid);
        if (this.cloud_client_ip != 0)
            writer.writeUint32(1335, this.cloud_client_ip);
        if (this.gm_uid != 0)
            writer.writeUint32(612, this.gm_uid);
        if (this.system_version.length)
            writer.writeString(10, this.system_version);
        if (this.platform.length)
            writer.writeString(7, this.platform);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PlayerLoginReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 6:
                    message.language_type = reader.readUint32();
                    break;
                case 615:
                    message.reg_platform = reader.readUint32();
                    break;
                case 1660:
                    reader.readMessage(message.tracking_io_info, () => message.tracking_io_info = dependency_2.TrackingIOInfo.deserialize(reader));
                    break;
                case 13:
                    message.account_type = reader.readUint32();
                    break;
                case 15:
                    message.token = reader.readString();
                    break;
                case 1458:
                    message.extra_bin_data = reader.readBytes();
                    break;
                case 1314:
                    message.channel_id = reader.readUint32();
                    break;
                case 688:
                    message.client_data_version = reader.readUint32();
                    break;
                case 2:
                    message.account_uid = reader.readString();
                    break;
                case 12:
                    message.client_version = reader.readString();
                    break;
                case 772:
                    message.Unk2700_NGKCNPKKIKB = reader.readString();
                    break;
                case 2000:
                    message.country_code = reader.readString();
                    break;
                case 1268:
                    message.psn_id = reader.readString();
                    break;
                case 431:
                    message.Unk2700_GPPBEMDGEHH = reader.readUint32();
                    break;
                case 9:
                    message.device_name = reader.readString();
                    break;
                case 1163:
                    message.cps = reader.readString();
                    break;
                case 3:
                    message.login_rand = reader.readUint64();
                    break;
                case 984:
                    message.target_home_param = reader.readUint32();
                    break;
                case 1816:
                    reader.readMessage(message.adjust_tracking_info, () => message.adjust_tracking_info = dependency_1.AdjustTrackingInfo.deserialize(reader));
                    break;
                case 908:
                    message.is_transfer = reader.readBool();
                    break;
                case 1787:
                    message.tag = reader.readUint32();
                    break;
                case 5:
                    message.is_guest = reader.readBool();
                    break;
                case 2026:
                    message.environment_error_code = reader.readBytes();
                    break;
                case 903:
                    message.online_id = reader.readString();
                    break;
                case 8:
                    message.is_editor = reader.readBool();
                    break;
                case 861:
                    message.checksum_client_version = reader.readString();
                    break;
                case 1995:
                    message.security_cmd_reply = reader.readBytes();
                    break;
                case 1213:
                    message.Unk2700_JNDKPBBCACB = reader.readString();
                    break;
                case 1652:
                    message.birthday = reader.readString();
                    break;
                case 4:
                    message.device_uuid = reader.readString();
                    break;
                case 1546:
                    message.client_token = reader.readUint32();
                    break;
                case 23:
                    message.sub_channel_id = reader.readUint32();
                    break;
                case 11:
                    message.target_uid = reader.readUint32();
                    break;
                case 1:
                    message.device_info = reader.readString();
                    break;
                case 1707:
                    message.client_verison_hash = reader.readString();
                    break;
                case 1532:
                    message.checksum = reader.readString();
                    break;
                case 14:
                    message.platform_type = reader.readUint32();
                    break;
                case 1864:
                    message.target_home_owner_uid = reader.readUint32();
                    break;
                case 1335:
                    message.cloud_client_ip = reader.readUint32();
                    break;
                case 612:
                    message.gm_uid = reader.readUint32();
                    break;
                case 10:
                    message.system_version = reader.readString();
                    break;
                case 7:
                    message.platform = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return PlayerLoginReq.deserialize(bytes);
    }
}
exports.PlayerLoginReq = PlayerLoginReq;
_PlayerLoginReq_one_of_decls = new WeakMap();
