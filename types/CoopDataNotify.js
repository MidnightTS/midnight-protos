"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _CoopDataNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoopDataNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CoopDataNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./CoopChapter");
const pb_1 = require("google-protobuf");
class CoopDataNotify extends pb_1.Message {
    constructor(data) {
        super();
        _CoopDataNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [15, 7], __classPrivateFieldGet(this, _CoopDataNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("chapter_list" in data && data.chapter_list != undefined) {
                this.chapter_list = data.chapter_list;
            }
            if ("viewed_chapter_list" in data && data.viewed_chapter_list != undefined) {
                this.viewed_chapter_list = data.viewed_chapter_list;
            }
            if ("is_have_progress" in data && data.is_have_progress != undefined) {
                this.is_have_progress = data.is_have_progress;
            }
            if ("cur_coop_point" in data && data.cur_coop_point != undefined) {
                this.cur_coop_point = data.cur_coop_point;
            }
        }
    }
    get chapter_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.CoopChapter, 15);
    }
    set chapter_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 15, value);
    }
    get viewed_chapter_list() {
        return pb_1.Message.getFieldWithDefault(this, 7, []);
    }
    set viewed_chapter_list(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get is_have_progress() {
        return pb_1.Message.getFieldWithDefault(this, 10, false);
    }
    set is_have_progress(value) {
        pb_1.Message.setField(this, 10, value);
    }
    get cur_coop_point() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0);
    }
    set cur_coop_point(value) {
        pb_1.Message.setField(this, 5, value);
    }
    static fromObject(data) {
        const message = new CoopDataNotify({});
        if (data.chapter_list != null) {
            message.chapter_list = data.chapter_list.map(item => dependency_1.CoopChapter.fromObject(item));
        }
        if (data.viewed_chapter_list != null) {
            message.viewed_chapter_list = data.viewed_chapter_list;
        }
        if (data.is_have_progress != null) {
            message.is_have_progress = data.is_have_progress;
        }
        if (data.cur_coop_point != null) {
            message.cur_coop_point = data.cur_coop_point;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.chapter_list != null) {
            data.chapter_list = this.chapter_list.map((item) => item.toObject());
        }
        if (this.viewed_chapter_list != null) {
            data.viewed_chapter_list = this.viewed_chapter_list;
        }
        if (this.is_have_progress != null) {
            data.is_have_progress = this.is_have_progress;
        }
        if (this.cur_coop_point != null) {
            data.cur_coop_point = this.cur_coop_point;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.chapter_list.length)
            writer.writeRepeatedMessage(15, this.chapter_list, (item) => item.serialize(writer));
        if (this.viewed_chapter_list.length)
            writer.writePackedUint32(7, this.viewed_chapter_list);
        if (this.is_have_progress != false)
            writer.writeBool(10, this.is_have_progress);
        if (this.cur_coop_point != 0)
            writer.writeUint32(5, this.cur_coop_point);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CoopDataNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 15:
                    reader.readMessage(message.chapter_list, () => pb_1.Message.addToRepeatedWrapperField(message, 15, dependency_1.CoopChapter.deserialize(reader), dependency_1.CoopChapter));
                    break;
                case 7:
                    message.viewed_chapter_list = reader.readPackedUint32();
                    break;
                case 10:
                    message.is_have_progress = reader.readBool();
                    break;
                case 5:
                    message.cur_coop_point = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return CoopDataNotify.deserialize(bytes);
    }
}
exports.CoopDataNotify = CoopDataNotify;
_CoopDataNotify_one_of_decls = new WeakMap();
