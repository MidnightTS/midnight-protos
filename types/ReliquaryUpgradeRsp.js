"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ReliquaryUpgradeRsp_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReliquaryUpgradeRsp = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ReliquaryUpgradeRsp.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class ReliquaryUpgradeRsp extends pb_1.Message {
    constructor(data) {
        super();
        _ReliquaryUpgradeRsp_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2, 15], __classPrivateFieldGet(this, _ReliquaryUpgradeRsp_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("old_level" in data && data.old_level != undefined) {
                this.old_level = data.old_level;
            }
            if ("cur_level" in data && data.cur_level != undefined) {
                this.cur_level = data.cur_level;
            }
            if ("target_reliquary_guid" in data && data.target_reliquary_guid != undefined) {
                this.target_reliquary_guid = data.target_reliquary_guid;
            }
            if ("cur_append_prop_list" in data && data.cur_append_prop_list != undefined) {
                this.cur_append_prop_list = data.cur_append_prop_list;
            }
            if ("power_up_rate" in data && data.power_up_rate != undefined) {
                this.power_up_rate = data.power_up_rate;
            }
            if ("old_append_prop_list" in data && data.old_append_prop_list != undefined) {
                this.old_append_prop_list = data.old_append_prop_list;
            }
            if ("retcode" in data && data.retcode != undefined) {
                this.retcode = data.retcode;
            }
        }
    }
    get old_level() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set old_level(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get cur_level() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0);
    }
    set cur_level(value) {
        pb_1.Message.setField(this, 13, value);
    }
    get target_reliquary_guid() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0);
    }
    set target_reliquary_guid(value) {
        pb_1.Message.setField(this, 9, value);
    }
    get cur_append_prop_list() {
        return pb_1.Message.getFieldWithDefault(this, 2, []);
    }
    set cur_append_prop_list(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get power_up_rate() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set power_up_rate(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get old_append_prop_list() {
        return pb_1.Message.getFieldWithDefault(this, 15, []);
    }
    set old_append_prop_list(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get retcode() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0);
    }
    set retcode(value) {
        pb_1.Message.setField(this, 5, value);
    }
    static fromObject(data) {
        const message = new ReliquaryUpgradeRsp({});
        if (data.old_level != null) {
            message.old_level = data.old_level;
        }
        if (data.cur_level != null) {
            message.cur_level = data.cur_level;
        }
        if (data.target_reliquary_guid != null) {
            message.target_reliquary_guid = data.target_reliquary_guid;
        }
        if (data.cur_append_prop_list != null) {
            message.cur_append_prop_list = data.cur_append_prop_list;
        }
        if (data.power_up_rate != null) {
            message.power_up_rate = data.power_up_rate;
        }
        if (data.old_append_prop_list != null) {
            message.old_append_prop_list = data.old_append_prop_list;
        }
        if (data.retcode != null) {
            message.retcode = data.retcode;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.old_level != null) {
            data.old_level = this.old_level;
        }
        if (this.cur_level != null) {
            data.cur_level = this.cur_level;
        }
        if (this.target_reliquary_guid != null) {
            data.target_reliquary_guid = this.target_reliquary_guid;
        }
        if (this.cur_append_prop_list != null) {
            data.cur_append_prop_list = this.cur_append_prop_list;
        }
        if (this.power_up_rate != null) {
            data.power_up_rate = this.power_up_rate;
        }
        if (this.old_append_prop_list != null) {
            data.old_append_prop_list = this.old_append_prop_list;
        }
        if (this.retcode != null) {
            data.retcode = this.retcode;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.old_level != 0)
            writer.writeUint32(4, this.old_level);
        if (this.cur_level != 0)
            writer.writeUint32(13, this.cur_level);
        if (this.target_reliquary_guid != 0)
            writer.writeUint64(9, this.target_reliquary_guid);
        if (this.cur_append_prop_list.length)
            writer.writePackedUint32(2, this.cur_append_prop_list);
        if (this.power_up_rate != 0)
            writer.writeUint32(6, this.power_up_rate);
        if (this.old_append_prop_list.length)
            writer.writePackedUint32(15, this.old_append_prop_list);
        if (this.retcode != 0)
            writer.writeInt32(5, this.retcode);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ReliquaryUpgradeRsp();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 4:
                    message.old_level = reader.readUint32();
                    break;
                case 13:
                    message.cur_level = reader.readUint32();
                    break;
                case 9:
                    message.target_reliquary_guid = reader.readUint64();
                    break;
                case 2:
                    message.cur_append_prop_list = reader.readPackedUint32();
                    break;
                case 6:
                    message.power_up_rate = reader.readUint32();
                    break;
                case 15:
                    message.old_append_prop_list = reader.readPackedUint32();
                    break;
                case 5:
                    message.retcode = reader.readInt32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return ReliquaryUpgradeRsp.deserialize(bytes);
    }
}
exports.ReliquaryUpgradeRsp = ReliquaryUpgradeRsp;
_ReliquaryUpgradeRsp_one_of_decls = new WeakMap();
