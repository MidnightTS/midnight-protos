/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneEntityDisappearNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./VisionType";
import * as pb_1 from "google-protobuf";
export class SceneEntityDisappearNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        param?: number;
        entity_list?: number[];
        disappear_type?: dependency_1.VisionType;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("param" in data && data.param != undefined) {
                this.param = data.param;
            }
            if ("entity_list" in data && data.entity_list != undefined) {
                this.entity_list = data.entity_list;
            }
            if ("disappear_type" in data && data.disappear_type != undefined) {
                this.disappear_type = data.disappear_type;
            }
        }
    }
    get param() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set param(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get entity_list() {
        return pb_1.Message.getFieldWithDefault(this, 1, []) as number[];
    }
    set entity_list(value: number[]) {
        pb_1.Message.setField(this, 1, value);
    }
    get disappear_type() {
        return pb_1.Message.getFieldWithDefault(this, 2, dependency_1.VisionType.VISION_TYPE_NONE) as dependency_1.VisionType;
    }
    set disappear_type(value: dependency_1.VisionType) {
        pb_1.Message.setField(this, 2, value);
    }
    static fromObject(data: {
        param?: number;
        entity_list?: number[];
        disappear_type?: dependency_1.VisionType;
    }): SceneEntityDisappearNotify {
        const message = new SceneEntityDisappearNotify({});
        if (data.param != null) {
            message.param = data.param;
        }
        if (data.entity_list != null) {
            message.entity_list = data.entity_list;
        }
        if (data.disappear_type != null) {
            message.disappear_type = data.disappear_type;
        }
        return message;
    }
    toObject() {
        const data: {
            param?: number;
            entity_list?: number[];
            disappear_type?: dependency_1.VisionType;
        } = {};
        if (this.param != null) {
            data.param = this.param;
        }
        if (this.entity_list != null) {
            data.entity_list = this.entity_list;
        }
        if (this.disappear_type != null) {
            data.disappear_type = this.disappear_type;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.param != 0)
            writer.writeUint32(6, this.param);
        if (this.entity_list.length)
            writer.writePackedUint32(1, this.entity_list);
        if (this.disappear_type != dependency_1.VisionType.VISION_TYPE_NONE)
            writer.writeEnum(2, this.disappear_type);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SceneEntityDisappearNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneEntityDisappearNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 6:
                    message.param = reader.readUint32();
                    break;
                case 1:
                    message.entity_list = reader.readPackedUint32();
                    break;
                case 2:
                    message.disappear_type = reader.readEnum();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): SceneEntityDisappearNotify {
        return SceneEntityDisappearNotify.deserialize(bytes);
    }
}
