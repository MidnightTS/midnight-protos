/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: BuoyantCombatSettleNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./BuoyantCombatSettleInfo";
import * as pb_1 from "google-protobuf";
export class BuoyantCombatSettleNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        gallery_id?: number;
        settle_info?: dependency_1.BuoyantCombatSettleInfo;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("gallery_id" in data && data.gallery_id != undefined) {
                this.gallery_id = data.gallery_id;
            }
            if ("settle_info" in data && data.settle_info != undefined) {
                this.settle_info = data.settle_info;
            }
        }
    }
    get gallery_id() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
    }
    set gallery_id(value: number) {
        pb_1.Message.setField(this, 8, value);
    }
    get settle_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.BuoyantCombatSettleInfo, 11) as dependency_1.BuoyantCombatSettleInfo;
    }
    set settle_info(value: dependency_1.BuoyantCombatSettleInfo) {
        pb_1.Message.setWrapperField(this, 11, value);
    }
    get has_settle_info() {
        return pb_1.Message.getField(this, 11) != null;
    }
    static fromObject(data: {
        gallery_id?: number;
        settle_info?: ReturnType<typeof dependency_1.BuoyantCombatSettleInfo.prototype.toObject>;
    }): BuoyantCombatSettleNotify {
        const message = new BuoyantCombatSettleNotify({});
        if (data.gallery_id != null) {
            message.gallery_id = data.gallery_id;
        }
        if (data.settle_info != null) {
            message.settle_info = dependency_1.BuoyantCombatSettleInfo.fromObject(data.settle_info);
        }
        return message;
    }
    toObject() {
        const data: {
            gallery_id?: number;
            settle_info?: ReturnType<typeof dependency_1.BuoyantCombatSettleInfo.prototype.toObject>;
        } = {};
        if (this.gallery_id != null) {
            data.gallery_id = this.gallery_id;
        }
        if (this.settle_info != null) {
            data.settle_info = this.settle_info.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.gallery_id != 0)
            writer.writeUint32(8, this.gallery_id);
        if (this.has_settle_info)
            writer.writeMessage(11, this.settle_info, () => this.settle_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): BuoyantCombatSettleNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BuoyantCombatSettleNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.gallery_id = reader.readUint32();
                    break;
                case 11:
                    reader.readMessage(message.settle_info, () => message.settle_info = dependency_1.BuoyantCombatSettleInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): BuoyantCombatSettleNotify {
        return BuoyantCombatSettleNotify.deserialize(bytes);
    }
}
