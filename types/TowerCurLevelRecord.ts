/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: TowerCurLevelRecord.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./TowerTeam";
import * as pb_1 from "google-protobuf";
export class TowerCurLevelRecord extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        tower_team_list?: dependency_1.TowerTeam[];
        is_empty?: boolean;
        buff_id_list?: number[];
        Unk2700_CBPNPEBMPOH?: boolean;
        cur_level_index?: number;
        cur_floor_id?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [8, 4], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("tower_team_list" in data && data.tower_team_list != undefined) {
                this.tower_team_list = data.tower_team_list;
            }
            if ("is_empty" in data && data.is_empty != undefined) {
                this.is_empty = data.is_empty;
            }
            if ("buff_id_list" in data && data.buff_id_list != undefined) {
                this.buff_id_list = data.buff_id_list;
            }
            if ("Unk2700_CBPNPEBMPOH" in data && data.Unk2700_CBPNPEBMPOH != undefined) {
                this.Unk2700_CBPNPEBMPOH = data.Unk2700_CBPNPEBMPOH;
            }
            if ("cur_level_index" in data && data.cur_level_index != undefined) {
                this.cur_level_index = data.cur_level_index;
            }
            if ("cur_floor_id" in data && data.cur_floor_id != undefined) {
                this.cur_floor_id = data.cur_floor_id;
            }
        }
    }
    get tower_team_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.TowerTeam, 8) as dependency_1.TowerTeam[];
    }
    set tower_team_list(value: dependency_1.TowerTeam[]) {
        pb_1.Message.setRepeatedWrapperField(this, 8, value);
    }
    get is_empty() {
        return pb_1.Message.getFieldWithDefault(this, 6, false) as boolean;
    }
    set is_empty(value: boolean) {
        pb_1.Message.setField(this, 6, value);
    }
    get buff_id_list() {
        return pb_1.Message.getFieldWithDefault(this, 4, []) as number[];
    }
    set buff_id_list(value: number[]) {
        pb_1.Message.setField(this, 4, value);
    }
    get Unk2700_CBPNPEBMPOH() {
        return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
    }
    set Unk2700_CBPNPEBMPOH(value: boolean) {
        pb_1.Message.setField(this, 2, value);
    }
    get cur_level_index() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set cur_level_index(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get cur_floor_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set cur_floor_id(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data: {
        tower_team_list?: ReturnType<typeof dependency_1.TowerTeam.prototype.toObject>[];
        is_empty?: boolean;
        buff_id_list?: number[];
        Unk2700_CBPNPEBMPOH?: boolean;
        cur_level_index?: number;
        cur_floor_id?: number;
    }): TowerCurLevelRecord {
        const message = new TowerCurLevelRecord({});
        if (data.tower_team_list != null) {
            message.tower_team_list = data.tower_team_list.map(item => dependency_1.TowerTeam.fromObject(item));
        }
        if (data.is_empty != null) {
            message.is_empty = data.is_empty;
        }
        if (data.buff_id_list != null) {
            message.buff_id_list = data.buff_id_list;
        }
        if (data.Unk2700_CBPNPEBMPOH != null) {
            message.Unk2700_CBPNPEBMPOH = data.Unk2700_CBPNPEBMPOH;
        }
        if (data.cur_level_index != null) {
            message.cur_level_index = data.cur_level_index;
        }
        if (data.cur_floor_id != null) {
            message.cur_floor_id = data.cur_floor_id;
        }
        return message;
    }
    toObject() {
        const data: {
            tower_team_list?: ReturnType<typeof dependency_1.TowerTeam.prototype.toObject>[];
            is_empty?: boolean;
            buff_id_list?: number[];
            Unk2700_CBPNPEBMPOH?: boolean;
            cur_level_index?: number;
            cur_floor_id?: number;
        } = {};
        if (this.tower_team_list != null) {
            data.tower_team_list = this.tower_team_list.map((item: dependency_1.TowerTeam) => item.toObject());
        }
        if (this.is_empty != null) {
            data.is_empty = this.is_empty;
        }
        if (this.buff_id_list != null) {
            data.buff_id_list = this.buff_id_list;
        }
        if (this.Unk2700_CBPNPEBMPOH != null) {
            data.Unk2700_CBPNPEBMPOH = this.Unk2700_CBPNPEBMPOH;
        }
        if (this.cur_level_index != null) {
            data.cur_level_index = this.cur_level_index;
        }
        if (this.cur_floor_id != null) {
            data.cur_floor_id = this.cur_floor_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.tower_team_list.length)
            writer.writeRepeatedMessage(8, this.tower_team_list, (item: dependency_1.TowerTeam) => item.serialize(writer));
        if (this.is_empty != false)
            writer.writeBool(6, this.is_empty);
        if (this.buff_id_list.length)
            writer.writePackedUint32(4, this.buff_id_list);
        if (this.Unk2700_CBPNPEBMPOH != false)
            writer.writeBool(2, this.Unk2700_CBPNPEBMPOH);
        if (this.cur_level_index != 0)
            writer.writeUint32(1, this.cur_level_index);
        if (this.cur_floor_id != 0)
            writer.writeUint32(15, this.cur_floor_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TowerCurLevelRecord {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TowerCurLevelRecord();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    reader.readMessage(message.tower_team_list, () => pb_1.Message.addToRepeatedWrapperField(message, 8, dependency_1.TowerTeam.deserialize(reader), dependency_1.TowerTeam));
                    break;
                case 6:
                    message.is_empty = reader.readBool();
                    break;
                case 4:
                    message.buff_id_list = reader.readPackedUint32();
                    break;
                case 2:
                    message.Unk2700_CBPNPEBMPOH = reader.readBool();
                    break;
                case 1:
                    message.cur_level_index = reader.readUint32();
                    break;
                case 15:
                    message.cur_floor_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): TowerCurLevelRecord {
        return TowerCurLevelRecord.deserialize(bytes);
    }
}
