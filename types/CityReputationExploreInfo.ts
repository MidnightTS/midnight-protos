/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CityReputationExploreInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class CityReputationExploreInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        taken_explore_reward_list?: number[];
        explore_percent?: number;
        is_open?: boolean;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("taken_explore_reward_list" in data && data.taken_explore_reward_list != undefined) {
                this.taken_explore_reward_list = data.taken_explore_reward_list;
            }
            if ("explore_percent" in data && data.explore_percent != undefined) {
                this.explore_percent = data.explore_percent;
            }
            if ("is_open" in data && data.is_open != undefined) {
                this.is_open = data.is_open;
            }
        }
    }
    get taken_explore_reward_list() {
        return pb_1.Message.getFieldWithDefault(this, 2, []) as number[];
    }
    set taken_explore_reward_list(value: number[]) {
        pb_1.Message.setField(this, 2, value);
    }
    get explore_percent() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0) as number;
    }
    set explore_percent(value: number) {
        pb_1.Message.setField(this, 14, value);
    }
    get is_open() {
        return pb_1.Message.getFieldWithDefault(this, 15, false) as boolean;
    }
    set is_open(value: boolean) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data: {
        taken_explore_reward_list?: number[];
        explore_percent?: number;
        is_open?: boolean;
    }): CityReputationExploreInfo {
        const message = new CityReputationExploreInfo({});
        if (data.taken_explore_reward_list != null) {
            message.taken_explore_reward_list = data.taken_explore_reward_list;
        }
        if (data.explore_percent != null) {
            message.explore_percent = data.explore_percent;
        }
        if (data.is_open != null) {
            message.is_open = data.is_open;
        }
        return message;
    }
    toObject() {
        const data: {
            taken_explore_reward_list?: number[];
            explore_percent?: number;
            is_open?: boolean;
        } = {};
        if (this.taken_explore_reward_list != null) {
            data.taken_explore_reward_list = this.taken_explore_reward_list;
        }
        if (this.explore_percent != null) {
            data.explore_percent = this.explore_percent;
        }
        if (this.is_open != null) {
            data.is_open = this.is_open;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.taken_explore_reward_list.length)
            writer.writePackedUint32(2, this.taken_explore_reward_list);
        if (this.explore_percent != 0)
            writer.writeUint32(14, this.explore_percent);
        if (this.is_open != false)
            writer.writeBool(15, this.is_open);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CityReputationExploreInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CityReputationExploreInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 2:
                    message.taken_explore_reward_list = reader.readPackedUint32();
                    break;
                case 14:
                    message.explore_percent = reader.readUint32();
                    break;
                case 15:
                    message.is_open = reader.readBool();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): CityReputationExploreInfo {
        return CityReputationExploreInfo.deserialize(bytes);
    }
}
