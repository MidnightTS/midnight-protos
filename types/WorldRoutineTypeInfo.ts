/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: WorldRoutineTypeInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./WorldRoutineInfo";
import * as pb_1 from "google-protobuf";
export class WorldRoutineTypeInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        routine_type?: number;
        next_refresh_time?: number;
        world_routine_info_list?: dependency_1.WorldRoutineInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("routine_type" in data && data.routine_type != undefined) {
                this.routine_type = data.routine_type;
            }
            if ("next_refresh_time" in data && data.next_refresh_time != undefined) {
                this.next_refresh_time = data.next_refresh_time;
            }
            if ("world_routine_info_list" in data && data.world_routine_info_list != undefined) {
                this.world_routine_info_list = data.world_routine_info_list;
            }
        }
    }
    get routine_type() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set routine_type(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    get next_refresh_time() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set next_refresh_time(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get world_routine_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.WorldRoutineInfo, 3) as dependency_1.WorldRoutineInfo[];
    }
    set world_routine_info_list(value: dependency_1.WorldRoutineInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 3, value);
    }
    static fromObject(data: {
        routine_type?: number;
        next_refresh_time?: number;
        world_routine_info_list?: ReturnType<typeof dependency_1.WorldRoutineInfo.prototype.toObject>[];
    }): WorldRoutineTypeInfo {
        const message = new WorldRoutineTypeInfo({});
        if (data.routine_type != null) {
            message.routine_type = data.routine_type;
        }
        if (data.next_refresh_time != null) {
            message.next_refresh_time = data.next_refresh_time;
        }
        if (data.world_routine_info_list != null) {
            message.world_routine_info_list = data.world_routine_info_list.map(item => dependency_1.WorldRoutineInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            routine_type?: number;
            next_refresh_time?: number;
            world_routine_info_list?: ReturnType<typeof dependency_1.WorldRoutineInfo.prototype.toObject>[];
        } = {};
        if (this.routine_type != null) {
            data.routine_type = this.routine_type;
        }
        if (this.next_refresh_time != null) {
            data.next_refresh_time = this.next_refresh_time;
        }
        if (this.world_routine_info_list != null) {
            data.world_routine_info_list = this.world_routine_info_list.map((item: dependency_1.WorldRoutineInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.routine_type != 0)
            writer.writeUint32(13, this.routine_type);
        if (this.next_refresh_time != 0)
            writer.writeUint32(12, this.next_refresh_time);
        if (this.world_routine_info_list.length)
            writer.writeRepeatedMessage(3, this.world_routine_info_list, (item: dependency_1.WorldRoutineInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): WorldRoutineTypeInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new WorldRoutineTypeInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 13:
                    message.routine_type = reader.readUint32();
                    break;
                case 12:
                    message.next_refresh_time = reader.readUint32();
                    break;
                case 3:
                    reader.readMessage(message.world_routine_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.WorldRoutineInfo.deserialize(reader), dependency_1.WorldRoutineInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): WorldRoutineTypeInfo {
        return WorldRoutineTypeInfo.deserialize(bytes);
    }
}
