// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_miracle_ring.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { InteractType } from "./cmd_gadget";
import { ItemParam } from "./define";
import { InterOpType } from "./cmd_gadget";
import { Vector } from "./define";
/**
 * @generated from protobuf message com.midnights.game.UseMiracleRingReq
 */
export interface UseMiracleRingReq {
    /**
     * @generated from protobuf field: optional uint32 miracle_ring_op_type = 13;
     */
    miracleRingOpType?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 8;
     */
    pos?: Vector;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector rot = 7;
     */
    rot?: Vector;
}
/**
 * @generated from protobuf enum com.midnights.game.UseMiracleRingReq.CmdId
 */
export enum UseMiracleRingReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5226;
     */
    CMD_ID = 5226,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf enum com.midnights.game.UseMiracleRingReq.MiracleRingOpType
 */
export enum UseMiracleRingReq_MiracleRingOpType {
    /**
     * @generated from protobuf enum value: MIRACLE_RING_OP_NONE = 0;
     */
    MIRACLE_RING_OP_NONE = 0,
    /**
     * @generated from protobuf enum value: MIRACLE_RING_OP_PLACE = 1;
     */
    MIRACLE_RING_OP_PLACE = 1,
    /**
     * @generated from protobuf enum value: MIRACLE_RING_OP_RETRACT = 2;
     */
    MIRACLE_RING_OP_RETRACT = 2
}
/**
 * @generated from protobuf message com.midnights.game.UseMiracleRingRsp
 */
export interface UseMiracleRingRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 miracle_ring_op_type = 7;
     */
    miracleRingOpType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.UseMiracleRingRsp.CmdId
 */
export enum UseMiracleRingRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5218;
     */
    CMD_ID = 5218,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.MiracleRingDataNotify
 */
export interface MiracleRingDataNotify {
    /**
     * @generated from protobuf field: optional bool is_gadget_created = 8;
     */
    isGadgetCreated?: boolean;
    /**
     * @generated from protobuf field: optional uint32 last_take_reward_time = 14;
     */
    lastTakeRewardTime?: number;
    /**
     * @generated from protobuf field: optional uint32 gadget_entity_id = 12;
     */
    gadgetEntityId?: number;
    /**
     * @generated from protobuf field: optional uint32 last_deliver_item_time = 10;
     */
    lastDeliverItemTime?: number;
    /**
     * @generated from protobuf field: optional uint32 miracle_ring_cd = 7;
     */
    miracleRingCd?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MiracleRingDataNotify.CmdId
 */
export enum MiracleRingDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5225;
     */
    CMD_ID = 5225,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.MiracleRingTakeRewardReq
 */
export interface MiracleRingTakeRewardReq {
    /**
     * @generated from protobuf field: optional uint32 gadget_id = 11;
     */
    gadgetId?: number;
    /**
     * @generated from protobuf field: optional uint32 gadget_entity_id = 7;
     */
    gadgetEntityId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MiracleRingTakeRewardReq.CmdId
 */
export enum MiracleRingTakeRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5207;
     */
    CMD_ID = 5207,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.MiracleRingTakeRewardRsp
 */
export interface MiracleRingTakeRewardRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MiracleRingTakeRewardRsp.CmdId
 */
export enum MiracleRingTakeRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5202;
     */
    CMD_ID = 5202,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.MiracleRingDropResultNotify
 */
export interface MiracleRingDropResultNotify {
    /**
     * @generated from protobuf field: optional int32 last_take_reward_time = 5;
     */
    lastTakeRewardTime?: number;
    /**
     * @generated from protobuf field: optional int32 drop_result = 9;
     */
    dropResult?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MiracleRingDropResultNotify.CmdId
 */
export enum MiracleRingDropResultNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5231;
     */
    CMD_ID = 5231,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.MiracleRingDeliverItemReq
 */
export interface MiracleRingDeliverItemReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.InterOpType op_type = 9;
     */
    opType?: InterOpType;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam item_param_list = 1;
     */
    itemParamList: ItemParam[];
    /**
     * @generated from protobuf field: repeated uint64 food_weapon_guid_list = 4;
     */
    foodWeaponGuidList: bigint[];
    /**
     * @generated from protobuf field: optional uint32 gadget_id = 14;
     */
    gadgetId?: number;
    /**
     * @generated from protobuf field: optional uint32 gadget_entity_id = 5;
     */
    gadgetEntityId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MiracleRingDeliverItemReq.CmdId
 */
export enum MiracleRingDeliverItemReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5229;
     */
    CMD_ID = 5229,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.MiracleRingDeliverItemRsp
 */
export interface MiracleRingDeliverItemRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.InteractType interact_type = 15;
     */
    interactType?: InteractType;
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.InterOpType op_type = 14;
     */
    opType?: InterOpType;
    /**
     * @generated from protobuf field: optional uint32 gadget_id = 4;
     */
    gadgetId?: number;
    /**
     * @generated from protobuf field: optional uint32 gadget_entity_id = 9;
     */
    gadgetEntityId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MiracleRingDeliverItemRsp.CmdId
 */
export enum MiracleRingDeliverItemRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5222;
     */
    CMD_ID = 5222,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.MiracleRingDestroyNotify
 */
export interface MiracleRingDestroyNotify {
    /**
     * @generated from protobuf field: optional uint32 entity_id = 7;
     */
    entityId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MiracleRingDestroyNotify.CmdId
 */
export enum MiracleRingDestroyNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5244;
     */
    CMD_ID = 5244,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class UseMiracleRingReq$Type extends MessageType<UseMiracleRingReq> {
    constructor() {
        super("com.midnights.game.UseMiracleRingReq", [
            { no: 13, name: "miracle_ring_op_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "pos", kind: "message", T: () => Vector },
            { no: 7, name: "rot", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<UseMiracleRingReq>): UseMiracleRingReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UseMiracleRingReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UseMiracleRingReq): UseMiracleRingReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 miracle_ring_op_type */ 13:
                    message.miracleRingOpType = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector pos */ 8:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                case /* optional com.midnights.game.Vector rot */ 7:
                    message.rot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.rot);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UseMiracleRingReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 miracle_ring_op_type = 13; */
        if (message.miracleRingOpType !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.miracleRingOpType);
        /* optional com.midnights.game.Vector pos = 8; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.Vector rot = 7; */
        if (message.rot)
            Vector.internalBinaryWrite(message.rot, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UseMiracleRingReq
 */
export const UseMiracleRingReq = new UseMiracleRingReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UseMiracleRingRsp$Type extends MessageType<UseMiracleRingRsp> {
    constructor() {
        super("com.midnights.game.UseMiracleRingRsp", [
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "miracle_ring_op_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UseMiracleRingRsp>): UseMiracleRingRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UseMiracleRingRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UseMiracleRingRsp): UseMiracleRingRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 miracle_ring_op_type */ 7:
                    message.miracleRingOpType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UseMiracleRingRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        /* optional uint32 miracle_ring_op_type = 7; */
        if (message.miracleRingOpType !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.miracleRingOpType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UseMiracleRingRsp
 */
export const UseMiracleRingRsp = new UseMiracleRingRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MiracleRingDataNotify$Type extends MessageType<MiracleRingDataNotify> {
    constructor() {
        super("com.midnights.game.MiracleRingDataNotify", [
            { no: 8, name: "is_gadget_created", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "last_take_reward_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "gadget_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "last_deliver_item_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "miracle_ring_cd", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MiracleRingDataNotify>): MiracleRingDataNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MiracleRingDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MiracleRingDataNotify): MiracleRingDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_gadget_created */ 8:
                    message.isGadgetCreated = reader.bool();
                    break;
                case /* optional uint32 last_take_reward_time */ 14:
                    message.lastTakeRewardTime = reader.uint32();
                    break;
                case /* optional uint32 gadget_entity_id */ 12:
                    message.gadgetEntityId = reader.uint32();
                    break;
                case /* optional uint32 last_deliver_item_time */ 10:
                    message.lastDeliverItemTime = reader.uint32();
                    break;
                case /* optional uint32 miracle_ring_cd */ 7:
                    message.miracleRingCd = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MiracleRingDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_gadget_created = 8; */
        if (message.isGadgetCreated !== undefined)
            writer.tag(8, WireType.Varint).bool(message.isGadgetCreated);
        /* optional uint32 last_take_reward_time = 14; */
        if (message.lastTakeRewardTime !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.lastTakeRewardTime);
        /* optional uint32 gadget_entity_id = 12; */
        if (message.gadgetEntityId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.gadgetEntityId);
        /* optional uint32 last_deliver_item_time = 10; */
        if (message.lastDeliverItemTime !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.lastDeliverItemTime);
        /* optional uint32 miracle_ring_cd = 7; */
        if (message.miracleRingCd !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.miracleRingCd);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MiracleRingDataNotify
 */
export const MiracleRingDataNotify = new MiracleRingDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MiracleRingTakeRewardReq$Type extends MessageType<MiracleRingTakeRewardReq> {
    constructor() {
        super("com.midnights.game.MiracleRingTakeRewardReq", [
            { no: 11, name: "gadget_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "gadget_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MiracleRingTakeRewardReq>): MiracleRingTakeRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MiracleRingTakeRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MiracleRingTakeRewardReq): MiracleRingTakeRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 gadget_id */ 11:
                    message.gadgetId = reader.uint32();
                    break;
                case /* optional uint32 gadget_entity_id */ 7:
                    message.gadgetEntityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MiracleRingTakeRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 gadget_id = 11; */
        if (message.gadgetId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.gadgetId);
        /* optional uint32 gadget_entity_id = 7; */
        if (message.gadgetEntityId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.gadgetEntityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MiracleRingTakeRewardReq
 */
export const MiracleRingTakeRewardReq = new MiracleRingTakeRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MiracleRingTakeRewardRsp$Type extends MessageType<MiracleRingTakeRewardRsp> {
    constructor() {
        super("com.midnights.game.MiracleRingTakeRewardRsp", [
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<MiracleRingTakeRewardRsp>): MiracleRingTakeRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MiracleRingTakeRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MiracleRingTakeRewardRsp): MiracleRingTakeRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MiracleRingTakeRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MiracleRingTakeRewardRsp
 */
export const MiracleRingTakeRewardRsp = new MiracleRingTakeRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MiracleRingDropResultNotify$Type extends MessageType<MiracleRingDropResultNotify> {
    constructor() {
        super("com.midnights.game.MiracleRingDropResultNotify", [
            { no: 5, name: "last_take_reward_time", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "drop_result", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<MiracleRingDropResultNotify>): MiracleRingDropResultNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MiracleRingDropResultNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MiracleRingDropResultNotify): MiracleRingDropResultNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 last_take_reward_time */ 5:
                    message.lastTakeRewardTime = reader.int32();
                    break;
                case /* optional int32 drop_result */ 9:
                    message.dropResult = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MiracleRingDropResultNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 last_take_reward_time = 5; */
        if (message.lastTakeRewardTime !== undefined)
            writer.tag(5, WireType.Varint).int32(message.lastTakeRewardTime);
        /* optional int32 drop_result = 9; */
        if (message.dropResult !== undefined)
            writer.tag(9, WireType.Varint).int32(message.dropResult);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MiracleRingDropResultNotify
 */
export const MiracleRingDropResultNotify = new MiracleRingDropResultNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MiracleRingDeliverItemReq$Type extends MessageType<MiracleRingDeliverItemReq> {
    constructor() {
        super("com.midnights.game.MiracleRingDeliverItemReq", [
            { no: 9, name: "op_type", kind: "enum", opt: true, T: () => ["com.midnights.game.InterOpType", InterOpType] },
            { no: 1, name: "item_param_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam },
            { no: 4, name: "food_weapon_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "gadget_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "gadget_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MiracleRingDeliverItemReq>): MiracleRingDeliverItemReq {
        const message = { itemParamList: [], foodWeaponGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MiracleRingDeliverItemReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MiracleRingDeliverItemReq): MiracleRingDeliverItemReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.InterOpType op_type */ 9:
                    message.opType = reader.int32();
                    break;
                case /* repeated com.midnights.game.ItemParam item_param_list */ 1:
                    message.itemParamList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated uint64 food_weapon_guid_list */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.foodWeaponGuidList.push(reader.uint64().toBigInt());
                    else
                        message.foodWeaponGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* optional uint32 gadget_id */ 14:
                    message.gadgetId = reader.uint32();
                    break;
                case /* optional uint32 gadget_entity_id */ 5:
                    message.gadgetEntityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MiracleRingDeliverItemReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.InterOpType op_type = 9; */
        if (message.opType !== undefined)
            writer.tag(9, WireType.Varint).int32(message.opType);
        /* repeated com.midnights.game.ItemParam item_param_list = 1; */
        for (let i = 0; i < message.itemParamList.length; i++)
            ItemParam.internalBinaryWrite(message.itemParamList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint64 food_weapon_guid_list = 4; */
        for (let i = 0; i < message.foodWeaponGuidList.length; i++)
            writer.tag(4, WireType.Varint).uint64(message.foodWeaponGuidList[i]);
        /* optional uint32 gadget_id = 14; */
        if (message.gadgetId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.gadgetId);
        /* optional uint32 gadget_entity_id = 5; */
        if (message.gadgetEntityId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.gadgetEntityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MiracleRingDeliverItemReq
 */
export const MiracleRingDeliverItemReq = new MiracleRingDeliverItemReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MiracleRingDeliverItemRsp$Type extends MessageType<MiracleRingDeliverItemRsp> {
    constructor() {
        super("com.midnights.game.MiracleRingDeliverItemRsp", [
            { no: 15, name: "interact_type", kind: "enum", opt: true, T: () => ["com.midnights.game.InteractType", InteractType] },
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "op_type", kind: "enum", opt: true, T: () => ["com.midnights.game.InterOpType", InterOpType] },
            { no: 4, name: "gadget_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "gadget_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MiracleRingDeliverItemRsp>): MiracleRingDeliverItemRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MiracleRingDeliverItemRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MiracleRingDeliverItemRsp): MiracleRingDeliverItemRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.InteractType interact_type */ 15:
                    message.interactType = reader.int32();
                    break;
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.InterOpType op_type */ 14:
                    message.opType = reader.int32();
                    break;
                case /* optional uint32 gadget_id */ 4:
                    message.gadgetId = reader.uint32();
                    break;
                case /* optional uint32 gadget_entity_id */ 9:
                    message.gadgetEntityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MiracleRingDeliverItemRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.InteractType interact_type = 15; */
        if (message.interactType !== undefined)
            writer.tag(15, WireType.Varint).int32(message.interactType);
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.InterOpType op_type = 14; */
        if (message.opType !== undefined)
            writer.tag(14, WireType.Varint).int32(message.opType);
        /* optional uint32 gadget_id = 4; */
        if (message.gadgetId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.gadgetId);
        /* optional uint32 gadget_entity_id = 9; */
        if (message.gadgetEntityId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.gadgetEntityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MiracleRingDeliverItemRsp
 */
export const MiracleRingDeliverItemRsp = new MiracleRingDeliverItemRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MiracleRingDestroyNotify$Type extends MessageType<MiracleRingDestroyNotify> {
    constructor() {
        super("com.midnights.game.MiracleRingDestroyNotify", [
            { no: 7, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MiracleRingDestroyNotify>): MiracleRingDestroyNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MiracleRingDestroyNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MiracleRingDestroyNotify): MiracleRingDestroyNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 entity_id */ 7:
                    message.entityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MiracleRingDestroyNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 entity_id = 7; */
        if (message.entityId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.entityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MiracleRingDestroyNotify
 */
export const MiracleRingDestroyNotify = new MiracleRingDestroyNotify$Type();
