"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _MultistagePlaySettleNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultistagePlaySettleNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: MultistagePlaySettleNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./InBattleChessSettleInfo");
const dependency_2 = require("./InBattleMechanicusSettleInfo");
const dependency_3 = require("./IrodoriChessSettleInfo");
const pb_1 = require("google-protobuf");
class MultistagePlaySettleNotify extends pb_1.Message {
    constructor(data) {
        super();
        _MultistagePlaySettleNotify_one_of_decls.set(this, [[1402, 1283, 612]]);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _MultistagePlaySettleNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("play_index" in data && data.play_index != undefined) {
                this.play_index = data.play_index;
            }
            if ("group_id" in data && data.group_id != undefined) {
                this.group_id = data.group_id;
            }
            if ("mechanicus_settle_info" in data && data.mechanicus_settle_info != undefined) {
                this.mechanicus_settle_info = data.mechanicus_settle_info;
            }
            if ("chess_settle_info" in data && data.chess_settle_info != undefined) {
                this.chess_settle_info = data.chess_settle_info;
            }
            if ("irodori_chess_settle_info" in data && data.irodori_chess_settle_info != undefined) {
                this.irodori_chess_settle_info = data.irodori_chess_settle_info;
            }
        }
    }
    get play_index() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0);
    }
    set play_index(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get group_id() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set group_id(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get mechanicus_settle_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.InBattleMechanicusSettleInfo, 1402);
    }
    set mechanicus_settle_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1402, __classPrivateFieldGet(this, _MultistagePlaySettleNotify_one_of_decls, "f")[0], value);
    }
    get has_mechanicus_settle_info() {
        return pb_1.Message.getField(this, 1402) != null;
    }
    get chess_settle_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.InBattleChessSettleInfo, 1283);
    }
    set chess_settle_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1283, __classPrivateFieldGet(this, _MultistagePlaySettleNotify_one_of_decls, "f")[0], value);
    }
    get has_chess_settle_info() {
        return pb_1.Message.getField(this, 1283) != null;
    }
    get irodori_chess_settle_info() {
        return pb_1.Message.getWrapperField(this, dependency_3.IrodoriChessSettleInfo, 612);
    }
    set irodori_chess_settle_info(value) {
        pb_1.Message.setOneofWrapperField(this, 612, __classPrivateFieldGet(this, _MultistagePlaySettleNotify_one_of_decls, "f")[0], value);
    }
    get has_irodori_chess_settle_info() {
        return pb_1.Message.getField(this, 612) != null;
    }
    get detail() {
        const cases = {
            0: "none",
            1402: "mechanicus_settle_info",
            1283: "chess_settle_info",
            612: "irodori_chess_settle_info"
        };
        return cases[pb_1.Message.computeOneofCase(this, [1402, 1283, 612])];
    }
    static fromObject(data) {
        const message = new MultistagePlaySettleNotify({});
        if (data.play_index != null) {
            message.play_index = data.play_index;
        }
        if (data.group_id != null) {
            message.group_id = data.group_id;
        }
        if (data.mechanicus_settle_info != null) {
            message.mechanicus_settle_info = dependency_2.InBattleMechanicusSettleInfo.fromObject(data.mechanicus_settle_info);
        }
        if (data.chess_settle_info != null) {
            message.chess_settle_info = dependency_1.InBattleChessSettleInfo.fromObject(data.chess_settle_info);
        }
        if (data.irodori_chess_settle_info != null) {
            message.irodori_chess_settle_info = dependency_3.IrodoriChessSettleInfo.fromObject(data.irodori_chess_settle_info);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.play_index != null) {
            data.play_index = this.play_index;
        }
        if (this.group_id != null) {
            data.group_id = this.group_id;
        }
        if (this.mechanicus_settle_info != null) {
            data.mechanicus_settle_info = this.mechanicus_settle_info.toObject();
        }
        if (this.chess_settle_info != null) {
            data.chess_settle_info = this.chess_settle_info.toObject();
        }
        if (this.irodori_chess_settle_info != null) {
            data.irodori_chess_settle_info = this.irodori_chess_settle_info.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.play_index != 0)
            writer.writeUint32(14, this.play_index);
        if (this.group_id != 0)
            writer.writeUint32(4, this.group_id);
        if (this.has_mechanicus_settle_info)
            writer.writeMessage(1402, this.mechanicus_settle_info, () => this.mechanicus_settle_info.serialize(writer));
        if (this.has_chess_settle_info)
            writer.writeMessage(1283, this.chess_settle_info, () => this.chess_settle_info.serialize(writer));
        if (this.has_irodori_chess_settle_info)
            writer.writeMessage(612, this.irodori_chess_settle_info, () => this.irodori_chess_settle_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MultistagePlaySettleNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 14:
                    message.play_index = reader.readUint32();
                    break;
                case 4:
                    message.group_id = reader.readUint32();
                    break;
                case 1402:
                    reader.readMessage(message.mechanicus_settle_info, () => message.mechanicus_settle_info = dependency_2.InBattleMechanicusSettleInfo.deserialize(reader));
                    break;
                case 1283:
                    reader.readMessage(message.chess_settle_info, () => message.chess_settle_info = dependency_1.InBattleChessSettleInfo.deserialize(reader));
                    break;
                case 612:
                    reader.readMessage(message.irodori_chess_settle_info, () => message.irodori_chess_settle_info = dependency_3.IrodoriChessSettleInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return MultistagePlaySettleNotify.deserialize(bytes);
    }
}
exports.MultistagePlaySettleNotify = MultistagePlaySettleNotify;
_MultistagePlaySettleNotify_one_of_decls = new WeakMap();
