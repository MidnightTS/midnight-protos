/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneReliquaryInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class SceneReliquaryInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        item_id?: number;
        guid?: number;
        level?: number;
        promote_level?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("item_id" in data && data.item_id != undefined) {
                this.item_id = data.item_id;
            }
            if ("guid" in data && data.guid != undefined) {
                this.guid = data.guid;
            }
            if ("level" in data && data.level != undefined) {
                this.level = data.level;
            }
            if ("promote_level" in data && data.promote_level != undefined) {
                this.promote_level = data.promote_level;
            }
        }
    }
    get item_id() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set item_id(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get guid() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set guid(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get level() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set level(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get promote_level() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set promote_level(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        item_id?: number;
        guid?: number;
        level?: number;
        promote_level?: number;
    }): SceneReliquaryInfo {
        const message = new SceneReliquaryInfo({});
        if (data.item_id != null) {
            message.item_id = data.item_id;
        }
        if (data.guid != null) {
            message.guid = data.guid;
        }
        if (data.level != null) {
            message.level = data.level;
        }
        if (data.promote_level != null) {
            message.promote_level = data.promote_level;
        }
        return message;
    }
    toObject() {
        const data: {
            item_id?: number;
            guid?: number;
            level?: number;
            promote_level?: number;
        } = {};
        if (this.item_id != null) {
            data.item_id = this.item_id;
        }
        if (this.guid != null) {
            data.guid = this.guid;
        }
        if (this.level != null) {
            data.level = this.level;
        }
        if (this.promote_level != null) {
            data.promote_level = this.promote_level;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.item_id != 0)
            writer.writeUint32(1, this.item_id);
        if (this.guid != 0)
            writer.writeUint64(2, this.guid);
        if (this.level != 0)
            writer.writeUint32(3, this.level);
        if (this.promote_level != 0)
            writer.writeUint32(4, this.promote_level);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SceneReliquaryInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneReliquaryInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.item_id = reader.readUint32();
                    break;
                case 2:
                    message.guid = reader.readUint64();
                    break;
                case 3:
                    message.level = reader.readUint32();
                    break;
                case 4:
                    message.promote_level = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): SceneReliquaryInfo {
        return SceneReliquaryInfo.deserialize(bytes);
    }
}
