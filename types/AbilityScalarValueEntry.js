"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _AbilityScalarValueEntry_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbilityScalarValueEntry = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: AbilityScalarValueEntry.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./AbilityScalarType");
const dependency_2 = require("./AbilityString");
const pb_1 = require("google-protobuf");
class AbilityScalarValueEntry extends pb_1.Message {
    constructor(data) {
        super();
        _AbilityScalarValueEntry_one_of_decls.set(this, [[3, 4, 5, 6]]);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _AbilityScalarValueEntry_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("key" in data && data.key != undefined) {
                this.key = data.key;
            }
            if ("value_type" in data && data.value_type != undefined) {
                this.value_type = data.value_type;
            }
            if ("float_value" in data && data.float_value != undefined) {
                this.float_value = data.float_value;
            }
            if ("string_value" in data && data.string_value != undefined) {
                this.string_value = data.string_value;
            }
            if ("int_value" in data && data.int_value != undefined) {
                this.int_value = data.int_value;
            }
            if ("uint_value" in data && data.uint_value != undefined) {
                this.uint_value = data.uint_value;
            }
        }
    }
    get key() {
        return pb_1.Message.getWrapperField(this, dependency_2.AbilityString, 1);
    }
    set key(value) {
        pb_1.Message.setWrapperField(this, 1, value);
    }
    get has_key() {
        return pb_1.Message.getField(this, 1) != null;
    }
    get value_type() {
        return pb_1.Message.getFieldWithDefault(this, 2, dependency_1.AbilityScalarType.ABILITY_SCALAR_TYPE_UNKNOW);
    }
    set value_type(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get float_value() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set float_value(value) {
        pb_1.Message.setOneofField(this, 3, __classPrivateFieldGet(this, _AbilityScalarValueEntry_one_of_decls, "f")[0], value);
    }
    get has_float_value() {
        return pb_1.Message.getField(this, 3) != null;
    }
    get string_value() {
        return pb_1.Message.getFieldWithDefault(this, 4, "");
    }
    set string_value(value) {
        pb_1.Message.setOneofField(this, 4, __classPrivateFieldGet(this, _AbilityScalarValueEntry_one_of_decls, "f")[0], value);
    }
    get has_string_value() {
        return pb_1.Message.getField(this, 4) != null;
    }
    get int_value() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0);
    }
    set int_value(value) {
        pb_1.Message.setOneofField(this, 5, __classPrivateFieldGet(this, _AbilityScalarValueEntry_one_of_decls, "f")[0], value);
    }
    get has_int_value() {
        return pb_1.Message.getField(this, 5) != null;
    }
    get uint_value() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set uint_value(value) {
        pb_1.Message.setOneofField(this, 6, __classPrivateFieldGet(this, _AbilityScalarValueEntry_one_of_decls, "f")[0], value);
    }
    get has_uint_value() {
        return pb_1.Message.getField(this, 6) != null;
    }
    get value() {
        const cases = {
            0: "none",
            3: "float_value",
            4: "string_value",
            5: "int_value",
            6: "uint_value"
        };
        return cases[pb_1.Message.computeOneofCase(this, [3, 4, 5, 6])];
    }
    static fromObject(data) {
        const message = new AbilityScalarValueEntry({});
        if (data.key != null) {
            message.key = dependency_2.AbilityString.fromObject(data.key);
        }
        if (data.value_type != null) {
            message.value_type = data.value_type;
        }
        if (data.float_value != null) {
            message.float_value = data.float_value;
        }
        if (data.string_value != null) {
            message.string_value = data.string_value;
        }
        if (data.int_value != null) {
            message.int_value = data.int_value;
        }
        if (data.uint_value != null) {
            message.uint_value = data.uint_value;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.key != null) {
            data.key = this.key.toObject();
        }
        if (this.value_type != null) {
            data.value_type = this.value_type;
        }
        if (this.float_value != null) {
            data.float_value = this.float_value;
        }
        if (this.string_value != null) {
            data.string_value = this.string_value;
        }
        if (this.int_value != null) {
            data.int_value = this.int_value;
        }
        if (this.uint_value != null) {
            data.uint_value = this.uint_value;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_key)
            writer.writeMessage(1, this.key, () => this.key.serialize(writer));
        if (this.value_type != dependency_1.AbilityScalarType.ABILITY_SCALAR_TYPE_UNKNOW)
            writer.writeEnum(2, this.value_type);
        if (this.has_float_value)
            writer.writeFloat(3, this.float_value);
        if (this.has_string_value)
            writer.writeString(4, this.string_value);
        if (this.has_int_value)
            writer.writeInt32(5, this.int_value);
        if (this.has_uint_value)
            writer.writeUint32(6, this.uint_value);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AbilityScalarValueEntry();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.key, () => message.key = dependency_2.AbilityString.deserialize(reader));
                    break;
                case 2:
                    message.value_type = reader.readEnum();
                    break;
                case 3:
                    message.float_value = reader.readFloat();
                    break;
                case 4:
                    message.string_value = reader.readString();
                    break;
                case 5:
                    message.int_value = reader.readInt32();
                    break;
                case 6:
                    message.uint_value = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return AbilityScalarValueEntry.deserialize(bytes);
    }
}
exports.AbilityScalarValueEntry = AbilityScalarValueEntry;
_AbilityScalarValueEntry_one_of_decls = new WeakMap();
