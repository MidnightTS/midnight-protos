"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _CityReputationInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CityReputationInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CityReputationInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./CityReputationExploreInfo");
const dependency_2 = require("./CityReputationHuntInfo");
const dependency_3 = require("./CityReputationQuestInfo");
const dependency_4 = require("./CityReputationRequestInfo");
const pb_1 = require("google-protobuf");
class CityReputationInfo extends pb_1.Message {
    constructor(data) {
        super();
        _CityReputationInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], __classPrivateFieldGet(this, _CityReputationInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("level" in data && data.level != undefined) {
                this.level = data.level;
            }
            if ("next_refresh_time" in data && data.next_refresh_time != undefined) {
                this.next_refresh_time = data.next_refresh_time;
            }
            if ("hunt_info" in data && data.hunt_info != undefined) {
                this.hunt_info = data.hunt_info;
            }
            if ("taken_level_reward_list" in data && data.taken_level_reward_list != undefined) {
                this.taken_level_reward_list = data.taken_level_reward_list;
            }
            if ("total_accept_request_num" in data && data.total_accept_request_num != undefined) {
                this.total_accept_request_num = data.total_accept_request_num;
            }
            if ("request_info" in data && data.request_info != undefined) {
                this.request_info = data.request_info;
            }
            if ("quest_info" in data && data.quest_info != undefined) {
                this.quest_info = data.quest_info;
            }
            if ("exp" in data && data.exp != undefined) {
                this.exp = data.exp;
            }
            if ("explore_info" in data && data.explore_info != undefined) {
                this.explore_info = data.explore_info;
            }
        }
    }
    get level() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set level(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get next_refresh_time() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set next_refresh_time(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get hunt_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.CityReputationHuntInfo, 11);
    }
    set hunt_info(value) {
        pb_1.Message.setWrapperField(this, 11, value);
    }
    get has_hunt_info() {
        return pb_1.Message.getField(this, 11) != null;
    }
    get taken_level_reward_list() {
        return pb_1.Message.getFieldWithDefault(this, 2, []);
    }
    set taken_level_reward_list(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get total_accept_request_num() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set total_accept_request_num(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get request_info() {
        return pb_1.Message.getWrapperField(this, dependency_4.CityReputationRequestInfo, 5);
    }
    set request_info(value) {
        pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_request_info() {
        return pb_1.Message.getField(this, 5) != null;
    }
    get quest_info() {
        return pb_1.Message.getWrapperField(this, dependency_3.CityReputationQuestInfo, 9);
    }
    set quest_info(value) {
        pb_1.Message.setWrapperField(this, 9, value);
    }
    get has_quest_info() {
        return pb_1.Message.getField(this, 9) != null;
    }
    get exp() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0);
    }
    set exp(value) {
        pb_1.Message.setField(this, 13, value);
    }
    get explore_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.CityReputationExploreInfo, 10);
    }
    set explore_info(value) {
        pb_1.Message.setWrapperField(this, 10, value);
    }
    get has_explore_info() {
        return pb_1.Message.getField(this, 10) != null;
    }
    static fromObject(data) {
        const message = new CityReputationInfo({});
        if (data.level != null) {
            message.level = data.level;
        }
        if (data.next_refresh_time != null) {
            message.next_refresh_time = data.next_refresh_time;
        }
        if (data.hunt_info != null) {
            message.hunt_info = dependency_2.CityReputationHuntInfo.fromObject(data.hunt_info);
        }
        if (data.taken_level_reward_list != null) {
            message.taken_level_reward_list = data.taken_level_reward_list;
        }
        if (data.total_accept_request_num != null) {
            message.total_accept_request_num = data.total_accept_request_num;
        }
        if (data.request_info != null) {
            message.request_info = dependency_4.CityReputationRequestInfo.fromObject(data.request_info);
        }
        if (data.quest_info != null) {
            message.quest_info = dependency_3.CityReputationQuestInfo.fromObject(data.quest_info);
        }
        if (data.exp != null) {
            message.exp = data.exp;
        }
        if (data.explore_info != null) {
            message.explore_info = dependency_1.CityReputationExploreInfo.fromObject(data.explore_info);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.level != null) {
            data.level = this.level;
        }
        if (this.next_refresh_time != null) {
            data.next_refresh_time = this.next_refresh_time;
        }
        if (this.hunt_info != null) {
            data.hunt_info = this.hunt_info.toObject();
        }
        if (this.taken_level_reward_list != null) {
            data.taken_level_reward_list = this.taken_level_reward_list;
        }
        if (this.total_accept_request_num != null) {
            data.total_accept_request_num = this.total_accept_request_num;
        }
        if (this.request_info != null) {
            data.request_info = this.request_info.toObject();
        }
        if (this.quest_info != null) {
            data.quest_info = this.quest_info.toObject();
        }
        if (this.exp != null) {
            data.exp = this.exp;
        }
        if (this.explore_info != null) {
            data.explore_info = this.explore_info.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.level != 0)
            writer.writeUint32(4, this.level);
        if (this.next_refresh_time != 0)
            writer.writeUint32(3, this.next_refresh_time);
        if (this.has_hunt_info)
            writer.writeMessage(11, this.hunt_info, () => this.hunt_info.serialize(writer));
        if (this.taken_level_reward_list.length)
            writer.writePackedUint32(2, this.taken_level_reward_list);
        if (this.total_accept_request_num != 0)
            writer.writeUint32(6, this.total_accept_request_num);
        if (this.has_request_info)
            writer.writeMessage(5, this.request_info, () => this.request_info.serialize(writer));
        if (this.has_quest_info)
            writer.writeMessage(9, this.quest_info, () => this.quest_info.serialize(writer));
        if (this.exp != 0)
            writer.writeUint32(13, this.exp);
        if (this.has_explore_info)
            writer.writeMessage(10, this.explore_info, () => this.explore_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CityReputationInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 4:
                    message.level = reader.readUint32();
                    break;
                case 3:
                    message.next_refresh_time = reader.readUint32();
                    break;
                case 11:
                    reader.readMessage(message.hunt_info, () => message.hunt_info = dependency_2.CityReputationHuntInfo.deserialize(reader));
                    break;
                case 2:
                    message.taken_level_reward_list = reader.readPackedUint32();
                    break;
                case 6:
                    message.total_accept_request_num = reader.readUint32();
                    break;
                case 5:
                    reader.readMessage(message.request_info, () => message.request_info = dependency_4.CityReputationRequestInfo.deserialize(reader));
                    break;
                case 9:
                    reader.readMessage(message.quest_info, () => message.quest_info = dependency_3.CityReputationQuestInfo.deserialize(reader));
                    break;
                case 13:
                    message.exp = reader.readUint32();
                    break;
                case 10:
                    reader.readMessage(message.explore_info, () => message.explore_info = dependency_1.CityReputationExploreInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return CityReputationInfo.deserialize(bytes);
    }
}
exports.CityReputationInfo = CityReputationInfo;
_CityReputationInfo_one_of_decls = new WeakMap();
