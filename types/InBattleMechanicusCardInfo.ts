// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "InBattleMechanicusCardInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { InBattleMechanicusCardChallengeState } from "./InBattleMechanicusCardChallengeState";
/**
 * @generated from protobuf message InBattleMechanicusCardInfo
 */
export interface InBattleMechanicusCardInfo {
    /**
     * @generated from protobuf field: uint32 Unk3300_KCIEINMEPDH = 2 [json_name = "Unk3300KCIEINMEPDH"];
     */
    unk3300KCIEINMEPDH: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_NDAOOKKGJPH = 7 [json_name = "Unk3300NDAOOKKGJPH"];
     */
    unk3300NDAOOKKGJPH: number;
    /**
     * @generated from protobuf field: uint32 cost_points = 5;
     */
    costPoints: number;
    /**
     * @generated from protobuf field: uint32 card_id = 3;
     */
    cardId: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_FNAHKHODBKN = 13 [json_name = "Unk3300FNAHKHODBKN"];
     */
    unk3300FNAHKHODBKN: number;
    /**
     * @generated from protobuf field: InBattleMechanicusCardChallengeState challenge_state = 15;
     */
    challengeState: InBattleMechanicusCardChallengeState;
}
// @generated message type with reflection information, may provide speed optimized methods
class InBattleMechanicusCardInfo$Type extends MessageType<InBattleMechanicusCardInfo> {
    constructor() {
        super("InBattleMechanicusCardInfo", [
            { no: 2, name: "Unk3300_KCIEINMEPDH", kind: "scalar", jsonName: "Unk3300KCIEINMEPDH", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "Unk3300_NDAOOKKGJPH", kind: "scalar", jsonName: "Unk3300NDAOOKKGJPH", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "cost_points", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "card_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "Unk3300_FNAHKHODBKN", kind: "scalar", jsonName: "Unk3300FNAHKHODBKN", T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "challenge_state", kind: "enum", T: () => ["InBattleMechanicusCardChallengeState", InBattleMechanicusCardChallengeState, "IN_BATTLE_MECHANICUS_CARD_CHALLENGE_STATE_"] }
        ]);
    }
    create(value?: PartialMessage<InBattleMechanicusCardInfo>): InBattleMechanicusCardInfo {
        const message = { unk3300KCIEINMEPDH: 0, unk3300NDAOOKKGJPH: 0, costPoints: 0, cardId: 0, unk3300FNAHKHODBKN: 0, challengeState: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<InBattleMechanicusCardInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InBattleMechanicusCardInfo): InBattleMechanicusCardInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 Unk3300_KCIEINMEPDH = 2 [json_name = "Unk3300KCIEINMEPDH"];*/ 2:
                    message.unk3300KCIEINMEPDH = reader.uint32();
                    break;
                case /* uint32 Unk3300_NDAOOKKGJPH = 7 [json_name = "Unk3300NDAOOKKGJPH"];*/ 7:
                    message.unk3300NDAOOKKGJPH = reader.uint32();
                    break;
                case /* uint32 cost_points */ 5:
                    message.costPoints = reader.uint32();
                    break;
                case /* uint32 card_id */ 3:
                    message.cardId = reader.uint32();
                    break;
                case /* uint32 Unk3300_FNAHKHODBKN = 13 [json_name = "Unk3300FNAHKHODBKN"];*/ 13:
                    message.unk3300FNAHKHODBKN = reader.uint32();
                    break;
                case /* InBattleMechanicusCardChallengeState challenge_state */ 15:
                    message.challengeState = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InBattleMechanicusCardInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 Unk3300_KCIEINMEPDH = 2 [json_name = "Unk3300KCIEINMEPDH"]; */
        if (message.unk3300KCIEINMEPDH !== 0)
            writer.tag(2, WireType.Varint).uint32(message.unk3300KCIEINMEPDH);
        /* uint32 Unk3300_NDAOOKKGJPH = 7 [json_name = "Unk3300NDAOOKKGJPH"]; */
        if (message.unk3300NDAOOKKGJPH !== 0)
            writer.tag(7, WireType.Varint).uint32(message.unk3300NDAOOKKGJPH);
        /* uint32 cost_points = 5; */
        if (message.costPoints !== 0)
            writer.tag(5, WireType.Varint).uint32(message.costPoints);
        /* uint32 card_id = 3; */
        if (message.cardId !== 0)
            writer.tag(3, WireType.Varint).uint32(message.cardId);
        /* uint32 Unk3300_FNAHKHODBKN = 13 [json_name = "Unk3300FNAHKHODBKN"]; */
        if (message.unk3300FNAHKHODBKN !== 0)
            writer.tag(13, WireType.Varint).uint32(message.unk3300FNAHKHODBKN);
        /* InBattleMechanicusCardChallengeState challenge_state = 15; */
        if (message.challengeState !== 0)
            writer.tag(15, WireType.Varint).int32(message.challengeState);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message InBattleMechanicusCardInfo
 */
export const InBattleMechanicusCardInfo = new InBattleMechanicusCardInfo$Type();
