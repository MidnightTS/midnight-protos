/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PlayerQuitFromHomeNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class PlayerQuitFromHomeNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        reason?: PlayerQuitFromHomeNotify.QuitReason;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("reason" in data && data.reason != undefined) {
                this.reason = data.reason;
            }
        }
    }
    get reason() {
        return pb_1.Message.getFieldWithDefault(this, 6, PlayerQuitFromHomeNotify.QuitReason.QUIT_REASON_INVALID) as PlayerQuitFromHomeNotify.QuitReason;
    }
    set reason(value: PlayerQuitFromHomeNotify.QuitReason) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data: {
        reason?: PlayerQuitFromHomeNotify.QuitReason;
    }): PlayerQuitFromHomeNotify {
        const message = new PlayerQuitFromHomeNotify({});
        if (data.reason != null) {
            message.reason = data.reason;
        }
        return message;
    }
    toObject() {
        const data: {
            reason?: PlayerQuitFromHomeNotify.QuitReason;
        } = {};
        if (this.reason != null) {
            data.reason = this.reason;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.reason != PlayerQuitFromHomeNotify.QuitReason.QUIT_REASON_INVALID)
            writer.writeEnum(6, this.reason);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PlayerQuitFromHomeNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PlayerQuitFromHomeNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 6:
                    message.reason = reader.readEnum();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): PlayerQuitFromHomeNotify {
        return PlayerQuitFromHomeNotify.deserialize(bytes);
    }
}
export namespace PlayerQuitFromHomeNotify {
    export enum QuitReason {
        QUIT_REASON_INVALID = 0,
        QUIT_REASON_KICK_BY_HOST = 1,
        QUIT_REASON_BACK_TO_MY_WORLD = 2,
        QUIT_REASON_HOME_BLOCKED = 3,
        QUIT_REASON_HOME_IN_EDIT_MODE = 4,
        QUIT_REASON_BY_MUIP = 5,
        QUIT_REASON_CUR_MODULE_CLOSED = 6
    }
}
