// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_chat.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ChatInfo } from "./cmd_scene";
/**
 * @generated from protobuf message com.midnights.game.PrivateChatReq
 */
export interface PrivateChatReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 7;
     */
    targetUid?: number;
    /**
     * @generated from protobuf oneof: content
     */
    content: {
        oneofKind: "text";
        /**
         * @generated from protobuf field: string text = 3;
         */
        text: string;
    } | {
        oneofKind: "icon";
        /**
         * @generated from protobuf field: uint32 icon = 4;
         */
        icon: number;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.PrivateChatReq.CmdId
 */
export enum PrivateChatReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5022;
     */
    CMD_ID = 5022,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PrivateChatRsp
 */
export interface PrivateChatRsp {
    /**
     * @generated from protobuf field: optional uint32 chat_forbidden_endtime = 12;
     */
    chatForbiddenEndtime?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PrivateChatRsp.CmdId
 */
export enum PrivateChatRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5048;
     */
    CMD_ID = 5048,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PrivateChatNotify
 */
export interface PrivateChatNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.ChatInfo chat_info = 7;
     */
    chatInfo?: ChatInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.PrivateChatNotify.CmdId
 */
export enum PrivateChatNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4962;
     */
    CMD_ID = 4962,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PullPrivateChatReq
 */
export interface PullPrivateChatReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 5;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional uint32 pull_num = 7;
     */
    pullNum?: number;
    /**
     * @generated from protobuf field: optional uint32 from_sequence = 12;
     */
    fromSequence?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PullPrivateChatReq.CmdId
 */
export enum PullPrivateChatReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4971;
     */
    CMD_ID = 4971,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PullPrivateChatRsp
 */
export interface PullPrivateChatRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ChatInfo chat_info = 15;
     */
    chatInfo: ChatInfo[];
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PullPrivateChatRsp.CmdId
 */
export enum PullPrivateChatRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4953;
     */
    CMD_ID = 4953,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PullRecentChatReq
 */
export interface PullRecentChatReq {
    /**
     * @generated from protobuf field: optional uint32 pull_num = 6;
     */
    pullNum?: number;
    /**
     * @generated from protobuf field: optional uint32 begin_sequence = 15;
     */
    beginSequence?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PullRecentChatReq.CmdId
 */
export enum PullRecentChatReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5040;
     */
    CMD_ID = 5040,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PullRecentChatRsp
 */
export interface PullRecentChatRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ChatInfo chat_info = 15;
     */
    chatInfo: ChatInfo[];
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PullRecentChatRsp.CmdId
 */
export enum PullRecentChatRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5023;
     */
    CMD_ID = 5023,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReadPrivateChatReq
 */
export interface ReadPrivateChatReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 1;
     */
    targetUid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ReadPrivateChatReq.CmdId
 */
export enum ReadPrivateChatReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5049;
     */
    CMD_ID = 5049,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReadPrivateChatRsp
 */
export interface ReadPrivateChatRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ReadPrivateChatRsp.CmdId
 */
export enum ReadPrivateChatRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4981;
     */
    CMD_ID = 4981,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChatChannelUpdateNotify
 */
export interface ChatChannelUpdateNotify {
    /**
     * @generated from protobuf field: optional uint32 channel_id = 3;
     */
    channelId?: number;
    /**
     * @generated from protobuf field: optional bool is_create = 15;
     */
    isCreate?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.ChatChannelUpdateNotify.CmdId
 */
export enum ChatChannelUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5025;
     */
    CMD_ID = 5025,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChatChannelDataNotify
 */
export interface ChatChannelDataNotify {
    /**
     * @generated from protobuf field: repeated uint32 channel_list = 3;
     */
    channelList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.ChatChannelDataNotify.CmdId
 */
export enum ChatChannelDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4998;
     */
    CMD_ID = 4998,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class PrivateChatReq$Type extends MessageType<PrivateChatReq> {
    constructor() {
        super("com.midnights.game.PrivateChatReq", [
            { no: 7, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "text", kind: "scalar", oneof: "content", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "icon", kind: "scalar", oneof: "content", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PrivateChatReq>): PrivateChatReq {
        const message = { content: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PrivateChatReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PrivateChatReq): PrivateChatReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 7:
                    message.targetUid = reader.uint32();
                    break;
                case /* string text */ 3:
                    message.content = {
                        oneofKind: "text",
                        text: reader.string()
                    };
                    break;
                case /* uint32 icon */ 4:
                    message.content = {
                        oneofKind: "icon",
                        icon: reader.uint32()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PrivateChatReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 7; */
        if (message.targetUid !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.targetUid);
        /* string text = 3; */
        if (message.content.oneofKind === "text")
            writer.tag(3, WireType.LengthDelimited).string(message.content.text);
        /* uint32 icon = 4; */
        if (message.content.oneofKind === "icon")
            writer.tag(4, WireType.Varint).uint32(message.content.icon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PrivateChatReq
 */
export const PrivateChatReq = new PrivateChatReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PrivateChatRsp$Type extends MessageType<PrivateChatRsp> {
    constructor() {
        super("com.midnights.game.PrivateChatRsp", [
            { no: 12, name: "chat_forbidden_endtime", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PrivateChatRsp>): PrivateChatRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PrivateChatRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PrivateChatRsp): PrivateChatRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 chat_forbidden_endtime */ 12:
                    message.chatForbiddenEndtime = reader.uint32();
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PrivateChatRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 chat_forbidden_endtime = 12; */
        if (message.chatForbiddenEndtime !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.chatForbiddenEndtime);
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PrivateChatRsp
 */
export const PrivateChatRsp = new PrivateChatRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PrivateChatNotify$Type extends MessageType<PrivateChatNotify> {
    constructor() {
        super("com.midnights.game.PrivateChatNotify", [
            { no: 7, name: "chat_info", kind: "message", T: () => ChatInfo }
        ]);
    }
    create(value?: PartialMessage<PrivateChatNotify>): PrivateChatNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PrivateChatNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PrivateChatNotify): PrivateChatNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ChatInfo chat_info */ 7:
                    message.chatInfo = ChatInfo.internalBinaryRead(reader, reader.uint32(), options, message.chatInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PrivateChatNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ChatInfo chat_info = 7; */
        if (message.chatInfo)
            ChatInfo.internalBinaryWrite(message.chatInfo, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PrivateChatNotify
 */
export const PrivateChatNotify = new PrivateChatNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PullPrivateChatReq$Type extends MessageType<PullPrivateChatReq> {
    constructor() {
        super("com.midnights.game.PullPrivateChatReq", [
            { no: 5, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "pull_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "from_sequence", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PullPrivateChatReq>): PullPrivateChatReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PullPrivateChatReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PullPrivateChatReq): PullPrivateChatReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 5:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional uint32 pull_num */ 7:
                    message.pullNum = reader.uint32();
                    break;
                case /* optional uint32 from_sequence */ 12:
                    message.fromSequence = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PullPrivateChatReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 5; */
        if (message.targetUid !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.targetUid);
        /* optional uint32 pull_num = 7; */
        if (message.pullNum !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.pullNum);
        /* optional uint32 from_sequence = 12; */
        if (message.fromSequence !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.fromSequence);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PullPrivateChatReq
 */
export const PullPrivateChatReq = new PullPrivateChatReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PullPrivateChatRsp$Type extends MessageType<PullPrivateChatRsp> {
    constructor() {
        super("com.midnights.game.PullPrivateChatRsp", [
            { no: 15, name: "chat_info", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ChatInfo },
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PullPrivateChatRsp>): PullPrivateChatRsp {
        const message = { chatInfo: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PullPrivateChatRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PullPrivateChatRsp): PullPrivateChatRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ChatInfo chat_info */ 15:
                    message.chatInfo.push(ChatInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PullPrivateChatRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ChatInfo chat_info = 15; */
        for (let i = 0; i < message.chatInfo.length; i++)
            ChatInfo.internalBinaryWrite(message.chatInfo[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PullPrivateChatRsp
 */
export const PullPrivateChatRsp = new PullPrivateChatRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PullRecentChatReq$Type extends MessageType<PullRecentChatReq> {
    constructor() {
        super("com.midnights.game.PullRecentChatReq", [
            { no: 6, name: "pull_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "begin_sequence", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PullRecentChatReq>): PullRecentChatReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PullRecentChatReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PullRecentChatReq): PullRecentChatReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 pull_num */ 6:
                    message.pullNum = reader.uint32();
                    break;
                case /* optional uint32 begin_sequence */ 15:
                    message.beginSequence = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PullRecentChatReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 pull_num = 6; */
        if (message.pullNum !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.pullNum);
        /* optional uint32 begin_sequence = 15; */
        if (message.beginSequence !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.beginSequence);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PullRecentChatReq
 */
export const PullRecentChatReq = new PullRecentChatReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PullRecentChatRsp$Type extends MessageType<PullRecentChatRsp> {
    constructor() {
        super("com.midnights.game.PullRecentChatRsp", [
            { no: 15, name: "chat_info", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ChatInfo },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PullRecentChatRsp>): PullRecentChatRsp {
        const message = { chatInfo: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PullRecentChatRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PullRecentChatRsp): PullRecentChatRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ChatInfo chat_info */ 15:
                    message.chatInfo.push(ChatInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PullRecentChatRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ChatInfo chat_info = 15; */
        for (let i = 0; i < message.chatInfo.length; i++)
            ChatInfo.internalBinaryWrite(message.chatInfo[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PullRecentChatRsp
 */
export const PullRecentChatRsp = new PullRecentChatRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReadPrivateChatReq$Type extends MessageType<ReadPrivateChatReq> {
    constructor() {
        super("com.midnights.game.ReadPrivateChatReq", [
            { no: 1, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ReadPrivateChatReq>): ReadPrivateChatReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReadPrivateChatReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReadPrivateChatReq): ReadPrivateChatReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 1:
                    message.targetUid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReadPrivateChatReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 1; */
        if (message.targetUid !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.targetUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReadPrivateChatReq
 */
export const ReadPrivateChatReq = new ReadPrivateChatReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReadPrivateChatRsp$Type extends MessageType<ReadPrivateChatRsp> {
    constructor() {
        super("com.midnights.game.ReadPrivateChatRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ReadPrivateChatRsp>): ReadPrivateChatRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReadPrivateChatRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReadPrivateChatRsp): ReadPrivateChatRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReadPrivateChatRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReadPrivateChatRsp
 */
export const ReadPrivateChatRsp = new ReadPrivateChatRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChatChannelUpdateNotify$Type extends MessageType<ChatChannelUpdateNotify> {
    constructor() {
        super("com.midnights.game.ChatChannelUpdateNotify", [
            { no: 3, name: "channel_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "is_create", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ChatChannelUpdateNotify>): ChatChannelUpdateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChatChannelUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChatChannelUpdateNotify): ChatChannelUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 channel_id */ 3:
                    message.channelId = reader.uint32();
                    break;
                case /* optional bool is_create */ 15:
                    message.isCreate = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChatChannelUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 channel_id = 3; */
        if (message.channelId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.channelId);
        /* optional bool is_create = 15; */
        if (message.isCreate !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isCreate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChatChannelUpdateNotify
 */
export const ChatChannelUpdateNotify = new ChatChannelUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChatChannelDataNotify$Type extends MessageType<ChatChannelDataNotify> {
    constructor() {
        super("com.midnights.game.ChatChannelDataNotify", [
            { no: 3, name: "channel_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChatChannelDataNotify>): ChatChannelDataNotify {
        const message = { channelList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChatChannelDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChatChannelDataNotify): ChatChannelDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 channel_list */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.channelList.push(reader.uint32());
                    else
                        message.channelList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChatChannelDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 channel_list = 3; */
        for (let i = 0; i < message.channelList.length; i++)
            writer.tag(3, WireType.Varint).uint32(message.channelList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChatChannelDataNotify
 */
export const ChatChannelDataNotify = new ChatChannelDataNotify$Type();
