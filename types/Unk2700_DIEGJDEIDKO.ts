/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: Unk2700_DIEGJDEIDKO.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./Vector";
import * as pb_1 from "google-protobuf";
export class Unk2700_DIEGJDEIDKO extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        cur_progress?: number;
        id?: number;
        open_time?: number;
        is_finished?: boolean;
        total_progress?: number;
        pos?: dependency_1.Vector;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("cur_progress" in data && data.cur_progress != undefined) {
                this.cur_progress = data.cur_progress;
            }
            if ("id" in data && data.id != undefined) {
                this.id = data.id;
            }
            if ("open_time" in data && data.open_time != undefined) {
                this.open_time = data.open_time;
            }
            if ("is_finished" in data && data.is_finished != undefined) {
                this.is_finished = data.is_finished;
            }
            if ("total_progress" in data && data.total_progress != undefined) {
                this.total_progress = data.total_progress;
            }
            if ("pos" in data && data.pos != undefined) {
                this.pos = data.pos;
            }
        }
    }
    get cur_progress() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set cur_progress(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get id() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set id(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get open_time() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
    }
    set open_time(value: number) {
        pb_1.Message.setField(this, 8, value);
    }
    get is_finished() {
        return pb_1.Message.getFieldWithDefault(this, 10, false) as boolean;
    }
    set is_finished(value: boolean) {
        pb_1.Message.setField(this, 10, value);
    }
    get total_progress() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set total_progress(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get pos() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 5) as dependency_1.Vector;
    }
    set pos(value: dependency_1.Vector) {
        pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_pos() {
        return pb_1.Message.getField(this, 5) != null;
    }
    static fromObject(data: {
        cur_progress?: number;
        id?: number;
        open_time?: number;
        is_finished?: boolean;
        total_progress?: number;
        pos?: ReturnType<typeof dependency_1.Vector.prototype.toObject>;
    }): Unk2700_DIEGJDEIDKO {
        const message = new Unk2700_DIEGJDEIDKO({});
        if (data.cur_progress != null) {
            message.cur_progress = data.cur_progress;
        }
        if (data.id != null) {
            message.id = data.id;
        }
        if (data.open_time != null) {
            message.open_time = data.open_time;
        }
        if (data.is_finished != null) {
            message.is_finished = data.is_finished;
        }
        if (data.total_progress != null) {
            message.total_progress = data.total_progress;
        }
        if (data.pos != null) {
            message.pos = dependency_1.Vector.fromObject(data.pos);
        }
        return message;
    }
    toObject() {
        const data: {
            cur_progress?: number;
            id?: number;
            open_time?: number;
            is_finished?: boolean;
            total_progress?: number;
            pos?: ReturnType<typeof dependency_1.Vector.prototype.toObject>;
        } = {};
        if (this.cur_progress != null) {
            data.cur_progress = this.cur_progress;
        }
        if (this.id != null) {
            data.id = this.id;
        }
        if (this.open_time != null) {
            data.open_time = this.open_time;
        }
        if (this.is_finished != null) {
            data.is_finished = this.is_finished;
        }
        if (this.total_progress != null) {
            data.total_progress = this.total_progress;
        }
        if (this.pos != null) {
            data.pos = this.pos.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.cur_progress != 0)
            writer.writeUint32(12, this.cur_progress);
        if (this.id != 0)
            writer.writeUint32(6, this.id);
        if (this.open_time != 0)
            writer.writeUint32(8, this.open_time);
        if (this.is_finished != false)
            writer.writeBool(10, this.is_finished);
        if (this.total_progress != 0)
            writer.writeUint32(9, this.total_progress);
        if (this.has_pos)
            writer.writeMessage(5, this.pos, () => this.pos.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Unk2700_DIEGJDEIDKO {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Unk2700_DIEGJDEIDKO();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 12:
                    message.cur_progress = reader.readUint32();
                    break;
                case 6:
                    message.id = reader.readUint32();
                    break;
                case 8:
                    message.open_time = reader.readUint32();
                    break;
                case 10:
                    message.is_finished = reader.readBool();
                    break;
                case 9:
                    message.total_progress = reader.readUint32();
                    break;
                case 5:
                    reader.readMessage(message.pos, () => message.pos = dependency_1.Vector.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): Unk2700_DIEGJDEIDKO {
        return Unk2700_DIEGJDEIDKO.deserialize(bytes);
    }
}
