// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "QueryPathReq.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Vector3Int } from "./Vector3Int";
import { Vector } from "./Vector";
import { QueryFilter } from "./QueryFilter";
/**
 * enum CmdId {
 *   option allow_alias = true;
 *   NONE = 0;
 *   CMD_ID = 2379;
 *   ENET_CHANNEL_ID = 0;
 *   ENET_IS_RELIABLE = 1;
 *   IS_ALLOW_CLIENT = 1;
 * }
 *
 * @generated from protobuf message QueryPathReq
 */
export interface QueryPathReq {
    /**
     * @generated from protobuf field: QueryFilter filter = 7;
     */
    filter?: QueryFilter;
    /**
     * @generated from protobuf field: int32 query_id = 3;
     */
    queryId: number;
    /**
     * @generated from protobuf field: repeated Vector destination_pos = 6;
     */
    destinationPos: Vector[];
    /**
     * @generated from protobuf field: QueryPathReq.OptionType query_type = 11;
     */
    queryType: QueryPathReq_OptionType;
    /**
     * @generated from protobuf field: Vector3Int Unk3300_LHNGPJFOMIK = 4 [json_name = "Unk3300LHNGPJFOMIK"];
     */
    unk3300LHNGPJFOMIK?: Vector3Int;
    /**
     * @generated from protobuf field: uint32 scene_id = 2;
     */
    sceneId: number;
    /**
     * @generated from protobuf field: Vector source_pos = 8;
     */
    sourcePos?: Vector;
    /**
     * @generated from protobuf field: Vector3Int Unk3300_CLGJBBJDOLN = 5 [json_name = "Unk3300CLGJBBJDOLN"];
     */
    unk3300CLGJBBJDOLN?: Vector3Int;
}
/**
 * @generated from protobuf enum QueryPathReq.OptionType
 */
export enum QueryPathReq_OptionType {
    /**
     * @generated from protobuf enum value: OPTION_TYPE_NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: OPTION_TYPE_NORMAL = 1;
     */
    NORMAL = 1,
    /**
     * @generated from protobuf enum value: OPTION_TYPE_FIRST_CAN_GO = 2;
     */
    FIRST_CAN_GO = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class QueryPathReq$Type extends MessageType<QueryPathReq> {
    constructor() {
        super("QueryPathReq", [
            { no: 7, name: "filter", kind: "message", T: () => QueryFilter },
            { no: 3, name: "query_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "destination_pos", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Vector },
            { no: 11, name: "query_type", kind: "enum", T: () => ["QueryPathReq.OptionType", QueryPathReq_OptionType, "OPTION_TYPE_"] },
            { no: 4, name: "Unk3300_LHNGPJFOMIK", kind: "message", jsonName: "Unk3300LHNGPJFOMIK", T: () => Vector3Int },
            { no: 2, name: "scene_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "source_pos", kind: "message", T: () => Vector },
            { no: 5, name: "Unk3300_CLGJBBJDOLN", kind: "message", jsonName: "Unk3300CLGJBBJDOLN", T: () => Vector3Int }
        ]);
    }
    create(value?: PartialMessage<QueryPathReq>): QueryPathReq {
        const message = { queryId: 0, destinationPos: [], queryType: 0, sceneId: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QueryPathReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QueryPathReq): QueryPathReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* QueryFilter filter */ 7:
                    message.filter = QueryFilter.internalBinaryRead(reader, reader.uint32(), options, message.filter);
                    break;
                case /* int32 query_id */ 3:
                    message.queryId = reader.int32();
                    break;
                case /* repeated Vector destination_pos */ 6:
                    message.destinationPos.push(Vector.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* QueryPathReq.OptionType query_type */ 11:
                    message.queryType = reader.int32();
                    break;
                case /* Vector3Int Unk3300_LHNGPJFOMIK = 4 [json_name = "Unk3300LHNGPJFOMIK"];*/ 4:
                    message.unk3300LHNGPJFOMIK = Vector3Int.internalBinaryRead(reader, reader.uint32(), options, message.unk3300LHNGPJFOMIK);
                    break;
                case /* uint32 scene_id */ 2:
                    message.sceneId = reader.uint32();
                    break;
                case /* Vector source_pos */ 8:
                    message.sourcePos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.sourcePos);
                    break;
                case /* Vector3Int Unk3300_CLGJBBJDOLN = 5 [json_name = "Unk3300CLGJBBJDOLN"];*/ 5:
                    message.unk3300CLGJBBJDOLN = Vector3Int.internalBinaryRead(reader, reader.uint32(), options, message.unk3300CLGJBBJDOLN);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QueryPathReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* QueryFilter filter = 7; */
        if (message.filter)
            QueryFilter.internalBinaryWrite(message.filter, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* int32 query_id = 3; */
        if (message.queryId !== 0)
            writer.tag(3, WireType.Varint).int32(message.queryId);
        /* repeated Vector destination_pos = 6; */
        for (let i = 0; i < message.destinationPos.length; i++)
            Vector.internalBinaryWrite(message.destinationPos[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* QueryPathReq.OptionType query_type = 11; */
        if (message.queryType !== 0)
            writer.tag(11, WireType.Varint).int32(message.queryType);
        /* Vector3Int Unk3300_LHNGPJFOMIK = 4 [json_name = "Unk3300LHNGPJFOMIK"]; */
        if (message.unk3300LHNGPJFOMIK)
            Vector3Int.internalBinaryWrite(message.unk3300LHNGPJFOMIK, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* uint32 scene_id = 2; */
        if (message.sceneId !== 0)
            writer.tag(2, WireType.Varint).uint32(message.sceneId);
        /* Vector source_pos = 8; */
        if (message.sourcePos)
            Vector.internalBinaryWrite(message.sourcePos, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* Vector3Int Unk3300_CLGJBBJDOLN = 5 [json_name = "Unk3300CLGJBBJDOLN"]; */
        if (message.unk3300CLGJBBJDOLN)
            Vector3Int.internalBinaryWrite(message.unk3300CLGJBBJDOLN, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message QueryPathReq
 */
export const QueryPathReq = new QueryPathReq$Type();
