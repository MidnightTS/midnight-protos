/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: QueryPathReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./QueryFilter";
import * as dependency_2 from "./Vector";
import * as dependency_3 from "./Vector3Int";
import * as pb_1 from "google-protobuf";
export class QueryPathReq extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        query_type?: QueryPathReq.OptionType;
        source_extend?: dependency_3.Vector3Int;
        source_pos?: dependency_2.Vector;
        filter?: dependency_1.QueryFilter;
        query_id?: number;
        destination_extend?: dependency_3.Vector3Int;
        destination_pos?: dependency_2.Vector[];
        scene_id?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [10], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("query_type" in data && data.query_type != undefined) {
                this.query_type = data.query_type;
            }
            if ("source_extend" in data && data.source_extend != undefined) {
                this.source_extend = data.source_extend;
            }
            if ("source_pos" in data && data.source_pos != undefined) {
                this.source_pos = data.source_pos;
            }
            if ("filter" in data && data.filter != undefined) {
                this.filter = data.filter;
            }
            if ("query_id" in data && data.query_id != undefined) {
                this.query_id = data.query_id;
            }
            if ("destination_extend" in data && data.destination_extend != undefined) {
                this.destination_extend = data.destination_extend;
            }
            if ("destination_pos" in data && data.destination_pos != undefined) {
                this.destination_pos = data.destination_pos;
            }
            if ("scene_id" in data && data.scene_id != undefined) {
                this.scene_id = data.scene_id;
            }
        }
    }
    get query_type() {
        return pb_1.Message.getFieldWithDefault(this, 13, QueryPathReq.OptionType.OPTION_TYPE_NONE) as QueryPathReq.OptionType;
    }
    set query_type(value: QueryPathReq.OptionType) {
        pb_1.Message.setField(this, 13, value);
    }
    get source_extend() {
        return pb_1.Message.getWrapperField(this, dependency_3.Vector3Int, 6) as dependency_3.Vector3Int;
    }
    set source_extend(value: dependency_3.Vector3Int) {
        pb_1.Message.setWrapperField(this, 6, value);
    }
    get has_source_extend() {
        return pb_1.Message.getField(this, 6) != null;
    }
    get source_pos() {
        return pb_1.Message.getWrapperField(this, dependency_2.Vector, 2) as dependency_2.Vector;
    }
    set source_pos(value: dependency_2.Vector) {
        pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_source_pos() {
        return pb_1.Message.getField(this, 2) != null;
    }
    get filter() {
        return pb_1.Message.getWrapperField(this, dependency_1.QueryFilter, 12) as dependency_1.QueryFilter;
    }
    set filter(value: dependency_1.QueryFilter) {
        pb_1.Message.setWrapperField(this, 12, value);
    }
    get has_filter() {
        return pb_1.Message.getField(this, 12) != null;
    }
    get query_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set query_id(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    get destination_extend() {
        return pb_1.Message.getWrapperField(this, dependency_3.Vector3Int, 4) as dependency_3.Vector3Int;
    }
    set destination_extend(value: dependency_3.Vector3Int) {
        pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_destination_extend() {
        return pb_1.Message.getField(this, 4) != null;
    }
    get destination_pos() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Vector, 10) as dependency_2.Vector[];
    }
    set destination_pos(value: dependency_2.Vector[]) {
        pb_1.Message.setRepeatedWrapperField(this, 10, value);
    }
    get scene_id() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0) as number;
    }
    set scene_id(value: number) {
        pb_1.Message.setField(this, 11, value);
    }
    static fromObject(data: {
        query_type?: QueryPathReq.OptionType;
        source_extend?: ReturnType<typeof dependency_3.Vector3Int.prototype.toObject>;
        source_pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
        filter?: ReturnType<typeof dependency_1.QueryFilter.prototype.toObject>;
        query_id?: number;
        destination_extend?: ReturnType<typeof dependency_3.Vector3Int.prototype.toObject>;
        destination_pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>[];
        scene_id?: number;
    }): QueryPathReq {
        const message = new QueryPathReq({});
        if (data.query_type != null) {
            message.query_type = data.query_type;
        }
        if (data.source_extend != null) {
            message.source_extend = dependency_3.Vector3Int.fromObject(data.source_extend);
        }
        if (data.source_pos != null) {
            message.source_pos = dependency_2.Vector.fromObject(data.source_pos);
        }
        if (data.filter != null) {
            message.filter = dependency_1.QueryFilter.fromObject(data.filter);
        }
        if (data.query_id != null) {
            message.query_id = data.query_id;
        }
        if (data.destination_extend != null) {
            message.destination_extend = dependency_3.Vector3Int.fromObject(data.destination_extend);
        }
        if (data.destination_pos != null) {
            message.destination_pos = data.destination_pos.map(item => dependency_2.Vector.fromObject(item));
        }
        if (data.scene_id != null) {
            message.scene_id = data.scene_id;
        }
        return message;
    }
    toObject() {
        const data: {
            query_type?: QueryPathReq.OptionType;
            source_extend?: ReturnType<typeof dependency_3.Vector3Int.prototype.toObject>;
            source_pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
            filter?: ReturnType<typeof dependency_1.QueryFilter.prototype.toObject>;
            query_id?: number;
            destination_extend?: ReturnType<typeof dependency_3.Vector3Int.prototype.toObject>;
            destination_pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>[];
            scene_id?: number;
        } = {};
        if (this.query_type != null) {
            data.query_type = this.query_type;
        }
        if (this.source_extend != null) {
            data.source_extend = this.source_extend.toObject();
        }
        if (this.source_pos != null) {
            data.source_pos = this.source_pos.toObject();
        }
        if (this.filter != null) {
            data.filter = this.filter.toObject();
        }
        if (this.query_id != null) {
            data.query_id = this.query_id;
        }
        if (this.destination_extend != null) {
            data.destination_extend = this.destination_extend.toObject();
        }
        if (this.destination_pos != null) {
            data.destination_pos = this.destination_pos.map((item: dependency_2.Vector) => item.toObject());
        }
        if (this.scene_id != null) {
            data.scene_id = this.scene_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.query_type != QueryPathReq.OptionType.OPTION_TYPE_NONE)
            writer.writeEnum(13, this.query_type);
        if (this.has_source_extend)
            writer.writeMessage(6, this.source_extend, () => this.source_extend.serialize(writer));
        if (this.has_source_pos)
            writer.writeMessage(2, this.source_pos, () => this.source_pos.serialize(writer));
        if (this.has_filter)
            writer.writeMessage(12, this.filter, () => this.filter.serialize(writer));
        if (this.query_id != 0)
            writer.writeInt32(15, this.query_id);
        if (this.has_destination_extend)
            writer.writeMessage(4, this.destination_extend, () => this.destination_extend.serialize(writer));
        if (this.destination_pos.length)
            writer.writeRepeatedMessage(10, this.destination_pos, (item: dependency_2.Vector) => item.serialize(writer));
        if (this.scene_id != 0)
            writer.writeUint32(11, this.scene_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QueryPathReq {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QueryPathReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 13:
                    message.query_type = reader.readEnum();
                    break;
                case 6:
                    reader.readMessage(message.source_extend, () => message.source_extend = dependency_3.Vector3Int.deserialize(reader));
                    break;
                case 2:
                    reader.readMessage(message.source_pos, () => message.source_pos = dependency_2.Vector.deserialize(reader));
                    break;
                case 12:
                    reader.readMessage(message.filter, () => message.filter = dependency_1.QueryFilter.deserialize(reader));
                    break;
                case 15:
                    message.query_id = reader.readInt32();
                    break;
                case 4:
                    reader.readMessage(message.destination_extend, () => message.destination_extend = dependency_3.Vector3Int.deserialize(reader));
                    break;
                case 10:
                    reader.readMessage(message.destination_pos, () => pb_1.Message.addToRepeatedWrapperField(message, 10, dependency_2.Vector.deserialize(reader), dependency_2.Vector));
                    break;
                case 11:
                    message.scene_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): QueryPathReq {
        return QueryPathReq.deserialize(bytes);
    }
}
export namespace QueryPathReq {
    export enum OptionType {
        OPTION_TYPE_NONE = 0,
        OPTION_TYPE_NORMAL = 1,
        OPTION_TYPE_FIRST_CAN_GO = 2
    }
}
