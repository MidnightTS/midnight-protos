"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PlayerEnterSceneInfoNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerEnterSceneInfoNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PlayerEnterSceneInfoNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./AvatarEnterSceneInfo");
const dependency_2 = require("./MPLevelEntityInfo");
const dependency_3 = require("./TeamEnterSceneInfo");
const pb_1 = require("google-protobuf");
class PlayerEnterSceneInfoNotify extends pb_1.Message {
    constructor(data) {
        super();
        _PlayerEnterSceneInfoNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [7], __classPrivateFieldGet(this, _PlayerEnterSceneInfoNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("team_enter_info" in data && data.team_enter_info != undefined) {
                this.team_enter_info = data.team_enter_info;
            }
            if ("enter_scene_token" in data && data.enter_scene_token != undefined) {
                this.enter_scene_token = data.enter_scene_token;
            }
            if ("avatar_enter_info" in data && data.avatar_enter_info != undefined) {
                this.avatar_enter_info = data.avatar_enter_info;
            }
            if ("cur_avatar_entity_id" in data && data.cur_avatar_entity_id != undefined) {
                this.cur_avatar_entity_id = data.cur_avatar_entity_id;
            }
            if ("mp_level_entity_info" in data && data.mp_level_entity_info != undefined) {
                this.mp_level_entity_info = data.mp_level_entity_info;
            }
        }
    }
    get team_enter_info() {
        return pb_1.Message.getWrapperField(this, dependency_3.TeamEnterSceneInfo, 8);
    }
    set team_enter_info(value) {
        pb_1.Message.setWrapperField(this, 8, value);
    }
    get has_team_enter_info() {
        return pb_1.Message.getField(this, 8) != null;
    }
    get enter_scene_token() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set enter_scene_token(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get avatar_enter_info() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.AvatarEnterSceneInfo, 7);
    }
    set avatar_enter_info(value) {
        pb_1.Message.setRepeatedWrapperField(this, 7, value);
    }
    get cur_avatar_entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set cur_avatar_entity_id(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get mp_level_entity_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.MPLevelEntityInfo, 5);
    }
    set mp_level_entity_info(value) {
        pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_mp_level_entity_info() {
        return pb_1.Message.getField(this, 5) != null;
    }
    static fromObject(data) {
        const message = new PlayerEnterSceneInfoNotify({});
        if (data.team_enter_info != null) {
            message.team_enter_info = dependency_3.TeamEnterSceneInfo.fromObject(data.team_enter_info);
        }
        if (data.enter_scene_token != null) {
            message.enter_scene_token = data.enter_scene_token;
        }
        if (data.avatar_enter_info != null) {
            message.avatar_enter_info = data.avatar_enter_info.map(item => dependency_1.AvatarEnterSceneInfo.fromObject(item));
        }
        if (data.cur_avatar_entity_id != null) {
            message.cur_avatar_entity_id = data.cur_avatar_entity_id;
        }
        if (data.mp_level_entity_info != null) {
            message.mp_level_entity_info = dependency_2.MPLevelEntityInfo.fromObject(data.mp_level_entity_info);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.team_enter_info != null) {
            data.team_enter_info = this.team_enter_info.toObject();
        }
        if (this.enter_scene_token != null) {
            data.enter_scene_token = this.enter_scene_token;
        }
        if (this.avatar_enter_info != null) {
            data.avatar_enter_info = this.avatar_enter_info.map((item) => item.toObject());
        }
        if (this.cur_avatar_entity_id != null) {
            data.cur_avatar_entity_id = this.cur_avatar_entity_id;
        }
        if (this.mp_level_entity_info != null) {
            data.mp_level_entity_info = this.mp_level_entity_info.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_team_enter_info)
            writer.writeMessage(8, this.team_enter_info, () => this.team_enter_info.serialize(writer));
        if (this.enter_scene_token != 0)
            writer.writeUint32(12, this.enter_scene_token);
        if (this.avatar_enter_info.length)
            writer.writeRepeatedMessage(7, this.avatar_enter_info, (item) => item.serialize(writer));
        if (this.cur_avatar_entity_id != 0)
            writer.writeUint32(6, this.cur_avatar_entity_id);
        if (this.has_mp_level_entity_info)
            writer.writeMessage(5, this.mp_level_entity_info, () => this.mp_level_entity_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PlayerEnterSceneInfoNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    reader.readMessage(message.team_enter_info, () => message.team_enter_info = dependency_3.TeamEnterSceneInfo.deserialize(reader));
                    break;
                case 12:
                    message.enter_scene_token = reader.readUint32();
                    break;
                case 7:
                    reader.readMessage(message.avatar_enter_info, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_1.AvatarEnterSceneInfo.deserialize(reader), dependency_1.AvatarEnterSceneInfo));
                    break;
                case 6:
                    message.cur_avatar_entity_id = reader.readUint32();
                    break;
                case 5:
                    reader.readMessage(message.mp_level_entity_info, () => message.mp_level_entity_info = dependency_2.MPLevelEntityInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return PlayerEnterSceneInfoNotify.deserialize(bytes);
    }
}
exports.PlayerEnterSceneInfoNotify = PlayerEnterSceneInfoNotify;
_PlayerEnterSceneInfoNotify_one_of_decls = new WeakMap();
