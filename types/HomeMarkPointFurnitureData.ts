/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeMarkPointFurnitureData.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./HomeMarkPointNPCData";
import * as dependency_2 from "./HomeMarkPointSuiteData";
import * as dependency_3 from "./Vector";
import * as pb_1 from "google-protobuf";
export class HomeMarkPointFurnitureData extends pb_1.Message {
    #one_of_decls: number[][] = [[6, 7]];
    constructor(data?: any[] | ({
        guid?: number;
        furniture_id?: number;
        furniture_type?: number;
        pos?: dependency_3.Vector;
    } & (({
        npc_data?: dependency_1.HomeMarkPointNPCData;
        suite_data?: never;
    } | {
        npc_data?: never;
        suite_data?: dependency_2.HomeMarkPointSuiteData;
    })))) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("guid" in data && data.guid != undefined) {
                this.guid = data.guid;
            }
            if ("furniture_id" in data && data.furniture_id != undefined) {
                this.furniture_id = data.furniture_id;
            }
            if ("furniture_type" in data && data.furniture_type != undefined) {
                this.furniture_type = data.furniture_type;
            }
            if ("pos" in data && data.pos != undefined) {
                this.pos = data.pos;
            }
            if ("npc_data" in data && data.npc_data != undefined) {
                this.npc_data = data.npc_data;
            }
            if ("suite_data" in data && data.suite_data != undefined) {
                this.suite_data = data.suite_data;
            }
        }
    }
    get guid() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set guid(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get furniture_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set furniture_id(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get furniture_type() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set furniture_type(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get pos() {
        return pb_1.Message.getWrapperField(this, dependency_3.Vector, 4) as dependency_3.Vector;
    }
    set pos(value: dependency_3.Vector) {
        pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_pos() {
        return pb_1.Message.getField(this, 4) != null;
    }
    get npc_data() {
        return pb_1.Message.getWrapperField(this, dependency_1.HomeMarkPointNPCData, 6) as dependency_1.HomeMarkPointNPCData;
    }
    set npc_data(value: dependency_1.HomeMarkPointNPCData) {
        pb_1.Message.setOneofWrapperField(this, 6, this.#one_of_decls[0], value);
    }
    get has_npc_data() {
        return pb_1.Message.getField(this, 6) != null;
    }
    get suite_data() {
        return pb_1.Message.getWrapperField(this, dependency_2.HomeMarkPointSuiteData, 7) as dependency_2.HomeMarkPointSuiteData;
    }
    set suite_data(value: dependency_2.HomeMarkPointSuiteData) {
        pb_1.Message.setOneofWrapperField(this, 7, this.#one_of_decls[0], value);
    }
    get has_suite_data() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get extra() {
        const cases: {
            [index: number]: "none" | "npc_data" | "suite_data";
        } = {
            0: "none",
            6: "npc_data",
            7: "suite_data"
        };
        return cases[pb_1.Message.computeOneofCase(this, [6, 7])];
    }
    static fromObject(data: {
        guid?: number;
        furniture_id?: number;
        furniture_type?: number;
        pos?: ReturnType<typeof dependency_3.Vector.prototype.toObject>;
        npc_data?: ReturnType<typeof dependency_1.HomeMarkPointNPCData.prototype.toObject>;
        suite_data?: ReturnType<typeof dependency_2.HomeMarkPointSuiteData.prototype.toObject>;
    }): HomeMarkPointFurnitureData {
        const message = new HomeMarkPointFurnitureData({});
        if (data.guid != null) {
            message.guid = data.guid;
        }
        if (data.furniture_id != null) {
            message.furniture_id = data.furniture_id;
        }
        if (data.furniture_type != null) {
            message.furniture_type = data.furniture_type;
        }
        if (data.pos != null) {
            message.pos = dependency_3.Vector.fromObject(data.pos);
        }
        if (data.npc_data != null) {
            message.npc_data = dependency_1.HomeMarkPointNPCData.fromObject(data.npc_data);
        }
        if (data.suite_data != null) {
            message.suite_data = dependency_2.HomeMarkPointSuiteData.fromObject(data.suite_data);
        }
        return message;
    }
    toObject() {
        const data: {
            guid?: number;
            furniture_id?: number;
            furniture_type?: number;
            pos?: ReturnType<typeof dependency_3.Vector.prototype.toObject>;
            npc_data?: ReturnType<typeof dependency_1.HomeMarkPointNPCData.prototype.toObject>;
            suite_data?: ReturnType<typeof dependency_2.HomeMarkPointSuiteData.prototype.toObject>;
        } = {};
        if (this.guid != null) {
            data.guid = this.guid;
        }
        if (this.furniture_id != null) {
            data.furniture_id = this.furniture_id;
        }
        if (this.furniture_type != null) {
            data.furniture_type = this.furniture_type;
        }
        if (this.pos != null) {
            data.pos = this.pos.toObject();
        }
        if (this.npc_data != null) {
            data.npc_data = this.npc_data.toObject();
        }
        if (this.suite_data != null) {
            data.suite_data = this.suite_data.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.guid != 0)
            writer.writeUint32(1, this.guid);
        if (this.furniture_id != 0)
            writer.writeUint32(2, this.furniture_id);
        if (this.furniture_type != 0)
            writer.writeUint32(3, this.furniture_type);
        if (this.has_pos)
            writer.writeMessage(4, this.pos, () => this.pos.serialize(writer));
        if (this.has_npc_data)
            writer.writeMessage(6, this.npc_data, () => this.npc_data.serialize(writer));
        if (this.has_suite_data)
            writer.writeMessage(7, this.suite_data, () => this.suite_data.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): HomeMarkPointFurnitureData {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeMarkPointFurnitureData();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.guid = reader.readUint32();
                    break;
                case 2:
                    message.furniture_id = reader.readUint32();
                    break;
                case 3:
                    message.furniture_type = reader.readUint32();
                    break;
                case 4:
                    reader.readMessage(message.pos, () => message.pos = dependency_3.Vector.deserialize(reader));
                    break;
                case 6:
                    reader.readMessage(message.npc_data, () => message.npc_data = dependency_1.HomeMarkPointNPCData.deserialize(reader));
                    break;
                case 7:
                    reader.readMessage(message.suite_data, () => message.suite_data = dependency_2.HomeMarkPointSuiteData.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): HomeMarkPointFurnitureData {
        return HomeMarkPointFurnitureData.deserialize(bytes);
    }
}
