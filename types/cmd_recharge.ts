// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_recharge.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ItemParam } from "./define";
import { ShopConcertProduct } from "./define";
import { ShopMcoinProduct } from "./define";
import { ShopCardProduct } from "./define";
import { PlayProduct } from "./define";
/**
 * @generated from protobuf message com.midnights.game.RechargeReq
 */
export interface RechargeReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.PlayProduct play_product = 10;
     */
    playProduct?: PlayProduct;
    /**
     * @generated from protobuf field: optional com.midnights.game.ShopCardProduct card_product = 8;
     */
    cardProduct?: ShopCardProduct;
    /**
     * @generated from protobuf field: optional com.midnights.game.ShopMcoinProduct mcoin_product = 14;
     */
    mcoinProduct?: ShopMcoinProduct;
    /**
     * @generated from protobuf field: optional com.midnights.game.ShopConcertProduct concert_product = 7;
     */
    concertProduct?: ShopConcertProduct;
}
/**
 * @generated from protobuf enum com.midnights.game.RechargeReq.CmdId
 */
export enum RechargeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4126;
     */
    CMD_ID = 4126,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.RechargeRsp
 */
export interface RechargeRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional bool is_show_minors_hint = 6;
     */
    isShowMinorsHint?: boolean;
    /**
     * @generated from protobuf field: optional string product_id = 2;
     */
    productId?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.RechargeRsp.CmdId
 */
export enum RechargeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4118;
     */
    CMD_ID = 4118,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.OrderFinishNotify
 */
export interface OrderFinishNotify {
    /**
     * @generated from protobuf field: optional uint32 order_id = 3;
     */
    orderId?: number;
    /**
     * @generated from protobuf field: optional uint32 card_product_remain_days = 15;
     */
    cardProductRemainDays?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam item_list = 9;
     */
    itemList: ItemParam[];
    /**
     * @generated from protobuf field: optional uint32 add_mcoin = 7;
     */
    addMcoin?: number;
    /**
     * @generated from protobuf field: optional string product_id = 6;
     */
    productId?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.OrderFinishNotify.CmdId
 */
export enum OrderFinishNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4125;
     */
    CMD_ID = 4125,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CardProductRewardNotify
 */
export interface CardProductRewardNotify {
    /**
     * @generated from protobuf field: optional uint32 hcoin = 6;
     */
    hcoin?: number;
    /**
     * @generated from protobuf field: optional string product_id = 14;
     */
    productId?: string;
    /**
     * @generated from protobuf field: optional uint32 remain_days = 1;
     */
    remainDays?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.CardProductRewardNotify.CmdId
 */
export enum CardProductRewardNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4107;
     */
    CMD_ID = 4107,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ProductPriceTier
 */
export interface ProductPriceTier {
    /**
     * @generated from protobuf field: optional string product_id = 6;
     */
    productId?: string;
    /**
     * @generated from protobuf field: optional string price_tier = 12;
     */
    priceTier?: string;
}
/**
 * @generated from protobuf message com.midnights.game.ResinCardData
 */
export interface ResinCardData {
    /**
     * @generated from protobuf field: optional uint32 remain_reward_days = 3;
     */
    remainRewardDays?: number;
    /**
     * @generated from protobuf field: optional uint32 expire_time = 12;
     */
    expireTime?: number;
    /**
     * @generated from protobuf field: optional uint32 last_daily_reward_time = 2;
     */
    lastDailyRewardTime?: number;
    /**
     * @generated from protobuf field: optional uint32 config_id = 7;
     */
    configId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.PlayerRechargeDataNotify
 */
export interface PlayerRechargeDataNotify {
    /**
     * @generated from protobuf field: optional uint32 card_product_remain_days = 12;
     */
    cardProductRemainDays?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ProductPriceTier product_price_tier_list = 11;
     */
    productPriceTierList: ProductPriceTier[];
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerRechargeDataNotify.CmdId
 */
export enum PlayerRechargeDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4102;
     */
    CMD_ID = 4102,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.OrderDisplayNotify
 */
export interface OrderDisplayNotify {
    /**
     * @generated from protobuf field: optional uint32 order_id = 1;
     */
    orderId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.OrderDisplayNotify.CmdId
 */
export enum OrderDisplayNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4131;
     */
    CMD_ID = 4131,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReportTrackingIOInfoNotify
 */
export interface ReportTrackingIOInfoNotify {
    /**
     * @generated from protobuf field: optional string rydevicetype = 12;
     */
    rydevicetype?: string;
    /**
     * @generated from protobuf field: optional string deviceid = 1;
     */
    deviceid?: string;
    /**
     * @generated from protobuf field: optional string client_tz = 13;
     */
    clientTz?: string;
    /**
     * @generated from protobuf field: optional string appid = 14;
     */
    appid?: string;
    /**
     * @generated from protobuf field: optional string mac = 15;
     */
    mac?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.ReportTrackingIOInfoNotify.CmdId
 */
export enum ReportTrackingIOInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4129;
     */
    CMD_ID = 4129,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeResinCardDailyRewardReq
 */
export interface TakeResinCardDailyRewardReq {
    /**
     * @generated from protobuf field: optional uint32 product_config_id = 14;
     */
    productConfigId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeResinCardDailyRewardReq.CmdId
 */
export enum TakeResinCardDailyRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4122;
     */
    CMD_ID = 4122,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeResinCardDailyRewardRsp
 */
export interface TakeResinCardDailyRewardRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam item_vec = 6;
     */
    itemVec: ItemParam[];
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 product_config_id = 12;
     */
    productConfigId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeResinCardDailyRewardRsp.CmdId
 */
export enum TakeResinCardDailyRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4144;
     */
    CMD_ID = 4144,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ResinCardDataUpdateNotify
 */
export interface ResinCardDataUpdateNotify {
    /**
     * @generated from protobuf field: optional uint32 today_start_time = 6;
     */
    todayStartTime?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ResinCardData card_data_list = 2;
     */
    cardDataList: ResinCardData[];
}
/**
 * @generated from protobuf enum com.midnights.game.ResinCardDataUpdateNotify.CmdId
 */
export enum ResinCardDataUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4149;
     */
    CMD_ID = 4149,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class RechargeReq$Type extends MessageType<RechargeReq> {
    constructor() {
        super("com.midnights.game.RechargeReq", [
            { no: 10, name: "play_product", kind: "message", T: () => PlayProduct },
            { no: 8, name: "card_product", kind: "message", T: () => ShopCardProduct },
            { no: 14, name: "mcoin_product", kind: "message", T: () => ShopMcoinProduct },
            { no: 7, name: "concert_product", kind: "message", T: () => ShopConcertProduct }
        ]);
    }
    create(value?: PartialMessage<RechargeReq>): RechargeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RechargeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RechargeReq): RechargeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.PlayProduct play_product */ 10:
                    message.playProduct = PlayProduct.internalBinaryRead(reader, reader.uint32(), options, message.playProduct);
                    break;
                case /* optional com.midnights.game.ShopCardProduct card_product */ 8:
                    message.cardProduct = ShopCardProduct.internalBinaryRead(reader, reader.uint32(), options, message.cardProduct);
                    break;
                case /* optional com.midnights.game.ShopMcoinProduct mcoin_product */ 14:
                    message.mcoinProduct = ShopMcoinProduct.internalBinaryRead(reader, reader.uint32(), options, message.mcoinProduct);
                    break;
                case /* optional com.midnights.game.ShopConcertProduct concert_product */ 7:
                    message.concertProduct = ShopConcertProduct.internalBinaryRead(reader, reader.uint32(), options, message.concertProduct);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RechargeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.PlayProduct play_product = 10; */
        if (message.playProduct)
            PlayProduct.internalBinaryWrite(message.playProduct, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.ShopCardProduct card_product = 8; */
        if (message.cardProduct)
            ShopCardProduct.internalBinaryWrite(message.cardProduct, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.ShopMcoinProduct mcoin_product = 14; */
        if (message.mcoinProduct)
            ShopMcoinProduct.internalBinaryWrite(message.mcoinProduct, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.ShopConcertProduct concert_product = 7; */
        if (message.concertProduct)
            ShopConcertProduct.internalBinaryWrite(message.concertProduct, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RechargeReq
 */
export const RechargeReq = new RechargeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RechargeRsp$Type extends MessageType<RechargeRsp> {
    constructor() {
        super("com.midnights.game.RechargeRsp", [
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "is_show_minors_hint", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "product_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<RechargeRsp>): RechargeRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RechargeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RechargeRsp): RechargeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                case /* optional bool is_show_minors_hint */ 6:
                    message.isShowMinorsHint = reader.bool();
                    break;
                case /* optional string product_id */ 2:
                    message.productId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RechargeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        /* optional bool is_show_minors_hint = 6; */
        if (message.isShowMinorsHint !== undefined)
            writer.tag(6, WireType.Varint).bool(message.isShowMinorsHint);
        /* optional string product_id = 2; */
        if (message.productId !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.productId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RechargeRsp
 */
export const RechargeRsp = new RechargeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OrderFinishNotify$Type extends MessageType<OrderFinishNotify> {
    constructor() {
        super("com.midnights.game.OrderFinishNotify", [
            { no: 3, name: "order_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "card_product_remain_days", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam },
            { no: 7, name: "add_mcoin", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "product_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<OrderFinishNotify>): OrderFinishNotify {
        const message = { itemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OrderFinishNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OrderFinishNotify): OrderFinishNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 order_id */ 3:
                    message.orderId = reader.uint32();
                    break;
                case /* optional uint32 card_product_remain_days */ 15:
                    message.cardProductRemainDays = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ItemParam item_list */ 9:
                    message.itemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 add_mcoin */ 7:
                    message.addMcoin = reader.uint32();
                    break;
                case /* optional string product_id */ 6:
                    message.productId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OrderFinishNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 order_id = 3; */
        if (message.orderId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.orderId);
        /* optional uint32 card_product_remain_days = 15; */
        if (message.cardProductRemainDays !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.cardProductRemainDays);
        /* repeated com.midnights.game.ItemParam item_list = 9; */
        for (let i = 0; i < message.itemList.length; i++)
            ItemParam.internalBinaryWrite(message.itemList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 add_mcoin = 7; */
        if (message.addMcoin !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.addMcoin);
        /* optional string product_id = 6; */
        if (message.productId !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.productId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OrderFinishNotify
 */
export const OrderFinishNotify = new OrderFinishNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CardProductRewardNotify$Type extends MessageType<CardProductRewardNotify> {
    constructor() {
        super("com.midnights.game.CardProductRewardNotify", [
            { no: 6, name: "hcoin", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "product_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 1, name: "remain_days", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CardProductRewardNotify>): CardProductRewardNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CardProductRewardNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CardProductRewardNotify): CardProductRewardNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 hcoin */ 6:
                    message.hcoin = reader.uint32();
                    break;
                case /* optional string product_id */ 14:
                    message.productId = reader.string();
                    break;
                case /* optional uint32 remain_days */ 1:
                    message.remainDays = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CardProductRewardNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 hcoin = 6; */
        if (message.hcoin !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.hcoin);
        /* optional string product_id = 14; */
        if (message.productId !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.productId);
        /* optional uint32 remain_days = 1; */
        if (message.remainDays !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.remainDays);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CardProductRewardNotify
 */
export const CardProductRewardNotify = new CardProductRewardNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ProductPriceTier$Type extends MessageType<ProductPriceTier> {
    constructor() {
        super("com.midnights.game.ProductPriceTier", [
            { no: 6, name: "product_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "price_tier", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ProductPriceTier>): ProductPriceTier {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ProductPriceTier>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ProductPriceTier): ProductPriceTier {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string product_id */ 6:
                    message.productId = reader.string();
                    break;
                case /* optional string price_tier */ 12:
                    message.priceTier = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ProductPriceTier, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string product_id = 6; */
        if (message.productId !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.productId);
        /* optional string price_tier = 12; */
        if (message.priceTier !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.priceTier);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ProductPriceTier
 */
export const ProductPriceTier = new ProductPriceTier$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResinCardData$Type extends MessageType<ResinCardData> {
    constructor() {
        super("com.midnights.game.ResinCardData", [
            { no: 3, name: "remain_reward_days", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "expire_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "last_daily_reward_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ResinCardData>): ResinCardData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ResinCardData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResinCardData): ResinCardData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 remain_reward_days */ 3:
                    message.remainRewardDays = reader.uint32();
                    break;
                case /* optional uint32 expire_time */ 12:
                    message.expireTime = reader.uint32();
                    break;
                case /* optional uint32 last_daily_reward_time */ 2:
                    message.lastDailyRewardTime = reader.uint32();
                    break;
                case /* optional uint32 config_id */ 7:
                    message.configId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ResinCardData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 remain_reward_days = 3; */
        if (message.remainRewardDays !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.remainRewardDays);
        /* optional uint32 expire_time = 12; */
        if (message.expireTime !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.expireTime);
        /* optional uint32 last_daily_reward_time = 2; */
        if (message.lastDailyRewardTime !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.lastDailyRewardTime);
        /* optional uint32 config_id = 7; */
        if (message.configId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.configId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ResinCardData
 */
export const ResinCardData = new ResinCardData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerRechargeDataNotify$Type extends MessageType<PlayerRechargeDataNotify> {
    constructor() {
        super("com.midnights.game.PlayerRechargeDataNotify", [
            { no: 12, name: "card_product_remain_days", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "product_price_tier_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ProductPriceTier }
        ]);
    }
    create(value?: PartialMessage<PlayerRechargeDataNotify>): PlayerRechargeDataNotify {
        const message = { productPriceTierList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerRechargeDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerRechargeDataNotify): PlayerRechargeDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 card_product_remain_days */ 12:
                    message.cardProductRemainDays = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ProductPriceTier product_price_tier_list */ 11:
                    message.productPriceTierList.push(ProductPriceTier.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerRechargeDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 card_product_remain_days = 12; */
        if (message.cardProductRemainDays !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.cardProductRemainDays);
        /* repeated com.midnights.game.ProductPriceTier product_price_tier_list = 11; */
        for (let i = 0; i < message.productPriceTierList.length; i++)
            ProductPriceTier.internalBinaryWrite(message.productPriceTierList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerRechargeDataNotify
 */
export const PlayerRechargeDataNotify = new PlayerRechargeDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OrderDisplayNotify$Type extends MessageType<OrderDisplayNotify> {
    constructor() {
        super("com.midnights.game.OrderDisplayNotify", [
            { no: 1, name: "order_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<OrderDisplayNotify>): OrderDisplayNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OrderDisplayNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OrderDisplayNotify): OrderDisplayNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 order_id */ 1:
                    message.orderId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OrderDisplayNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 order_id = 1; */
        if (message.orderId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.orderId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OrderDisplayNotify
 */
export const OrderDisplayNotify = new OrderDisplayNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReportTrackingIOInfoNotify$Type extends MessageType<ReportTrackingIOInfoNotify> {
    constructor() {
        super("com.midnights.game.ReportTrackingIOInfoNotify", [
            { no: 12, name: "rydevicetype", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 1, name: "deviceid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "client_tz", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "appid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "mac", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ReportTrackingIOInfoNotify>): ReportTrackingIOInfoNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReportTrackingIOInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReportTrackingIOInfoNotify): ReportTrackingIOInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string rydevicetype */ 12:
                    message.rydevicetype = reader.string();
                    break;
                case /* optional string deviceid */ 1:
                    message.deviceid = reader.string();
                    break;
                case /* optional string client_tz */ 13:
                    message.clientTz = reader.string();
                    break;
                case /* optional string appid */ 14:
                    message.appid = reader.string();
                    break;
                case /* optional string mac */ 15:
                    message.mac = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReportTrackingIOInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string rydevicetype = 12; */
        if (message.rydevicetype !== undefined)
            writer.tag(12, WireType.LengthDelimited).string(message.rydevicetype);
        /* optional string deviceid = 1; */
        if (message.deviceid !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.deviceid);
        /* optional string client_tz = 13; */
        if (message.clientTz !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.clientTz);
        /* optional string appid = 14; */
        if (message.appid !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.appid);
        /* optional string mac = 15; */
        if (message.mac !== undefined)
            writer.tag(15, WireType.LengthDelimited).string(message.mac);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReportTrackingIOInfoNotify
 */
export const ReportTrackingIOInfoNotify = new ReportTrackingIOInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeResinCardDailyRewardReq$Type extends MessageType<TakeResinCardDailyRewardReq> {
    constructor() {
        super("com.midnights.game.TakeResinCardDailyRewardReq", [
            { no: 14, name: "product_config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeResinCardDailyRewardReq>): TakeResinCardDailyRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeResinCardDailyRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeResinCardDailyRewardReq): TakeResinCardDailyRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 product_config_id */ 14:
                    message.productConfigId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeResinCardDailyRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 product_config_id = 14; */
        if (message.productConfigId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.productConfigId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeResinCardDailyRewardReq
 */
export const TakeResinCardDailyRewardReq = new TakeResinCardDailyRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeResinCardDailyRewardRsp$Type extends MessageType<TakeResinCardDailyRewardRsp> {
    constructor() {
        super("com.midnights.game.TakeResinCardDailyRewardRsp", [
            { no: 6, name: "item_vec", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam },
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "product_config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeResinCardDailyRewardRsp>): TakeResinCardDailyRewardRsp {
        const message = { itemVec: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeResinCardDailyRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeResinCardDailyRewardRsp): TakeResinCardDailyRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ItemParam item_vec */ 6:
                    message.itemVec.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 product_config_id */ 12:
                    message.productConfigId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeResinCardDailyRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ItemParam item_vec = 6; */
        for (let i = 0; i < message.itemVec.length; i++)
            ItemParam.internalBinaryWrite(message.itemVec[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        /* optional uint32 product_config_id = 12; */
        if (message.productConfigId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.productConfigId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeResinCardDailyRewardRsp
 */
export const TakeResinCardDailyRewardRsp = new TakeResinCardDailyRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ResinCardDataUpdateNotify$Type extends MessageType<ResinCardDataUpdateNotify> {
    constructor() {
        super("com.midnights.game.ResinCardDataUpdateNotify", [
            { no: 6, name: "today_start_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "card_data_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ResinCardData }
        ]);
    }
    create(value?: PartialMessage<ResinCardDataUpdateNotify>): ResinCardDataUpdateNotify {
        const message = { cardDataList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ResinCardDataUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResinCardDataUpdateNotify): ResinCardDataUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 today_start_time */ 6:
                    message.todayStartTime = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ResinCardData card_data_list */ 2:
                    message.cardDataList.push(ResinCardData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ResinCardDataUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 today_start_time = 6; */
        if (message.todayStartTime !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.todayStartTime);
        /* repeated com.midnights.game.ResinCardData card_data_list = 2; */
        for (let i = 0; i < message.cardDataList.length; i++)
            ResinCardData.internalBinaryWrite(message.cardDataList[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ResinCardDataUpdateNotify
 */
export const ResinCardDataUpdateNotify = new ResinCardDataUpdateNotify$Type();
