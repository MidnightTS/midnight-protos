// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_routine.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message com.midnights.game.PlayerRoutineInfo
 */
export interface PlayerRoutineInfo {
    /**
     * @generated from protobuf field: optional uint32 routine_type = 8;
     */
    routineType?: number;
    /**
     * @generated from protobuf field: optional uint32 finished_num = 15;
     */
    finishedNum?: number;
}
/**
 * @generated from protobuf message com.midnights.game.PlayerRoutineDataNotify
 */
export interface PlayerRoutineDataNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.PlayerRoutineInfo routine_info_list = 11;
     */
    routineInfoList: PlayerRoutineInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerRoutineDataNotify.CmdId
 */
export enum PlayerRoutineDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 3526;
     */
    CMD_ID = 3526,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.WorldRoutineInfo
 */
export interface WorldRoutineInfo {
    /**
     * @generated from protobuf field: optional uint32 progress = 4;
     */
    progress?: number;
    /**
     * @generated from protobuf field: optional bool is_finished = 14;
     */
    isFinished?: boolean;
    /**
     * @generated from protobuf field: optional uint32 finish_progress = 3;
     */
    finishProgress?: number;
    /**
     * @generated from protobuf field: optional uint32 routine_id = 11;
     */
    routineId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.WorldRoutineTypeInfo
 */
export interface WorldRoutineTypeInfo {
    /**
     * @generated from protobuf field: optional uint32 routine_type = 13;
     */
    routineType?: number;
    /**
     * @generated from protobuf field: optional uint32 next_refresh_time = 12;
     */
    nextRefreshTime?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.WorldRoutineInfo world_routine_info_list = 3;
     */
    worldRoutineInfoList: WorldRoutineInfo[];
}
/**
 * @generated from protobuf message com.midnights.game.WorldAllRoutineTypeNotify
 */
export interface WorldAllRoutineTypeNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.WorldRoutineTypeInfo world_routine_type_list = 12;
     */
    worldRoutineTypeList: WorldRoutineTypeInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.WorldAllRoutineTypeNotify.CmdId
 */
export enum WorldAllRoutineTypeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 3518;
     */
    CMD_ID = 3518,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.WorldRoutineTypeRefreshNotify
 */
export interface WorldRoutineTypeRefreshNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.WorldRoutineTypeInfo world_routine_type = 7;
     */
    worldRoutineType?: WorldRoutineTypeInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.WorldRoutineTypeRefreshNotify.CmdId
 */
export enum WorldRoutineTypeRefreshNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 3525;
     */
    CMD_ID = 3525,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.WorldRoutineChangeNotify
 */
export interface WorldRoutineChangeNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.WorldRoutineInfo routine_info = 3;
     */
    routineInfo?: WorldRoutineInfo;
    /**
     * @generated from protobuf field: optional uint32 routine_type = 11;
     */
    routineType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.WorldRoutineChangeNotify.CmdId
 */
export enum WorldRoutineChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 3507;
     */
    CMD_ID = 3507,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.WorldRoutineTypeCloseNotify
 */
export interface WorldRoutineTypeCloseNotify {
    /**
     * @generated from protobuf field: optional uint32 routine_type = 7;
     */
    routineType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.WorldRoutineTypeCloseNotify.CmdId
 */
export enum WorldRoutineTypeCloseNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 3502;
     */
    CMD_ID = 3502,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class PlayerRoutineInfo$Type extends MessageType<PlayerRoutineInfo> {
    constructor() {
        super("com.midnights.game.PlayerRoutineInfo", [
            { no: 8, name: "routine_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "finished_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerRoutineInfo>): PlayerRoutineInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerRoutineInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerRoutineInfo): PlayerRoutineInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 routine_type */ 8:
                    message.routineType = reader.uint32();
                    break;
                case /* optional uint32 finished_num */ 15:
                    message.finishedNum = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerRoutineInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 routine_type = 8; */
        if (message.routineType !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.routineType);
        /* optional uint32 finished_num = 15; */
        if (message.finishedNum !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.finishedNum);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerRoutineInfo
 */
export const PlayerRoutineInfo = new PlayerRoutineInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerRoutineDataNotify$Type extends MessageType<PlayerRoutineDataNotify> {
    constructor() {
        super("com.midnights.game.PlayerRoutineDataNotify", [
            { no: 11, name: "routine_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PlayerRoutineInfo }
        ]);
    }
    create(value?: PartialMessage<PlayerRoutineDataNotify>): PlayerRoutineDataNotify {
        const message = { routineInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerRoutineDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerRoutineDataNotify): PlayerRoutineDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.PlayerRoutineInfo routine_info_list */ 11:
                    message.routineInfoList.push(PlayerRoutineInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerRoutineDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.PlayerRoutineInfo routine_info_list = 11; */
        for (let i = 0; i < message.routineInfoList.length; i++)
            PlayerRoutineInfo.internalBinaryWrite(message.routineInfoList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerRoutineDataNotify
 */
export const PlayerRoutineDataNotify = new PlayerRoutineDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldRoutineInfo$Type extends MessageType<WorldRoutineInfo> {
    constructor() {
        super("com.midnights.game.WorldRoutineInfo", [
            { no: 4, name: "progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "is_finished", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "finish_progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "routine_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<WorldRoutineInfo>): WorldRoutineInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WorldRoutineInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorldRoutineInfo): WorldRoutineInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 progress */ 4:
                    message.progress = reader.uint32();
                    break;
                case /* optional bool is_finished */ 14:
                    message.isFinished = reader.bool();
                    break;
                case /* optional uint32 finish_progress */ 3:
                    message.finishProgress = reader.uint32();
                    break;
                case /* optional uint32 routine_id */ 11:
                    message.routineId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorldRoutineInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 progress = 4; */
        if (message.progress !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.progress);
        /* optional bool is_finished = 14; */
        if (message.isFinished !== undefined)
            writer.tag(14, WireType.Varint).bool(message.isFinished);
        /* optional uint32 finish_progress = 3; */
        if (message.finishProgress !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.finishProgress);
        /* optional uint32 routine_id = 11; */
        if (message.routineId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.routineId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldRoutineInfo
 */
export const WorldRoutineInfo = new WorldRoutineInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldRoutineTypeInfo$Type extends MessageType<WorldRoutineTypeInfo> {
    constructor() {
        super("com.midnights.game.WorldRoutineTypeInfo", [
            { no: 13, name: "routine_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "next_refresh_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "world_routine_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => WorldRoutineInfo }
        ]);
    }
    create(value?: PartialMessage<WorldRoutineTypeInfo>): WorldRoutineTypeInfo {
        const message = { worldRoutineInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WorldRoutineTypeInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorldRoutineTypeInfo): WorldRoutineTypeInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 routine_type */ 13:
                    message.routineType = reader.uint32();
                    break;
                case /* optional uint32 next_refresh_time */ 12:
                    message.nextRefreshTime = reader.uint32();
                    break;
                case /* repeated com.midnights.game.WorldRoutineInfo world_routine_info_list */ 3:
                    message.worldRoutineInfoList.push(WorldRoutineInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorldRoutineTypeInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 routine_type = 13; */
        if (message.routineType !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.routineType);
        /* optional uint32 next_refresh_time = 12; */
        if (message.nextRefreshTime !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.nextRefreshTime);
        /* repeated com.midnights.game.WorldRoutineInfo world_routine_info_list = 3; */
        for (let i = 0; i < message.worldRoutineInfoList.length; i++)
            WorldRoutineInfo.internalBinaryWrite(message.worldRoutineInfoList[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldRoutineTypeInfo
 */
export const WorldRoutineTypeInfo = new WorldRoutineTypeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldAllRoutineTypeNotify$Type extends MessageType<WorldAllRoutineTypeNotify> {
    constructor() {
        super("com.midnights.game.WorldAllRoutineTypeNotify", [
            { no: 12, name: "world_routine_type_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => WorldRoutineTypeInfo }
        ]);
    }
    create(value?: PartialMessage<WorldAllRoutineTypeNotify>): WorldAllRoutineTypeNotify {
        const message = { worldRoutineTypeList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WorldAllRoutineTypeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorldAllRoutineTypeNotify): WorldAllRoutineTypeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.WorldRoutineTypeInfo world_routine_type_list */ 12:
                    message.worldRoutineTypeList.push(WorldRoutineTypeInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorldAllRoutineTypeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.WorldRoutineTypeInfo world_routine_type_list = 12; */
        for (let i = 0; i < message.worldRoutineTypeList.length; i++)
            WorldRoutineTypeInfo.internalBinaryWrite(message.worldRoutineTypeList[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldAllRoutineTypeNotify
 */
export const WorldAllRoutineTypeNotify = new WorldAllRoutineTypeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldRoutineTypeRefreshNotify$Type extends MessageType<WorldRoutineTypeRefreshNotify> {
    constructor() {
        super("com.midnights.game.WorldRoutineTypeRefreshNotify", [
            { no: 7, name: "world_routine_type", kind: "message", T: () => WorldRoutineTypeInfo }
        ]);
    }
    create(value?: PartialMessage<WorldRoutineTypeRefreshNotify>): WorldRoutineTypeRefreshNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WorldRoutineTypeRefreshNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorldRoutineTypeRefreshNotify): WorldRoutineTypeRefreshNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.WorldRoutineTypeInfo world_routine_type */ 7:
                    message.worldRoutineType = WorldRoutineTypeInfo.internalBinaryRead(reader, reader.uint32(), options, message.worldRoutineType);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorldRoutineTypeRefreshNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.WorldRoutineTypeInfo world_routine_type = 7; */
        if (message.worldRoutineType)
            WorldRoutineTypeInfo.internalBinaryWrite(message.worldRoutineType, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldRoutineTypeRefreshNotify
 */
export const WorldRoutineTypeRefreshNotify = new WorldRoutineTypeRefreshNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldRoutineChangeNotify$Type extends MessageType<WorldRoutineChangeNotify> {
    constructor() {
        super("com.midnights.game.WorldRoutineChangeNotify", [
            { no: 3, name: "routine_info", kind: "message", T: () => WorldRoutineInfo },
            { no: 11, name: "routine_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<WorldRoutineChangeNotify>): WorldRoutineChangeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WorldRoutineChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorldRoutineChangeNotify): WorldRoutineChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.WorldRoutineInfo routine_info */ 3:
                    message.routineInfo = WorldRoutineInfo.internalBinaryRead(reader, reader.uint32(), options, message.routineInfo);
                    break;
                case /* optional uint32 routine_type */ 11:
                    message.routineType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorldRoutineChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.WorldRoutineInfo routine_info = 3; */
        if (message.routineInfo)
            WorldRoutineInfo.internalBinaryWrite(message.routineInfo, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 routine_type = 11; */
        if (message.routineType !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.routineType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldRoutineChangeNotify
 */
export const WorldRoutineChangeNotify = new WorldRoutineChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldRoutineTypeCloseNotify$Type extends MessageType<WorldRoutineTypeCloseNotify> {
    constructor() {
        super("com.midnights.game.WorldRoutineTypeCloseNotify", [
            { no: 7, name: "routine_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<WorldRoutineTypeCloseNotify>): WorldRoutineTypeCloseNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WorldRoutineTypeCloseNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorldRoutineTypeCloseNotify): WorldRoutineTypeCloseNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 routine_type */ 7:
                    message.routineType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorldRoutineTypeCloseNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 routine_type = 7; */
        if (message.routineType !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.routineType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldRoutineTypeCloseNotify
 */
export const WorldRoutineTypeCloseNotify = new WorldRoutineTypeCloseNotify$Type();
