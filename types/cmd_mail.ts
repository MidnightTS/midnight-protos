// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_mail.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { EquipParam } from "./define";
import { MailData } from "./define";
/**
 * @generated from protobuf message com.midnights.game.MailChangeNotify
 */
export interface MailChangeNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.MailData mail_list = 14;
     */
    mailList: MailData[];
    /**
     * @generated from protobuf field: repeated uint32 del_mail_id_list = 8;
     */
    delMailIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.MailChangeNotify.CmdId
 */
export enum MailChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1498;
     */
    CMD_ID = 1498,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReadMailNotify
 */
export interface ReadMailNotify {
    /**
     * @generated from protobuf field: repeated uint32 mail_id_list = 2;
     */
    mailIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.ReadMailNotify.CmdId
 */
export enum ReadMailNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1412;
     */
    CMD_ID = 1412,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetMailItemReq
 */
export interface GetMailItemReq {
    /**
     * @generated from protobuf field: repeated uint32 mail_id_list = 6;
     */
    mailIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetMailItemReq.CmdId
 */
export enum GetMailItemReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1435;
     */
    CMD_ID = 1435,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetMailItemRsp
 */
export interface GetMailItemRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 mail_id_list = 3;
     */
    mailIdList: number[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.EquipParam item_list = 2;
     */
    itemList: EquipParam[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetMailItemRsp.CmdId
 */
export enum GetMailItemRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1407;
     */
    CMD_ID = 1407,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DelMailReq
 */
export interface DelMailReq {
    /**
     * @generated from protobuf field: repeated uint32 mail_id_list = 12;
     */
    mailIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.DelMailReq.CmdId
 */
export enum DelMailReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1421;
     */
    CMD_ID = 1421,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DelMailRsp
 */
export interface DelMailRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 mail_id_list = 5;
     */
    mailIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.DelMailRsp.CmdId
 */
export enum DelMailRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1403;
     */
    CMD_ID = 1403,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAuthkeyReq
 */
export interface GetAuthkeyReq {
    /**
     * @generated from protobuf field: optional string auth_appid = 14;
     */
    authAppid?: string;
    /**
     * @generated from protobuf field: optional uint32 sign_type = 7;
     */
    signType?: number;
    /**
     * @generated from protobuf field: optional uint32 authkey_ver = 13;
     */
    authkeyVer?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetAuthkeyReq.CmdId
 */
export enum GetAuthkeyReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1490;
     */
    CMD_ID = 1490,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAuthkeyRsp
 */
export interface GetAuthkeyRsp {
    /**
     * @generated from protobuf field: optional string auth_appid = 4;
     */
    authAppid?: string;
    /**
     * @generated from protobuf field: optional uint32 sign_type = 15;
     */
    signType?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 6;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 authkey_ver = 9;
     */
    authkeyVer?: number;
    /**
     * @generated from protobuf field: optional string game_biz = 11;
     */
    gameBiz?: string;
    /**
     * @generated from protobuf field: optional string authkey = 3;
     */
    authkey?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.GetAuthkeyRsp.CmdId
 */
export enum GetAuthkeyRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1473;
     */
    CMD_ID = 1473,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ClientNewMailNotify
 */
export interface ClientNewMailNotify {
    /**
     * @generated from protobuf field: optional uint32 not_read_num = 7;
     */
    notReadNum?: number;
    /**
     * @generated from protobuf field: optional uint32 not_got_attachment_num = 2;
     */
    notGotAttachmentNum?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ClientNewMailNotify.CmdId
 */
export enum ClientNewMailNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1499;
     */
    CMD_ID = 1499,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAllMailReq
 */
export interface GetAllMailReq {
    /**
     * @generated from protobuf field: optional bool is_collected = 7;
     */
    isCollected?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.GetAllMailReq.CmdId
 */
export enum GetAllMailReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1431;
     */
    CMD_ID = 1431,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAllMailRsp
 */
export interface GetAllMailRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.MailData mail_list = 14;
     */
    mailList: MailData[];
    /**
     * @generated from protobuf field: optional bool is_collected = 1;
     */
    isCollected?: boolean;
    /**
     * @generated from protobuf field: optional bool is_truncated = 2;
     */
    isTruncated?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.GetAllMailRsp.CmdId
 */
export enum GetAllMailRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1475;
     */
    CMD_ID = 1475,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChangeMailStarNotify
 */
export interface ChangeMailStarNotify {
    /**
     * @generated from protobuf field: optional bool is_star = 14;
     */
    isStar?: boolean;
    /**
     * @generated from protobuf field: repeated uint32 mail_id_list = 2;
     */
    mailIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeMailStarNotify.CmdId
 */
export enum ChangeMailStarNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1448;
     */
    CMD_ID = 1448,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAllMailNotify
 */
export interface GetAllMailNotify {
    /**
     * @generated from protobuf field: optional bool is_collected = 13;
     */
    isCollected?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.GetAllMailNotify.CmdId
 */
export enum GetAllMailNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1497;
     */
    CMD_ID = 1497,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAllMailResultNotify
 */
export interface GetAllMailResultNotify {
    /**
     * @generated from protobuf field: optional string transaction = 9;
     */
    transaction?: string;
    /**
     * @generated from protobuf field: repeated com.midnights.game.MailData mail_list = 5;
     */
    mailList: MailData[];
    /**
     * @generated from protobuf field: optional uint32 page_index = 11;
     */
    pageIndex?: number;
    /**
     * @generated from protobuf field: optional uint32 total_page_count = 4;
     */
    totalPageCount?: number;
    /**
     * @generated from protobuf field: optional bool is_collected = 7;
     */
    isCollected?: boolean;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetAllMailResultNotify.CmdId
 */
export enum GetAllMailResultNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1481;
     */
    CMD_ID = 1481,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.AuthkeySignType
 */
export enum AuthkeySignType {
    /**
     * @generated from protobuf enum value: AUTHKEY_SIGN_TYPE_NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: AUTHKEY_SIGN_TYPE_DEFAULT = 1;
     */
    DEFAULT = 1,
    /**
     * @generated from protobuf enum value: AUTHKEY_SIGN_TYPE_RSA = 2;
     */
    RSA = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class MailChangeNotify$Type extends MessageType<MailChangeNotify> {
    constructor() {
        super("com.midnights.game.MailChangeNotify", [
            { no: 14, name: "mail_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => MailData },
            { no: 8, name: "del_mail_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MailChangeNotify>): MailChangeNotify {
        const message = { mailList: [], delMailIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MailChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MailChangeNotify): MailChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.MailData mail_list */ 14:
                    message.mailList.push(MailData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated uint32 del_mail_id_list */ 8:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.delMailIdList.push(reader.uint32());
                    else
                        message.delMailIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MailChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.MailData mail_list = 14; */
        for (let i = 0; i < message.mailList.length; i++)
            MailData.internalBinaryWrite(message.mailList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint32 del_mail_id_list = 8; */
        for (let i = 0; i < message.delMailIdList.length; i++)
            writer.tag(8, WireType.Varint).uint32(message.delMailIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MailChangeNotify
 */
export const MailChangeNotify = new MailChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReadMailNotify$Type extends MessageType<ReadMailNotify> {
    constructor() {
        super("com.midnights.game.ReadMailNotify", [
            { no: 2, name: "mail_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ReadMailNotify>): ReadMailNotify {
        const message = { mailIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReadMailNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReadMailNotify): ReadMailNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 mail_id_list */ 2:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.mailIdList.push(reader.uint32());
                    else
                        message.mailIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReadMailNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 mail_id_list = 2; */
        for (let i = 0; i < message.mailIdList.length; i++)
            writer.tag(2, WireType.Varint).uint32(message.mailIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReadMailNotify
 */
export const ReadMailNotify = new ReadMailNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetMailItemReq$Type extends MessageType<GetMailItemReq> {
    constructor() {
        super("com.midnights.game.GetMailItemReq", [
            { no: 6, name: "mail_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetMailItemReq>): GetMailItemReq {
        const message = { mailIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetMailItemReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetMailItemReq): GetMailItemReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 mail_id_list */ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.mailIdList.push(reader.uint32());
                    else
                        message.mailIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetMailItemReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 mail_id_list = 6; */
        for (let i = 0; i < message.mailIdList.length; i++)
            writer.tag(6, WireType.Varint).uint32(message.mailIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetMailItemReq
 */
export const GetMailItemReq = new GetMailItemReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetMailItemRsp$Type extends MessageType<GetMailItemRsp> {
    constructor() {
        super("com.midnights.game.GetMailItemRsp", [
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "mail_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => EquipParam }
        ]);
    }
    create(value?: PartialMessage<GetMailItemRsp>): GetMailItemRsp {
        const message = { mailIdList: [], itemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetMailItemRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetMailItemRsp): GetMailItemRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 mail_id_list */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.mailIdList.push(reader.uint32());
                    else
                        message.mailIdList.push(reader.uint32());
                    break;
                case /* repeated com.midnights.game.EquipParam item_list */ 2:
                    message.itemList.push(EquipParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetMailItemRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        /* repeated uint32 mail_id_list = 3; */
        for (let i = 0; i < message.mailIdList.length; i++)
            writer.tag(3, WireType.Varint).uint32(message.mailIdList[i]);
        /* repeated com.midnights.game.EquipParam item_list = 2; */
        for (let i = 0; i < message.itemList.length; i++)
            EquipParam.internalBinaryWrite(message.itemList[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetMailItemRsp
 */
export const GetMailItemRsp = new GetMailItemRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelMailReq$Type extends MessageType<DelMailReq> {
    constructor() {
        super("com.midnights.game.DelMailReq", [
            { no: 12, name: "mail_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DelMailReq>): DelMailReq {
        const message = { mailIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DelMailReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DelMailReq): DelMailReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 mail_id_list */ 12:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.mailIdList.push(reader.uint32());
                    else
                        message.mailIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DelMailReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 mail_id_list = 12; */
        for (let i = 0; i < message.mailIdList.length; i++)
            writer.tag(12, WireType.Varint).uint32(message.mailIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DelMailReq
 */
export const DelMailReq = new DelMailReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelMailRsp$Type extends MessageType<DelMailRsp> {
    constructor() {
        super("com.midnights.game.DelMailRsp", [
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "mail_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DelMailRsp>): DelMailRsp {
        const message = { mailIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DelMailRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DelMailRsp): DelMailRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 mail_id_list */ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.mailIdList.push(reader.uint32());
                    else
                        message.mailIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DelMailRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        /* repeated uint32 mail_id_list = 5; */
        for (let i = 0; i < message.mailIdList.length; i++)
            writer.tag(5, WireType.Varint).uint32(message.mailIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DelMailRsp
 */
export const DelMailRsp = new DelMailRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAuthkeyReq$Type extends MessageType<GetAuthkeyReq> {
    constructor() {
        super("com.midnights.game.GetAuthkeyReq", [
            { no: 14, name: "auth_appid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "sign_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "authkey_ver", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetAuthkeyReq>): GetAuthkeyReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAuthkeyReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAuthkeyReq): GetAuthkeyReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string auth_appid */ 14:
                    message.authAppid = reader.string();
                    break;
                case /* optional uint32 sign_type */ 7:
                    message.signType = reader.uint32();
                    break;
                case /* optional uint32 authkey_ver */ 13:
                    message.authkeyVer = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetAuthkeyReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string auth_appid = 14; */
        if (message.authAppid !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.authAppid);
        /* optional uint32 sign_type = 7; */
        if (message.signType !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.signType);
        /* optional uint32 authkey_ver = 13; */
        if (message.authkeyVer !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.authkeyVer);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAuthkeyReq
 */
export const GetAuthkeyReq = new GetAuthkeyReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAuthkeyRsp$Type extends MessageType<GetAuthkeyRsp> {
    constructor() {
        super("com.midnights.game.GetAuthkeyRsp", [
            { no: 4, name: "auth_appid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "sign_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "authkey_ver", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "game_biz", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "authkey", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<GetAuthkeyRsp>): GetAuthkeyRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAuthkeyRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAuthkeyRsp): GetAuthkeyRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string auth_appid */ 4:
                    message.authAppid = reader.string();
                    break;
                case /* optional uint32 sign_type */ 15:
                    message.signType = reader.uint32();
                    break;
                case /* optional int32 retcode */ 6:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 authkey_ver */ 9:
                    message.authkeyVer = reader.uint32();
                    break;
                case /* optional string game_biz */ 11:
                    message.gameBiz = reader.string();
                    break;
                case /* optional string authkey */ 3:
                    message.authkey = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetAuthkeyRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string auth_appid = 4; */
        if (message.authAppid !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.authAppid);
        /* optional uint32 sign_type = 15; */
        if (message.signType !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.signType);
        /* optional int32 retcode = 6; */
        if (message.retcode !== undefined)
            writer.tag(6, WireType.Varint).int32(message.retcode);
        /* optional uint32 authkey_ver = 9; */
        if (message.authkeyVer !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.authkeyVer);
        /* optional string game_biz = 11; */
        if (message.gameBiz !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.gameBiz);
        /* optional string authkey = 3; */
        if (message.authkey !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.authkey);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAuthkeyRsp
 */
export const GetAuthkeyRsp = new GetAuthkeyRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ClientNewMailNotify$Type extends MessageType<ClientNewMailNotify> {
    constructor() {
        super("com.midnights.game.ClientNewMailNotify", [
            { no: 7, name: "not_read_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "not_got_attachment_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ClientNewMailNotify>): ClientNewMailNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ClientNewMailNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ClientNewMailNotify): ClientNewMailNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 not_read_num */ 7:
                    message.notReadNum = reader.uint32();
                    break;
                case /* optional uint32 not_got_attachment_num */ 2:
                    message.notGotAttachmentNum = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ClientNewMailNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 not_read_num = 7; */
        if (message.notReadNum !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.notReadNum);
        /* optional uint32 not_got_attachment_num = 2; */
        if (message.notGotAttachmentNum !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.notGotAttachmentNum);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ClientNewMailNotify
 */
export const ClientNewMailNotify = new ClientNewMailNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAllMailReq$Type extends MessageType<GetAllMailReq> {
    constructor() {
        super("com.midnights.game.GetAllMailReq", [
            { no: 7, name: "is_collected", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetAllMailReq>): GetAllMailReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAllMailReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAllMailReq): GetAllMailReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_collected */ 7:
                    message.isCollected = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetAllMailReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_collected = 7; */
        if (message.isCollected !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isCollected);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAllMailReq
 */
export const GetAllMailReq = new GetAllMailReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAllMailRsp$Type extends MessageType<GetAllMailRsp> {
    constructor() {
        super("com.midnights.game.GetAllMailRsp", [
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "mail_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => MailData },
            { no: 1, name: "is_collected", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "is_truncated", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetAllMailRsp>): GetAllMailRsp {
        const message = { mailList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAllMailRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAllMailRsp): GetAllMailRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.MailData mail_list */ 14:
                    message.mailList.push(MailData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional bool is_collected */ 1:
                    message.isCollected = reader.bool();
                    break;
                case /* optional bool is_truncated */ 2:
                    message.isTruncated = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetAllMailRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.MailData mail_list = 14; */
        for (let i = 0; i < message.mailList.length; i++)
            MailData.internalBinaryWrite(message.mailList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_collected = 1; */
        if (message.isCollected !== undefined)
            writer.tag(1, WireType.Varint).bool(message.isCollected);
        /* optional bool is_truncated = 2; */
        if (message.isTruncated !== undefined)
            writer.tag(2, WireType.Varint).bool(message.isTruncated);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAllMailRsp
 */
export const GetAllMailRsp = new GetAllMailRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeMailStarNotify$Type extends MessageType<ChangeMailStarNotify> {
    constructor() {
        super("com.midnights.game.ChangeMailStarNotify", [
            { no: 14, name: "is_star", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "mail_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeMailStarNotify>): ChangeMailStarNotify {
        const message = { mailIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeMailStarNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeMailStarNotify): ChangeMailStarNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_star */ 14:
                    message.isStar = reader.bool();
                    break;
                case /* repeated uint32 mail_id_list */ 2:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.mailIdList.push(reader.uint32());
                    else
                        message.mailIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeMailStarNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_star = 14; */
        if (message.isStar !== undefined)
            writer.tag(14, WireType.Varint).bool(message.isStar);
        /* repeated uint32 mail_id_list = 2; */
        for (let i = 0; i < message.mailIdList.length; i++)
            writer.tag(2, WireType.Varint).uint32(message.mailIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeMailStarNotify
 */
export const ChangeMailStarNotify = new ChangeMailStarNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAllMailNotify$Type extends MessageType<GetAllMailNotify> {
    constructor() {
        super("com.midnights.game.GetAllMailNotify", [
            { no: 13, name: "is_collected", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetAllMailNotify>): GetAllMailNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAllMailNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAllMailNotify): GetAllMailNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_collected */ 13:
                    message.isCollected = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetAllMailNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_collected = 13; */
        if (message.isCollected !== undefined)
            writer.tag(13, WireType.Varint).bool(message.isCollected);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAllMailNotify
 */
export const GetAllMailNotify = new GetAllMailNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAllMailResultNotify$Type extends MessageType<GetAllMailResultNotify> {
    constructor() {
        super("com.midnights.game.GetAllMailResultNotify", [
            { no: 9, name: "transaction", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "mail_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => MailData },
            { no: 11, name: "page_index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "total_page_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "is_collected", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetAllMailResultNotify>): GetAllMailResultNotify {
        const message = { mailList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAllMailResultNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAllMailResultNotify): GetAllMailResultNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string transaction */ 9:
                    message.transaction = reader.string();
                    break;
                case /* repeated com.midnights.game.MailData mail_list */ 5:
                    message.mailList.push(MailData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 page_index */ 11:
                    message.pageIndex = reader.uint32();
                    break;
                case /* optional uint32 total_page_count */ 4:
                    message.totalPageCount = reader.uint32();
                    break;
                case /* optional bool is_collected */ 7:
                    message.isCollected = reader.bool();
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetAllMailResultNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string transaction = 9; */
        if (message.transaction !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.transaction);
        /* repeated com.midnights.game.MailData mail_list = 5; */
        for (let i = 0; i < message.mailList.length; i++)
            MailData.internalBinaryWrite(message.mailList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 page_index = 11; */
        if (message.pageIndex !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.pageIndex);
        /* optional uint32 total_page_count = 4; */
        if (message.totalPageCount !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.totalPageCount);
        /* optional bool is_collected = 7; */
        if (message.isCollected !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isCollected);
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAllMailResultNotify
 */
export const GetAllMailResultNotify = new GetAllMailResultNotify$Type();
