/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: DoGachaReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class DoGachaReq extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        gacha_times?: number;
        gacha_schedule_id?: number;
        gacha_type?: number;
        gacha_random?: number;
        gacha_tag?: string;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("gacha_times" in data && data.gacha_times != undefined) {
                this.gacha_times = data.gacha_times;
            }
            if ("gacha_schedule_id" in data && data.gacha_schedule_id != undefined) {
                this.gacha_schedule_id = data.gacha_schedule_id;
            }
            if ("gacha_type" in data && data.gacha_type != undefined) {
                this.gacha_type = data.gacha_type;
            }
            if ("gacha_random" in data && data.gacha_random != undefined) {
                this.gacha_random = data.gacha_random;
            }
            if ("gacha_tag" in data && data.gacha_tag != undefined) {
                this.gacha_tag = data.gacha_tag;
            }
        }
    }
    get gacha_times() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;
    }
    set gacha_times(value: number) {
        pb_1.Message.setField(this, 10, value);
    }
    get gacha_schedule_id() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
    }
    set gacha_schedule_id(value: number) {
        pb_1.Message.setField(this, 7, value);
    }
    get gacha_type() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0) as number;
    }
    set gacha_type(value: number) {
        pb_1.Message.setField(this, 14, value);
    }
    get gacha_random() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set gacha_random(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    get gacha_tag() {
        return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
    }
    set gacha_tag(value: string) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        gacha_times?: number;
        gacha_schedule_id?: number;
        gacha_type?: number;
        gacha_random?: number;
        gacha_tag?: string;
    }): DoGachaReq {
        const message = new DoGachaReq({});
        if (data.gacha_times != null) {
            message.gacha_times = data.gacha_times;
        }
        if (data.gacha_schedule_id != null) {
            message.gacha_schedule_id = data.gacha_schedule_id;
        }
        if (data.gacha_type != null) {
            message.gacha_type = data.gacha_type;
        }
        if (data.gacha_random != null) {
            message.gacha_random = data.gacha_random;
        }
        if (data.gacha_tag != null) {
            message.gacha_tag = data.gacha_tag;
        }
        return message;
    }
    toObject() {
        const data: {
            gacha_times?: number;
            gacha_schedule_id?: number;
            gacha_type?: number;
            gacha_random?: number;
            gacha_tag?: string;
        } = {};
        if (this.gacha_times != null) {
            data.gacha_times = this.gacha_times;
        }
        if (this.gacha_schedule_id != null) {
            data.gacha_schedule_id = this.gacha_schedule_id;
        }
        if (this.gacha_type != null) {
            data.gacha_type = this.gacha_type;
        }
        if (this.gacha_random != null) {
            data.gacha_random = this.gacha_random;
        }
        if (this.gacha_tag != null) {
            data.gacha_tag = this.gacha_tag;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.gacha_times != 0)
            writer.writeUint32(10, this.gacha_times);
        if (this.gacha_schedule_id != 0)
            writer.writeUint32(7, this.gacha_schedule_id);
        if (this.gacha_type != 0)
            writer.writeUint32(14, this.gacha_type);
        if (this.gacha_random != 0)
            writer.writeUint32(13, this.gacha_random);
        if (this.gacha_tag.length)
            writer.writeString(4, this.gacha_tag);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DoGachaReq {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DoGachaReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 10:
                    message.gacha_times = reader.readUint32();
                    break;
                case 7:
                    message.gacha_schedule_id = reader.readUint32();
                    break;
                case 14:
                    message.gacha_type = reader.readUint32();
                    break;
                case 13:
                    message.gacha_random = reader.readUint32();
                    break;
                case 4:
                    message.gacha_tag = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): DoGachaReq {
        return DoGachaReq.deserialize(bytes);
    }
}
