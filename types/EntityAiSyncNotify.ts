/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EntityAiSyncNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./AiSyncInfo";
import * as pb_1 from "google-protobuf";
export class EntityAiSyncNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        local_avatar_alerted_monster_list?: number[];
        info_list?: dependency_1.AiSyncInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [15, 1], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("local_avatar_alerted_monster_list" in data && data.local_avatar_alerted_monster_list != undefined) {
                this.local_avatar_alerted_monster_list = data.local_avatar_alerted_monster_list;
            }
            if ("info_list" in data && data.info_list != undefined) {
                this.info_list = data.info_list;
            }
        }
    }
    get local_avatar_alerted_monster_list() {
        return pb_1.Message.getFieldWithDefault(this, 15, []) as number[];
    }
    set local_avatar_alerted_monster_list(value: number[]) {
        pb_1.Message.setField(this, 15, value);
    }
    get info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.AiSyncInfo, 1) as dependency_1.AiSyncInfo[];
    }
    set info_list(value: dependency_1.AiSyncInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    static fromObject(data: {
        local_avatar_alerted_monster_list?: number[];
        info_list?: ReturnType<typeof dependency_1.AiSyncInfo.prototype.toObject>[];
    }): EntityAiSyncNotify {
        const message = new EntityAiSyncNotify({});
        if (data.local_avatar_alerted_monster_list != null) {
            message.local_avatar_alerted_monster_list = data.local_avatar_alerted_monster_list;
        }
        if (data.info_list != null) {
            message.info_list = data.info_list.map(item => dependency_1.AiSyncInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            local_avatar_alerted_monster_list?: number[];
            info_list?: ReturnType<typeof dependency_1.AiSyncInfo.prototype.toObject>[];
        } = {};
        if (this.local_avatar_alerted_monster_list != null) {
            data.local_avatar_alerted_monster_list = this.local_avatar_alerted_monster_list;
        }
        if (this.info_list != null) {
            data.info_list = this.info_list.map((item: dependency_1.AiSyncInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.local_avatar_alerted_monster_list.length)
            writer.writePackedUint32(15, this.local_avatar_alerted_monster_list);
        if (this.info_list.length)
            writer.writeRepeatedMessage(1, this.info_list, (item: dependency_1.AiSyncInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EntityAiSyncNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EntityAiSyncNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 15:
                    message.local_avatar_alerted_monster_list = reader.readPackedUint32();
                    break;
                case 1:
                    reader.readMessage(message.info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.AiSyncInfo.deserialize(reader), dependency_1.AiSyncInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): EntityAiSyncNotify {
        return EntityAiSyncNotify.deserialize(bytes);
    }
}
