/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: InBattleMechanicusPlayerInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./InBattleMechanicusBuildingInfo";
import * as pb_1 from "google-protobuf";
export class InBattleMechanicusPlayerInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        pick_card_id?: number;
        uid?: number;
        building_list?: dependency_1.InBattleMechanicusBuildingInfo[];
        is_card_confirmed?: boolean;
        building_points?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("pick_card_id" in data && data.pick_card_id != undefined) {
                this.pick_card_id = data.pick_card_id;
            }
            if ("uid" in data && data.uid != undefined) {
                this.uid = data.uid;
            }
            if ("building_list" in data && data.building_list != undefined) {
                this.building_list = data.building_list;
            }
            if ("is_card_confirmed" in data && data.is_card_confirmed != undefined) {
                this.is_card_confirmed = data.is_card_confirmed;
            }
            if ("building_points" in data && data.building_points != undefined) {
                this.building_points = data.building_points;
            }
        }
    }
    get pick_card_id() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set pick_card_id(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get uid() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0) as number;
    }
    set uid(value: number) {
        pb_1.Message.setField(this, 14, value);
    }
    get building_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.InBattleMechanicusBuildingInfo, 4) as dependency_1.InBattleMechanicusBuildingInfo[];
    }
    set building_list(value: dependency_1.InBattleMechanicusBuildingInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 4, value);
    }
    get is_card_confirmed() {
        return pb_1.Message.getFieldWithDefault(this, 13, false) as boolean;
    }
    set is_card_confirmed(value: boolean) {
        pb_1.Message.setField(this, 13, value);
    }
    get building_points() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set building_points(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    static fromObject(data: {
        pick_card_id?: number;
        uid?: number;
        building_list?: ReturnType<typeof dependency_1.InBattleMechanicusBuildingInfo.prototype.toObject>[];
        is_card_confirmed?: boolean;
        building_points?: number;
    }): InBattleMechanicusPlayerInfo {
        const message = new InBattleMechanicusPlayerInfo({});
        if (data.pick_card_id != null) {
            message.pick_card_id = data.pick_card_id;
        }
        if (data.uid != null) {
            message.uid = data.uid;
        }
        if (data.building_list != null) {
            message.building_list = data.building_list.map(item => dependency_1.InBattleMechanicusBuildingInfo.fromObject(item));
        }
        if (data.is_card_confirmed != null) {
            message.is_card_confirmed = data.is_card_confirmed;
        }
        if (data.building_points != null) {
            message.building_points = data.building_points;
        }
        return message;
    }
    toObject() {
        const data: {
            pick_card_id?: number;
            uid?: number;
            building_list?: ReturnType<typeof dependency_1.InBattleMechanicusBuildingInfo.prototype.toObject>[];
            is_card_confirmed?: boolean;
            building_points?: number;
        } = {};
        if (this.pick_card_id != null) {
            data.pick_card_id = this.pick_card_id;
        }
        if (this.uid != null) {
            data.uid = this.uid;
        }
        if (this.building_list != null) {
            data.building_list = this.building_list.map((item: dependency_1.InBattleMechanicusBuildingInfo) => item.toObject());
        }
        if (this.is_card_confirmed != null) {
            data.is_card_confirmed = this.is_card_confirmed;
        }
        if (this.building_points != null) {
            data.building_points = this.building_points;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.pick_card_id != 0)
            writer.writeUint32(5, this.pick_card_id);
        if (this.uid != 0)
            writer.writeUint32(14, this.uid);
        if (this.building_list.length)
            writer.writeRepeatedMessage(4, this.building_list, (item: dependency_1.InBattleMechanicusBuildingInfo) => item.serialize(writer));
        if (this.is_card_confirmed != false)
            writer.writeBool(13, this.is_card_confirmed);
        if (this.building_points != 0)
            writer.writeUint32(3, this.building_points);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): InBattleMechanicusPlayerInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new InBattleMechanicusPlayerInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 5:
                    message.pick_card_id = reader.readUint32();
                    break;
                case 14:
                    message.uid = reader.readUint32();
                    break;
                case 4:
                    reader.readMessage(message.building_list, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_1.InBattleMechanicusBuildingInfo.deserialize(reader), dependency_1.InBattleMechanicusBuildingInfo));
                    break;
                case 13:
                    message.is_card_confirmed = reader.readBool();
                    break;
                case 3:
                    message.building_points = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): InBattleMechanicusPlayerInfo {
        return InBattleMechanicusPlayerInfo.deserialize(bytes);
    }
}
