/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: LunaRiteHintPoint.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./LunaRiteHintPointType";
import * as dependency_2 from "./Vector";
import * as pb_1 from "google-protobuf";
export class LunaRiteHintPoint extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        area_id?: number;
        index?: number;
        type?: dependency_1.LunaRiteHintPointType;
        pos?: dependency_2.Vector;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("area_id" in data && data.area_id != undefined) {
                this.area_id = data.area_id;
            }
            if ("index" in data && data.index != undefined) {
                this.index = data.index;
            }
            if ("type" in data && data.type != undefined) {
                this.type = data.type;
            }
            if ("pos" in data && data.pos != undefined) {
                this.pos = data.pos;
            }
        }
    }
    get area_id() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0) as number;
    }
    set area_id(value: number) {
        pb_1.Message.setField(this, 11, value);
    }
    get index() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
    }
    set index(value: number) {
        pb_1.Message.setField(this, 7, value);
    }
    get type() {
        return pb_1.Message.getFieldWithDefault(this, 2, dependency_1.LunaRiteHintPointType.LUNA_RITE_HINT_POINT_TYPE_NONE) as dependency_1.LunaRiteHintPointType;
    }
    set type(value: dependency_1.LunaRiteHintPointType) {
        pb_1.Message.setField(this, 2, value);
    }
    get pos() {
        return pb_1.Message.getWrapperField(this, dependency_2.Vector, 10) as dependency_2.Vector;
    }
    set pos(value: dependency_2.Vector) {
        pb_1.Message.setWrapperField(this, 10, value);
    }
    get has_pos() {
        return pb_1.Message.getField(this, 10) != null;
    }
    static fromObject(data: {
        area_id?: number;
        index?: number;
        type?: dependency_1.LunaRiteHintPointType;
        pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
    }): LunaRiteHintPoint {
        const message = new LunaRiteHintPoint({});
        if (data.area_id != null) {
            message.area_id = data.area_id;
        }
        if (data.index != null) {
            message.index = data.index;
        }
        if (data.type != null) {
            message.type = data.type;
        }
        if (data.pos != null) {
            message.pos = dependency_2.Vector.fromObject(data.pos);
        }
        return message;
    }
    toObject() {
        const data: {
            area_id?: number;
            index?: number;
            type?: dependency_1.LunaRiteHintPointType;
            pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
        } = {};
        if (this.area_id != null) {
            data.area_id = this.area_id;
        }
        if (this.index != null) {
            data.index = this.index;
        }
        if (this.type != null) {
            data.type = this.type;
        }
        if (this.pos != null) {
            data.pos = this.pos.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.area_id != 0)
            writer.writeUint32(11, this.area_id);
        if (this.index != 0)
            writer.writeUint32(7, this.index);
        if (this.type != dependency_1.LunaRiteHintPointType.LUNA_RITE_HINT_POINT_TYPE_NONE)
            writer.writeEnum(2, this.type);
        if (this.has_pos)
            writer.writeMessage(10, this.pos, () => this.pos.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LunaRiteHintPoint {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LunaRiteHintPoint();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 11:
                    message.area_id = reader.readUint32();
                    break;
                case 7:
                    message.index = reader.readUint32();
                    break;
                case 2:
                    message.type = reader.readEnum();
                    break;
                case 10:
                    reader.readMessage(message.pos, () => message.pos = dependency_2.Vector.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): LunaRiteHintPoint {
        return LunaRiteHintPoint.deserialize(bytes);
    }
}
