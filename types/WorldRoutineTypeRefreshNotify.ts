/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: WorldRoutineTypeRefreshNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./WorldRoutineTypeInfo";
import * as pb_1 from "google-protobuf";
export class WorldRoutineTypeRefreshNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        world_routine_type?: dependency_1.WorldRoutineTypeInfo;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("world_routine_type" in data && data.world_routine_type != undefined) {
                this.world_routine_type = data.world_routine_type;
            }
        }
    }
    get world_routine_type() {
        return pb_1.Message.getWrapperField(this, dependency_1.WorldRoutineTypeInfo, 7) as dependency_1.WorldRoutineTypeInfo;
    }
    set world_routine_type(value: dependency_1.WorldRoutineTypeInfo) {
        pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_world_routine_type() {
        return pb_1.Message.getField(this, 7) != null;
    }
    static fromObject(data: {
        world_routine_type?: ReturnType<typeof dependency_1.WorldRoutineTypeInfo.prototype.toObject>;
    }): WorldRoutineTypeRefreshNotify {
        const message = new WorldRoutineTypeRefreshNotify({});
        if (data.world_routine_type != null) {
            message.world_routine_type = dependency_1.WorldRoutineTypeInfo.fromObject(data.world_routine_type);
        }
        return message;
    }
    toObject() {
        const data: {
            world_routine_type?: ReturnType<typeof dependency_1.WorldRoutineTypeInfo.prototype.toObject>;
        } = {};
        if (this.world_routine_type != null) {
            data.world_routine_type = this.world_routine_type.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_world_routine_type)
            writer.writeMessage(7, this.world_routine_type, () => this.world_routine_type.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): WorldRoutineTypeRefreshNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new WorldRoutineTypeRefreshNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 7:
                    reader.readMessage(message.world_routine_type, () => message.world_routine_type = dependency_1.WorldRoutineTypeInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): WorldRoutineTypeRefreshNotify {
        return WorldRoutineTypeRefreshNotify.deserialize(bytes);
    }
}
