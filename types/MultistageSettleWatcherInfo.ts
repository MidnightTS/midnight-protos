/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: MultistageSettleWatcherInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class MultistageSettleWatcherInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        total_progress?: number;
        cur_progress?: number;
        watcher_id?: number;
        is_inverse?: boolean;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("total_progress" in data && data.total_progress != undefined) {
                this.total_progress = data.total_progress;
            }
            if ("cur_progress" in data && data.cur_progress != undefined) {
                this.cur_progress = data.cur_progress;
            }
            if ("watcher_id" in data && data.watcher_id != undefined) {
                this.watcher_id = data.watcher_id;
            }
            if ("is_inverse" in data && data.is_inverse != undefined) {
                this.is_inverse = data.is_inverse;
            }
        }
    }
    get total_progress() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set total_progress(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    get cur_progress() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set cur_progress(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get watcher_id() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
    }
    set watcher_id(value: number) {
        pb_1.Message.setField(this, 7, value);
    }
    get is_inverse() {
        return pb_1.Message.getFieldWithDefault(this, 12, false) as boolean;
    }
    set is_inverse(value: boolean) {
        pb_1.Message.setField(this, 12, value);
    }
    static fromObject(data: {
        total_progress?: number;
        cur_progress?: number;
        watcher_id?: number;
        is_inverse?: boolean;
    }): MultistageSettleWatcherInfo {
        const message = new MultistageSettleWatcherInfo({});
        if (data.total_progress != null) {
            message.total_progress = data.total_progress;
        }
        if (data.cur_progress != null) {
            message.cur_progress = data.cur_progress;
        }
        if (data.watcher_id != null) {
            message.watcher_id = data.watcher_id;
        }
        if (data.is_inverse != null) {
            message.is_inverse = data.is_inverse;
        }
        return message;
    }
    toObject() {
        const data: {
            total_progress?: number;
            cur_progress?: number;
            watcher_id?: number;
            is_inverse?: boolean;
        } = {};
        if (this.total_progress != null) {
            data.total_progress = this.total_progress;
        }
        if (this.cur_progress != null) {
            data.cur_progress = this.cur_progress;
        }
        if (this.watcher_id != null) {
            data.watcher_id = this.watcher_id;
        }
        if (this.is_inverse != null) {
            data.is_inverse = this.is_inverse;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.total_progress != 0)
            writer.writeUint32(13, this.total_progress);
        if (this.cur_progress != 0)
            writer.writeUint32(5, this.cur_progress);
        if (this.watcher_id != 0)
            writer.writeUint32(7, this.watcher_id);
        if (this.is_inverse != false)
            writer.writeBool(12, this.is_inverse);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MultistageSettleWatcherInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MultistageSettleWatcherInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 13:
                    message.total_progress = reader.readUint32();
                    break;
                case 5:
                    message.cur_progress = reader.readUint32();
                    break;
                case 7:
                    message.watcher_id = reader.readUint32();
                    break;
                case 12:
                    message.is_inverse = reader.readBool();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): MultistageSettleWatcherInfo {
        return MultistageSettleWatcherInfo.deserialize(bytes);
    }
}
