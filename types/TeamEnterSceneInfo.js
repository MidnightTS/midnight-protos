"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _TeamEnterSceneInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.TeamEnterSceneInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: TeamEnterSceneInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./AbilityControlBlock");
const dependency_2 = require("./AbilitySyncStateInfo");
const pb_1 = require("google-protobuf");
class TeamEnterSceneInfo extends pb_1.Message {
    constructor(data) {
        super();
        _TeamEnterSceneInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _TeamEnterSceneInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("ability_control_block" in data && data.ability_control_block != undefined) {
                this.ability_control_block = data.ability_control_block;
            }
            if ("team_ability_info" in data && data.team_ability_info != undefined) {
                this.team_ability_info = data.team_ability_info;
            }
            if ("team_entity_id" in data && data.team_entity_id != undefined) {
                this.team_entity_id = data.team_entity_id;
            }
        }
    }
    get ability_control_block() {
        return pb_1.Message.getWrapperField(this, dependency_1.AbilityControlBlock, 7);
    }
    set ability_control_block(value) {
        pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_ability_control_block() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get team_ability_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.AbilitySyncStateInfo, 10);
    }
    set team_ability_info(value) {
        pb_1.Message.setWrapperField(this, 10, value);
    }
    get has_team_ability_info() {
        return pb_1.Message.getField(this, 10) != null;
    }
    get team_entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set team_entity_id(value) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data) {
        const message = new TeamEnterSceneInfo({});
        if (data.ability_control_block != null) {
            message.ability_control_block = dependency_1.AbilityControlBlock.fromObject(data.ability_control_block);
        }
        if (data.team_ability_info != null) {
            message.team_ability_info = dependency_2.AbilitySyncStateInfo.fromObject(data.team_ability_info);
        }
        if (data.team_entity_id != null) {
            message.team_entity_id = data.team_entity_id;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.ability_control_block != null) {
            data.ability_control_block = this.ability_control_block.toObject();
        }
        if (this.team_ability_info != null) {
            data.team_ability_info = this.team_ability_info.toObject();
        }
        if (this.team_entity_id != null) {
            data.team_entity_id = this.team_entity_id;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_ability_control_block)
            writer.writeMessage(7, this.ability_control_block, () => this.ability_control_block.serialize(writer));
        if (this.has_team_ability_info)
            writer.writeMessage(10, this.team_ability_info, () => this.team_ability_info.serialize(writer));
        if (this.team_entity_id != 0)
            writer.writeUint32(15, this.team_entity_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TeamEnterSceneInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 7:
                    reader.readMessage(message.ability_control_block, () => message.ability_control_block = dependency_1.AbilityControlBlock.deserialize(reader));
                    break;
                case 10:
                    reader.readMessage(message.team_ability_info, () => message.team_ability_info = dependency_2.AbilitySyncStateInfo.deserialize(reader));
                    break;
                case 15:
                    message.team_entity_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return TeamEnterSceneInfo.deserialize(bytes);
    }
}
exports.TeamEnterSceneInfo = TeamEnterSceneInfo;
_TeamEnterSceneInfo_one_of_decls = new WeakMap();
