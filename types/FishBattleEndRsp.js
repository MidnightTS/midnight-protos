"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FishBattleEndRsp_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.FishBattleEndRsp = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: FishBattleEndRsp.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./FishBattleResult");
const dependency_2 = require("./ItemParam");
const pb_1 = require("google-protobuf");
class FishBattleEndRsp extends pb_1.Message {
    constructor(data) {
        super();
        _FishBattleEndRsp_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [11, 13, 9], __classPrivateFieldGet(this, _FishBattleEndRsp_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_got_reward" in data && data.is_got_reward != undefined) {
                this.is_got_reward = data.is_got_reward;
            }
            if ("reward_item_list" in data && data.reward_item_list != undefined) {
                this.reward_item_list = data.reward_item_list;
            }
            if ("talent_item_list" in data && data.talent_item_list != undefined) {
                this.talent_item_list = data.talent_item_list;
            }
            if ("drop_item_list" in data && data.drop_item_list != undefined) {
                this.drop_item_list = data.drop_item_list;
            }
            if ("retcode" in data && data.retcode != undefined) {
                this.retcode = data.retcode;
            }
            if ("no_reward_reason" in data && data.no_reward_reason != undefined) {
                this.no_reward_reason = data.no_reward_reason;
            }
            if ("battle_result" in data && data.battle_result != undefined) {
                this.battle_result = data.battle_result;
            }
        }
    }
    get is_got_reward() {
        return pb_1.Message.getFieldWithDefault(this, 10, false);
    }
    set is_got_reward(value) {
        pb_1.Message.setField(this, 10, value);
    }
    get reward_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.ItemParam, 11);
    }
    set reward_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 11, value);
    }
    get talent_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.ItemParam, 13);
    }
    set talent_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 13, value);
    }
    get drop_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.ItemParam, 9);
    }
    set drop_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 9, value);
    }
    get retcode() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set retcode(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get no_reward_reason() {
        return pb_1.Message.getFieldWithDefault(this, 14, FishBattleEndRsp.FishNoRewardReason.FISH_NO_REWARD_REASON_NONE);
    }
    set no_reward_reason(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get battle_result() {
        return pb_1.Message.getFieldWithDefault(this, 6, dependency_1.FishBattleResult.FISH_BATTLE_RESULT_NONE);
    }
    set battle_result(value) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data) {
        const message = new FishBattleEndRsp({});
        if (data.is_got_reward != null) {
            message.is_got_reward = data.is_got_reward;
        }
        if (data.reward_item_list != null) {
            message.reward_item_list = data.reward_item_list.map(item => dependency_2.ItemParam.fromObject(item));
        }
        if (data.talent_item_list != null) {
            message.talent_item_list = data.talent_item_list.map(item => dependency_2.ItemParam.fromObject(item));
        }
        if (data.drop_item_list != null) {
            message.drop_item_list = data.drop_item_list.map(item => dependency_2.ItemParam.fromObject(item));
        }
        if (data.retcode != null) {
            message.retcode = data.retcode;
        }
        if (data.no_reward_reason != null) {
            message.no_reward_reason = data.no_reward_reason;
        }
        if (data.battle_result != null) {
            message.battle_result = data.battle_result;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.is_got_reward != null) {
            data.is_got_reward = this.is_got_reward;
        }
        if (this.reward_item_list != null) {
            data.reward_item_list = this.reward_item_list.map((item) => item.toObject());
        }
        if (this.talent_item_list != null) {
            data.talent_item_list = this.talent_item_list.map((item) => item.toObject());
        }
        if (this.drop_item_list != null) {
            data.drop_item_list = this.drop_item_list.map((item) => item.toObject());
        }
        if (this.retcode != null) {
            data.retcode = this.retcode;
        }
        if (this.no_reward_reason != null) {
            data.no_reward_reason = this.no_reward_reason;
        }
        if (this.battle_result != null) {
            data.battle_result = this.battle_result;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_got_reward != false)
            writer.writeBool(10, this.is_got_reward);
        if (this.reward_item_list.length)
            writer.writeRepeatedMessage(11, this.reward_item_list, (item) => item.serialize(writer));
        if (this.talent_item_list.length)
            writer.writeRepeatedMessage(13, this.talent_item_list, (item) => item.serialize(writer));
        if (this.drop_item_list.length)
            writer.writeRepeatedMessage(9, this.drop_item_list, (item) => item.serialize(writer));
        if (this.retcode != 0)
            writer.writeInt32(7, this.retcode);
        if (this.no_reward_reason != FishBattleEndRsp.FishNoRewardReason.FISH_NO_REWARD_REASON_NONE)
            writer.writeEnum(14, this.no_reward_reason);
        if (this.battle_result != dependency_1.FishBattleResult.FISH_BATTLE_RESULT_NONE)
            writer.writeEnum(6, this.battle_result);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FishBattleEndRsp();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 10:
                    message.is_got_reward = reader.readBool();
                    break;
                case 11:
                    reader.readMessage(message.reward_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 11, dependency_2.ItemParam.deserialize(reader), dependency_2.ItemParam));
                    break;
                case 13:
                    reader.readMessage(message.talent_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 13, dependency_2.ItemParam.deserialize(reader), dependency_2.ItemParam));
                    break;
                case 9:
                    reader.readMessage(message.drop_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 9, dependency_2.ItemParam.deserialize(reader), dependency_2.ItemParam));
                    break;
                case 7:
                    message.retcode = reader.readInt32();
                    break;
                case 14:
                    message.no_reward_reason = reader.readEnum();
                    break;
                case 6:
                    message.battle_result = reader.readEnum();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return FishBattleEndRsp.deserialize(bytes);
    }
}
exports.FishBattleEndRsp = FishBattleEndRsp;
_FishBattleEndRsp_one_of_decls = new WeakMap();
(function (FishBattleEndRsp) {
    let FishNoRewardReason;
    (function (FishNoRewardReason) {
        FishNoRewardReason[FishNoRewardReason["FISH_NO_REWARD_REASON_NONE"] = 0] = "FISH_NO_REWARD_REASON_NONE";
        FishNoRewardReason[FishNoRewardReason["FISH_NO_REWARD_REASON_ACTIVITY_LIMIT"] = 1] = "FISH_NO_REWARD_REASON_ACTIVITY_LIMIT";
        FishNoRewardReason[FishNoRewardReason["FISH_NO_REWARD_REASON_BAG_LIMIT"] = 2] = "FISH_NO_REWARD_REASON_BAG_LIMIT";
        FishNoRewardReason[FishNoRewardReason["FISH_NO_REWARD_REASON_POOL_LIMIT"] = 3] = "FISH_NO_REWARD_REASON_POOL_LIMIT";
    })(FishNoRewardReason = FishBattleEndRsp.FishNoRewardReason || (FishBattleEndRsp.FishNoRewardReason = {}));
})(FishBattleEndRsp = exports.FishBattleEndRsp || (exports.FishBattleEndRsp = {}));
