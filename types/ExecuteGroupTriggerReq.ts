// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "ExecuteGroupTriggerReq.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * enum CmdId {
 *   option allow_alias = true;
 *   NONE = 0;
 *   CMD_ID = 263;
 *   ENET_CHANNEL_ID = 0;
 *   ENET_IS_RELIABLE = 1;
 *   IS_ALLOW_CLIENT = 1;
 * }
 *
 * @generated from protobuf message ExecuteGroupTriggerReq
 */
export interface ExecuteGroupTriggerReq {
    /**
     * @generated from protobuf field: uint32 source_entity_id = 7;
     */
    sourceEntityId: number;
    /**
     * @generated from protobuf field: int32 param3 = 6;
     */
    param3: number;
    /**
     * @generated from protobuf field: int32 param1 = 9;
     */
    param1: number;
    /**
     * @generated from protobuf field: string source_name = 8;
     */
    sourceName: string;
    /**
     * @generated from protobuf field: uint32 target_entity_id = 15;
     */
    targetEntityId: number;
    /**
     * @generated from protobuf field: int32 param2 = 4;
     */
    param2: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class ExecuteGroupTriggerReq$Type extends MessageType<ExecuteGroupTriggerReq> {
    constructor() {
        super("ExecuteGroupTriggerReq", [
            { no: 7, name: "source_entity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "param3", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "param1", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "source_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "target_entity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "param2", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ExecuteGroupTriggerReq>): ExecuteGroupTriggerReq {
        const message = { sourceEntityId: 0, param3: 0, param1: 0, sourceName: "", targetEntityId: 0, param2: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ExecuteGroupTriggerReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExecuteGroupTriggerReq): ExecuteGroupTriggerReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 source_entity_id */ 7:
                    message.sourceEntityId = reader.uint32();
                    break;
                case /* int32 param3 */ 6:
                    message.param3 = reader.int32();
                    break;
                case /* int32 param1 */ 9:
                    message.param1 = reader.int32();
                    break;
                case /* string source_name */ 8:
                    message.sourceName = reader.string();
                    break;
                case /* uint32 target_entity_id */ 15:
                    message.targetEntityId = reader.uint32();
                    break;
                case /* int32 param2 */ 4:
                    message.param2 = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ExecuteGroupTriggerReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 source_entity_id = 7; */
        if (message.sourceEntityId !== 0)
            writer.tag(7, WireType.Varint).uint32(message.sourceEntityId);
        /* int32 param3 = 6; */
        if (message.param3 !== 0)
            writer.tag(6, WireType.Varint).int32(message.param3);
        /* int32 param1 = 9; */
        if (message.param1 !== 0)
            writer.tag(9, WireType.Varint).int32(message.param1);
        /* string source_name = 8; */
        if (message.sourceName !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.sourceName);
        /* uint32 target_entity_id = 15; */
        if (message.targetEntityId !== 0)
            writer.tag(15, WireType.Varint).uint32(message.targetEntityId);
        /* int32 param2 = 4; */
        if (message.param2 !== 0)
            writer.tag(4, WireType.Varint).int32(message.param2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ExecuteGroupTriggerReq
 */
export const ExecuteGroupTriggerReq = new ExecuteGroupTriggerReq$Type();
