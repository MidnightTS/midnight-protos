/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: Unk2800_BPOJIIDEADD.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class Unk2800_BPOJIIDEADD extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        Unk2800_MMPELBBNFOD?: number;
        open_time?: number;
        Unk2800_MGPEODNKEEC?: number;
        level_id?: number;
        is_finished?: boolean;
        is_open?: boolean;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("Unk2800_MMPELBBNFOD" in data && data.Unk2800_MMPELBBNFOD != undefined) {
                this.Unk2800_MMPELBBNFOD = data.Unk2800_MMPELBBNFOD;
            }
            if ("open_time" in data && data.open_time != undefined) {
                this.open_time = data.open_time;
            }
            if ("Unk2800_MGPEODNKEEC" in data && data.Unk2800_MGPEODNKEEC != undefined) {
                this.Unk2800_MGPEODNKEEC = data.Unk2800_MGPEODNKEEC;
            }
            if ("level_id" in data && data.level_id != undefined) {
                this.level_id = data.level_id;
            }
            if ("is_finished" in data && data.is_finished != undefined) {
                this.is_finished = data.is_finished;
            }
            if ("is_open" in data && data.is_open != undefined) {
                this.is_open = data.is_open;
            }
        }
    }
    get Unk2800_MMPELBBNFOD() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
    }
    set Unk2800_MMPELBBNFOD(value: number) {
        pb_1.Message.setField(this, 8, value);
    }
    get open_time() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0) as number;
    }
    set open_time(value: number) {
        pb_1.Message.setField(this, 11, value);
    }
    get Unk2800_MGPEODNKEEC() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set Unk2800_MGPEODNKEEC(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get level_id() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set level_id(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get is_finished() {
        return pb_1.Message.getFieldWithDefault(this, 9, false) as boolean;
    }
    set is_finished(value: boolean) {
        pb_1.Message.setField(this, 9, value);
    }
    get is_open() {
        return pb_1.Message.getFieldWithDefault(this, 3, false) as boolean;
    }
    set is_open(value: boolean) {
        pb_1.Message.setField(this, 3, value);
    }
    static fromObject(data: {
        Unk2800_MMPELBBNFOD?: number;
        open_time?: number;
        Unk2800_MGPEODNKEEC?: number;
        level_id?: number;
        is_finished?: boolean;
        is_open?: boolean;
    }): Unk2800_BPOJIIDEADD {
        const message = new Unk2800_BPOJIIDEADD({});
        if (data.Unk2800_MMPELBBNFOD != null) {
            message.Unk2800_MMPELBBNFOD = data.Unk2800_MMPELBBNFOD;
        }
        if (data.open_time != null) {
            message.open_time = data.open_time;
        }
        if (data.Unk2800_MGPEODNKEEC != null) {
            message.Unk2800_MGPEODNKEEC = data.Unk2800_MGPEODNKEEC;
        }
        if (data.level_id != null) {
            message.level_id = data.level_id;
        }
        if (data.is_finished != null) {
            message.is_finished = data.is_finished;
        }
        if (data.is_open != null) {
            message.is_open = data.is_open;
        }
        return message;
    }
    toObject() {
        const data: {
            Unk2800_MMPELBBNFOD?: number;
            open_time?: number;
            Unk2800_MGPEODNKEEC?: number;
            level_id?: number;
            is_finished?: boolean;
            is_open?: boolean;
        } = {};
        if (this.Unk2800_MMPELBBNFOD != null) {
            data.Unk2800_MMPELBBNFOD = this.Unk2800_MMPELBBNFOD;
        }
        if (this.open_time != null) {
            data.open_time = this.open_time;
        }
        if (this.Unk2800_MGPEODNKEEC != null) {
            data.Unk2800_MGPEODNKEEC = this.Unk2800_MGPEODNKEEC;
        }
        if (this.level_id != null) {
            data.level_id = this.level_id;
        }
        if (this.is_finished != null) {
            data.is_finished = this.is_finished;
        }
        if (this.is_open != null) {
            data.is_open = this.is_open;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.Unk2800_MMPELBBNFOD != 0)
            writer.writeUint32(8, this.Unk2800_MMPELBBNFOD);
        if (this.open_time != 0)
            writer.writeUint32(11, this.open_time);
        if (this.Unk2800_MGPEODNKEEC != 0)
            writer.writeUint32(5, this.Unk2800_MGPEODNKEEC);
        if (this.level_id != 0)
            writer.writeUint32(12, this.level_id);
        if (this.is_finished != false)
            writer.writeBool(9, this.is_finished);
        if (this.is_open != false)
            writer.writeBool(3, this.is_open);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Unk2800_BPOJIIDEADD {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Unk2800_BPOJIIDEADD();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.Unk2800_MMPELBBNFOD = reader.readUint32();
                    break;
                case 11:
                    message.open_time = reader.readUint32();
                    break;
                case 5:
                    message.Unk2800_MGPEODNKEEC = reader.readUint32();
                    break;
                case 12:
                    message.level_id = reader.readUint32();
                    break;
                case 9:
                    message.is_finished = reader.readBool();
                    break;
                case 3:
                    message.is_open = reader.readBool();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): Unk2800_BPOJIIDEADD {
        return Unk2800_BPOJIIDEADD.deserialize(bytes);
    }
}
