"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SceneGalleryInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SceneGalleryInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneGalleryInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./GalleryStageType");
const dependency_2 = require("./SceneGalleryBalloonInfo");
const dependency_3 = require("./SceneGalleryBounceConjuringInfo");
const dependency_4 = require("./SceneGalleryBrokenFloorInfo");
const dependency_5 = require("./SceneGalleryBulletInfo");
const dependency_6 = require("./SceneGalleryBuoyantCombatInfo");
const dependency_7 = require("./SceneGalleryCrystalLinkInfo");
const dependency_8 = require("./SceneGalleryFallInfo");
const dependency_9 = require("./SceneGalleryFlowerInfo");
const dependency_10 = require("./SceneGalleryHandballInfo");
const dependency_11 = require("./SceneGalleryHideAndSeekInfo");
const dependency_12 = require("./SceneGalleryHomeBalloonInfo");
const dependency_13 = require("./SceneGalleryHomeSeekFurnitureInfo");
const dependency_14 = require("./SceneGalleryInstableSprayInfo");
const dependency_15 = require("./SceneGalleryIrodoriMasterInfo");
const dependency_16 = require("./SceneGalleryIslandPartyDownHillInfo");
const dependency_17 = require("./SceneGalleryIslandPartyRaftInfo");
const dependency_18 = require("./SceneGalleryIslandPartySailInfo");
const dependency_19 = require("./SceneGalleryLuminanceStoneChallengeInfo");
const dependency_20 = require("./SceneGalleryMuqadasPotionInfo");
const dependency_21 = require("./SceneGalleryProgressInfo");
const dependency_22 = require("./SceneGallerySalvageEscortInfoInfo");
const dependency_23 = require("./SceneGallerySalvagePreventInfo");
const dependency_24 = require("./SceneGallerySummerTimeV2BoatInfo");
const dependency_25 = require("./SceneGallerySumoInfo");
const dependency_26 = require("./SceneGalleryTreasureSeelieInfo");
const dependency_27 = require("./SceneGalleryVintageHuntingInfo");
const dependency_28 = require("./SceneGalleryWindFieldInfo");
const pb_1 = require("google-protobuf");
class SceneGalleryInfo extends pb_1.Message {
    constructor(data) {
        super();
        _SceneGalleryInfo_one_of_decls.set(this, [[14, 7, 8, 13, 10, 6, 1384, 708, 1997, 811, 1700, 759, 1034, 2004, 1953, 106, 1456, 462, 296, 1805, 1133, 1196, 865, 1525, 254, 1080]]);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("end_time" in data && data.end_time != undefined) {
                this.end_time = data.end_time;
            }
            if ("pre_start_end_time" in data && data.pre_start_end_time != undefined) {
                this.pre_start_end_time = data.pre_start_end_time;
            }
            if ("stage" in data && data.stage != undefined) {
                this.stage = data.stage;
            }
            if ("owner_uid" in data && data.owner_uid != undefined) {
                this.owner_uid = data.owner_uid;
            }
            if ("player_count" in data && data.player_count != undefined) {
                this.player_count = data.player_count;
            }
            if ("progress_info_list" in data && data.progress_info_list != undefined) {
                this.progress_info_list = data.progress_info_list;
            }
            if ("gallery_id" in data && data.gallery_id != undefined) {
                this.gallery_id = data.gallery_id;
            }
            if ("balloon_info" in data && data.balloon_info != undefined) {
                this.balloon_info = data.balloon_info;
            }
            if ("fall_info" in data && data.fall_info != undefined) {
                this.fall_info = data.fall_info;
            }
            if ("flower_info" in data && data.flower_info != undefined) {
                this.flower_info = data.flower_info;
            }
            if ("bullet_info" in data && data.bullet_info != undefined) {
                this.bullet_info = data.bullet_info;
            }
            if ("broken_floor_info" in data && data.broken_floor_info != undefined) {
                this.broken_floor_info = data.broken_floor_info;
            }
            if ("hide_and_seek_info" in data && data.hide_and_seek_info != undefined) {
                this.hide_and_seek_info = data.hide_and_seek_info;
            }
            if ("buoyant_combat_info" in data && data.buoyant_combat_info != undefined) {
                this.buoyant_combat_info = data.buoyant_combat_info;
            }
            if ("bounce_conjuring_info" in data && data.bounce_conjuring_info != undefined) {
                this.bounce_conjuring_info = data.bounce_conjuring_info;
            }
            if ("handball_info" in data && data.handball_info != undefined) {
                this.handball_info = data.handball_info;
            }
            if ("sumo_info" in data && data.sumo_info != undefined) {
                this.sumo_info = data.sumo_info;
            }
            if ("salvage_prevent_info" in data && data.salvage_prevent_info != undefined) {
                this.salvage_prevent_info = data.salvage_prevent_info;
            }
            if ("salvage_escort_info" in data && data.salvage_escort_info != undefined) {
                this.salvage_escort_info = data.salvage_escort_info;
            }
            if ("home_balloon_info" in data && data.home_balloon_info != undefined) {
                this.home_balloon_info = data.home_balloon_info;
            }
            if ("crystal_link_info" in data && data.crystal_link_info != undefined) {
                this.crystal_link_info = data.crystal_link_info;
            }
            if ("irodori_master_info" in data && data.irodori_master_info != undefined) {
                this.irodori_master_info = data.irodori_master_info;
            }
            if ("luminance_stone_challenge_info" in data && data.luminance_stone_challenge_info != undefined) {
                this.luminance_stone_challenge_info = data.luminance_stone_challenge_info;
            }
            if ("home_seek_furniture_info" in data && data.home_seek_furniture_info != undefined) {
                this.home_seek_furniture_info = data.home_seek_furniture_info;
            }
            if ("island_party_down_hill_info" in data && data.island_party_down_hill_info != undefined) {
                this.island_party_down_hill_info = data.island_party_down_hill_info;
            }
            if ("summer_time_v2_boat_info" in data && data.summer_time_v2_boat_info != undefined) {
                this.summer_time_v2_boat_info = data.summer_time_v2_boat_info;
            }
            if ("island_party_raft_info" in data && data.island_party_raft_info != undefined) {
                this.island_party_raft_info = data.island_party_raft_info;
            }
            if ("island_party_sail_info" in data && data.island_party_sail_info != undefined) {
                this.island_party_sail_info = data.island_party_sail_info;
            }
            if ("instable_spray_info" in data && data.instable_spray_info != undefined) {
                this.instable_spray_info = data.instable_spray_info;
            }
            if ("muqadas_potion_info" in data && data.muqadas_potion_info != undefined) {
                this.muqadas_potion_info = data.muqadas_potion_info;
            }
            if ("treasure_seelie_info" in data && data.treasure_seelie_info != undefined) {
                this.treasure_seelie_info = data.treasure_seelie_info;
            }
            if ("vintage_hunting_info" in data && data.vintage_hunting_info != undefined) {
                this.vintage_hunting_info = data.vintage_hunting_info;
            }
            if ("wind_field_info" in data && data.wind_field_info != undefined) {
                this.wind_field_info = data.wind_field_info;
            }
        }
    }
    get end_time() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set end_time(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get pre_start_end_time() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set pre_start_end_time(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get stage() {
        return pb_1.Message.getFieldWithDefault(this, 5, dependency_1.GalleryStageType.GALLERY_STAGE_TYPE_NONE);
    }
    set stage(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get owner_uid() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0);
    }
    set owner_uid(value) {
        pb_1.Message.setField(this, 9, value);
    }
    get player_count() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0);
    }
    set player_count(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get progress_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_21.SceneGalleryProgressInfo, 4);
    }
    set progress_info_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 4, value);
    }
    get gallery_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set gallery_id(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get balloon_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.SceneGalleryBalloonInfo, 14);
    }
    set balloon_info(value) {
        pb_1.Message.setOneofWrapperField(this, 14, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_balloon_info() {
        return pb_1.Message.getField(this, 14) != null;
    }
    get fall_info() {
        return pb_1.Message.getWrapperField(this, dependency_8.SceneGalleryFallInfo, 7);
    }
    set fall_info(value) {
        pb_1.Message.setOneofWrapperField(this, 7, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_fall_info() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get flower_info() {
        return pb_1.Message.getWrapperField(this, dependency_9.SceneGalleryFlowerInfo, 8);
    }
    set flower_info(value) {
        pb_1.Message.setOneofWrapperField(this, 8, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_flower_info() {
        return pb_1.Message.getField(this, 8) != null;
    }
    get bullet_info() {
        return pb_1.Message.getWrapperField(this, dependency_5.SceneGalleryBulletInfo, 13);
    }
    set bullet_info(value) {
        pb_1.Message.setOneofWrapperField(this, 13, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_bullet_info() {
        return pb_1.Message.getField(this, 13) != null;
    }
    get broken_floor_info() {
        return pb_1.Message.getWrapperField(this, dependency_4.SceneGalleryBrokenFloorInfo, 10);
    }
    set broken_floor_info(value) {
        pb_1.Message.setOneofWrapperField(this, 10, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_broken_floor_info() {
        return pb_1.Message.getField(this, 10) != null;
    }
    get hide_and_seek_info() {
        return pb_1.Message.getWrapperField(this, dependency_11.SceneGalleryHideAndSeekInfo, 6);
    }
    set hide_and_seek_info(value) {
        pb_1.Message.setOneofWrapperField(this, 6, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_hide_and_seek_info() {
        return pb_1.Message.getField(this, 6) != null;
    }
    get buoyant_combat_info() {
        return pb_1.Message.getWrapperField(this, dependency_6.SceneGalleryBuoyantCombatInfo, 1384);
    }
    set buoyant_combat_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1384, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_buoyant_combat_info() {
        return pb_1.Message.getField(this, 1384) != null;
    }
    get bounce_conjuring_info() {
        return pb_1.Message.getWrapperField(this, dependency_3.SceneGalleryBounceConjuringInfo, 708);
    }
    set bounce_conjuring_info(value) {
        pb_1.Message.setOneofWrapperField(this, 708, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_bounce_conjuring_info() {
        return pb_1.Message.getField(this, 708) != null;
    }
    get handball_info() {
        return pb_1.Message.getWrapperField(this, dependency_10.SceneGalleryHandballInfo, 1997);
    }
    set handball_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1997, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_handball_info() {
        return pb_1.Message.getField(this, 1997) != null;
    }
    get sumo_info() {
        return pb_1.Message.getWrapperField(this, dependency_25.SceneGallerySumoInfo, 811);
    }
    set sumo_info(value) {
        pb_1.Message.setOneofWrapperField(this, 811, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_sumo_info() {
        return pb_1.Message.getField(this, 811) != null;
    }
    get salvage_prevent_info() {
        return pb_1.Message.getWrapperField(this, dependency_23.SceneGallerySalvagePreventInfo, 1700);
    }
    set salvage_prevent_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1700, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_salvage_prevent_info() {
        return pb_1.Message.getField(this, 1700) != null;
    }
    get salvage_escort_info() {
        return pb_1.Message.getWrapperField(this, dependency_22.SceneGallerySalvageEscortInfoInfo, 759);
    }
    set salvage_escort_info(value) {
        pb_1.Message.setOneofWrapperField(this, 759, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_salvage_escort_info() {
        return pb_1.Message.getField(this, 759) != null;
    }
    get home_balloon_info() {
        return pb_1.Message.getWrapperField(this, dependency_12.SceneGalleryHomeBalloonInfo, 1034);
    }
    set home_balloon_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1034, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_home_balloon_info() {
        return pb_1.Message.getField(this, 1034) != null;
    }
    get crystal_link_info() {
        return pb_1.Message.getWrapperField(this, dependency_7.SceneGalleryCrystalLinkInfo, 2004);
    }
    set crystal_link_info(value) {
        pb_1.Message.setOneofWrapperField(this, 2004, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_crystal_link_info() {
        return pb_1.Message.getField(this, 2004) != null;
    }
    get irodori_master_info() {
        return pb_1.Message.getWrapperField(this, dependency_15.SceneGalleryIrodoriMasterInfo, 1953);
    }
    set irodori_master_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1953, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_irodori_master_info() {
        return pb_1.Message.getField(this, 1953) != null;
    }
    get luminance_stone_challenge_info() {
        return pb_1.Message.getWrapperField(this, dependency_19.SceneGalleryLuminanceStoneChallengeInfo, 106);
    }
    set luminance_stone_challenge_info(value) {
        pb_1.Message.setOneofWrapperField(this, 106, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_luminance_stone_challenge_info() {
        return pb_1.Message.getField(this, 106) != null;
    }
    get home_seek_furniture_info() {
        return pb_1.Message.getWrapperField(this, dependency_13.SceneGalleryHomeSeekFurnitureInfo, 1456);
    }
    set home_seek_furniture_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1456, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_home_seek_furniture_info() {
        return pb_1.Message.getField(this, 1456) != null;
    }
    get island_party_down_hill_info() {
        return pb_1.Message.getWrapperField(this, dependency_16.SceneGalleryIslandPartyDownHillInfo, 462);
    }
    set island_party_down_hill_info(value) {
        pb_1.Message.setOneofWrapperField(this, 462, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_island_party_down_hill_info() {
        return pb_1.Message.getField(this, 462) != null;
    }
    get summer_time_v2_boat_info() {
        return pb_1.Message.getWrapperField(this, dependency_24.SceneGallerySummerTimeV2BoatInfo, 296);
    }
    set summer_time_v2_boat_info(value) {
        pb_1.Message.setOneofWrapperField(this, 296, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_summer_time_v2_boat_info() {
        return pb_1.Message.getField(this, 296) != null;
    }
    get island_party_raft_info() {
        return pb_1.Message.getWrapperField(this, dependency_17.SceneGalleryIslandPartyRaftInfo, 1805);
    }
    set island_party_raft_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1805, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_island_party_raft_info() {
        return pb_1.Message.getField(this, 1805) != null;
    }
    get island_party_sail_info() {
        return pb_1.Message.getWrapperField(this, dependency_18.SceneGalleryIslandPartySailInfo, 1133);
    }
    set island_party_sail_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1133, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_island_party_sail_info() {
        return pb_1.Message.getField(this, 1133) != null;
    }
    get instable_spray_info() {
        return pb_1.Message.getWrapperField(this, dependency_14.SceneGalleryInstableSprayInfo, 1196);
    }
    set instable_spray_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1196, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_instable_spray_info() {
        return pb_1.Message.getField(this, 1196) != null;
    }
    get muqadas_potion_info() {
        return pb_1.Message.getWrapperField(this, dependency_20.SceneGalleryMuqadasPotionInfo, 865);
    }
    set muqadas_potion_info(value) {
        pb_1.Message.setOneofWrapperField(this, 865, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_muqadas_potion_info() {
        return pb_1.Message.getField(this, 865) != null;
    }
    get treasure_seelie_info() {
        return pb_1.Message.getWrapperField(this, dependency_26.SceneGalleryTreasureSeelieInfo, 1525);
    }
    set treasure_seelie_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1525, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_treasure_seelie_info() {
        return pb_1.Message.getField(this, 1525) != null;
    }
    get vintage_hunting_info() {
        return pb_1.Message.getWrapperField(this, dependency_27.SceneGalleryVintageHuntingInfo, 254);
    }
    set vintage_hunting_info(value) {
        pb_1.Message.setOneofWrapperField(this, 254, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_vintage_hunting_info() {
        return pb_1.Message.getField(this, 254) != null;
    }
    get wind_field_info() {
        return pb_1.Message.getWrapperField(this, dependency_28.SceneGalleryWindFieldInfo, 1080);
    }
    set wind_field_info(value) {
        pb_1.Message.setOneofWrapperField(this, 1080, __classPrivateFieldGet(this, _SceneGalleryInfo_one_of_decls, "f")[0], value);
    }
    get has_wind_field_info() {
        return pb_1.Message.getField(this, 1080) != null;
    }
    get info() {
        const cases = {
            0: "none",
            14: "balloon_info",
            7: "fall_info",
            8: "flower_info",
            13: "bullet_info",
            10: "broken_floor_info",
            6: "hide_and_seek_info",
            1384: "buoyant_combat_info",
            708: "bounce_conjuring_info",
            1997: "handball_info",
            811: "sumo_info",
            1700: "salvage_prevent_info",
            759: "salvage_escort_info",
            1034: "home_balloon_info",
            2004: "crystal_link_info",
            1953: "irodori_master_info",
            106: "luminance_stone_challenge_info",
            1456: "home_seek_furniture_info",
            462: "island_party_down_hill_info",
            296: "summer_time_v2_boat_info",
            1805: "island_party_raft_info",
            1133: "island_party_sail_info",
            1196: "instable_spray_info",
            865: "muqadas_potion_info",
            1525: "treasure_seelie_info",
            254: "vintage_hunting_info",
            1080: "wind_field_info"
        };
        return cases[pb_1.Message.computeOneofCase(this, [14, 7, 8, 13, 10, 6, 1384, 708, 1997, 811, 1700, 759, 1034, 2004, 1953, 106, 1456, 462, 296, 1805, 1133, 1196, 865, 1525, 254, 1080])];
    }
    static fromObject(data) {
        const message = new SceneGalleryInfo({});
        if (data.end_time != null) {
            message.end_time = data.end_time;
        }
        if (data.pre_start_end_time != null) {
            message.pre_start_end_time = data.pre_start_end_time;
        }
        if (data.stage != null) {
            message.stage = data.stage;
        }
        if (data.owner_uid != null) {
            message.owner_uid = data.owner_uid;
        }
        if (data.player_count != null) {
            message.player_count = data.player_count;
        }
        if (data.progress_info_list != null) {
            message.progress_info_list = data.progress_info_list.map(item => dependency_21.SceneGalleryProgressInfo.fromObject(item));
        }
        if (data.gallery_id != null) {
            message.gallery_id = data.gallery_id;
        }
        if (data.balloon_info != null) {
            message.balloon_info = dependency_2.SceneGalleryBalloonInfo.fromObject(data.balloon_info);
        }
        if (data.fall_info != null) {
            message.fall_info = dependency_8.SceneGalleryFallInfo.fromObject(data.fall_info);
        }
        if (data.flower_info != null) {
            message.flower_info = dependency_9.SceneGalleryFlowerInfo.fromObject(data.flower_info);
        }
        if (data.bullet_info != null) {
            message.bullet_info = dependency_5.SceneGalleryBulletInfo.fromObject(data.bullet_info);
        }
        if (data.broken_floor_info != null) {
            message.broken_floor_info = dependency_4.SceneGalleryBrokenFloorInfo.fromObject(data.broken_floor_info);
        }
        if (data.hide_and_seek_info != null) {
            message.hide_and_seek_info = dependency_11.SceneGalleryHideAndSeekInfo.fromObject(data.hide_and_seek_info);
        }
        if (data.buoyant_combat_info != null) {
            message.buoyant_combat_info = dependency_6.SceneGalleryBuoyantCombatInfo.fromObject(data.buoyant_combat_info);
        }
        if (data.bounce_conjuring_info != null) {
            message.bounce_conjuring_info = dependency_3.SceneGalleryBounceConjuringInfo.fromObject(data.bounce_conjuring_info);
        }
        if (data.handball_info != null) {
            message.handball_info = dependency_10.SceneGalleryHandballInfo.fromObject(data.handball_info);
        }
        if (data.sumo_info != null) {
            message.sumo_info = dependency_25.SceneGallerySumoInfo.fromObject(data.sumo_info);
        }
        if (data.salvage_prevent_info != null) {
            message.salvage_prevent_info = dependency_23.SceneGallerySalvagePreventInfo.fromObject(data.salvage_prevent_info);
        }
        if (data.salvage_escort_info != null) {
            message.salvage_escort_info = dependency_22.SceneGallerySalvageEscortInfoInfo.fromObject(data.salvage_escort_info);
        }
        if (data.home_balloon_info != null) {
            message.home_balloon_info = dependency_12.SceneGalleryHomeBalloonInfo.fromObject(data.home_balloon_info);
        }
        if (data.crystal_link_info != null) {
            message.crystal_link_info = dependency_7.SceneGalleryCrystalLinkInfo.fromObject(data.crystal_link_info);
        }
        if (data.irodori_master_info != null) {
            message.irodori_master_info = dependency_15.SceneGalleryIrodoriMasterInfo.fromObject(data.irodori_master_info);
        }
        if (data.luminance_stone_challenge_info != null) {
            message.luminance_stone_challenge_info = dependency_19.SceneGalleryLuminanceStoneChallengeInfo.fromObject(data.luminance_stone_challenge_info);
        }
        if (data.home_seek_furniture_info != null) {
            message.home_seek_furniture_info = dependency_13.SceneGalleryHomeSeekFurnitureInfo.fromObject(data.home_seek_furniture_info);
        }
        if (data.island_party_down_hill_info != null) {
            message.island_party_down_hill_info = dependency_16.SceneGalleryIslandPartyDownHillInfo.fromObject(data.island_party_down_hill_info);
        }
        if (data.summer_time_v2_boat_info != null) {
            message.summer_time_v2_boat_info = dependency_24.SceneGallerySummerTimeV2BoatInfo.fromObject(data.summer_time_v2_boat_info);
        }
        if (data.island_party_raft_info != null) {
            message.island_party_raft_info = dependency_17.SceneGalleryIslandPartyRaftInfo.fromObject(data.island_party_raft_info);
        }
        if (data.island_party_sail_info != null) {
            message.island_party_sail_info = dependency_18.SceneGalleryIslandPartySailInfo.fromObject(data.island_party_sail_info);
        }
        if (data.instable_spray_info != null) {
            message.instable_spray_info = dependency_14.SceneGalleryInstableSprayInfo.fromObject(data.instable_spray_info);
        }
        if (data.muqadas_potion_info != null) {
            message.muqadas_potion_info = dependency_20.SceneGalleryMuqadasPotionInfo.fromObject(data.muqadas_potion_info);
        }
        if (data.treasure_seelie_info != null) {
            message.treasure_seelie_info = dependency_26.SceneGalleryTreasureSeelieInfo.fromObject(data.treasure_seelie_info);
        }
        if (data.vintage_hunting_info != null) {
            message.vintage_hunting_info = dependency_27.SceneGalleryVintageHuntingInfo.fromObject(data.vintage_hunting_info);
        }
        if (data.wind_field_info != null) {
            message.wind_field_info = dependency_28.SceneGalleryWindFieldInfo.fromObject(data.wind_field_info);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.end_time != null) {
            data.end_time = this.end_time;
        }
        if (this.pre_start_end_time != null) {
            data.pre_start_end_time = this.pre_start_end_time;
        }
        if (this.stage != null) {
            data.stage = this.stage;
        }
        if (this.owner_uid != null) {
            data.owner_uid = this.owner_uid;
        }
        if (this.player_count != null) {
            data.player_count = this.player_count;
        }
        if (this.progress_info_list != null) {
            data.progress_info_list = this.progress_info_list.map((item) => item.toObject());
        }
        if (this.gallery_id != null) {
            data.gallery_id = this.gallery_id;
        }
        if (this.balloon_info != null) {
            data.balloon_info = this.balloon_info.toObject();
        }
        if (this.fall_info != null) {
            data.fall_info = this.fall_info.toObject();
        }
        if (this.flower_info != null) {
            data.flower_info = this.flower_info.toObject();
        }
        if (this.bullet_info != null) {
            data.bullet_info = this.bullet_info.toObject();
        }
        if (this.broken_floor_info != null) {
            data.broken_floor_info = this.broken_floor_info.toObject();
        }
        if (this.hide_and_seek_info != null) {
            data.hide_and_seek_info = this.hide_and_seek_info.toObject();
        }
        if (this.buoyant_combat_info != null) {
            data.buoyant_combat_info = this.buoyant_combat_info.toObject();
        }
        if (this.bounce_conjuring_info != null) {
            data.bounce_conjuring_info = this.bounce_conjuring_info.toObject();
        }
        if (this.handball_info != null) {
            data.handball_info = this.handball_info.toObject();
        }
        if (this.sumo_info != null) {
            data.sumo_info = this.sumo_info.toObject();
        }
        if (this.salvage_prevent_info != null) {
            data.salvage_prevent_info = this.salvage_prevent_info.toObject();
        }
        if (this.salvage_escort_info != null) {
            data.salvage_escort_info = this.salvage_escort_info.toObject();
        }
        if (this.home_balloon_info != null) {
            data.home_balloon_info = this.home_balloon_info.toObject();
        }
        if (this.crystal_link_info != null) {
            data.crystal_link_info = this.crystal_link_info.toObject();
        }
        if (this.irodori_master_info != null) {
            data.irodori_master_info = this.irodori_master_info.toObject();
        }
        if (this.luminance_stone_challenge_info != null) {
            data.luminance_stone_challenge_info = this.luminance_stone_challenge_info.toObject();
        }
        if (this.home_seek_furniture_info != null) {
            data.home_seek_furniture_info = this.home_seek_furniture_info.toObject();
        }
        if (this.island_party_down_hill_info != null) {
            data.island_party_down_hill_info = this.island_party_down_hill_info.toObject();
        }
        if (this.summer_time_v2_boat_info != null) {
            data.summer_time_v2_boat_info = this.summer_time_v2_boat_info.toObject();
        }
        if (this.island_party_raft_info != null) {
            data.island_party_raft_info = this.island_party_raft_info.toObject();
        }
        if (this.island_party_sail_info != null) {
            data.island_party_sail_info = this.island_party_sail_info.toObject();
        }
        if (this.instable_spray_info != null) {
            data.instable_spray_info = this.instable_spray_info.toObject();
        }
        if (this.muqadas_potion_info != null) {
            data.muqadas_potion_info = this.muqadas_potion_info.toObject();
        }
        if (this.treasure_seelie_info != null) {
            data.treasure_seelie_info = this.treasure_seelie_info.toObject();
        }
        if (this.vintage_hunting_info != null) {
            data.vintage_hunting_info = this.vintage_hunting_info.toObject();
        }
        if (this.wind_field_info != null) {
            data.wind_field_info = this.wind_field_info.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.end_time != 0)
            writer.writeUint32(11, this.end_time);
        if (this.pre_start_end_time != 0)
            writer.writeUint32(15, this.pre_start_end_time);
        if (this.stage != dependency_1.GalleryStageType.GALLERY_STAGE_TYPE_NONE)
            writer.writeEnum(5, this.stage);
        if (this.owner_uid != 0)
            writer.writeUint32(9, this.owner_uid);
        if (this.player_count != 0)
            writer.writeUint32(1, this.player_count);
        if (this.progress_info_list.length)
            writer.writeRepeatedMessage(4, this.progress_info_list, (item) => item.serialize(writer));
        if (this.gallery_id != 0)
            writer.writeUint32(2, this.gallery_id);
        if (this.has_balloon_info)
            writer.writeMessage(14, this.balloon_info, () => this.balloon_info.serialize(writer));
        if (this.has_fall_info)
            writer.writeMessage(7, this.fall_info, () => this.fall_info.serialize(writer));
        if (this.has_flower_info)
            writer.writeMessage(8, this.flower_info, () => this.flower_info.serialize(writer));
        if (this.has_bullet_info)
            writer.writeMessage(13, this.bullet_info, () => this.bullet_info.serialize(writer));
        if (this.has_broken_floor_info)
            writer.writeMessage(10, this.broken_floor_info, () => this.broken_floor_info.serialize(writer));
        if (this.has_hide_and_seek_info)
            writer.writeMessage(6, this.hide_and_seek_info, () => this.hide_and_seek_info.serialize(writer));
        if (this.has_buoyant_combat_info)
            writer.writeMessage(1384, this.buoyant_combat_info, () => this.buoyant_combat_info.serialize(writer));
        if (this.has_bounce_conjuring_info)
            writer.writeMessage(708, this.bounce_conjuring_info, () => this.bounce_conjuring_info.serialize(writer));
        if (this.has_handball_info)
            writer.writeMessage(1997, this.handball_info, () => this.handball_info.serialize(writer));
        if (this.has_sumo_info)
            writer.writeMessage(811, this.sumo_info, () => this.sumo_info.serialize(writer));
        if (this.has_salvage_prevent_info)
            writer.writeMessage(1700, this.salvage_prevent_info, () => this.salvage_prevent_info.serialize(writer));
        if (this.has_salvage_escort_info)
            writer.writeMessage(759, this.salvage_escort_info, () => this.salvage_escort_info.serialize(writer));
        if (this.has_home_balloon_info)
            writer.writeMessage(1034, this.home_balloon_info, () => this.home_balloon_info.serialize(writer));
        if (this.has_crystal_link_info)
            writer.writeMessage(2004, this.crystal_link_info, () => this.crystal_link_info.serialize(writer));
        if (this.has_irodori_master_info)
            writer.writeMessage(1953, this.irodori_master_info, () => this.irodori_master_info.serialize(writer));
        if (this.has_luminance_stone_challenge_info)
            writer.writeMessage(106, this.luminance_stone_challenge_info, () => this.luminance_stone_challenge_info.serialize(writer));
        if (this.has_home_seek_furniture_info)
            writer.writeMessage(1456, this.home_seek_furniture_info, () => this.home_seek_furniture_info.serialize(writer));
        if (this.has_island_party_down_hill_info)
            writer.writeMessage(462, this.island_party_down_hill_info, () => this.island_party_down_hill_info.serialize(writer));
        if (this.has_summer_time_v2_boat_info)
            writer.writeMessage(296, this.summer_time_v2_boat_info, () => this.summer_time_v2_boat_info.serialize(writer));
        if (this.has_island_party_raft_info)
            writer.writeMessage(1805, this.island_party_raft_info, () => this.island_party_raft_info.serialize(writer));
        if (this.has_island_party_sail_info)
            writer.writeMessage(1133, this.island_party_sail_info, () => this.island_party_sail_info.serialize(writer));
        if (this.has_instable_spray_info)
            writer.writeMessage(1196, this.instable_spray_info, () => this.instable_spray_info.serialize(writer));
        if (this.has_muqadas_potion_info)
            writer.writeMessage(865, this.muqadas_potion_info, () => this.muqadas_potion_info.serialize(writer));
        if (this.has_treasure_seelie_info)
            writer.writeMessage(1525, this.treasure_seelie_info, () => this.treasure_seelie_info.serialize(writer));
        if (this.has_vintage_hunting_info)
            writer.writeMessage(254, this.vintage_hunting_info, () => this.vintage_hunting_info.serialize(writer));
        if (this.has_wind_field_info)
            writer.writeMessage(1080, this.wind_field_info, () => this.wind_field_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneGalleryInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 11:
                    message.end_time = reader.readUint32();
                    break;
                case 15:
                    message.pre_start_end_time = reader.readUint32();
                    break;
                case 5:
                    message.stage = reader.readEnum();
                    break;
                case 9:
                    message.owner_uid = reader.readUint32();
                    break;
                case 1:
                    message.player_count = reader.readUint32();
                    break;
                case 4:
                    reader.readMessage(message.progress_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_21.SceneGalleryProgressInfo.deserialize(reader), dependency_21.SceneGalleryProgressInfo));
                    break;
                case 2:
                    message.gallery_id = reader.readUint32();
                    break;
                case 14:
                    reader.readMessage(message.balloon_info, () => message.balloon_info = dependency_2.SceneGalleryBalloonInfo.deserialize(reader));
                    break;
                case 7:
                    reader.readMessage(message.fall_info, () => message.fall_info = dependency_8.SceneGalleryFallInfo.deserialize(reader));
                    break;
                case 8:
                    reader.readMessage(message.flower_info, () => message.flower_info = dependency_9.SceneGalleryFlowerInfo.deserialize(reader));
                    break;
                case 13:
                    reader.readMessage(message.bullet_info, () => message.bullet_info = dependency_5.SceneGalleryBulletInfo.deserialize(reader));
                    break;
                case 10:
                    reader.readMessage(message.broken_floor_info, () => message.broken_floor_info = dependency_4.SceneGalleryBrokenFloorInfo.deserialize(reader));
                    break;
                case 6:
                    reader.readMessage(message.hide_and_seek_info, () => message.hide_and_seek_info = dependency_11.SceneGalleryHideAndSeekInfo.deserialize(reader));
                    break;
                case 1384:
                    reader.readMessage(message.buoyant_combat_info, () => message.buoyant_combat_info = dependency_6.SceneGalleryBuoyantCombatInfo.deserialize(reader));
                    break;
                case 708:
                    reader.readMessage(message.bounce_conjuring_info, () => message.bounce_conjuring_info = dependency_3.SceneGalleryBounceConjuringInfo.deserialize(reader));
                    break;
                case 1997:
                    reader.readMessage(message.handball_info, () => message.handball_info = dependency_10.SceneGalleryHandballInfo.deserialize(reader));
                    break;
                case 811:
                    reader.readMessage(message.sumo_info, () => message.sumo_info = dependency_25.SceneGallerySumoInfo.deserialize(reader));
                    break;
                case 1700:
                    reader.readMessage(message.salvage_prevent_info, () => message.salvage_prevent_info = dependency_23.SceneGallerySalvagePreventInfo.deserialize(reader));
                    break;
                case 759:
                    reader.readMessage(message.salvage_escort_info, () => message.salvage_escort_info = dependency_22.SceneGallerySalvageEscortInfoInfo.deserialize(reader));
                    break;
                case 1034:
                    reader.readMessage(message.home_balloon_info, () => message.home_balloon_info = dependency_12.SceneGalleryHomeBalloonInfo.deserialize(reader));
                    break;
                case 2004:
                    reader.readMessage(message.crystal_link_info, () => message.crystal_link_info = dependency_7.SceneGalleryCrystalLinkInfo.deserialize(reader));
                    break;
                case 1953:
                    reader.readMessage(message.irodori_master_info, () => message.irodori_master_info = dependency_15.SceneGalleryIrodoriMasterInfo.deserialize(reader));
                    break;
                case 106:
                    reader.readMessage(message.luminance_stone_challenge_info, () => message.luminance_stone_challenge_info = dependency_19.SceneGalleryLuminanceStoneChallengeInfo.deserialize(reader));
                    break;
                case 1456:
                    reader.readMessage(message.home_seek_furniture_info, () => message.home_seek_furniture_info = dependency_13.SceneGalleryHomeSeekFurnitureInfo.deserialize(reader));
                    break;
                case 462:
                    reader.readMessage(message.island_party_down_hill_info, () => message.island_party_down_hill_info = dependency_16.SceneGalleryIslandPartyDownHillInfo.deserialize(reader));
                    break;
                case 296:
                    reader.readMessage(message.summer_time_v2_boat_info, () => message.summer_time_v2_boat_info = dependency_24.SceneGallerySummerTimeV2BoatInfo.deserialize(reader));
                    break;
                case 1805:
                    reader.readMessage(message.island_party_raft_info, () => message.island_party_raft_info = dependency_17.SceneGalleryIslandPartyRaftInfo.deserialize(reader));
                    break;
                case 1133:
                    reader.readMessage(message.island_party_sail_info, () => message.island_party_sail_info = dependency_18.SceneGalleryIslandPartySailInfo.deserialize(reader));
                    break;
                case 1196:
                    reader.readMessage(message.instable_spray_info, () => message.instable_spray_info = dependency_14.SceneGalleryInstableSprayInfo.deserialize(reader));
                    break;
                case 865:
                    reader.readMessage(message.muqadas_potion_info, () => message.muqadas_potion_info = dependency_20.SceneGalleryMuqadasPotionInfo.deserialize(reader));
                    break;
                case 1525:
                    reader.readMessage(message.treasure_seelie_info, () => message.treasure_seelie_info = dependency_26.SceneGalleryTreasureSeelieInfo.deserialize(reader));
                    break;
                case 254:
                    reader.readMessage(message.vintage_hunting_info, () => message.vintage_hunting_info = dependency_27.SceneGalleryVintageHuntingInfo.deserialize(reader));
                    break;
                case 1080:
                    reader.readMessage(message.wind_field_info, () => message.wind_field_info = dependency_28.SceneGalleryWindFieldInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return SceneGalleryInfo.deserialize(bytes);
    }
}
exports.SceneGalleryInfo = SceneGalleryInfo;
_SceneGalleryInfo_one_of_decls = new WeakMap();
