"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SceneGalleryBrokenFloorInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SceneGalleryBrokenFloorInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneGalleryBrokenFloorInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class SceneGalleryBrokenFloorInfo extends pb_1.Message {
    constructor(data) {
        super();
        _SceneGalleryBrokenFloorInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _SceneGalleryBrokenFloorInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("fall_count_map" in data && data.fall_count_map != undefined) {
                this.fall_count_map = data.fall_count_map;
            }
            if ("end_time" in data && data.end_time != undefined) {
                this.end_time = data.end_time;
            }
        }
        if (!this.fall_count_map)
            this.fall_count_map = new Map();
    }
    get fall_count_map() {
        return pb_1.Message.getField(this, 3);
    }
    set fall_count_map(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get end_time() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0);
    }
    set end_time(value) {
        pb_1.Message.setField(this, 9, value);
    }
    static fromObject(data) {
        const message = new SceneGalleryBrokenFloorInfo({});
        if (typeof data.fall_count_map == "object") {
            message.fall_count_map = new Map(Object.entries(data.fall_count_map).map(([key, value]) => [Number(key), value]));
        }
        if (data.end_time != null) {
            message.end_time = data.end_time;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.fall_count_map.size > 0) {
            data.fall_count_map = (Object.fromEntries)(this.fall_count_map);
        }
        if (this.end_time != null) {
            data.end_time = this.end_time;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        for (const [key, value] of this.fall_count_map) {
            writer.writeMessage(3, this.fall_count_map, () => {
                writer.writeUint32(1, key);
                writer.writeUint32(2, value);
            });
        }
        if (this.end_time != 0)
            writer.writeUint32(9, this.end_time);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneGalleryBrokenFloorInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 3:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.fall_count_map, reader, reader.readUint32, reader.readUint32));
                    break;
                case 9:
                    message.end_time = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return SceneGalleryBrokenFloorInfo.deserialize(bytes);
    }
}
exports.SceneGalleryBrokenFloorInfo = SceneGalleryBrokenFloorInfo;
_SceneGalleryBrokenFloorInfo_one_of_decls = new WeakMap();
