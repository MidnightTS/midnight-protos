// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "TreasureMapRegionInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Vector } from "./Vector";
/**
 * @generated from protobuf message TreasureMapRegionInfo
 */
export interface TreasureMapRegionInfo {
    /**
     * @generated from protobuf field: uint32 region_radius = 13;
     */
    regionRadius: number;
    /**
     * @generated from protobuf field: uint32 region_id = 10;
     */
    regionId: number;
    /**
     * @generated from protobuf field: Vector region_center_pos = 5;
     */
    regionCenterPos?: Vector;
    /**
     * @generated from protobuf field: bool Unk3300_HHBHLPHLHIL = 6 [json_name = "Unk3300HHBHLPHLHIL"];
     */
    unk3300HHBHLPHLHIL: boolean;
    /**
     * @generated from protobuf field: uint32 start_time = 8;
     */
    startTime: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_LKEMEDPMIGM = 3 [json_name = "Unk3300LKEMEDPMIGM"];
     */
    unk3300LKEMEDPMIGM: number;
    /**
     * @generated from protobuf field: bool Unk3300_NIBJOAJLCJI = 1 [json_name = "Unk3300NIBJOAJLCJI"];
     */
    unk3300NIBJOAJLCJI: boolean;
    /**
     * @generated from protobuf field: uint32 scene_id = 12;
     */
    sceneId: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_MNEKJILFHOA = 2 [json_name = "Unk3300MNEKJILFHOA"];
     */
    unk3300MNEKJILFHOA: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class TreasureMapRegionInfo$Type extends MessageType<TreasureMapRegionInfo> {
    constructor() {
        super("TreasureMapRegionInfo", [
            { no: 13, name: "region_radius", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "region_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "region_center_pos", kind: "message", T: () => Vector },
            { no: 6, name: "Unk3300_HHBHLPHLHIL", kind: "scalar", jsonName: "Unk3300HHBHLPHLHIL", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "start_time", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "Unk3300_LKEMEDPMIGM", kind: "scalar", jsonName: "Unk3300LKEMEDPMIGM", T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "Unk3300_NIBJOAJLCJI", kind: "scalar", jsonName: "Unk3300NIBJOAJLCJI", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "scene_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "Unk3300_MNEKJILFHOA", kind: "scalar", jsonName: "Unk3300MNEKJILFHOA", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TreasureMapRegionInfo>): TreasureMapRegionInfo {
        const message = { regionRadius: 0, regionId: 0, unk3300HHBHLPHLHIL: false, startTime: 0, unk3300LKEMEDPMIGM: 0, unk3300NIBJOAJLCJI: false, sceneId: 0, unk3300MNEKJILFHOA: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TreasureMapRegionInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TreasureMapRegionInfo): TreasureMapRegionInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 region_radius */ 13:
                    message.regionRadius = reader.uint32();
                    break;
                case /* uint32 region_id */ 10:
                    message.regionId = reader.uint32();
                    break;
                case /* Vector region_center_pos */ 5:
                    message.regionCenterPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.regionCenterPos);
                    break;
                case /* bool Unk3300_HHBHLPHLHIL = 6 [json_name = "Unk3300HHBHLPHLHIL"];*/ 6:
                    message.unk3300HHBHLPHLHIL = reader.bool();
                    break;
                case /* uint32 start_time */ 8:
                    message.startTime = reader.uint32();
                    break;
                case /* uint32 Unk3300_LKEMEDPMIGM = 3 [json_name = "Unk3300LKEMEDPMIGM"];*/ 3:
                    message.unk3300LKEMEDPMIGM = reader.uint32();
                    break;
                case /* bool Unk3300_NIBJOAJLCJI = 1 [json_name = "Unk3300NIBJOAJLCJI"];*/ 1:
                    message.unk3300NIBJOAJLCJI = reader.bool();
                    break;
                case /* uint32 scene_id */ 12:
                    message.sceneId = reader.uint32();
                    break;
                case /* uint32 Unk3300_MNEKJILFHOA = 2 [json_name = "Unk3300MNEKJILFHOA"];*/ 2:
                    message.unk3300MNEKJILFHOA = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TreasureMapRegionInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 region_radius = 13; */
        if (message.regionRadius !== 0)
            writer.tag(13, WireType.Varint).uint32(message.regionRadius);
        /* uint32 region_id = 10; */
        if (message.regionId !== 0)
            writer.tag(10, WireType.Varint).uint32(message.regionId);
        /* Vector region_center_pos = 5; */
        if (message.regionCenterPos)
            Vector.internalBinaryWrite(message.regionCenterPos, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bool Unk3300_HHBHLPHLHIL = 6 [json_name = "Unk3300HHBHLPHLHIL"]; */
        if (message.unk3300HHBHLPHLHIL !== false)
            writer.tag(6, WireType.Varint).bool(message.unk3300HHBHLPHLHIL);
        /* uint32 start_time = 8; */
        if (message.startTime !== 0)
            writer.tag(8, WireType.Varint).uint32(message.startTime);
        /* uint32 Unk3300_LKEMEDPMIGM = 3 [json_name = "Unk3300LKEMEDPMIGM"]; */
        if (message.unk3300LKEMEDPMIGM !== 0)
            writer.tag(3, WireType.Varint).uint32(message.unk3300LKEMEDPMIGM);
        /* bool Unk3300_NIBJOAJLCJI = 1 [json_name = "Unk3300NIBJOAJLCJI"]; */
        if (message.unk3300NIBJOAJLCJI !== false)
            writer.tag(1, WireType.Varint).bool(message.unk3300NIBJOAJLCJI);
        /* uint32 scene_id = 12; */
        if (message.sceneId !== 0)
            writer.tag(12, WireType.Varint).uint32(message.sceneId);
        /* uint32 Unk3300_MNEKJILFHOA = 2 [json_name = "Unk3300MNEKJILFHOA"]; */
        if (message.unk3300MNEKJILFHOA !== 0)
            writer.tag(2, WireType.Varint).uint32(message.unk3300MNEKJILFHOA);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message TreasureMapRegionInfo
 */
export const TreasureMapRegionInfo = new TreasureMapRegionInfo$Type();
