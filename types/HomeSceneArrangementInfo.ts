// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "HomeSceneArrangementInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { HomeFurnitureData } from "./HomeFurnitureData";
import { Vector } from "./Vector";
import { HomeBlockArrangementInfo } from "./HomeBlockArrangementInfo";
/**
 * @generated from protobuf message HomeSceneArrangementInfo
 */
export interface HomeSceneArrangementInfo {
    /**
     * @generated from protobuf field: uint32 comfort_value = 6;
     */
    comfortValue: number;
    /**
     * @generated from protobuf field: repeated HomeBlockArrangementInfo block_arrangement_info_list = 1;
     */
    blockArrangementInfoList: HomeBlockArrangementInfo[];
    /**
     * @generated from protobuf field: bool is_set_born_pos = 4;
     */
    isSetBornPos: boolean;
    /**
     * @generated from protobuf field: Vector djinn_pos = 14;
     */
    djinnPos?: Vector;
    /**
     * @generated from protobuf field: Vector born_rot = 10;
     */
    bornRot?: Vector;
    /**
     * @generated from protobuf field: uint32 bgm_id = 5;
     */
    bgmId: number;
    /**
     * @generated from protobuf field: Vector born_pos = 11;
     */
    bornPos?: Vector;
    /**
     * @generated from protobuf field: repeated HomeFurnitureData Unk3300_GCHNAMHBPHG = 2 [json_name = "Unk3300GCHNAMHBPHG"];
     */
    unk3300GCHNAMHBPHG: HomeFurnitureData[];
    /**
     * @generated from protobuf field: HomeFurnitureData main_house = 15;
     */
    mainHouse?: HomeFurnitureData;
    /**
     * @generated from protobuf field: uint32 scene_id = 8;
     */
    sceneId: number;
    /**
     * @generated from protobuf field: repeated HomeFurnitureData Unk3300_HPCHPODNBPH = 9 [json_name = "Unk3300HPCHPODNBPH"];
     */
    unk3300HPCHPODNBPH: HomeFurnitureData[];
    /**
     * @generated from protobuf field: uint32 tmp_version = 3;
     */
    tmpVersion: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class HomeSceneArrangementInfo$Type extends MessageType<HomeSceneArrangementInfo> {
    constructor() {
        super("HomeSceneArrangementInfo", [
            { no: 6, name: "comfort_value", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "block_arrangement_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => HomeBlockArrangementInfo },
            { no: 4, name: "is_set_born_pos", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "djinn_pos", kind: "message", T: () => Vector },
            { no: 10, name: "born_rot", kind: "message", T: () => Vector },
            { no: 5, name: "bgm_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "born_pos", kind: "message", T: () => Vector },
            { no: 2, name: "Unk3300_GCHNAMHBPHG", kind: "message", jsonName: "Unk3300GCHNAMHBPHG", repeat: 1 /*RepeatType.PACKED*/, T: () => HomeFurnitureData },
            { no: 15, name: "main_house", kind: "message", T: () => HomeFurnitureData },
            { no: 8, name: "scene_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "Unk3300_HPCHPODNBPH", kind: "message", jsonName: "Unk3300HPCHPODNBPH", repeat: 1 /*RepeatType.PACKED*/, T: () => HomeFurnitureData },
            { no: 3, name: "tmp_version", kind: "scalar", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSceneArrangementInfo>): HomeSceneArrangementInfo {
        const message = { comfortValue: 0, blockArrangementInfoList: [], isSetBornPos: false, bgmId: 0, unk3300GCHNAMHBPHG: [], sceneId: 0, unk3300HPCHPODNBPH: [], tmpVersion: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSceneArrangementInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSceneArrangementInfo): HomeSceneArrangementInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 comfort_value */ 6:
                    message.comfortValue = reader.uint32();
                    break;
                case /* repeated HomeBlockArrangementInfo block_arrangement_info_list */ 1:
                    message.blockArrangementInfoList.push(HomeBlockArrangementInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool is_set_born_pos */ 4:
                    message.isSetBornPos = reader.bool();
                    break;
                case /* Vector djinn_pos */ 14:
                    message.djinnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.djinnPos);
                    break;
                case /* Vector born_rot */ 10:
                    message.bornRot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.bornRot);
                    break;
                case /* uint32 bgm_id */ 5:
                    message.bgmId = reader.uint32();
                    break;
                case /* Vector born_pos */ 11:
                    message.bornPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.bornPos);
                    break;
                case /* repeated HomeFurnitureData Unk3300_GCHNAMHBPHG = 2 [json_name = "Unk3300GCHNAMHBPHG"];*/ 2:
                    message.unk3300GCHNAMHBPHG.push(HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* HomeFurnitureData main_house */ 15:
                    message.mainHouse = HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options, message.mainHouse);
                    break;
                case /* uint32 scene_id */ 8:
                    message.sceneId = reader.uint32();
                    break;
                case /* repeated HomeFurnitureData Unk3300_HPCHPODNBPH = 9 [json_name = "Unk3300HPCHPODNBPH"];*/ 9:
                    message.unk3300HPCHPODNBPH.push(HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* uint32 tmp_version */ 3:
                    message.tmpVersion = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSceneArrangementInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 comfort_value = 6; */
        if (message.comfortValue !== 0)
            writer.tag(6, WireType.Varint).uint32(message.comfortValue);
        /* repeated HomeBlockArrangementInfo block_arrangement_info_list = 1; */
        for (let i = 0; i < message.blockArrangementInfoList.length; i++)
            HomeBlockArrangementInfo.internalBinaryWrite(message.blockArrangementInfoList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bool is_set_born_pos = 4; */
        if (message.isSetBornPos !== false)
            writer.tag(4, WireType.Varint).bool(message.isSetBornPos);
        /* Vector djinn_pos = 14; */
        if (message.djinnPos)
            Vector.internalBinaryWrite(message.djinnPos, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* Vector born_rot = 10; */
        if (message.bornRot)
            Vector.internalBinaryWrite(message.bornRot, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* uint32 bgm_id = 5; */
        if (message.bgmId !== 0)
            writer.tag(5, WireType.Varint).uint32(message.bgmId);
        /* Vector born_pos = 11; */
        if (message.bornPos)
            Vector.internalBinaryWrite(message.bornPos, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* repeated HomeFurnitureData Unk3300_GCHNAMHBPHG = 2 [json_name = "Unk3300GCHNAMHBPHG"]; */
        for (let i = 0; i < message.unk3300GCHNAMHBPHG.length; i++)
            HomeFurnitureData.internalBinaryWrite(message.unk3300GCHNAMHBPHG[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* HomeFurnitureData main_house = 15; */
        if (message.mainHouse)
            HomeFurnitureData.internalBinaryWrite(message.mainHouse, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* uint32 scene_id = 8; */
        if (message.sceneId !== 0)
            writer.tag(8, WireType.Varint).uint32(message.sceneId);
        /* repeated HomeFurnitureData Unk3300_HPCHPODNBPH = 9 [json_name = "Unk3300HPCHPODNBPH"]; */
        for (let i = 0; i < message.unk3300HPCHPODNBPH.length; i++)
            HomeFurnitureData.internalBinaryWrite(message.unk3300HPCHPODNBPH[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* uint32 tmp_version = 3; */
        if (message.tmpVersion !== 0)
            writer.tag(3, WireType.Varint).uint32(message.tmpVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message HomeSceneArrangementInfo
 */
export const HomeSceneArrangementInfo = new HomeSceneArrangementInfo$Type();
