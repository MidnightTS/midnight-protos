/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EchoShellDetailInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./Unk2800_CEAECGGBOKL";
import * as pb_1 from "google-protobuf";
export class EchoShellDetailInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        Unk2800_KEMCFBCAMMM?: dependency_1.Unk2800_CEAECGGBOKL[];
        shell_list?: number[];
        Unk2800_BFONDMJGNKL?: number[];
        taken_reward_list?: number[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [8, 13, 4, 2], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("Unk2800_KEMCFBCAMMM" in data && data.Unk2800_KEMCFBCAMMM != undefined) {
                this.Unk2800_KEMCFBCAMMM = data.Unk2800_KEMCFBCAMMM;
            }
            if ("shell_list" in data && data.shell_list != undefined) {
                this.shell_list = data.shell_list;
            }
            if ("Unk2800_BFONDMJGNKL" in data && data.Unk2800_BFONDMJGNKL != undefined) {
                this.Unk2800_BFONDMJGNKL = data.Unk2800_BFONDMJGNKL;
            }
            if ("taken_reward_list" in data && data.taken_reward_list != undefined) {
                this.taken_reward_list = data.taken_reward_list;
            }
        }
    }
    get Unk2800_KEMCFBCAMMM() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.Unk2800_CEAECGGBOKL, 8) as dependency_1.Unk2800_CEAECGGBOKL[];
    }
    set Unk2800_KEMCFBCAMMM(value: dependency_1.Unk2800_CEAECGGBOKL[]) {
        pb_1.Message.setRepeatedWrapperField(this, 8, value);
    }
    get shell_list() {
        return pb_1.Message.getFieldWithDefault(this, 13, []) as number[];
    }
    set shell_list(value: number[]) {
        pb_1.Message.setField(this, 13, value);
    }
    get Unk2800_BFONDMJGNKL() {
        return pb_1.Message.getFieldWithDefault(this, 4, []) as number[];
    }
    set Unk2800_BFONDMJGNKL(value: number[]) {
        pb_1.Message.setField(this, 4, value);
    }
    get taken_reward_list() {
        return pb_1.Message.getFieldWithDefault(this, 2, []) as number[];
    }
    set taken_reward_list(value: number[]) {
        pb_1.Message.setField(this, 2, value);
    }
    static fromObject(data: {
        Unk2800_KEMCFBCAMMM?: ReturnType<typeof dependency_1.Unk2800_CEAECGGBOKL.prototype.toObject>[];
        shell_list?: number[];
        Unk2800_BFONDMJGNKL?: number[];
        taken_reward_list?: number[];
    }): EchoShellDetailInfo {
        const message = new EchoShellDetailInfo({});
        if (data.Unk2800_KEMCFBCAMMM != null) {
            message.Unk2800_KEMCFBCAMMM = data.Unk2800_KEMCFBCAMMM.map(item => dependency_1.Unk2800_CEAECGGBOKL.fromObject(item));
        }
        if (data.shell_list != null) {
            message.shell_list = data.shell_list;
        }
        if (data.Unk2800_BFONDMJGNKL != null) {
            message.Unk2800_BFONDMJGNKL = data.Unk2800_BFONDMJGNKL;
        }
        if (data.taken_reward_list != null) {
            message.taken_reward_list = data.taken_reward_list;
        }
        return message;
    }
    toObject() {
        const data: {
            Unk2800_KEMCFBCAMMM?: ReturnType<typeof dependency_1.Unk2800_CEAECGGBOKL.prototype.toObject>[];
            shell_list?: number[];
            Unk2800_BFONDMJGNKL?: number[];
            taken_reward_list?: number[];
        } = {};
        if (this.Unk2800_KEMCFBCAMMM != null) {
            data.Unk2800_KEMCFBCAMMM = this.Unk2800_KEMCFBCAMMM.map((item: dependency_1.Unk2800_CEAECGGBOKL) => item.toObject());
        }
        if (this.shell_list != null) {
            data.shell_list = this.shell_list;
        }
        if (this.Unk2800_BFONDMJGNKL != null) {
            data.Unk2800_BFONDMJGNKL = this.Unk2800_BFONDMJGNKL;
        }
        if (this.taken_reward_list != null) {
            data.taken_reward_list = this.taken_reward_list;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.Unk2800_KEMCFBCAMMM.length)
            writer.writeRepeatedMessage(8, this.Unk2800_KEMCFBCAMMM, (item: dependency_1.Unk2800_CEAECGGBOKL) => item.serialize(writer));
        if (this.shell_list.length)
            writer.writePackedUint32(13, this.shell_list);
        if (this.Unk2800_BFONDMJGNKL.length)
            writer.writePackedUint32(4, this.Unk2800_BFONDMJGNKL);
        if (this.taken_reward_list.length)
            writer.writePackedUint32(2, this.taken_reward_list);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EchoShellDetailInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EchoShellDetailInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    reader.readMessage(message.Unk2800_KEMCFBCAMMM, () => pb_1.Message.addToRepeatedWrapperField(message, 8, dependency_1.Unk2800_CEAECGGBOKL.deserialize(reader), dependency_1.Unk2800_CEAECGGBOKL));
                    break;
                case 13:
                    message.shell_list = reader.readPackedUint32();
                    break;
                case 4:
                    message.Unk2800_BFONDMJGNKL = reader.readPackedUint32();
                    break;
                case 2:
                    message.taken_reward_list = reader.readPackedUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): EchoShellDetailInfo {
        return EchoShellDetailInfo.deserialize(bytes);
    }
}
