// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_quest.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CreateEntityInfo } from "./define";
import { Quest } from "./define";
/**
 * @generated from protobuf message com.midnights.game.QuestListNotify
 */
export interface QuestListNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.Quest quest_list = 1;
     */
    questList: Quest[];
}
/**
 * @generated from protobuf enum com.midnights.game.QuestListNotify.CmdId
 */
export enum QuestListNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 472;
     */
    CMD_ID = 472,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestListUpdateNotify
 */
export interface QuestListUpdateNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.Quest quest_list = 6;
     */
    questList: Quest[];
}
/**
 * @generated from protobuf enum com.midnights.game.QuestListUpdateNotify.CmdId
 */
export enum QuestListUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 498;
     */
    CMD_ID = 498,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestDelNotify
 */
export interface QuestDelNotify {
    /**
     * @generated from protobuf field: optional uint32 quest_id = 1;
     */
    questId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestDelNotify.CmdId
 */
export enum QuestDelNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 412;
     */
    CMD_ID = 412,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChildQuest
 */
export interface ChildQuest {
    /**
     * @generated from protobuf field: optional uint32 quest_config_id = 8;
     */
    questConfigId?: number;
    /**
     * @generated from protobuf field: optional uint32 state = 4;
     */
    state?: number;
    /**
     * @generated from protobuf field: optional uint32 quest_id = 15;
     */
    questId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.ParentQuestRandomInfo
 */
export interface ParentQuestRandomInfo {
    /**
     * @generated from protobuf field: repeated uint32 factor_list = 1;
     */
    factorList: number[];
    /**
     * @generated from protobuf field: optional uint32 template_id = 8;
     */
    templateId?: number;
    /**
     * @generated from protobuf field: optional uint32 entrance_id = 2;
     */
    entranceId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.InfernceWordInfo
 */
export interface InfernceWordInfo {
    /**
     * @generated from protobuf field: optional uint32 word_id = 8;
     */
    wordId?: number;
    /**
     * @generated from protobuf field: optional bool is_interpret = 15;
     */
    isInterpret?: boolean;
    /**
     * @generated from protobuf field: optional bool is_submit = 10;
     */
    isSubmit?: boolean;
    /**
     * @generated from protobuf field: optional bool is_associate = 6;
     */
    isAssociate?: boolean;
    /**
     * @generated from protobuf field: optional uint32 unlock_by_word_id = 5;
     */
    unlockByWordId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.InferencePageInfo
 */
export interface InferencePageInfo {
    /**
     * @generated from protobuf field: optional uint32 page_id = 3;
     */
    pageId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.InfernceWordInfo unlock_word_list = 15;
     */
    unlockWordList: InfernceWordInfo[];
}
/**
 * @generated from protobuf message com.midnights.game.ParentQuest
 */
export interface ParentQuest {
    /**
     * @generated from protobuf field: repeated int32 quest_var = 14;
     */
    questVar: number[];
    /**
     * @generated from protobuf field: map<uint32, uint32> time_var_map = 8;
     */
    timeVarMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 parent_quest_state = 1;
     */
    parentQuestState?: number;
    /**
     * @generated from protobuf field: optional bool is_finished = 7;
     */
    isFinished?: boolean;
    /**
     * @generated from protobuf field: repeated com.midnights.game.InferencePageInfo inference_page_list = 15;
     */
    inferencePageList: InferencePageInfo[];
    /**
     * @generated from protobuf field: optional com.midnights.game.ParentQuestRandomInfo random_info = 12;
     */
    randomInfo?: ParentQuestRandomInfo;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 3;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: optional bool is_random = 13;
     */
    isRandom?: boolean;
    /**
     * @generated from protobuf field: optional uint64 video_key = 6;
     */
    videoKey?: bigint;
    /**
     * @generated from protobuf field: optional uint32 quest_var_seq = 11;
     */
    questVarSeq?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ChildQuest child_quest_list = 9;
     */
    childQuestList: ChildQuest[];
}
/**
 * @generated from protobuf message com.midnights.game.FinishedParentQuestNotify
 */
export interface FinishedParentQuestNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ParentQuest parent_quest_list = 2;
     */
    parentQuestList: ParentQuest[];
}
/**
 * @generated from protobuf enum com.midnights.game.FinishedParentQuestNotify.CmdId
 */
export enum FinishedParentQuestNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 435;
     */
    CMD_ID = 435,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FinishedParentQuestUpdateNotify
 */
export interface FinishedParentQuestUpdateNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ParentQuest parent_quest_list = 9;
     */
    parentQuestList: ParentQuest[];
}
/**
 * @generated from protobuf enum com.midnights.game.FinishedParentQuestUpdateNotify.CmdId
 */
export enum FinishedParentQuestUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 407;
     */
    CMD_ID = 407,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AddQuestContentProgressReq
 */
export interface AddQuestContentProgressReq {
    /**
     * @generated from protobuf field: optional uint32 content_type = 6;
     */
    contentType?: number;
    /**
     * @generated from protobuf field: optional uint32 param = 12;
     */
    param?: number;
    /**
     * @generated from protobuf field: optional uint32 add_progress = 15;
     */
    addProgress?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AddQuestContentProgressReq.CmdId
 */
export enum AddQuestContentProgressReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 421;
     */
    CMD_ID = 421,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AddQuestContentProgressRsp
 */
export interface AddQuestContentProgressRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 content_type = 4;
     */
    contentType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AddQuestContentProgressRsp.CmdId
 */
export enum AddQuestContentProgressRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 403;
     */
    CMD_ID = 403,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetQuestTalkHistoryReq
 */
export interface GetQuestTalkHistoryReq {
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 6;
     */
    parentQuestId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetQuestTalkHistoryReq.CmdId
 */
export enum GetQuestTalkHistoryReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 490;
     */
    CMD_ID = 490,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetQuestTalkHistoryRsp
 */
export interface GetQuestTalkHistoryRsp {
    /**
     * @generated from protobuf field: repeated uint32 talk_id_list = 13;
     */
    talkIdList: number[];
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 7;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetQuestTalkHistoryRsp.CmdId
 */
export enum GetQuestTalkHistoryRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 473;
     */
    CMD_ID = 473,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestCreateEntityReq
 */
export interface QuestCreateEntityReq {
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 9;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: optional bool is_rewind = 3;
     */
    isRewind?: boolean;
    /**
     * @generated from protobuf field: optional uint32 quest_id = 2;
     */
    questId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.CreateEntityInfo entity = 13;
     */
    entity?: CreateEntityInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestCreateEntityReq.CmdId
 */
export enum QuestCreateEntityReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 499;
     */
    CMD_ID = 499,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestCreateEntityRsp
 */
export interface QuestCreateEntityRsp {
    /**
     * @generated from protobuf field: optional uint32 quest_id = 13;
     */
    questId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 entity_id = 7;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.CreateEntityInfo entity = 11;
     */
    entity?: CreateEntityInfo;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 1;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: optional bool is_rewind = 14;
     */
    isRewind?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestCreateEntityRsp.CmdId
 */
export enum QuestCreateEntityRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 431;
     */
    CMD_ID = 431,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestDestroyEntityReq
 */
export interface QuestDestroyEntityReq {
    /**
     * @generated from protobuf field: optional uint32 scene_id = 2;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 entity_id = 9;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional uint32 quest_id = 8;
     */
    questId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestDestroyEntityReq.CmdId
 */
export enum QuestDestroyEntityReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 475;
     */
    CMD_ID = 475,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestDestroyEntityRsp
 */
export interface QuestDestroyEntityRsp {
    /**
     * @generated from protobuf field: optional uint32 quest_id = 14;
     */
    questId?: number;
    /**
     * @generated from protobuf field: optional uint32 scene_id = 9;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 entity_id = 12;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestDestroyEntityRsp.CmdId
 */
export enum QuestDestroyEntityRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 448;
     */
    CMD_ID = 448,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChapterStateNotify
 */
export interface ChapterStateNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.ChapterState chapter_state = 9;
     */
    chapterState?: ChapterState;
    /**
     * @generated from protobuf field: optional com.midnights.game.ChapterStateNotify.NeedPlayerLevel need_player_level = 10;
     */
    needPlayerLevel?: ChapterStateNotify_NeedPlayerLevel;
    /**
     * @generated from protobuf field: optional com.midnights.game.ChapterStateNotify.NeedBeginTime need_begin_time = 1;
     */
    needBeginTime?: ChapterStateNotify_NeedBeginTime;
    /**
     * @generated from protobuf field: optional uint32 chapter_id = 2;
     */
    chapterId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.ChapterStateNotify.NeedPlayerLevel
 */
export interface ChapterStateNotify_NeedPlayerLevel {
    /**
     * @generated from protobuf field: optional bool is_limit = 2;
     */
    isLimit?: boolean;
    /**
     * @generated from protobuf field: optional uint32 config_need_player_level = 11;
     */
    configNeedPlayerLevel?: number;
}
/**
 * @generated from protobuf message com.midnights.game.ChapterStateNotify.NeedBeginTime
 */
export interface ChapterStateNotify_NeedBeginTime {
    /**
     * @generated from protobuf field: optional uint32 config_need_begin_time = 3;
     */
    configNeedBeginTime?: number;
    /**
     * @generated from protobuf field: optional bool is_limit = 7;
     */
    isLimit?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.ChapterStateNotify.CmdId
 */
export enum ChapterStateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 405;
     */
    CMD_ID = 405,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestProgressUpdateNotify
 */
export interface QuestProgressUpdateNotify {
    /**
     * @generated from protobuf field: optional uint32 quest_id = 12;
     */
    questId?: number;
    /**
     * @generated from protobuf field: repeated uint32 fail_progress_list = 6;
     */
    failProgressList: number[];
    /**
     * @generated from protobuf field: repeated uint32 finish_progress_list = 13;
     */
    finishProgressList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.QuestProgressUpdateNotify.CmdId
 */
export enum QuestProgressUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 482;
     */
    CMD_ID = 482,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestVarOp
 */
export interface QuestVarOp {
    /**
     * @generated from protobuf field: optional uint32 index = 9;
     */
    index?: number;
    /**
     * @generated from protobuf field: optional int32 value = 5;
     */
    value?: number;
    /**
     * @generated from protobuf field: optional bool is_add = 6;
     */
    isAdd?: boolean;
}
/**
 * @generated from protobuf message com.midnights.game.QuestUpdateQuestVarReq
 */
export interface QuestUpdateQuestVarReq {
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 9;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.QuestVarOp quest_var_op_list = 4;
     */
    questVarOpList: QuestVarOp[];
    /**
     * @generated from protobuf field: optional uint32 quest_id = 11;
     */
    questId?: number;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_var_seq = 1;
     */
    parentQuestVarSeq?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestUpdateQuestVarReq.CmdId
 */
export enum QuestUpdateQuestVarReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 447;
     */
    CMD_ID = 447,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestUpdateQuestVarRsp
 */
export interface QuestUpdateQuestVarRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_var_seq = 2;
     */
    parentQuestVarSeq?: number;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 8;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: optional uint32 quest_id = 15;
     */
    questId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestUpdateQuestVarRsp.CmdId
 */
export enum QuestUpdateQuestVarRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 439;
     */
    CMD_ID = 439,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestUpdateQuestVarNotify
 */
export interface QuestUpdateQuestVarNotify {
    /**
     * @generated from protobuf field: repeated int32 quest_var = 1;
     */
    questVar: number[];
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 12;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_var_seq = 8;
     */
    parentQuestVarSeq?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestUpdateQuestVarNotify.CmdId
 */
export enum QuestUpdateQuestVarNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 453;
     */
    CMD_ID = 453,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestDestroyNpcReq
 */
export interface QuestDestroyNpcReq {
    /**
     * @generated from protobuf field: optional uint32 npc_id = 1;
     */
    npcId?: number;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 12;
     */
    parentQuestId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestDestroyNpcReq.CmdId
 */
export enum QuestDestroyNpcReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 422;
     */
    CMD_ID = 422,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestDestroyNpcRsp
 */
export interface QuestDestroyNpcRsp {
    /**
     * @generated from protobuf field: optional uint32 npc_id = 12;
     */
    npcId?: number;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 4;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestDestroyNpcRsp.CmdId
 */
export enum QuestDestroyNpcRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 465;
     */
    CMD_ID = 465,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.BargainSnapshot
 */
export interface BargainSnapshot {
    /**
     * @generated from protobuf field: optional uint32 expected_price = 3;
     */
    expectedPrice?: number;
    /**
     * @generated from protobuf field: optional int32 cur_mood = 14;
     */
    curMood?: number;
    /**
     * @generated from protobuf field: optional uint32 price_low_limit = 2;
     */
    priceLowLimit?: number;
    /**
     * @generated from protobuf field: optional uint32 bargain_id = 5;
     */
    bargainId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.BargainStartNotify
 */
export interface BargainStartNotify {
    /**
     * @generated from protobuf field: optional uint32 bargain_id = 4;
     */
    bargainId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.BargainSnapshot snapshot = 2;
     */
    snapshot?: BargainSnapshot;
}
/**
 * @generated from protobuf enum com.midnights.game.BargainStartNotify.CmdId
 */
export enum BargainStartNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 404;
     */
    CMD_ID = 404,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.BargainOfferPriceReq
 */
export interface BargainOfferPriceReq {
    /**
     * @generated from protobuf field: optional uint32 bargain_id = 4;
     */
    bargainId?: number;
    /**
     * @generated from protobuf field: optional uint32 price = 6;
     */
    price?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.BargainOfferPriceReq.CmdId
 */
export enum BargainOfferPriceReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 493;
     */
    CMD_ID = 493,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.BargainOfferPriceRsp
 */
export interface BargainOfferPriceRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 result_param = 13;
     */
    resultParam?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.BargainResultType bargain_result = 14;
     */
    bargainResult?: BargainResultType;
    /**
     * @generated from protobuf field: optional int32 cur_mood = 6;
     */
    curMood?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.BargainOfferPriceRsp.CmdId
 */
export enum BargainOfferPriceRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 427;
     */
    CMD_ID = 427,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.BargainTerminateNotify
 */
export interface BargainTerminateNotify {
    /**
     * @generated from protobuf field: optional uint32 bargain_id = 15;
     */
    bargainId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.BargainTerminateNotify.CmdId
 */
export enum BargainTerminateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 494;
     */
    CMD_ID = 494,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetBargainDataReq
 */
export interface GetBargainDataReq {
    /**
     * @generated from protobuf field: optional uint32 bargain_id = 12;
     */
    bargainId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetBargainDataReq.CmdId
 */
export enum GetBargainDataReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 488;
     */
    CMD_ID = 488,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetBargainDataRsp
 */
export interface GetBargainDataRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 bargain_id = 14;
     */
    bargainId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.BargainSnapshot snapshot = 13;
     */
    snapshot?: BargainSnapshot;
}
/**
 * @generated from protobuf enum com.midnights.game.GetBargainDataRsp.CmdId
 */
export enum GetBargainDataRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 426;
     */
    CMD_ID = 426,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAllActivatedBargainDataReq
 */
export interface GetAllActivatedBargainDataReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetAllActivatedBargainDataReq.CmdId
 */
export enum GetAllActivatedBargainDataReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 463;
     */
    CMD_ID = 463,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetAllActivatedBargainDataRsp
 */
export interface GetAllActivatedBargainDataRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.BargainSnapshot snapshot_list = 5;
     */
    snapshotList: BargainSnapshot[];
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetAllActivatedBargainDataRsp.CmdId
 */
export enum GetAllActivatedBargainDataRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 495;
     */
    CMD_ID = 495,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ServerCondMeetQuestListUpdateNotify
 */
export interface ServerCondMeetQuestListUpdateNotify {
    /**
     * @generated from protobuf field: repeated uint32 del_quest_id_list = 1;
     */
    delQuestIdList: number[];
    /**
     * @generated from protobuf field: repeated uint32 add_quest_id_list = 12;
     */
    addQuestIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.ServerCondMeetQuestListUpdateNotify.CmdId
 */
export enum ServerCondMeetQuestListUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 406;
     */
    CMD_ID = 406,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestGlobalVar
 */
export interface QuestGlobalVar {
    /**
     * @generated from protobuf field: optional int32 value = 8;
     */
    value?: number;
    /**
     * @generated from protobuf field: optional uint32 key = 4;
     */
    key?: number;
}
/**
 * @generated from protobuf message com.midnights.game.QuestGlobalVarNotify
 */
export interface QuestGlobalVarNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.QuestGlobalVar var_list = 1;
     */
    varList: QuestGlobalVar[];
}
/**
 * @generated from protobuf enum com.midnights.game.QuestGlobalVarNotify.CmdId
 */
export enum QuestGlobalVarNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 434;
     */
    CMD_ID = 434,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestTransmitReq
 */
export interface QuestTransmitReq {
    /**
     * @generated from protobuf field: optional uint32 point_id = 15;
     */
    pointId?: number;
    /**
     * @generated from protobuf field: optional uint32 quest_id = 5;
     */
    questId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestTransmitReq.CmdId
 */
export enum QuestTransmitReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 450;
     */
    CMD_ID = 450,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestTransmitRsp
 */
export interface QuestTransmitRsp {
    /**
     * @generated from protobuf field: optional uint32 point_id = 12;
     */
    pointId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 quest_id = 3;
     */
    questId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestTransmitRsp.CmdId
 */
export enum QuestTransmitRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 443;
     */
    CMD_ID = 443,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PersonalLineAllDataReq
 */
export interface PersonalLineAllDataReq {
}
/**
 * @generated from protobuf enum com.midnights.game.PersonalLineAllDataReq.CmdId
 */
export enum PersonalLineAllDataReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 474;
     */
    CMD_ID = 474,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.LockedPersonallineData
 */
export interface LockedPersonallineData {
    /**
     * @generated from protobuf field: optional com.midnights.game.LockedPersonallineData.LockReason lock_reason = 2;
     */
    lockReason?: LockedPersonallineData_LockReason;
    /**
     * @generated from protobuf field: optional uint32 personal_line_id = 13;
     */
    personalLineId?: number;
    /**
     * @generated from protobuf oneof: param
     */
    param: {
        oneofKind: "chapterId";
        /**
         * @generated from protobuf field: uint32 chapter_id = 3;
         */
        chapterId: number;
    } | {
        oneofKind: "level";
        /**
         * @generated from protobuf field: uint32 level = 1;
         */
        level: number;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.LockedPersonallineData.LockReason
 */
export enum LockedPersonallineData_LockReason {
    /**
     * @generated from protobuf enum value: LEVEL = 0;
     */
    LEVEL = 0,
    /**
     * @generated from protobuf enum value: QUEST = 1;
     */
    QUEST = 1
}
/**
 * @generated from protobuf message com.midnights.game.PersonalLineAllDataRsp
 */
export interface PersonalLineAllDataRsp {
    /**
     * @generated from protobuf field: optional uint32 cur_finished_daily_task_count = 5;
     */
    curFinishedDailyTaskCount?: number;
    /**
     * @generated from protobuf field: repeated uint32 can_be_unlocked_personal_line_list = 13;
     */
    canBeUnlockedPersonalLineList: number[];
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 ongoing_personal_line_list = 8;
     */
    ongoingPersonalLineList: number[];
    /**
     * @generated from protobuf field: optional uint32 legendary_key_count = 11;
     */
    legendaryKeyCount?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.LockedPersonallineData locked_personal_line_list = 10;
     */
    lockedPersonalLineList: LockedPersonallineData[];
}
/**
 * @generated from protobuf enum com.midnights.game.PersonalLineAllDataRsp.CmdId
 */
export enum PersonalLineAllDataRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 476;
     */
    CMD_ID = 476,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.RedeemLegendaryKeyReq
 */
export interface RedeemLegendaryKeyReq {
}
/**
 * @generated from protobuf enum com.midnights.game.RedeemLegendaryKeyReq.CmdId
 */
export enum RedeemLegendaryKeyReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 446;
     */
    CMD_ID = 446,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.RedeemLegendaryKeyRsp
 */
export interface RedeemLegendaryKeyRsp {
    /**
     * @generated from protobuf field: optional uint32 legendary_key_count = 11;
     */
    legendaryKeyCount?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.RedeemLegendaryKeyRsp.CmdId
 */
export enum RedeemLegendaryKeyRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 441;
     */
    CMD_ID = 441,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UnlockPersonalLineReq
 */
export interface UnlockPersonalLineReq {
    /**
     * @generated from protobuf field: optional uint32 personal_line_id = 4;
     */
    personalLineId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockPersonalLineReq.CmdId
 */
export enum UnlockPersonalLineReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 449;
     */
    CMD_ID = 449,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.UnlockPersonalLineRsp
 */
export interface UnlockPersonalLineRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 personal_line_id = 10;
     */
    personalLineId?: number;
    /**
     * @generated from protobuf oneof: param
     */
    param: {
        oneofKind: "level";
        /**
         * @generated from protobuf field: uint32 level = 11;
         */
        level: number;
    } | {
        oneofKind: "chapterId";
        /**
         * @generated from protobuf field: uint32 chapter_id = 6;
         */
        chapterId: number;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockPersonalLineRsp.CmdId
 */
export enum UnlockPersonalLineRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 491;
     */
    CMD_ID = 491,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CancelFinishParentQuestNotify
 */
export interface CancelFinishParentQuestNotify {
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 6;
     */
    parentQuestId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.CancelFinishParentQuestNotify.CmdId
 */
export enum CancelFinishParentQuestNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 424;
     */
    CMD_ID = 424,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.QuestUpdateQuestTimeVarNotify
 */
export interface QuestUpdateQuestTimeVarNotify {
    /**
     * @generated from protobuf field: map<uint32, uint32> time_var_map = 1;
     */
    timeVarMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 3;
     */
    parentQuestId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.QuestUpdateQuestTimeVarNotify.CmdId
 */
export enum QuestUpdateQuestTimeVarNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 456;
     */
    CMD_ID = 456,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PersonalLineNewUnlockNotify
 */
export interface PersonalLineNewUnlockNotify {
    /**
     * @generated from protobuf field: repeated uint32 personal_line_id_list = 9;
     */
    personalLineIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.PersonalLineNewUnlockNotify.CmdId
 */
export enum PersonalLineNewUnlockNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 442;
     */
    CMD_ID = 442,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.NpcTalkStateNotify
 */
export interface NpcTalkStateNotify {
    /**
     * @generated from protobuf field: optional bool is_ban = 5;
     */
    isBan?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.NpcTalkStateNotify.CmdId
 */
export enum NpcTalkStateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 430;
     */
    CMD_ID = 430,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetQuestLackingResourceReq
 */
export interface GetQuestLackingResourceReq {
    /**
     * @generated from protobuf field: optional uint32 quest_id = 4;
     */
    questId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetQuestLackingResourceReq.CmdId
 */
export enum GetQuestLackingResourceReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 467;
     */
    CMD_ID = 467,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetQuestLackingResourceRsp
 */
export interface GetQuestLackingResourceRsp {
    /**
     * @generated from protobuf field: optional uint32 quest_id = 4;
     */
    questId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 lacked_npc_list = 8;
     */
    lackedNpcList: number[];
    /**
     * @generated from protobuf field: repeated uint32 lacked_place_list = 5;
     */
    lackedPlaceList: number[];
    /**
     * @generated from protobuf field: map<uint32, uint32> lacked_npc_map = 10;
     */
    lackedNpcMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: map<uint32, uint32> lacked_place_map = 2;
     */
    lackedPlaceMap: {
        [key: number]: number;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.GetQuestLackingResourceRsp.CmdId
 */
export enum GetQuestLackingResourceRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 458;
     */
    CMD_ID = 458,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetParentQuestVideoKeyReq
 */
export interface GetParentQuestVideoKeyReq {
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 15;
     */
    parentQuestId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetParentQuestVideoKeyReq.CmdId
 */
export enum GetParentQuestVideoKeyReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 470;
     */
    CMD_ID = 470,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetParentQuestVideoKeyRsp
 */
export interface GetParentQuestVideoKeyRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 video_key = 14;
     */
    videoKey?: bigint;
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 10;
     */
    parentQuestId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetParentQuestVideoKeyRsp.CmdId
 */
export enum GetParentQuestVideoKeyRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 417;
     */
    CMD_ID = 417,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ParentQuestInferenceDataNotify
 */
export interface ParentQuestInferenceDataNotify {
    /**
     * @generated from protobuf field: optional uint32 parent_quest_id = 2;
     */
    parentQuestId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.InferencePageInfo inference_page_list = 1;
     */
    inferencePageList: InferencePageInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.ParentQuestInferenceDataNotify.CmdId
 */
export enum ParentQuestInferenceDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 402;
     */
    CMD_ID = 402,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.InterpretInferenceWordReq
 */
export interface InterpretInferenceWordReq {
    /**
     * @generated from protobuf field: optional uint32 word_id = 2;
     */
    wordId?: number;
    /**
     * @generated from protobuf field: optional uint32 page_id = 4;
     */
    pageId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.InterpretInferenceWordReq.CmdId
 */
export enum InterpretInferenceWordReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 419;
     */
    CMD_ID = 419,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.InterpretInferenceWordRsp
 */
export interface InterpretInferenceWordRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 word_id = 14;
     */
    wordId?: number;
    /**
     * @generated from protobuf field: optional uint32 page_id = 13;
     */
    pageId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.InterpretInferenceWordRsp.CmdId
 */
export enum InterpretInferenceWordRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 461;
     */
    CMD_ID = 461,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AssociateInferenceWordReq
 */
export interface AssociateInferenceWordReq {
    /**
     * @generated from protobuf field: optional uint32 base_word_id = 7;
     */
    baseWordId?: number;
    /**
     * @generated from protobuf field: optional uint32 page_id = 11;
     */
    pageId?: number;
    /**
     * @generated from protobuf field: optional uint32 associate_word_id = 2;
     */
    associateWordId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AssociateInferenceWordReq.CmdId
 */
export enum AssociateInferenceWordReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 429;
     */
    CMD_ID = 429,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AssociateInferenceWordRsp
 */
export interface AssociateInferenceWordRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 base_word_id = 14;
     */
    baseWordId?: number;
    /**
     * @generated from protobuf field: optional uint32 associate_word_id = 13;
     */
    associateWordId?: number;
    /**
     * @generated from protobuf field: optional uint32 page_id = 1;
     */
    pageId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AssociateInferenceWordRsp.CmdId
 */
export enum AssociateInferenceWordRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 457;
     */
    CMD_ID = 457,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SubmitInferenceWordReq
 */
export interface SubmitInferenceWordReq {
    /**
     * @generated from protobuf field: optional uint32 word_id = 4;
     */
    wordId?: number;
    /**
     * @generated from protobuf field: optional uint32 page_id = 9;
     */
    pageId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SubmitInferenceWordReq.CmdId
 */
export enum SubmitInferenceWordReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 500;
     */
    CMD_ID = 500,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SubmitInferenceWordRsp
 */
export interface SubmitInferenceWordRsp {
    /**
     * @generated from protobuf field: optional uint32 word_id = 2;
     */
    wordId?: number;
    /**
     * @generated from protobuf field: optional uint32 page_id = 13;
     */
    pageId?: number;
    /**
     * @generated from protobuf field: optional uint32 conclusion_id = 5;
     */
    conclusionId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SubmitInferenceWordRsp.CmdId
 */
export enum SubmitInferenceWordRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 416;
     */
    CMD_ID = 416,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.ChapterState
 */
export enum ChapterState {
    /**
     * @generated from protobuf enum value: CHAPTER_STATE_INVALID = 0;
     */
    INVALID = 0,
    /**
     * @generated from protobuf enum value: CHAPTER_STATE_UNABLE_TO_BEGIN = 1;
     */
    UNABLE_TO_BEGIN = 1,
    /**
     * @generated from protobuf enum value: CHAPTER_STATE_BEGIN = 2;
     */
    BEGIN = 2,
    /**
     * @generated from protobuf enum value: CHAPTER_STATE_END = 3;
     */
    END = 3
}
/**
 * @generated from protobuf enum com.midnights.game.BargainResultType
 */
export enum BargainResultType {
    /**
     * @generated from protobuf enum value: BARGAIN_COMPLETE_SUCC = 0;
     */
    BARGAIN_COMPLETE_SUCC = 0,
    /**
     * @generated from protobuf enum value: BARGAIN_SINGLE_FAIL = 1;
     */
    BARGAIN_SINGLE_FAIL = 1,
    /**
     * @generated from protobuf enum value: BARGAIN_COMPLETE_FAIL = 2;
     */
    BARGAIN_COMPLETE_FAIL = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class QuestListNotify$Type extends MessageType<QuestListNotify> {
    constructor() {
        super("com.midnights.game.QuestListNotify", [
            { no: 1, name: "quest_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Quest }
        ]);
    }
    create(value?: PartialMessage<QuestListNotify>): QuestListNotify {
        const message = { questList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestListNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestListNotify): QuestListNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.Quest quest_list */ 1:
                    message.questList.push(Quest.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestListNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.Quest quest_list = 1; */
        for (let i = 0; i < message.questList.length; i++)
            Quest.internalBinaryWrite(message.questList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestListNotify
 */
export const QuestListNotify = new QuestListNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestListUpdateNotify$Type extends MessageType<QuestListUpdateNotify> {
    constructor() {
        super("com.midnights.game.QuestListUpdateNotify", [
            { no: 6, name: "quest_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Quest }
        ]);
    }
    create(value?: PartialMessage<QuestListUpdateNotify>): QuestListUpdateNotify {
        const message = { questList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestListUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestListUpdateNotify): QuestListUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.Quest quest_list */ 6:
                    message.questList.push(Quest.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestListUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.Quest quest_list = 6; */
        for (let i = 0; i < message.questList.length; i++)
            Quest.internalBinaryWrite(message.questList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestListUpdateNotify
 */
export const QuestListUpdateNotify = new QuestListUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestDelNotify$Type extends MessageType<QuestDelNotify> {
    constructor() {
        super("com.midnights.game.QuestDelNotify", [
            { no: 1, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestDelNotify>): QuestDelNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestDelNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestDelNotify): QuestDelNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 quest_id */ 1:
                    message.questId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestDelNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 quest_id = 1; */
        if (message.questId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.questId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestDelNotify
 */
export const QuestDelNotify = new QuestDelNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChildQuest$Type extends MessageType<ChildQuest> {
    constructor() {
        super("com.midnights.game.ChildQuest", [
            { no: 8, name: "quest_config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "state", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChildQuest>): ChildQuest {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChildQuest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChildQuest): ChildQuest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 quest_config_id */ 8:
                    message.questConfigId = reader.uint32();
                    break;
                case /* optional uint32 state */ 4:
                    message.state = reader.uint32();
                    break;
                case /* optional uint32 quest_id */ 15:
                    message.questId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChildQuest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 quest_config_id = 8; */
        if (message.questConfigId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.questConfigId);
        /* optional uint32 state = 4; */
        if (message.state !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.state);
        /* optional uint32 quest_id = 15; */
        if (message.questId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.questId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChildQuest
 */
export const ChildQuest = new ChildQuest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ParentQuestRandomInfo$Type extends MessageType<ParentQuestRandomInfo> {
    constructor() {
        super("com.midnights.game.ParentQuestRandomInfo", [
            { no: 1, name: "factor_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "template_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "entrance_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ParentQuestRandomInfo>): ParentQuestRandomInfo {
        const message = { factorList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ParentQuestRandomInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ParentQuestRandomInfo): ParentQuestRandomInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 factor_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.factorList.push(reader.uint32());
                    else
                        message.factorList.push(reader.uint32());
                    break;
                case /* optional uint32 template_id */ 8:
                    message.templateId = reader.uint32();
                    break;
                case /* optional uint32 entrance_id */ 2:
                    message.entranceId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ParentQuestRandomInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 factor_list = 1; */
        if (message.factorList.length) {
            writer.tag(1, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.factorList.length; i++)
                writer.uint32(message.factorList[i]);
            writer.join();
        }
        /* optional uint32 template_id = 8; */
        if (message.templateId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.templateId);
        /* optional uint32 entrance_id = 2; */
        if (message.entranceId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.entranceId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ParentQuestRandomInfo
 */
export const ParentQuestRandomInfo = new ParentQuestRandomInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InfernceWordInfo$Type extends MessageType<InfernceWordInfo> {
    constructor() {
        super("com.midnights.game.InfernceWordInfo", [
            { no: 8, name: "word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "is_interpret", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "is_submit", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "is_associate", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "unlock_by_word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<InfernceWordInfo>): InfernceWordInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<InfernceWordInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InfernceWordInfo): InfernceWordInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 word_id */ 8:
                    message.wordId = reader.uint32();
                    break;
                case /* optional bool is_interpret */ 15:
                    message.isInterpret = reader.bool();
                    break;
                case /* optional bool is_submit */ 10:
                    message.isSubmit = reader.bool();
                    break;
                case /* optional bool is_associate */ 6:
                    message.isAssociate = reader.bool();
                    break;
                case /* optional uint32 unlock_by_word_id */ 5:
                    message.unlockByWordId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InfernceWordInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 word_id = 8; */
        if (message.wordId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.wordId);
        /* optional bool is_interpret = 15; */
        if (message.isInterpret !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isInterpret);
        /* optional bool is_submit = 10; */
        if (message.isSubmit !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isSubmit);
        /* optional bool is_associate = 6; */
        if (message.isAssociate !== undefined)
            writer.tag(6, WireType.Varint).bool(message.isAssociate);
        /* optional uint32 unlock_by_word_id = 5; */
        if (message.unlockByWordId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.unlockByWordId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.InfernceWordInfo
 */
export const InfernceWordInfo = new InfernceWordInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InferencePageInfo$Type extends MessageType<InferencePageInfo> {
    constructor() {
        super("com.midnights.game.InferencePageInfo", [
            { no: 3, name: "page_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "unlock_word_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InfernceWordInfo }
        ]);
    }
    create(value?: PartialMessage<InferencePageInfo>): InferencePageInfo {
        const message = { unlockWordList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<InferencePageInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InferencePageInfo): InferencePageInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 page_id */ 3:
                    message.pageId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.InfernceWordInfo unlock_word_list */ 15:
                    message.unlockWordList.push(InfernceWordInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InferencePageInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 page_id = 3; */
        if (message.pageId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.pageId);
        /* repeated com.midnights.game.InfernceWordInfo unlock_word_list = 15; */
        for (let i = 0; i < message.unlockWordList.length; i++)
            InfernceWordInfo.internalBinaryWrite(message.unlockWordList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.InferencePageInfo
 */
export const InferencePageInfo = new InferencePageInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ParentQuest$Type extends MessageType<ParentQuest> {
    constructor() {
        super("com.midnights.game.ParentQuest", [
            { no: 14, name: "quest_var", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "time_var_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 1, name: "parent_quest_state", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "is_finished", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "inference_page_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InferencePageInfo },
            { no: 12, name: "random_info", kind: "message", T: () => ParentQuestRandomInfo },
            { no: 3, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "is_random", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "video_key", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "quest_var_seq", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "child_quest_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ChildQuest }
        ]);
    }
    create(value?: PartialMessage<ParentQuest>): ParentQuest {
        const message = { questVar: [], timeVarMap: {}, inferencePageList: [], childQuestList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ParentQuest>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ParentQuest): ParentQuest {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated int32 quest_var */ 14:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.questVar.push(reader.int32());
                    else
                        message.questVar.push(reader.int32());
                    break;
                case /* map<uint32, uint32> time_var_map */ 8:
                    this.binaryReadMap8(message.timeVarMap, reader, options);
                    break;
                case /* optional uint32 parent_quest_state */ 1:
                    message.parentQuestState = reader.uint32();
                    break;
                case /* optional bool is_finished */ 7:
                    message.isFinished = reader.bool();
                    break;
                case /* repeated com.midnights.game.InferencePageInfo inference_page_list */ 15:
                    message.inferencePageList.push(InferencePageInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional com.midnights.game.ParentQuestRandomInfo random_info */ 12:
                    message.randomInfo = ParentQuestRandomInfo.internalBinaryRead(reader, reader.uint32(), options, message.randomInfo);
                    break;
                case /* optional uint32 parent_quest_id */ 3:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* optional bool is_random */ 13:
                    message.isRandom = reader.bool();
                    break;
                case /* optional uint64 video_key */ 6:
                    message.videoKey = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 quest_var_seq */ 11:
                    message.questVarSeq = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ChildQuest child_quest_list */ 9:
                    message.childQuestList.push(ChildQuest.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap8(map: ParentQuest["timeVarMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof ParentQuest["timeVarMap"] | undefined, val: ParentQuest["timeVarMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.ParentQuest.time_var_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: ParentQuest, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated int32 quest_var = 14; */
        if (message.questVar.length) {
            writer.tag(14, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.questVar.length; i++)
                writer.int32(message.questVar[i]);
            writer.join();
        }
        /* map<uint32, uint32> time_var_map = 8; */
        for (let k of Object.keys(message.timeVarMap))
            writer.tag(8, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.timeVarMap[k as any]).join();
        /* optional uint32 parent_quest_state = 1; */
        if (message.parentQuestState !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.parentQuestState);
        /* optional bool is_finished = 7; */
        if (message.isFinished !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isFinished);
        /* repeated com.midnights.game.InferencePageInfo inference_page_list = 15; */
        for (let i = 0; i < message.inferencePageList.length; i++)
            InferencePageInfo.internalBinaryWrite(message.inferencePageList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.ParentQuestRandomInfo random_info = 12; */
        if (message.randomInfo)
            ParentQuestRandomInfo.internalBinaryWrite(message.randomInfo, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 parent_quest_id = 3; */
        if (message.parentQuestId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.parentQuestId);
        /* optional bool is_random = 13; */
        if (message.isRandom !== undefined)
            writer.tag(13, WireType.Varint).bool(message.isRandom);
        /* optional uint64 video_key = 6; */
        if (message.videoKey !== undefined)
            writer.tag(6, WireType.Varint).uint64(message.videoKey);
        /* optional uint32 quest_var_seq = 11; */
        if (message.questVarSeq !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.questVarSeq);
        /* repeated com.midnights.game.ChildQuest child_quest_list = 9; */
        for (let i = 0; i < message.childQuestList.length; i++)
            ChildQuest.internalBinaryWrite(message.childQuestList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ParentQuest
 */
export const ParentQuest = new ParentQuest$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinishedParentQuestNotify$Type extends MessageType<FinishedParentQuestNotify> {
    constructor() {
        super("com.midnights.game.FinishedParentQuestNotify", [
            { no: 2, name: "parent_quest_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ParentQuest }
        ]);
    }
    create(value?: PartialMessage<FinishedParentQuestNotify>): FinishedParentQuestNotify {
        const message = { parentQuestList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FinishedParentQuestNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FinishedParentQuestNotify): FinishedParentQuestNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ParentQuest parent_quest_list */ 2:
                    message.parentQuestList.push(ParentQuest.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FinishedParentQuestNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ParentQuest parent_quest_list = 2; */
        for (let i = 0; i < message.parentQuestList.length; i++)
            ParentQuest.internalBinaryWrite(message.parentQuestList[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FinishedParentQuestNotify
 */
export const FinishedParentQuestNotify = new FinishedParentQuestNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinishedParentQuestUpdateNotify$Type extends MessageType<FinishedParentQuestUpdateNotify> {
    constructor() {
        super("com.midnights.game.FinishedParentQuestUpdateNotify", [
            { no: 9, name: "parent_quest_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ParentQuest }
        ]);
    }
    create(value?: PartialMessage<FinishedParentQuestUpdateNotify>): FinishedParentQuestUpdateNotify {
        const message = { parentQuestList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FinishedParentQuestUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FinishedParentQuestUpdateNotify): FinishedParentQuestUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ParentQuest parent_quest_list */ 9:
                    message.parentQuestList.push(ParentQuest.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FinishedParentQuestUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ParentQuest parent_quest_list = 9; */
        for (let i = 0; i < message.parentQuestList.length; i++)
            ParentQuest.internalBinaryWrite(message.parentQuestList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FinishedParentQuestUpdateNotify
 */
export const FinishedParentQuestUpdateNotify = new FinishedParentQuestUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddQuestContentProgressReq$Type extends MessageType<AddQuestContentProgressReq> {
    constructor() {
        super("com.midnights.game.AddQuestContentProgressReq", [
            { no: 6, name: "content_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "add_progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AddQuestContentProgressReq>): AddQuestContentProgressReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddQuestContentProgressReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddQuestContentProgressReq): AddQuestContentProgressReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 content_type */ 6:
                    message.contentType = reader.uint32();
                    break;
                case /* optional uint32 param */ 12:
                    message.param = reader.uint32();
                    break;
                case /* optional uint32 add_progress */ 15:
                    message.addProgress = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddQuestContentProgressReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 content_type = 6; */
        if (message.contentType !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.contentType);
        /* optional uint32 param = 12; */
        if (message.param !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.param);
        /* optional uint32 add_progress = 15; */
        if (message.addProgress !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.addProgress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddQuestContentProgressReq
 */
export const AddQuestContentProgressReq = new AddQuestContentProgressReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddQuestContentProgressRsp$Type extends MessageType<AddQuestContentProgressRsp> {
    constructor() {
        super("com.midnights.game.AddQuestContentProgressRsp", [
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "content_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AddQuestContentProgressRsp>): AddQuestContentProgressRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddQuestContentProgressRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddQuestContentProgressRsp): AddQuestContentProgressRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 content_type */ 4:
                    message.contentType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddQuestContentProgressRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        /* optional uint32 content_type = 4; */
        if (message.contentType !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.contentType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddQuestContentProgressRsp
 */
export const AddQuestContentProgressRsp = new AddQuestContentProgressRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetQuestTalkHistoryReq$Type extends MessageType<GetQuestTalkHistoryReq> {
    constructor() {
        super("com.midnights.game.GetQuestTalkHistoryReq", [
            { no: 6, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetQuestTalkHistoryReq>): GetQuestTalkHistoryReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetQuestTalkHistoryReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetQuestTalkHistoryReq): GetQuestTalkHistoryReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 parent_quest_id */ 6:
                    message.parentQuestId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetQuestTalkHistoryReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 parent_quest_id = 6; */
        if (message.parentQuestId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.parentQuestId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetQuestTalkHistoryReq
 */
export const GetQuestTalkHistoryReq = new GetQuestTalkHistoryReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetQuestTalkHistoryRsp$Type extends MessageType<GetQuestTalkHistoryRsp> {
    constructor() {
        super("com.midnights.game.GetQuestTalkHistoryRsp", [
            { no: 13, name: "talk_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetQuestTalkHistoryRsp>): GetQuestTalkHistoryRsp {
        const message = { talkIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetQuestTalkHistoryRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetQuestTalkHistoryRsp): GetQuestTalkHistoryRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 talk_id_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.talkIdList.push(reader.uint32());
                    else
                        message.talkIdList.push(reader.uint32());
                    break;
                case /* optional uint32 parent_quest_id */ 7:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetQuestTalkHistoryRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 talk_id_list = 13; */
        if (message.talkIdList.length) {
            writer.tag(13, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.talkIdList.length; i++)
                writer.uint32(message.talkIdList[i]);
            writer.join();
        }
        /* optional uint32 parent_quest_id = 7; */
        if (message.parentQuestId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.parentQuestId);
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetQuestTalkHistoryRsp
 */
export const GetQuestTalkHistoryRsp = new GetQuestTalkHistoryRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestCreateEntityReq$Type extends MessageType<QuestCreateEntityReq> {
    constructor() {
        super("com.midnights.game.QuestCreateEntityReq", [
            { no: 9, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "is_rewind", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "entity", kind: "message", T: () => CreateEntityInfo }
        ]);
    }
    create(value?: PartialMessage<QuestCreateEntityReq>): QuestCreateEntityReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestCreateEntityReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestCreateEntityReq): QuestCreateEntityReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 parent_quest_id */ 9:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* optional bool is_rewind */ 3:
                    message.isRewind = reader.bool();
                    break;
                case /* optional uint32 quest_id */ 2:
                    message.questId = reader.uint32();
                    break;
                case /* optional com.midnights.game.CreateEntityInfo entity */ 13:
                    message.entity = CreateEntityInfo.internalBinaryRead(reader, reader.uint32(), options, message.entity);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestCreateEntityReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 parent_quest_id = 9; */
        if (message.parentQuestId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.parentQuestId);
        /* optional bool is_rewind = 3; */
        if (message.isRewind !== undefined)
            writer.tag(3, WireType.Varint).bool(message.isRewind);
        /* optional uint32 quest_id = 2; */
        if (message.questId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.questId);
        /* optional com.midnights.game.CreateEntityInfo entity = 13; */
        if (message.entity)
            CreateEntityInfo.internalBinaryWrite(message.entity, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestCreateEntityReq
 */
export const QuestCreateEntityReq = new QuestCreateEntityReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestCreateEntityRsp$Type extends MessageType<QuestCreateEntityRsp> {
    constructor() {
        super("com.midnights.game.QuestCreateEntityRsp", [
            { no: 13, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "entity", kind: "message", T: () => CreateEntityInfo },
            { no: 1, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "is_rewind", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<QuestCreateEntityRsp>): QuestCreateEntityRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestCreateEntityRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestCreateEntityRsp): QuestCreateEntityRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 quest_id */ 13:
                    message.questId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 entity_id */ 7:
                    message.entityId = reader.uint32();
                    break;
                case /* optional com.midnights.game.CreateEntityInfo entity */ 11:
                    message.entity = CreateEntityInfo.internalBinaryRead(reader, reader.uint32(), options, message.entity);
                    break;
                case /* optional uint32 parent_quest_id */ 1:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* optional bool is_rewind */ 14:
                    message.isRewind = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestCreateEntityRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 quest_id = 13; */
        if (message.questId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.questId);
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        /* optional uint32 entity_id = 7; */
        if (message.entityId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.entityId);
        /* optional com.midnights.game.CreateEntityInfo entity = 11; */
        if (message.entity)
            CreateEntityInfo.internalBinaryWrite(message.entity, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 parent_quest_id = 1; */
        if (message.parentQuestId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.parentQuestId);
        /* optional bool is_rewind = 14; */
        if (message.isRewind !== undefined)
            writer.tag(14, WireType.Varint).bool(message.isRewind);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestCreateEntityRsp
 */
export const QuestCreateEntityRsp = new QuestCreateEntityRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestDestroyEntityReq$Type extends MessageType<QuestDestroyEntityReq> {
    constructor() {
        super("com.midnights.game.QuestDestroyEntityReq", [
            { no: 2, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestDestroyEntityReq>): QuestDestroyEntityReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestDestroyEntityReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestDestroyEntityReq): QuestDestroyEntityReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 scene_id */ 2:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 entity_id */ 9:
                    message.entityId = reader.uint32();
                    break;
                case /* optional uint32 quest_id */ 8:
                    message.questId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestDestroyEntityReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 scene_id = 2; */
        if (message.sceneId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 entity_id = 9; */
        if (message.entityId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.entityId);
        /* optional uint32 quest_id = 8; */
        if (message.questId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.questId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestDestroyEntityReq
 */
export const QuestDestroyEntityReq = new QuestDestroyEntityReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestDestroyEntityRsp$Type extends MessageType<QuestDestroyEntityRsp> {
    constructor() {
        super("com.midnights.game.QuestDestroyEntityRsp", [
            { no: 14, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestDestroyEntityRsp>): QuestDestroyEntityRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestDestroyEntityRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestDestroyEntityRsp): QuestDestroyEntityRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 quest_id */ 14:
                    message.questId = reader.uint32();
                    break;
                case /* optional uint32 scene_id */ 9:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 entity_id */ 12:
                    message.entityId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestDestroyEntityRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 quest_id = 14; */
        if (message.questId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.questId);
        /* optional uint32 scene_id = 9; */
        if (message.sceneId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 entity_id = 12; */
        if (message.entityId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.entityId);
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestDestroyEntityRsp
 */
export const QuestDestroyEntityRsp = new QuestDestroyEntityRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChapterStateNotify$Type extends MessageType<ChapterStateNotify> {
    constructor() {
        super("com.midnights.game.ChapterStateNotify", [
            { no: 9, name: "chapter_state", kind: "enum", opt: true, T: () => ["com.midnights.game.ChapterState", ChapterState, "CHAPTER_STATE_"] },
            { no: 10, name: "need_player_level", kind: "message", T: () => ChapterStateNotify_NeedPlayerLevel },
            { no: 1, name: "need_begin_time", kind: "message", T: () => ChapterStateNotify_NeedBeginTime },
            { no: 2, name: "chapter_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChapterStateNotify>): ChapterStateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChapterStateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChapterStateNotify): ChapterStateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ChapterState chapter_state */ 9:
                    message.chapterState = reader.int32();
                    break;
                case /* optional com.midnights.game.ChapterStateNotify.NeedPlayerLevel need_player_level */ 10:
                    message.needPlayerLevel = ChapterStateNotify_NeedPlayerLevel.internalBinaryRead(reader, reader.uint32(), options, message.needPlayerLevel);
                    break;
                case /* optional com.midnights.game.ChapterStateNotify.NeedBeginTime need_begin_time */ 1:
                    message.needBeginTime = ChapterStateNotify_NeedBeginTime.internalBinaryRead(reader, reader.uint32(), options, message.needBeginTime);
                    break;
                case /* optional uint32 chapter_id */ 2:
                    message.chapterId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChapterStateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ChapterState chapter_state = 9; */
        if (message.chapterState !== undefined)
            writer.tag(9, WireType.Varint).int32(message.chapterState);
        /* optional com.midnights.game.ChapterStateNotify.NeedPlayerLevel need_player_level = 10; */
        if (message.needPlayerLevel)
            ChapterStateNotify_NeedPlayerLevel.internalBinaryWrite(message.needPlayerLevel, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.ChapterStateNotify.NeedBeginTime need_begin_time = 1; */
        if (message.needBeginTime)
            ChapterStateNotify_NeedBeginTime.internalBinaryWrite(message.needBeginTime, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 chapter_id = 2; */
        if (message.chapterId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.chapterId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChapterStateNotify
 */
export const ChapterStateNotify = new ChapterStateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChapterStateNotify_NeedPlayerLevel$Type extends MessageType<ChapterStateNotify_NeedPlayerLevel> {
    constructor() {
        super("com.midnights.game.ChapterStateNotify.NeedPlayerLevel", [
            { no: 2, name: "is_limit", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "config_need_player_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChapterStateNotify_NeedPlayerLevel>): ChapterStateNotify_NeedPlayerLevel {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChapterStateNotify_NeedPlayerLevel>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChapterStateNotify_NeedPlayerLevel): ChapterStateNotify_NeedPlayerLevel {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_limit */ 2:
                    message.isLimit = reader.bool();
                    break;
                case /* optional uint32 config_need_player_level */ 11:
                    message.configNeedPlayerLevel = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChapterStateNotify_NeedPlayerLevel, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_limit = 2; */
        if (message.isLimit !== undefined)
            writer.tag(2, WireType.Varint).bool(message.isLimit);
        /* optional uint32 config_need_player_level = 11; */
        if (message.configNeedPlayerLevel !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.configNeedPlayerLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChapterStateNotify.NeedPlayerLevel
 */
export const ChapterStateNotify_NeedPlayerLevel = new ChapterStateNotify_NeedPlayerLevel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChapterStateNotify_NeedBeginTime$Type extends MessageType<ChapterStateNotify_NeedBeginTime> {
    constructor() {
        super("com.midnights.game.ChapterStateNotify.NeedBeginTime", [
            { no: 3, name: "config_need_begin_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "is_limit", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ChapterStateNotify_NeedBeginTime>): ChapterStateNotify_NeedBeginTime {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChapterStateNotify_NeedBeginTime>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChapterStateNotify_NeedBeginTime): ChapterStateNotify_NeedBeginTime {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 config_need_begin_time */ 3:
                    message.configNeedBeginTime = reader.uint32();
                    break;
                case /* optional bool is_limit */ 7:
                    message.isLimit = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChapterStateNotify_NeedBeginTime, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 config_need_begin_time = 3; */
        if (message.configNeedBeginTime !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.configNeedBeginTime);
        /* optional bool is_limit = 7; */
        if (message.isLimit !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isLimit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChapterStateNotify.NeedBeginTime
 */
export const ChapterStateNotify_NeedBeginTime = new ChapterStateNotify_NeedBeginTime$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestProgressUpdateNotify$Type extends MessageType<QuestProgressUpdateNotify> {
    constructor() {
        super("com.midnights.game.QuestProgressUpdateNotify", [
            { no: 12, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "fail_progress_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "finish_progress_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestProgressUpdateNotify>): QuestProgressUpdateNotify {
        const message = { failProgressList: [], finishProgressList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestProgressUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestProgressUpdateNotify): QuestProgressUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 quest_id */ 12:
                    message.questId = reader.uint32();
                    break;
                case /* repeated uint32 fail_progress_list */ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.failProgressList.push(reader.uint32());
                    else
                        message.failProgressList.push(reader.uint32());
                    break;
                case /* repeated uint32 finish_progress_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.finishProgressList.push(reader.uint32());
                    else
                        message.finishProgressList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestProgressUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 quest_id = 12; */
        if (message.questId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.questId);
        /* repeated uint32 fail_progress_list = 6; */
        if (message.failProgressList.length) {
            writer.tag(6, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.failProgressList.length; i++)
                writer.uint32(message.failProgressList[i]);
            writer.join();
        }
        /* repeated uint32 finish_progress_list = 13; */
        if (message.finishProgressList.length) {
            writer.tag(13, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.finishProgressList.length; i++)
                writer.uint32(message.finishProgressList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestProgressUpdateNotify
 */
export const QuestProgressUpdateNotify = new QuestProgressUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestVarOp$Type extends MessageType<QuestVarOp> {
    constructor() {
        super("com.midnights.game.QuestVarOp", [
            { no: 9, name: "index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "value", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "is_add", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<QuestVarOp>): QuestVarOp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestVarOp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestVarOp): QuestVarOp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 index */ 9:
                    message.index = reader.uint32();
                    break;
                case /* optional int32 value */ 5:
                    message.value = reader.int32();
                    break;
                case /* optional bool is_add */ 6:
                    message.isAdd = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestVarOp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 index = 9; */
        if (message.index !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.index);
        /* optional int32 value = 5; */
        if (message.value !== undefined)
            writer.tag(5, WireType.Varint).int32(message.value);
        /* optional bool is_add = 6; */
        if (message.isAdd !== undefined)
            writer.tag(6, WireType.Varint).bool(message.isAdd);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestVarOp
 */
export const QuestVarOp = new QuestVarOp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestUpdateQuestVarReq$Type extends MessageType<QuestUpdateQuestVarReq> {
    constructor() {
        super("com.midnights.game.QuestUpdateQuestVarReq", [
            { no: 9, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "quest_var_op_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => QuestVarOp },
            { no: 11, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "parent_quest_var_seq", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestUpdateQuestVarReq>): QuestUpdateQuestVarReq {
        const message = { questVarOpList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestUpdateQuestVarReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestUpdateQuestVarReq): QuestUpdateQuestVarReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 parent_quest_id */ 9:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.QuestVarOp quest_var_op_list */ 4:
                    message.questVarOpList.push(QuestVarOp.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 quest_id */ 11:
                    message.questId = reader.uint32();
                    break;
                case /* optional uint32 parent_quest_var_seq */ 1:
                    message.parentQuestVarSeq = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestUpdateQuestVarReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 parent_quest_id = 9; */
        if (message.parentQuestId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.parentQuestId);
        /* repeated com.midnights.game.QuestVarOp quest_var_op_list = 4; */
        for (let i = 0; i < message.questVarOpList.length; i++)
            QuestVarOp.internalBinaryWrite(message.questVarOpList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 quest_id = 11; */
        if (message.questId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.questId);
        /* optional uint32 parent_quest_var_seq = 1; */
        if (message.parentQuestVarSeq !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.parentQuestVarSeq);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestUpdateQuestVarReq
 */
export const QuestUpdateQuestVarReq = new QuestUpdateQuestVarReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestUpdateQuestVarRsp$Type extends MessageType<QuestUpdateQuestVarRsp> {
    constructor() {
        super("com.midnights.game.QuestUpdateQuestVarRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "parent_quest_var_seq", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestUpdateQuestVarRsp>): QuestUpdateQuestVarRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestUpdateQuestVarRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestUpdateQuestVarRsp): QuestUpdateQuestVarRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 parent_quest_var_seq */ 2:
                    message.parentQuestVarSeq = reader.uint32();
                    break;
                case /* optional uint32 parent_quest_id */ 8:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* optional uint32 quest_id */ 15:
                    message.questId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestUpdateQuestVarRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* optional uint32 parent_quest_var_seq = 2; */
        if (message.parentQuestVarSeq !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.parentQuestVarSeq);
        /* optional uint32 parent_quest_id = 8; */
        if (message.parentQuestId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.parentQuestId);
        /* optional uint32 quest_id = 15; */
        if (message.questId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.questId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestUpdateQuestVarRsp
 */
export const QuestUpdateQuestVarRsp = new QuestUpdateQuestVarRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestUpdateQuestVarNotify$Type extends MessageType<QuestUpdateQuestVarNotify> {
    constructor() {
        super("com.midnights.game.QuestUpdateQuestVarNotify", [
            { no: 1, name: "quest_var", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "parent_quest_var_seq", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestUpdateQuestVarNotify>): QuestUpdateQuestVarNotify {
        const message = { questVar: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestUpdateQuestVarNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestUpdateQuestVarNotify): QuestUpdateQuestVarNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated int32 quest_var */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.questVar.push(reader.int32());
                    else
                        message.questVar.push(reader.int32());
                    break;
                case /* optional uint32 parent_quest_id */ 12:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* optional uint32 parent_quest_var_seq */ 8:
                    message.parentQuestVarSeq = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestUpdateQuestVarNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated int32 quest_var = 1; */
        if (message.questVar.length) {
            writer.tag(1, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.questVar.length; i++)
                writer.int32(message.questVar[i]);
            writer.join();
        }
        /* optional uint32 parent_quest_id = 12; */
        if (message.parentQuestId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.parentQuestId);
        /* optional uint32 parent_quest_var_seq = 8; */
        if (message.parentQuestVarSeq !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.parentQuestVarSeq);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestUpdateQuestVarNotify
 */
export const QuestUpdateQuestVarNotify = new QuestUpdateQuestVarNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestDestroyNpcReq$Type extends MessageType<QuestDestroyNpcReq> {
    constructor() {
        super("com.midnights.game.QuestDestroyNpcReq", [
            { no: 1, name: "npc_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestDestroyNpcReq>): QuestDestroyNpcReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestDestroyNpcReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestDestroyNpcReq): QuestDestroyNpcReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 npc_id */ 1:
                    message.npcId = reader.uint32();
                    break;
                case /* optional uint32 parent_quest_id */ 12:
                    message.parentQuestId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestDestroyNpcReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 npc_id = 1; */
        if (message.npcId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.npcId);
        /* optional uint32 parent_quest_id = 12; */
        if (message.parentQuestId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.parentQuestId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestDestroyNpcReq
 */
export const QuestDestroyNpcReq = new QuestDestroyNpcReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestDestroyNpcRsp$Type extends MessageType<QuestDestroyNpcRsp> {
    constructor() {
        super("com.midnights.game.QuestDestroyNpcRsp", [
            { no: 12, name: "npc_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestDestroyNpcRsp>): QuestDestroyNpcRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestDestroyNpcRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestDestroyNpcRsp): QuestDestroyNpcRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 npc_id */ 12:
                    message.npcId = reader.uint32();
                    break;
                case /* optional uint32 parent_quest_id */ 4:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestDestroyNpcRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 npc_id = 12; */
        if (message.npcId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.npcId);
        /* optional uint32 parent_quest_id = 4; */
        if (message.parentQuestId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.parentQuestId);
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestDestroyNpcRsp
 */
export const QuestDestroyNpcRsp = new QuestDestroyNpcRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BargainSnapshot$Type extends MessageType<BargainSnapshot> {
    constructor() {
        super("com.midnights.game.BargainSnapshot", [
            { no: 3, name: "expected_price", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "cur_mood", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "price_low_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "bargain_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BargainSnapshot>): BargainSnapshot {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BargainSnapshot>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BargainSnapshot): BargainSnapshot {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 expected_price */ 3:
                    message.expectedPrice = reader.uint32();
                    break;
                case /* optional int32 cur_mood */ 14:
                    message.curMood = reader.int32();
                    break;
                case /* optional uint32 price_low_limit */ 2:
                    message.priceLowLimit = reader.uint32();
                    break;
                case /* optional uint32 bargain_id */ 5:
                    message.bargainId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BargainSnapshot, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 expected_price = 3; */
        if (message.expectedPrice !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.expectedPrice);
        /* optional int32 cur_mood = 14; */
        if (message.curMood !== undefined)
            writer.tag(14, WireType.Varint).int32(message.curMood);
        /* optional uint32 price_low_limit = 2; */
        if (message.priceLowLimit !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.priceLowLimit);
        /* optional uint32 bargain_id = 5; */
        if (message.bargainId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.bargainId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BargainSnapshot
 */
export const BargainSnapshot = new BargainSnapshot$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BargainStartNotify$Type extends MessageType<BargainStartNotify> {
    constructor() {
        super("com.midnights.game.BargainStartNotify", [
            { no: 4, name: "bargain_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "snapshot", kind: "message", T: () => BargainSnapshot }
        ]);
    }
    create(value?: PartialMessage<BargainStartNotify>): BargainStartNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BargainStartNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BargainStartNotify): BargainStartNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bargain_id */ 4:
                    message.bargainId = reader.uint32();
                    break;
                case /* optional com.midnights.game.BargainSnapshot snapshot */ 2:
                    message.snapshot = BargainSnapshot.internalBinaryRead(reader, reader.uint32(), options, message.snapshot);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BargainStartNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bargain_id = 4; */
        if (message.bargainId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.bargainId);
        /* optional com.midnights.game.BargainSnapshot snapshot = 2; */
        if (message.snapshot)
            BargainSnapshot.internalBinaryWrite(message.snapshot, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BargainStartNotify
 */
export const BargainStartNotify = new BargainStartNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BargainOfferPriceReq$Type extends MessageType<BargainOfferPriceReq> {
    constructor() {
        super("com.midnights.game.BargainOfferPriceReq", [
            { no: 4, name: "bargain_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "price", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BargainOfferPriceReq>): BargainOfferPriceReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BargainOfferPriceReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BargainOfferPriceReq): BargainOfferPriceReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bargain_id */ 4:
                    message.bargainId = reader.uint32();
                    break;
                case /* optional uint32 price */ 6:
                    message.price = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BargainOfferPriceReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bargain_id = 4; */
        if (message.bargainId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.bargainId);
        /* optional uint32 price = 6; */
        if (message.price !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.price);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BargainOfferPriceReq
 */
export const BargainOfferPriceReq = new BargainOfferPriceReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BargainOfferPriceRsp$Type extends MessageType<BargainOfferPriceRsp> {
    constructor() {
        super("com.midnights.game.BargainOfferPriceRsp", [
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "result_param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "bargain_result", kind: "enum", opt: true, T: () => ["com.midnights.game.BargainResultType", BargainResultType] },
            { no: 6, name: "cur_mood", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<BargainOfferPriceRsp>): BargainOfferPriceRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BargainOfferPriceRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BargainOfferPriceRsp): BargainOfferPriceRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 result_param */ 13:
                    message.resultParam = reader.uint32();
                    break;
                case /* optional com.midnights.game.BargainResultType bargain_result */ 14:
                    message.bargainResult = reader.int32();
                    break;
                case /* optional int32 cur_mood */ 6:
                    message.curMood = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BargainOfferPriceRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        /* optional uint32 result_param = 13; */
        if (message.resultParam !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.resultParam);
        /* optional com.midnights.game.BargainResultType bargain_result = 14; */
        if (message.bargainResult !== undefined)
            writer.tag(14, WireType.Varint).int32(message.bargainResult);
        /* optional int32 cur_mood = 6; */
        if (message.curMood !== undefined)
            writer.tag(6, WireType.Varint).int32(message.curMood);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BargainOfferPriceRsp
 */
export const BargainOfferPriceRsp = new BargainOfferPriceRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BargainTerminateNotify$Type extends MessageType<BargainTerminateNotify> {
    constructor() {
        super("com.midnights.game.BargainTerminateNotify", [
            { no: 15, name: "bargain_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BargainTerminateNotify>): BargainTerminateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BargainTerminateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BargainTerminateNotify): BargainTerminateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bargain_id */ 15:
                    message.bargainId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BargainTerminateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bargain_id = 15; */
        if (message.bargainId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.bargainId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BargainTerminateNotify
 */
export const BargainTerminateNotify = new BargainTerminateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBargainDataReq$Type extends MessageType<GetBargainDataReq> {
    constructor() {
        super("com.midnights.game.GetBargainDataReq", [
            { no: 12, name: "bargain_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetBargainDataReq>): GetBargainDataReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetBargainDataReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetBargainDataReq): GetBargainDataReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bargain_id */ 12:
                    message.bargainId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetBargainDataReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bargain_id = 12; */
        if (message.bargainId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.bargainId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetBargainDataReq
 */
export const GetBargainDataReq = new GetBargainDataReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBargainDataRsp$Type extends MessageType<GetBargainDataRsp> {
    constructor() {
        super("com.midnights.game.GetBargainDataRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "bargain_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "snapshot", kind: "message", T: () => BargainSnapshot }
        ]);
    }
    create(value?: PartialMessage<GetBargainDataRsp>): GetBargainDataRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetBargainDataRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetBargainDataRsp): GetBargainDataRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 bargain_id */ 14:
                    message.bargainId = reader.uint32();
                    break;
                case /* optional com.midnights.game.BargainSnapshot snapshot */ 13:
                    message.snapshot = BargainSnapshot.internalBinaryRead(reader, reader.uint32(), options, message.snapshot);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetBargainDataRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* optional uint32 bargain_id = 14; */
        if (message.bargainId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.bargainId);
        /* optional com.midnights.game.BargainSnapshot snapshot = 13; */
        if (message.snapshot)
            BargainSnapshot.internalBinaryWrite(message.snapshot, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetBargainDataRsp
 */
export const GetBargainDataRsp = new GetBargainDataRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAllActivatedBargainDataReq$Type extends MessageType<GetAllActivatedBargainDataReq> {
    constructor() {
        super("com.midnights.game.GetAllActivatedBargainDataReq", []);
    }
    create(value?: PartialMessage<GetAllActivatedBargainDataReq>): GetAllActivatedBargainDataReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAllActivatedBargainDataReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAllActivatedBargainDataReq): GetAllActivatedBargainDataReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetAllActivatedBargainDataReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAllActivatedBargainDataReq
 */
export const GetAllActivatedBargainDataReq = new GetAllActivatedBargainDataReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetAllActivatedBargainDataRsp$Type extends MessageType<GetAllActivatedBargainDataRsp> {
    constructor() {
        super("com.midnights.game.GetAllActivatedBargainDataRsp", [
            { no: 5, name: "snapshot_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BargainSnapshot },
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetAllActivatedBargainDataRsp>): GetAllActivatedBargainDataRsp {
        const message = { snapshotList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetAllActivatedBargainDataRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetAllActivatedBargainDataRsp): GetAllActivatedBargainDataRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.BargainSnapshot snapshot_list */ 5:
                    message.snapshotList.push(BargainSnapshot.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetAllActivatedBargainDataRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.BargainSnapshot snapshot_list = 5; */
        for (let i = 0; i < message.snapshotList.length; i++)
            BargainSnapshot.internalBinaryWrite(message.snapshotList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetAllActivatedBargainDataRsp
 */
export const GetAllActivatedBargainDataRsp = new GetAllActivatedBargainDataRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ServerCondMeetQuestListUpdateNotify$Type extends MessageType<ServerCondMeetQuestListUpdateNotify> {
    constructor() {
        super("com.midnights.game.ServerCondMeetQuestListUpdateNotify", [
            { no: 1, name: "del_quest_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "add_quest_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ServerCondMeetQuestListUpdateNotify>): ServerCondMeetQuestListUpdateNotify {
        const message = { delQuestIdList: [], addQuestIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ServerCondMeetQuestListUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ServerCondMeetQuestListUpdateNotify): ServerCondMeetQuestListUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 del_quest_id_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.delQuestIdList.push(reader.uint32());
                    else
                        message.delQuestIdList.push(reader.uint32());
                    break;
                case /* repeated uint32 add_quest_id_list */ 12:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.addQuestIdList.push(reader.uint32());
                    else
                        message.addQuestIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ServerCondMeetQuestListUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 del_quest_id_list = 1; */
        if (message.delQuestIdList.length) {
            writer.tag(1, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.delQuestIdList.length; i++)
                writer.uint32(message.delQuestIdList[i]);
            writer.join();
        }
        /* repeated uint32 add_quest_id_list = 12; */
        if (message.addQuestIdList.length) {
            writer.tag(12, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.addQuestIdList.length; i++)
                writer.uint32(message.addQuestIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ServerCondMeetQuestListUpdateNotify
 */
export const ServerCondMeetQuestListUpdateNotify = new ServerCondMeetQuestListUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestGlobalVar$Type extends MessageType<QuestGlobalVar> {
    constructor() {
        super("com.midnights.game.QuestGlobalVar", [
            { no: 8, name: "value", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "key", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestGlobalVar>): QuestGlobalVar {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestGlobalVar>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestGlobalVar): QuestGlobalVar {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 value */ 8:
                    message.value = reader.int32();
                    break;
                case /* optional uint32 key */ 4:
                    message.key = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestGlobalVar, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 value = 8; */
        if (message.value !== undefined)
            writer.tag(8, WireType.Varint).int32(message.value);
        /* optional uint32 key = 4; */
        if (message.key !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.key);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestGlobalVar
 */
export const QuestGlobalVar = new QuestGlobalVar$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestGlobalVarNotify$Type extends MessageType<QuestGlobalVarNotify> {
    constructor() {
        super("com.midnights.game.QuestGlobalVarNotify", [
            { no: 1, name: "var_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => QuestGlobalVar }
        ]);
    }
    create(value?: PartialMessage<QuestGlobalVarNotify>): QuestGlobalVarNotify {
        const message = { varList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestGlobalVarNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestGlobalVarNotify): QuestGlobalVarNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.QuestGlobalVar var_list */ 1:
                    message.varList.push(QuestGlobalVar.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestGlobalVarNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.QuestGlobalVar var_list = 1; */
        for (let i = 0; i < message.varList.length; i++)
            QuestGlobalVar.internalBinaryWrite(message.varList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestGlobalVarNotify
 */
export const QuestGlobalVarNotify = new QuestGlobalVarNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestTransmitReq$Type extends MessageType<QuestTransmitReq> {
    constructor() {
        super("com.midnights.game.QuestTransmitReq", [
            { no: 15, name: "point_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestTransmitReq>): QuestTransmitReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestTransmitReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestTransmitReq): QuestTransmitReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 point_id */ 15:
                    message.pointId = reader.uint32();
                    break;
                case /* optional uint32 quest_id */ 5:
                    message.questId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestTransmitReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 point_id = 15; */
        if (message.pointId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.pointId);
        /* optional uint32 quest_id = 5; */
        if (message.questId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.questId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestTransmitReq
 */
export const QuestTransmitReq = new QuestTransmitReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestTransmitRsp$Type extends MessageType<QuestTransmitRsp> {
    constructor() {
        super("com.midnights.game.QuestTransmitRsp", [
            { no: 12, name: "point_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestTransmitRsp>): QuestTransmitRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestTransmitRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestTransmitRsp): QuestTransmitRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 point_id */ 12:
                    message.pointId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 quest_id */ 3:
                    message.questId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: QuestTransmitRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 point_id = 12; */
        if (message.pointId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.pointId);
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        /* optional uint32 quest_id = 3; */
        if (message.questId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.questId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestTransmitRsp
 */
export const QuestTransmitRsp = new QuestTransmitRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PersonalLineAllDataReq$Type extends MessageType<PersonalLineAllDataReq> {
    constructor() {
        super("com.midnights.game.PersonalLineAllDataReq", []);
    }
    create(value?: PartialMessage<PersonalLineAllDataReq>): PersonalLineAllDataReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PersonalLineAllDataReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PersonalLineAllDataReq): PersonalLineAllDataReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: PersonalLineAllDataReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PersonalLineAllDataReq
 */
export const PersonalLineAllDataReq = new PersonalLineAllDataReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LockedPersonallineData$Type extends MessageType<LockedPersonallineData> {
    constructor() {
        super("com.midnights.game.LockedPersonallineData", [
            { no: 2, name: "lock_reason", kind: "enum", opt: true, T: () => ["com.midnights.game.LockedPersonallineData.LockReason", LockedPersonallineData_LockReason] },
            { no: 13, name: "personal_line_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "chapter_id", kind: "scalar", oneof: "param", T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "level", kind: "scalar", oneof: "param", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<LockedPersonallineData>): LockedPersonallineData {
        const message = { param: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LockedPersonallineData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LockedPersonallineData): LockedPersonallineData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.LockedPersonallineData.LockReason lock_reason */ 2:
                    message.lockReason = reader.int32();
                    break;
                case /* optional uint32 personal_line_id */ 13:
                    message.personalLineId = reader.uint32();
                    break;
                case /* uint32 chapter_id */ 3:
                    message.param = {
                        oneofKind: "chapterId",
                        chapterId: reader.uint32()
                    };
                    break;
                case /* uint32 level */ 1:
                    message.param = {
                        oneofKind: "level",
                        level: reader.uint32()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LockedPersonallineData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.LockedPersonallineData.LockReason lock_reason = 2; */
        if (message.lockReason !== undefined)
            writer.tag(2, WireType.Varint).int32(message.lockReason);
        /* optional uint32 personal_line_id = 13; */
        if (message.personalLineId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.personalLineId);
        /* uint32 chapter_id = 3; */
        if (message.param.oneofKind === "chapterId")
            writer.tag(3, WireType.Varint).uint32(message.param.chapterId);
        /* uint32 level = 1; */
        if (message.param.oneofKind === "level")
            writer.tag(1, WireType.Varint).uint32(message.param.level);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.LockedPersonallineData
 */
export const LockedPersonallineData = new LockedPersonallineData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PersonalLineAllDataRsp$Type extends MessageType<PersonalLineAllDataRsp> {
    constructor() {
        super("com.midnights.game.PersonalLineAllDataRsp", [
            { no: 5, name: "cur_finished_daily_task_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "can_be_unlocked_personal_line_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "ongoing_personal_line_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "legendary_key_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "locked_personal_line_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LockedPersonallineData }
        ]);
    }
    create(value?: PartialMessage<PersonalLineAllDataRsp>): PersonalLineAllDataRsp {
        const message = { canBeUnlockedPersonalLineList: [], ongoingPersonalLineList: [], lockedPersonalLineList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PersonalLineAllDataRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PersonalLineAllDataRsp): PersonalLineAllDataRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 cur_finished_daily_task_count */ 5:
                    message.curFinishedDailyTaskCount = reader.uint32();
                    break;
                case /* repeated uint32 can_be_unlocked_personal_line_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.canBeUnlockedPersonalLineList.push(reader.uint32());
                    else
                        message.canBeUnlockedPersonalLineList.push(reader.uint32());
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 ongoing_personal_line_list */ 8:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.ongoingPersonalLineList.push(reader.uint32());
                    else
                        message.ongoingPersonalLineList.push(reader.uint32());
                    break;
                case /* optional uint32 legendary_key_count */ 11:
                    message.legendaryKeyCount = reader.uint32();
                    break;
                case /* repeated com.midnights.game.LockedPersonallineData locked_personal_line_list */ 10:
                    message.lockedPersonalLineList.push(LockedPersonallineData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PersonalLineAllDataRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 cur_finished_daily_task_count = 5; */
        if (message.curFinishedDailyTaskCount !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.curFinishedDailyTaskCount);
        /* repeated uint32 can_be_unlocked_personal_line_list = 13; */
        if (message.canBeUnlockedPersonalLineList.length) {
            writer.tag(13, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.canBeUnlockedPersonalLineList.length; i++)
                writer.uint32(message.canBeUnlockedPersonalLineList[i]);
            writer.join();
        }
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        /* repeated uint32 ongoing_personal_line_list = 8; */
        if (message.ongoingPersonalLineList.length) {
            writer.tag(8, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.ongoingPersonalLineList.length; i++)
                writer.uint32(message.ongoingPersonalLineList[i]);
            writer.join();
        }
        /* optional uint32 legendary_key_count = 11; */
        if (message.legendaryKeyCount !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.legendaryKeyCount);
        /* repeated com.midnights.game.LockedPersonallineData locked_personal_line_list = 10; */
        for (let i = 0; i < message.lockedPersonalLineList.length; i++)
            LockedPersonallineData.internalBinaryWrite(message.lockedPersonalLineList[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PersonalLineAllDataRsp
 */
export const PersonalLineAllDataRsp = new PersonalLineAllDataRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RedeemLegendaryKeyReq$Type extends MessageType<RedeemLegendaryKeyReq> {
    constructor() {
        super("com.midnights.game.RedeemLegendaryKeyReq", []);
    }
    create(value?: PartialMessage<RedeemLegendaryKeyReq>): RedeemLegendaryKeyReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RedeemLegendaryKeyReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RedeemLegendaryKeyReq): RedeemLegendaryKeyReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: RedeemLegendaryKeyReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RedeemLegendaryKeyReq
 */
export const RedeemLegendaryKeyReq = new RedeemLegendaryKeyReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RedeemLegendaryKeyRsp$Type extends MessageType<RedeemLegendaryKeyRsp> {
    constructor() {
        super("com.midnights.game.RedeemLegendaryKeyRsp", [
            { no: 11, name: "legendary_key_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<RedeemLegendaryKeyRsp>): RedeemLegendaryKeyRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RedeemLegendaryKeyRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RedeemLegendaryKeyRsp): RedeemLegendaryKeyRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 legendary_key_count */ 11:
                    message.legendaryKeyCount = reader.uint32();
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RedeemLegendaryKeyRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 legendary_key_count = 11; */
        if (message.legendaryKeyCount !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.legendaryKeyCount);
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RedeemLegendaryKeyRsp
 */
export const RedeemLegendaryKeyRsp = new RedeemLegendaryKeyRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnlockPersonalLineReq$Type extends MessageType<UnlockPersonalLineReq> {
    constructor() {
        super("com.midnights.game.UnlockPersonalLineReq", [
            { no: 4, name: "personal_line_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockPersonalLineReq>): UnlockPersonalLineReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockPersonalLineReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockPersonalLineReq): UnlockPersonalLineReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 personal_line_id */ 4:
                    message.personalLineId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockPersonalLineReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 personal_line_id = 4; */
        if (message.personalLineId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.personalLineId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockPersonalLineReq
 */
export const UnlockPersonalLineReq = new UnlockPersonalLineReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnlockPersonalLineRsp$Type extends MessageType<UnlockPersonalLineRsp> {
    constructor() {
        super("com.midnights.game.UnlockPersonalLineRsp", [
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "personal_line_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "level", kind: "scalar", oneof: "param", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "chapter_id", kind: "scalar", oneof: "param", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockPersonalLineRsp>): UnlockPersonalLineRsp {
        const message = { param: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockPersonalLineRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockPersonalLineRsp): UnlockPersonalLineRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 personal_line_id */ 10:
                    message.personalLineId = reader.uint32();
                    break;
                case /* uint32 level */ 11:
                    message.param = {
                        oneofKind: "level",
                        level: reader.uint32()
                    };
                    break;
                case /* uint32 chapter_id */ 6:
                    message.param = {
                        oneofKind: "chapterId",
                        chapterId: reader.uint32()
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockPersonalLineRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        /* optional uint32 personal_line_id = 10; */
        if (message.personalLineId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.personalLineId);
        /* uint32 level = 11; */
        if (message.param.oneofKind === "level")
            writer.tag(11, WireType.Varint).uint32(message.param.level);
        /* uint32 chapter_id = 6; */
        if (message.param.oneofKind === "chapterId")
            writer.tag(6, WireType.Varint).uint32(message.param.chapterId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockPersonalLineRsp
 */
export const UnlockPersonalLineRsp = new UnlockPersonalLineRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CancelFinishParentQuestNotify$Type extends MessageType<CancelFinishParentQuestNotify> {
    constructor() {
        super("com.midnights.game.CancelFinishParentQuestNotify", [
            { no: 6, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CancelFinishParentQuestNotify>): CancelFinishParentQuestNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CancelFinishParentQuestNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CancelFinishParentQuestNotify): CancelFinishParentQuestNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 parent_quest_id */ 6:
                    message.parentQuestId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CancelFinishParentQuestNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 parent_quest_id = 6; */
        if (message.parentQuestId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.parentQuestId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CancelFinishParentQuestNotify
 */
export const CancelFinishParentQuestNotify = new CancelFinishParentQuestNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class QuestUpdateQuestTimeVarNotify$Type extends MessageType<QuestUpdateQuestTimeVarNotify> {
    constructor() {
        super("com.midnights.game.QuestUpdateQuestTimeVarNotify", [
            { no: 1, name: "time_var_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 3, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<QuestUpdateQuestTimeVarNotify>): QuestUpdateQuestTimeVarNotify {
        const message = { timeVarMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<QuestUpdateQuestTimeVarNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: QuestUpdateQuestTimeVarNotify): QuestUpdateQuestTimeVarNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, uint32> time_var_map */ 1:
                    this.binaryReadMap1(message.timeVarMap, reader, options);
                    break;
                case /* optional uint32 parent_quest_id */ 3:
                    message.parentQuestId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap1(map: QuestUpdateQuestTimeVarNotify["timeVarMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof QuestUpdateQuestTimeVarNotify["timeVarMap"] | undefined, val: QuestUpdateQuestTimeVarNotify["timeVarMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.QuestUpdateQuestTimeVarNotify.time_var_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: QuestUpdateQuestTimeVarNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, uint32> time_var_map = 1; */
        for (let k of Object.keys(message.timeVarMap))
            writer.tag(1, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.timeVarMap[k as any]).join();
        /* optional uint32 parent_quest_id = 3; */
        if (message.parentQuestId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.parentQuestId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.QuestUpdateQuestTimeVarNotify
 */
export const QuestUpdateQuestTimeVarNotify = new QuestUpdateQuestTimeVarNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PersonalLineNewUnlockNotify$Type extends MessageType<PersonalLineNewUnlockNotify> {
    constructor() {
        super("com.midnights.game.PersonalLineNewUnlockNotify", [
            { no: 9, name: "personal_line_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PersonalLineNewUnlockNotify>): PersonalLineNewUnlockNotify {
        const message = { personalLineIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PersonalLineNewUnlockNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PersonalLineNewUnlockNotify): PersonalLineNewUnlockNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 personal_line_id_list */ 9:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.personalLineIdList.push(reader.uint32());
                    else
                        message.personalLineIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PersonalLineNewUnlockNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 personal_line_id_list = 9; */
        if (message.personalLineIdList.length) {
            writer.tag(9, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.personalLineIdList.length; i++)
                writer.uint32(message.personalLineIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PersonalLineNewUnlockNotify
 */
export const PersonalLineNewUnlockNotify = new PersonalLineNewUnlockNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NpcTalkStateNotify$Type extends MessageType<NpcTalkStateNotify> {
    constructor() {
        super("com.midnights.game.NpcTalkStateNotify", [
            { no: 5, name: "is_ban", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<NpcTalkStateNotify>): NpcTalkStateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<NpcTalkStateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: NpcTalkStateNotify): NpcTalkStateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_ban */ 5:
                    message.isBan = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: NpcTalkStateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_ban = 5; */
        if (message.isBan !== undefined)
            writer.tag(5, WireType.Varint).bool(message.isBan);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.NpcTalkStateNotify
 */
export const NpcTalkStateNotify = new NpcTalkStateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetQuestLackingResourceReq$Type extends MessageType<GetQuestLackingResourceReq> {
    constructor() {
        super("com.midnights.game.GetQuestLackingResourceReq", [
            { no: 4, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetQuestLackingResourceReq>): GetQuestLackingResourceReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetQuestLackingResourceReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetQuestLackingResourceReq): GetQuestLackingResourceReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 quest_id */ 4:
                    message.questId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetQuestLackingResourceReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 quest_id = 4; */
        if (message.questId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.questId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetQuestLackingResourceReq
 */
export const GetQuestLackingResourceReq = new GetQuestLackingResourceReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetQuestLackingResourceRsp$Type extends MessageType<GetQuestLackingResourceRsp> {
    constructor() {
        super("com.midnights.game.GetQuestLackingResourceRsp", [
            { no: 4, name: "quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "lacked_npc_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "lacked_place_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "lacked_npc_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 2, name: "lacked_place_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } }
        ]);
    }
    create(value?: PartialMessage<GetQuestLackingResourceRsp>): GetQuestLackingResourceRsp {
        const message = { lackedNpcList: [], lackedPlaceList: [], lackedNpcMap: {}, lackedPlaceMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetQuestLackingResourceRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetQuestLackingResourceRsp): GetQuestLackingResourceRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 quest_id */ 4:
                    message.questId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 lacked_npc_list */ 8:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.lackedNpcList.push(reader.uint32());
                    else
                        message.lackedNpcList.push(reader.uint32());
                    break;
                case /* repeated uint32 lacked_place_list */ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.lackedPlaceList.push(reader.uint32());
                    else
                        message.lackedPlaceList.push(reader.uint32());
                    break;
                case /* map<uint32, uint32> lacked_npc_map */ 10:
                    this.binaryReadMap10(message.lackedNpcMap, reader, options);
                    break;
                case /* map<uint32, uint32> lacked_place_map */ 2:
                    this.binaryReadMap2(message.lackedPlaceMap, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap10(map: GetQuestLackingResourceRsp["lackedNpcMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof GetQuestLackingResourceRsp["lackedNpcMap"] | undefined, val: GetQuestLackingResourceRsp["lackedNpcMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.GetQuestLackingResourceRsp.lacked_npc_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    private binaryReadMap2(map: GetQuestLackingResourceRsp["lackedPlaceMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof GetQuestLackingResourceRsp["lackedPlaceMap"] | undefined, val: GetQuestLackingResourceRsp["lackedPlaceMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.GetQuestLackingResourceRsp.lacked_place_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: GetQuestLackingResourceRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 quest_id = 4; */
        if (message.questId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.questId);
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        /* repeated uint32 lacked_npc_list = 8; */
        if (message.lackedNpcList.length) {
            writer.tag(8, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.lackedNpcList.length; i++)
                writer.uint32(message.lackedNpcList[i]);
            writer.join();
        }
        /* repeated uint32 lacked_place_list = 5; */
        if (message.lackedPlaceList.length) {
            writer.tag(5, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.lackedPlaceList.length; i++)
                writer.uint32(message.lackedPlaceList[i]);
            writer.join();
        }
        /* map<uint32, uint32> lacked_npc_map = 10; */
        for (let k of Object.keys(message.lackedNpcMap))
            writer.tag(10, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.lackedNpcMap[k as any]).join();
        /* map<uint32, uint32> lacked_place_map = 2; */
        for (let k of Object.keys(message.lackedPlaceMap))
            writer.tag(2, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.lackedPlaceMap[k as any]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetQuestLackingResourceRsp
 */
export const GetQuestLackingResourceRsp = new GetQuestLackingResourceRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetParentQuestVideoKeyReq$Type extends MessageType<GetParentQuestVideoKeyReq> {
    constructor() {
        super("com.midnights.game.GetParentQuestVideoKeyReq", [
            { no: 15, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetParentQuestVideoKeyReq>): GetParentQuestVideoKeyReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetParentQuestVideoKeyReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetParentQuestVideoKeyReq): GetParentQuestVideoKeyReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 parent_quest_id */ 15:
                    message.parentQuestId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetParentQuestVideoKeyReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 parent_quest_id = 15; */
        if (message.parentQuestId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.parentQuestId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetParentQuestVideoKeyReq
 */
export const GetParentQuestVideoKeyReq = new GetParentQuestVideoKeyReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetParentQuestVideoKeyRsp$Type extends MessageType<GetParentQuestVideoKeyRsp> {
    constructor() {
        super("com.midnights.game.GetParentQuestVideoKeyRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "video_key", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetParentQuestVideoKeyRsp>): GetParentQuestVideoKeyRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetParentQuestVideoKeyRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetParentQuestVideoKeyRsp): GetParentQuestVideoKeyRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 video_key */ 14:
                    message.videoKey = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 parent_quest_id */ 10:
                    message.parentQuestId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetParentQuestVideoKeyRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* optional uint64 video_key = 14; */
        if (message.videoKey !== undefined)
            writer.tag(14, WireType.Varint).uint64(message.videoKey);
        /* optional uint32 parent_quest_id = 10; */
        if (message.parentQuestId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.parentQuestId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetParentQuestVideoKeyRsp
 */
export const GetParentQuestVideoKeyRsp = new GetParentQuestVideoKeyRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ParentQuestInferenceDataNotify$Type extends MessageType<ParentQuestInferenceDataNotify> {
    constructor() {
        super("com.midnights.game.ParentQuestInferenceDataNotify", [
            { no: 2, name: "parent_quest_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "inference_page_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InferencePageInfo }
        ]);
    }
    create(value?: PartialMessage<ParentQuestInferenceDataNotify>): ParentQuestInferenceDataNotify {
        const message = { inferencePageList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ParentQuestInferenceDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ParentQuestInferenceDataNotify): ParentQuestInferenceDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 parent_quest_id */ 2:
                    message.parentQuestId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.InferencePageInfo inference_page_list */ 1:
                    message.inferencePageList.push(InferencePageInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ParentQuestInferenceDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 parent_quest_id = 2; */
        if (message.parentQuestId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.parentQuestId);
        /* repeated com.midnights.game.InferencePageInfo inference_page_list = 1; */
        for (let i = 0; i < message.inferencePageList.length; i++)
            InferencePageInfo.internalBinaryWrite(message.inferencePageList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ParentQuestInferenceDataNotify
 */
export const ParentQuestInferenceDataNotify = new ParentQuestInferenceDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InterpretInferenceWordReq$Type extends MessageType<InterpretInferenceWordReq> {
    constructor() {
        super("com.midnights.game.InterpretInferenceWordReq", [
            { no: 2, name: "word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "page_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<InterpretInferenceWordReq>): InterpretInferenceWordReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<InterpretInferenceWordReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InterpretInferenceWordReq): InterpretInferenceWordReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 word_id */ 2:
                    message.wordId = reader.uint32();
                    break;
                case /* optional uint32 page_id */ 4:
                    message.pageId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InterpretInferenceWordReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 word_id = 2; */
        if (message.wordId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.wordId);
        /* optional uint32 page_id = 4; */
        if (message.pageId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.pageId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.InterpretInferenceWordReq
 */
export const InterpretInferenceWordReq = new InterpretInferenceWordReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InterpretInferenceWordRsp$Type extends MessageType<InterpretInferenceWordRsp> {
    constructor() {
        super("com.midnights.game.InterpretInferenceWordRsp", [
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "page_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<InterpretInferenceWordRsp>): InterpretInferenceWordRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<InterpretInferenceWordRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: InterpretInferenceWordRsp): InterpretInferenceWordRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 word_id */ 14:
                    message.wordId = reader.uint32();
                    break;
                case /* optional uint32 page_id */ 13:
                    message.pageId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: InterpretInferenceWordRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        /* optional uint32 word_id = 14; */
        if (message.wordId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.wordId);
        /* optional uint32 page_id = 13; */
        if (message.pageId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.pageId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.InterpretInferenceWordRsp
 */
export const InterpretInferenceWordRsp = new InterpretInferenceWordRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AssociateInferenceWordReq$Type extends MessageType<AssociateInferenceWordReq> {
    constructor() {
        super("com.midnights.game.AssociateInferenceWordReq", [
            { no: 7, name: "base_word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "page_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "associate_word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AssociateInferenceWordReq>): AssociateInferenceWordReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AssociateInferenceWordReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssociateInferenceWordReq): AssociateInferenceWordReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 base_word_id */ 7:
                    message.baseWordId = reader.uint32();
                    break;
                case /* optional uint32 page_id */ 11:
                    message.pageId = reader.uint32();
                    break;
                case /* optional uint32 associate_word_id */ 2:
                    message.associateWordId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AssociateInferenceWordReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 base_word_id = 7; */
        if (message.baseWordId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.baseWordId);
        /* optional uint32 page_id = 11; */
        if (message.pageId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.pageId);
        /* optional uint32 associate_word_id = 2; */
        if (message.associateWordId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.associateWordId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AssociateInferenceWordReq
 */
export const AssociateInferenceWordReq = new AssociateInferenceWordReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AssociateInferenceWordRsp$Type extends MessageType<AssociateInferenceWordRsp> {
    constructor() {
        super("com.midnights.game.AssociateInferenceWordRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "base_word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "associate_word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "page_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AssociateInferenceWordRsp>): AssociateInferenceWordRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AssociateInferenceWordRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AssociateInferenceWordRsp): AssociateInferenceWordRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 base_word_id */ 14:
                    message.baseWordId = reader.uint32();
                    break;
                case /* optional uint32 associate_word_id */ 13:
                    message.associateWordId = reader.uint32();
                    break;
                case /* optional uint32 page_id */ 1:
                    message.pageId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AssociateInferenceWordRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        /* optional uint32 base_word_id = 14; */
        if (message.baseWordId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.baseWordId);
        /* optional uint32 associate_word_id = 13; */
        if (message.associateWordId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.associateWordId);
        /* optional uint32 page_id = 1; */
        if (message.pageId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.pageId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AssociateInferenceWordRsp
 */
export const AssociateInferenceWordRsp = new AssociateInferenceWordRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubmitInferenceWordReq$Type extends MessageType<SubmitInferenceWordReq> {
    constructor() {
        super("com.midnights.game.SubmitInferenceWordReq", [
            { no: 4, name: "word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "page_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SubmitInferenceWordReq>): SubmitInferenceWordReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SubmitInferenceWordReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SubmitInferenceWordReq): SubmitInferenceWordReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 word_id */ 4:
                    message.wordId = reader.uint32();
                    break;
                case /* optional uint32 page_id */ 9:
                    message.pageId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SubmitInferenceWordReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 word_id = 4; */
        if (message.wordId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.wordId);
        /* optional uint32 page_id = 9; */
        if (message.pageId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.pageId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SubmitInferenceWordReq
 */
export const SubmitInferenceWordReq = new SubmitInferenceWordReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubmitInferenceWordRsp$Type extends MessageType<SubmitInferenceWordRsp> {
    constructor() {
        super("com.midnights.game.SubmitInferenceWordRsp", [
            { no: 2, name: "word_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "page_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "conclusion_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SubmitInferenceWordRsp>): SubmitInferenceWordRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SubmitInferenceWordRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SubmitInferenceWordRsp): SubmitInferenceWordRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 word_id */ 2:
                    message.wordId = reader.uint32();
                    break;
                case /* optional uint32 page_id */ 13:
                    message.pageId = reader.uint32();
                    break;
                case /* optional uint32 conclusion_id */ 5:
                    message.conclusionId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SubmitInferenceWordRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 word_id = 2; */
        if (message.wordId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.wordId);
        /* optional uint32 page_id = 13; */
        if (message.pageId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.pageId);
        /* optional uint32 conclusion_id = 5; */
        if (message.conclusionId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.conclusionId);
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SubmitInferenceWordRsp
 */
export const SubmitInferenceWordRsp = new SubmitInferenceWordRsp$Type();
