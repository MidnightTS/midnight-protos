/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: Unk3000_DCHMAMFIFOF.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class Unk3000_DCHMAMFIFOF extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        Unk3000_PAFIGDFHGNA?: number;
        finish_time?: number;
        param?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("Unk3000_PAFIGDFHGNA" in data && data.Unk3000_PAFIGDFHGNA != undefined) {
                this.Unk3000_PAFIGDFHGNA = data.Unk3000_PAFIGDFHGNA;
            }
            if ("finish_time" in data && data.finish_time != undefined) {
                this.finish_time = data.finish_time;
            }
            if ("param" in data && data.param != undefined) {
                this.param = data.param;
            }
        }
    }
    get Unk3000_PAFIGDFHGNA() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set Unk3000_PAFIGDFHGNA(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get finish_time() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set finish_time(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get param() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0) as number;
    }
    set param(value: number) {
        pb_1.Message.setField(this, 14, value);
    }
    static fromObject(data: {
        Unk3000_PAFIGDFHGNA?: number;
        finish_time?: number;
        param?: number;
    }): Unk3000_DCHMAMFIFOF {
        const message = new Unk3000_DCHMAMFIFOF({});
        if (data.Unk3000_PAFIGDFHGNA != null) {
            message.Unk3000_PAFIGDFHGNA = data.Unk3000_PAFIGDFHGNA;
        }
        if (data.finish_time != null) {
            message.finish_time = data.finish_time;
        }
        if (data.param != null) {
            message.param = data.param;
        }
        return message;
    }
    toObject() {
        const data: {
            Unk3000_PAFIGDFHGNA?: number;
            finish_time?: number;
            param?: number;
        } = {};
        if (this.Unk3000_PAFIGDFHGNA != null) {
            data.Unk3000_PAFIGDFHGNA = this.Unk3000_PAFIGDFHGNA;
        }
        if (this.finish_time != null) {
            data.finish_time = this.finish_time;
        }
        if (this.param != null) {
            data.param = this.param;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.Unk3000_PAFIGDFHGNA != 0)
            writer.writeUint32(1, this.Unk3000_PAFIGDFHGNA);
        if (this.finish_time != 0)
            writer.writeUint32(4, this.finish_time);
        if (this.param != 0)
            writer.writeUint32(14, this.param);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Unk3000_DCHMAMFIFOF {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Unk3000_DCHMAMFIFOF();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.Unk3000_PAFIGDFHGNA = reader.readUint32();
                    break;
                case 4:
                    message.finish_time = reader.readUint32();
                    break;
                case 14:
                    message.param = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): Unk3000_DCHMAMFIFOF {
        return Unk3000_DCHMAMFIFOF.deserialize(bytes);
    }
}
