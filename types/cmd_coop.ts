// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_coop.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message com.midnights.game.MainCoop
 */
export interface MainCoop {
    /**
     * @generated from protobuf field: map<uint32, uint32> seen_ending_map = 13;
     */
    seenEndingMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: map<uint32, int32> normal_var_map = 4;
     */
    normalVarMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 self_confidence = 5;
     */
    selfConfidence?: number;
    /**
     * @generated from protobuf field: repeated uint32 save_point_id_list = 1;
     */
    savePointIdList: number[];
    /**
     * @generated from protobuf field: optional com.midnights.game.MainCoop.Status status = 6;
     */
    status?: MainCoop_Status;
    /**
     * @generated from protobuf field: map<uint32, int32> temp_var_map = 11;
     */
    tempVarMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 id = 9;
     */
    id?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MainCoop.Status
 */
export enum MainCoop_Status {
    /**
     * @generated from protobuf enum value: INVALID = 0;
     */
    INVALID = 0,
    /**
     * @generated from protobuf enum value: RUNNING = 1;
     */
    RUNNING = 1,
    /**
     * @generated from protobuf enum value: FINISHED = 2;
     */
    FINISHED = 2
}
/**
 * @generated from protobuf message com.midnights.game.AllCoopInfoNotify
 */
export interface AllCoopInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.MainCoop main_coop_list = 14;
     */
    mainCoopList: MainCoop[];
}
/**
 * @generated from protobuf enum com.midnights.game.AllCoopInfoNotify.CmdId
 */
export enum AllCoopInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1976;
     */
    CMD_ID = 1976,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.MainCoopUpdateNotify
 */
export interface MainCoopUpdateNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.MainCoop main_coop_list = 5;
     */
    mainCoopList: MainCoop[];
}
/**
 * @generated from protobuf enum com.midnights.game.MainCoopUpdateNotify.CmdId
 */
export enum MainCoopUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1968;
     */
    CMD_ID = 1968,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SaveMainCoopReq
 */
export interface SaveMainCoopReq {
    /**
     * @generated from protobuf field: map<uint32, int32> normal_var_map = 15;
     */
    normalVarMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 self_confidence = 2;
     */
    selfConfidence?: number;
    /**
     * @generated from protobuf field: optional uint32 save_point_id = 1;
     */
    savePointId?: number;
    /**
     * @generated from protobuf field: map<uint32, int32> temp_var_map = 8;
     */
    tempVarMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 id = 3;
     */
    id?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SaveMainCoopReq.CmdId
 */
export enum SaveMainCoopReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1975;
     */
    CMD_ID = 1975,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SaveMainCoopRsp
 */
export interface SaveMainCoopRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 save_point_id_list = 15;
     */
    savePointIdList: number[];
    /**
     * @generated from protobuf field: optional uint32 id = 14;
     */
    id?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SaveMainCoopRsp.CmdId
 */
export enum SaveMainCoopRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1957;
     */
    CMD_ID = 1957,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FinishMainCoopReq
 */
export interface FinishMainCoopReq {
    /**
     * @generated from protobuf field: optional uint32 id = 10;
     */
    id?: number;
    /**
     * @generated from protobuf field: optional uint32 ending_save_point_id = 1;
     */
    endingSavePointId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FinishMainCoopReq.CmdId
 */
export enum FinishMainCoopReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1952;
     */
    CMD_ID = 1952,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FinishMainCoopRsp
 */
export interface FinishMainCoopRsp {
    /**
     * @generated from protobuf field: optional uint32 id = 2;
     */
    id?: number;
    /**
     * @generated from protobuf field: optional uint32 ending_save_point_id = 6;
     */
    endingSavePointId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FinishMainCoopRsp.CmdId
 */
export enum FinishMainCoopRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1981;
     */
    CMD_ID = 1981,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CoopPoint
 */
export interface CoopPoint {
    /**
     * @generated from protobuf field: optional uint32 self_confidence = 15;
     */
    selfConfidence?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.CoopPoint.State state = 10;
     */
    state?: CoopPoint_State;
    /**
     * @generated from protobuf field: optional uint32 id = 14;
     */
    id?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.CoopPoint.State
 */
export enum CoopPoint_State {
    /**
     * @generated from protobuf enum value: STATE_UNSTARTED = 0;
     */
    UNSTARTED = 0,
    /**
     * @generated from protobuf enum value: STATE_STARTED = 1;
     */
    STARTED = 1,
    /**
     * @generated from protobuf enum value: STATE_FINISHED = 2;
     */
    FINISHED = 2
}
/**
 * @generated from protobuf message com.midnights.game.CoopReward
 */
export interface CoopReward {
    /**
     * @generated from protobuf field: optional uint32 id = 5;
     */
    id?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.CoopReward.State state = 6;
     */
    state?: CoopReward_State;
}
/**
 * @generated from protobuf enum com.midnights.game.CoopReward.State
 */
export enum CoopReward_State {
    /**
     * @generated from protobuf enum value: STATE_UNLOCK = 0;
     */
    UNLOCK = 0,
    /**
     * @generated from protobuf enum value: STATE_LOCK = 1;
     */
    LOCK = 1,
    /**
     * @generated from protobuf enum value: STATE_TAKEN = 2;
     */
    TAKEN = 2
}
/**
 * @generated from protobuf message com.midnights.game.CoopCg
 */
export interface CoopCg {
    /**
     * @generated from protobuf field: optional bool is_unlock = 14;
     */
    isUnlock?: boolean;
    /**
     * @generated from protobuf field: optional uint32 id = 8;
     */
    id?: number;
}
/**
 * @generated from protobuf message com.midnights.game.CoopChapter
 */
export interface CoopChapter {
    /**
     * @generated from protobuf field: repeated com.midnights.game.CoopCg coop_cg_list = 1;
     */
    coopCgList: CoopCg[];
    /**
     * @generated from protobuf field: optional uint32 id = 2;
     */
    id?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.CoopPoint coop_point_list = 11;
     */
    coopPointList: CoopPoint[];
    /**
     * @generated from protobuf field: repeated uint32 finish_dialog_list = 10;
     */
    finishDialogList: number[];
    /**
     * @generated from protobuf field: optional uint32 finished_end_count = 14;
     */
    finishedEndCount?: number;
    /**
     * @generated from protobuf field: optional uint32 total_end_count = 7;
     */
    totalEndCount?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.CoopReward coop_reward_list = 5;
     */
    coopRewardList: CoopReward[];
    /**
     * @generated from protobuf field: repeated uint32 lock_reason_list = 12;
     */
    lockReasonList: number[];
    /**
     * @generated from protobuf field: optional com.midnights.game.CoopChapter.State state = 4;
     */
    state?: CoopChapter_State;
    /**
     * @generated from protobuf field: map<uint32, uint32> seen_ending_map = 9;
     */
    seenEndingMap: {
        [key: number]: number;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.CoopChapter.State
 */
export enum CoopChapter_State {
    /**
     * @generated from protobuf enum value: STATE_CLOSE = 0;
     */
    CLOSE = 0,
    /**
     * @generated from protobuf enum value: STATE_COND_NOT_MEET = 1;
     */
    COND_NOT_MEET = 1,
    /**
     * @generated from protobuf enum value: STATE_COND_MEET = 2;
     */
    COND_MEET = 2,
    /**
     * @generated from protobuf enum value: STATE_ACCEPT = 3;
     */
    ACCEPT = 3
}
/**
 * @generated from protobuf message com.midnights.game.CoopDataNotify
 */
export interface CoopDataNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.CoopChapter chapter_list = 15;
     */
    chapterList: CoopChapter[];
    /**
     * @generated from protobuf field: repeated uint32 viewed_chapter_list = 7;
     */
    viewedChapterList: number[];
    /**
     * @generated from protobuf field: optional bool is_have_progress = 10;
     */
    isHaveProgress?: boolean;
    /**
     * @generated from protobuf field: optional uint32 cur_coop_point = 5;
     */
    curCoopPoint?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.CoopDataNotify.CmdId
 */
export enum CoopDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1979;
     */
    CMD_ID = 1979,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CoopChapterUpdateNotify
 */
export interface CoopChapterUpdateNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.CoopChapter chapter_list = 14;
     */
    chapterList: CoopChapter[];
}
/**
 * @generated from protobuf enum com.midnights.game.CoopChapterUpdateNotify.CmdId
 */
export enum CoopChapterUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1972;
     */
    CMD_ID = 1972,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CoopCgUpdateNotify
 */
export interface CoopCgUpdateNotify {
    /**
     * @generated from protobuf field: repeated uint32 cg_list = 13;
     */
    cgList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.CoopCgUpdateNotify.CmdId
 */
export enum CoopCgUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1994;
     */
    CMD_ID = 1994,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CoopRewardUpdateNotify
 */
export interface CoopRewardUpdateNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.CoopReward reward_list = 7;
     */
    rewardList: CoopReward[];
}
/**
 * @generated from protobuf enum com.midnights.game.CoopRewardUpdateNotify.CmdId
 */
export enum CoopRewardUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1999;
     */
    CMD_ID = 1999,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UnlockCoopChapterReq
 */
export interface UnlockCoopChapterReq {
    /**
     * @generated from protobuf field: optional uint32 chapter_id = 3;
     */
    chapterId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockCoopChapterReq.CmdId
 */
export enum UnlockCoopChapterReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1970;
     */
    CMD_ID = 1970,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.UnlockCoopChapterRsp
 */
export interface UnlockCoopChapterRsp {
    /**
     * @generated from protobuf field: optional uint32 chapter_id = 4;
     */
    chapterId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 6;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockCoopChapterRsp.CmdId
 */
export enum UnlockCoopChapterRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1995;
     */
    CMD_ID = 1995,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CoopPointUpdateNotify
 */
export interface CoopPointUpdateNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.CoopPoint coop_point = 13;
     */
    coopPoint?: CoopPoint;
}
/**
 * @generated from protobuf enum com.midnights.game.CoopPointUpdateNotify.CmdId
 */
export enum CoopPointUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1991;
     */
    CMD_ID = 1991,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.StartCoopPointReq
 */
export interface StartCoopPointReq {
    /**
     * @generated from protobuf field: optional uint32 coop_point = 7;
     */
    coopPoint?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.StartCoopPointReq.CmdId
 */
export enum StartCoopPointReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1992;
     */
    CMD_ID = 1992,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.StartCoopPointRsp
 */
export interface StartCoopPointRsp {
    /**
     * @generated from protobuf field: optional bool is_start = 9;
     */
    isStart?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.MainCoop start_main_coop = 15;
     */
    startMainCoop?: MainCoop;
    /**
     * @generated from protobuf field: optional uint32 coop_point = 13;
     */
    coopPoint?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.StartCoopPointRsp.CmdId
 */
export enum StartCoopPointRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1964;
     */
    CMD_ID = 1964,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CancelCoopTaskReq
 */
export interface CancelCoopTaskReq {
    /**
     * @generated from protobuf field: optional uint32 chapter_id = 13;
     */
    chapterId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.CancelCoopTaskReq.CmdId
 */
export enum CancelCoopTaskReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1997;
     */
    CMD_ID = 1997,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.CancelCoopTaskRsp
 */
export interface CancelCoopTaskRsp {
    /**
     * @generated from protobuf field: optional uint32 chapter_id = 1;
     */
    chapterId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.CancelCoopTaskRsp.CmdId
 */
export enum CancelCoopTaskRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1987;
     */
    CMD_ID = 1987,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeCoopRewardReq
 */
export interface TakeCoopRewardReq {
    /**
     * @generated from protobuf field: optional uint32 reward_config_id = 6;
     */
    rewardConfigId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeCoopRewardReq.CmdId
 */
export enum TakeCoopRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1973;
     */
    CMD_ID = 1973,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeCoopRewardRsp
 */
export interface TakeCoopRewardRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 reward_config_id = 1;
     */
    rewardConfigId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeCoopRewardRsp.CmdId
 */
export enum TakeCoopRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1985;
     */
    CMD_ID = 1985,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CoopProgressUpdateNotify
 */
export interface CoopProgressUpdateNotify {
    /**
     * @generated from protobuf field: optional uint32 cur_coop_point = 11;
     */
    curCoopPoint?: number;
    /**
     * @generated from protobuf field: optional bool is_have_progress = 12;
     */
    isHaveProgress?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.CoopProgressUpdateNotify.CmdId
 */
export enum CoopProgressUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1998;
     */
    CMD_ID = 1998,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SaveCoopDialogReq
 */
export interface SaveCoopDialogReq {
    /**
     * @generated from protobuf field: optional uint32 main_coop_id = 11;
     */
    mainCoopId?: number;
    /**
     * @generated from protobuf field: optional uint32 dialog_id = 6;
     */
    dialogId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SaveCoopDialogReq.CmdId
 */
export enum SaveCoopDialogReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2000;
     */
    CMD_ID = 2000,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SaveCoopDialogRsp
 */
export interface SaveCoopDialogRsp {
    /**
     * @generated from protobuf field: optional uint32 dialog_id = 8;
     */
    dialogId?: number;
    /**
     * @generated from protobuf field: optional uint32 main_coop_id = 10;
     */
    mainCoopId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SaveCoopDialogRsp.CmdId
 */
export enum SaveCoopDialogRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1962;
     */
    CMD_ID = 1962,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CoopCgShowNotify
 */
export interface CoopCgShowNotify {
    /**
     * @generated from protobuf field: repeated uint32 cg_list = 10;
     */
    cgList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.CoopCgShowNotify.CmdId
 */
export enum CoopCgShowNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1983;
     */
    CMD_ID = 1983,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetCoopChapterViewedReq
 */
export interface SetCoopChapterViewedReq {
    /**
     * @generated from protobuf field: optional uint32 chapter_id = 2;
     */
    chapterId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetCoopChapterViewedReq.CmdId
 */
export enum SetCoopChapterViewedReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1965;
     */
    CMD_ID = 1965,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetCoopChapterViewedRsp
 */
export interface SetCoopChapterViewedRsp {
    /**
     * @generated from protobuf field: optional uint32 chapter_id = 11;
     */
    chapterId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetCoopChapterViewedRsp.CmdId
 */
export enum SetCoopChapterViewedRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1963;
     */
    CMD_ID = 1963,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.MainCoopFailNotify
 */
export interface MainCoopFailNotify {
    /**
     * @generated from protobuf field: optional string textmap_id = 7;
     */
    textmapId?: string;
    /**
     * @generated from protobuf field: optional uint32 chapter_id = 15;
     */
    chapterId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MainCoopFailNotify.CmdId
 */
export enum MainCoopFailNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1951;
     */
    CMD_ID = 1951,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class MainCoop$Type extends MessageType<MainCoop> {
    constructor() {
        super("com.midnights.game.MainCoop", [
            { no: 13, name: "seen_ending_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 4, name: "normal_var_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 5 /*ScalarType.INT32*/ } },
            { no: 5, name: "self_confidence", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "save_point_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "status", kind: "enum", opt: true, T: () => ["com.midnights.game.MainCoop.Status", MainCoop_Status] },
            { no: 11, name: "temp_var_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 5 /*ScalarType.INT32*/ } },
            { no: 9, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MainCoop>): MainCoop {
        const message = { seenEndingMap: {}, normalVarMap: {}, savePointIdList: [], tempVarMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MainCoop>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MainCoop): MainCoop {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, uint32> seen_ending_map */ 13:
                    this.binaryReadMap13(message.seenEndingMap, reader, options);
                    break;
                case /* map<uint32, int32> normal_var_map */ 4:
                    this.binaryReadMap4(message.normalVarMap, reader, options);
                    break;
                case /* optional uint32 self_confidence */ 5:
                    message.selfConfidence = reader.uint32();
                    break;
                case /* repeated uint32 save_point_id_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.savePointIdList.push(reader.uint32());
                    else
                        message.savePointIdList.push(reader.uint32());
                    break;
                case /* optional com.midnights.game.MainCoop.Status status */ 6:
                    message.status = reader.int32();
                    break;
                case /* map<uint32, int32> temp_var_map */ 11:
                    this.binaryReadMap11(message.tempVarMap, reader, options);
                    break;
                case /* optional uint32 id */ 9:
                    message.id = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap13(map: MainCoop["seenEndingMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof MainCoop["seenEndingMap"] | undefined, val: MainCoop["seenEndingMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.MainCoop.seen_ending_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    private binaryReadMap4(map: MainCoop["normalVarMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof MainCoop["normalVarMap"] | undefined, val: MainCoop["normalVarMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.int32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.MainCoop.normal_var_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    private binaryReadMap11(map: MainCoop["tempVarMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof MainCoop["tempVarMap"] | undefined, val: MainCoop["tempVarMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.int32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.MainCoop.temp_var_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: MainCoop, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, uint32> seen_ending_map = 13; */
        for (let k of Object.keys(message.seenEndingMap))
            writer.tag(13, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.seenEndingMap[k as any]).join();
        /* map<uint32, int32> normal_var_map = 4; */
        for (let k of Object.keys(message.normalVarMap))
            writer.tag(4, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).int32(message.normalVarMap[k as any]).join();
        /* optional uint32 self_confidence = 5; */
        if (message.selfConfidence !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.selfConfidence);
        /* repeated uint32 save_point_id_list = 1; */
        for (let i = 0; i < message.savePointIdList.length; i++)
            writer.tag(1, WireType.Varint).uint32(message.savePointIdList[i]);
        /* optional com.midnights.game.MainCoop.Status status = 6; */
        if (message.status !== undefined)
            writer.tag(6, WireType.Varint).int32(message.status);
        /* map<uint32, int32> temp_var_map = 11; */
        for (let k of Object.keys(message.tempVarMap))
            writer.tag(11, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).int32(message.tempVarMap[k as any]).join();
        /* optional uint32 id = 9; */
        if (message.id !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MainCoop
 */
export const MainCoop = new MainCoop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AllCoopInfoNotify$Type extends MessageType<AllCoopInfoNotify> {
    constructor() {
        super("com.midnights.game.AllCoopInfoNotify", [
            { no: 14, name: "main_coop_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => MainCoop }
        ]);
    }
    create(value?: PartialMessage<AllCoopInfoNotify>): AllCoopInfoNotify {
        const message = { mainCoopList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AllCoopInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AllCoopInfoNotify): AllCoopInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.MainCoop main_coop_list */ 14:
                    message.mainCoopList.push(MainCoop.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AllCoopInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.MainCoop main_coop_list = 14; */
        for (let i = 0; i < message.mainCoopList.length; i++)
            MainCoop.internalBinaryWrite(message.mainCoopList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AllCoopInfoNotify
 */
export const AllCoopInfoNotify = new AllCoopInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MainCoopUpdateNotify$Type extends MessageType<MainCoopUpdateNotify> {
    constructor() {
        super("com.midnights.game.MainCoopUpdateNotify", [
            { no: 5, name: "main_coop_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => MainCoop }
        ]);
    }
    create(value?: PartialMessage<MainCoopUpdateNotify>): MainCoopUpdateNotify {
        const message = { mainCoopList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MainCoopUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MainCoopUpdateNotify): MainCoopUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.MainCoop main_coop_list */ 5:
                    message.mainCoopList.push(MainCoop.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MainCoopUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.MainCoop main_coop_list = 5; */
        for (let i = 0; i < message.mainCoopList.length; i++)
            MainCoop.internalBinaryWrite(message.mainCoopList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MainCoopUpdateNotify
 */
export const MainCoopUpdateNotify = new MainCoopUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SaveMainCoopReq$Type extends MessageType<SaveMainCoopReq> {
    constructor() {
        super("com.midnights.game.SaveMainCoopReq", [
            { no: 15, name: "normal_var_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 5 /*ScalarType.INT32*/ } },
            { no: 2, name: "self_confidence", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "save_point_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "temp_var_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 5 /*ScalarType.INT32*/ } },
            { no: 3, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SaveMainCoopReq>): SaveMainCoopReq {
        const message = { normalVarMap: {}, tempVarMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SaveMainCoopReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SaveMainCoopReq): SaveMainCoopReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, int32> normal_var_map */ 15:
                    this.binaryReadMap15(message.normalVarMap, reader, options);
                    break;
                case /* optional uint32 self_confidence */ 2:
                    message.selfConfidence = reader.uint32();
                    break;
                case /* optional uint32 save_point_id */ 1:
                    message.savePointId = reader.uint32();
                    break;
                case /* map<uint32, int32> temp_var_map */ 8:
                    this.binaryReadMap8(message.tempVarMap, reader, options);
                    break;
                case /* optional uint32 id */ 3:
                    message.id = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap15(map: SaveMainCoopReq["normalVarMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof SaveMainCoopReq["normalVarMap"] | undefined, val: SaveMainCoopReq["normalVarMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.int32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.SaveMainCoopReq.normal_var_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    private binaryReadMap8(map: SaveMainCoopReq["tempVarMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof SaveMainCoopReq["tempVarMap"] | undefined, val: SaveMainCoopReq["tempVarMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.int32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.SaveMainCoopReq.temp_var_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: SaveMainCoopReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, int32> normal_var_map = 15; */
        for (let k of Object.keys(message.normalVarMap))
            writer.tag(15, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).int32(message.normalVarMap[k as any]).join();
        /* optional uint32 self_confidence = 2; */
        if (message.selfConfidence !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.selfConfidence);
        /* optional uint32 save_point_id = 1; */
        if (message.savePointId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.savePointId);
        /* map<uint32, int32> temp_var_map = 8; */
        for (let k of Object.keys(message.tempVarMap))
            writer.tag(8, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).int32(message.tempVarMap[k as any]).join();
        /* optional uint32 id = 3; */
        if (message.id !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SaveMainCoopReq
 */
export const SaveMainCoopReq = new SaveMainCoopReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SaveMainCoopRsp$Type extends MessageType<SaveMainCoopRsp> {
    constructor() {
        super("com.midnights.game.SaveMainCoopRsp", [
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "save_point_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SaveMainCoopRsp>): SaveMainCoopRsp {
        const message = { savePointIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SaveMainCoopRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SaveMainCoopRsp): SaveMainCoopRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 save_point_id_list */ 15:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.savePointIdList.push(reader.uint32());
                    else
                        message.savePointIdList.push(reader.uint32());
                    break;
                case /* optional uint32 id */ 14:
                    message.id = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SaveMainCoopRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        /* repeated uint32 save_point_id_list = 15; */
        for (let i = 0; i < message.savePointIdList.length; i++)
            writer.tag(15, WireType.Varint).uint32(message.savePointIdList[i]);
        /* optional uint32 id = 14; */
        if (message.id !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SaveMainCoopRsp
 */
export const SaveMainCoopRsp = new SaveMainCoopRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinishMainCoopReq$Type extends MessageType<FinishMainCoopReq> {
    constructor() {
        super("com.midnights.game.FinishMainCoopReq", [
            { no: 10, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "ending_save_point_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FinishMainCoopReq>): FinishMainCoopReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FinishMainCoopReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FinishMainCoopReq): FinishMainCoopReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 id */ 10:
                    message.id = reader.uint32();
                    break;
                case /* optional uint32 ending_save_point_id */ 1:
                    message.endingSavePointId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FinishMainCoopReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 id = 10; */
        if (message.id !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.id);
        /* optional uint32 ending_save_point_id = 1; */
        if (message.endingSavePointId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.endingSavePointId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FinishMainCoopReq
 */
export const FinishMainCoopReq = new FinishMainCoopReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FinishMainCoopRsp$Type extends MessageType<FinishMainCoopRsp> {
    constructor() {
        super("com.midnights.game.FinishMainCoopRsp", [
            { no: 2, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "ending_save_point_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<FinishMainCoopRsp>): FinishMainCoopRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FinishMainCoopRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FinishMainCoopRsp): FinishMainCoopRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 id */ 2:
                    message.id = reader.uint32();
                    break;
                case /* optional uint32 ending_save_point_id */ 6:
                    message.endingSavePointId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FinishMainCoopRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 id = 2; */
        if (message.id !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.id);
        /* optional uint32 ending_save_point_id = 6; */
        if (message.endingSavePointId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.endingSavePointId);
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FinishMainCoopRsp
 */
export const FinishMainCoopRsp = new FinishMainCoopRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopPoint$Type extends MessageType<CoopPoint> {
    constructor() {
        super("com.midnights.game.CoopPoint", [
            { no: 15, name: "self_confidence", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "state", kind: "enum", opt: true, T: () => ["com.midnights.game.CoopPoint.State", CoopPoint_State, "STATE_"] },
            { no: 14, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CoopPoint>): CoopPoint {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopPoint>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopPoint): CoopPoint {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 self_confidence */ 15:
                    message.selfConfidence = reader.uint32();
                    break;
                case /* optional com.midnights.game.CoopPoint.State state */ 10:
                    message.state = reader.int32();
                    break;
                case /* optional uint32 id */ 14:
                    message.id = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopPoint, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 self_confidence = 15; */
        if (message.selfConfidence !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.selfConfidence);
        /* optional com.midnights.game.CoopPoint.State state = 10; */
        if (message.state !== undefined)
            writer.tag(10, WireType.Varint).int32(message.state);
        /* optional uint32 id = 14; */
        if (message.id !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopPoint
 */
export const CoopPoint = new CoopPoint$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopReward$Type extends MessageType<CoopReward> {
    constructor() {
        super("com.midnights.game.CoopReward", [
            { no: 5, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "state", kind: "enum", opt: true, T: () => ["com.midnights.game.CoopReward.State", CoopReward_State, "STATE_"] }
        ]);
    }
    create(value?: PartialMessage<CoopReward>): CoopReward {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopReward>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopReward): CoopReward {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 id */ 5:
                    message.id = reader.uint32();
                    break;
                case /* optional com.midnights.game.CoopReward.State state */ 6:
                    message.state = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopReward, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 id = 5; */
        if (message.id !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.id);
        /* optional com.midnights.game.CoopReward.State state = 6; */
        if (message.state !== undefined)
            writer.tag(6, WireType.Varint).int32(message.state);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopReward
 */
export const CoopReward = new CoopReward$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopCg$Type extends MessageType<CoopCg> {
    constructor() {
        super("com.midnights.game.CoopCg", [
            { no: 14, name: "is_unlock", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CoopCg>): CoopCg {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopCg>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopCg): CoopCg {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_unlock */ 14:
                    message.isUnlock = reader.bool();
                    break;
                case /* optional uint32 id */ 8:
                    message.id = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopCg, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_unlock = 14; */
        if (message.isUnlock !== undefined)
            writer.tag(14, WireType.Varint).bool(message.isUnlock);
        /* optional uint32 id = 8; */
        if (message.id !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopCg
 */
export const CoopCg = new CoopCg$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopChapter$Type extends MessageType<CoopChapter> {
    constructor() {
        super("com.midnights.game.CoopChapter", [
            { no: 1, name: "coop_cg_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CoopCg },
            { no: 2, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "coop_point_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CoopPoint },
            { no: 10, name: "finish_dialog_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "finished_end_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "total_end_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "coop_reward_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CoopReward },
            { no: 12, name: "lock_reason_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "state", kind: "enum", opt: true, T: () => ["com.midnights.game.CoopChapter.State", CoopChapter_State, "STATE_"] },
            { no: 9, name: "seen_ending_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } }
        ]);
    }
    create(value?: PartialMessage<CoopChapter>): CoopChapter {
        const message = { coopCgList: [], coopPointList: [], finishDialogList: [], coopRewardList: [], lockReasonList: [], seenEndingMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopChapter>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopChapter): CoopChapter {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.CoopCg coop_cg_list */ 1:
                    message.coopCgList.push(CoopCg.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 id */ 2:
                    message.id = reader.uint32();
                    break;
                case /* repeated com.midnights.game.CoopPoint coop_point_list */ 11:
                    message.coopPointList.push(CoopPoint.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated uint32 finish_dialog_list */ 10:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.finishDialogList.push(reader.uint32());
                    else
                        message.finishDialogList.push(reader.uint32());
                    break;
                case /* optional uint32 finished_end_count */ 14:
                    message.finishedEndCount = reader.uint32();
                    break;
                case /* optional uint32 total_end_count */ 7:
                    message.totalEndCount = reader.uint32();
                    break;
                case /* repeated com.midnights.game.CoopReward coop_reward_list */ 5:
                    message.coopRewardList.push(CoopReward.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated uint32 lock_reason_list */ 12:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.lockReasonList.push(reader.uint32());
                    else
                        message.lockReasonList.push(reader.uint32());
                    break;
                case /* optional com.midnights.game.CoopChapter.State state */ 4:
                    message.state = reader.int32();
                    break;
                case /* map<uint32, uint32> seen_ending_map */ 9:
                    this.binaryReadMap9(message.seenEndingMap, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap9(map: CoopChapter["seenEndingMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof CoopChapter["seenEndingMap"] | undefined, val: CoopChapter["seenEndingMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.CoopChapter.seen_ending_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: CoopChapter, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.CoopCg coop_cg_list = 1; */
        for (let i = 0; i < message.coopCgList.length; i++)
            CoopCg.internalBinaryWrite(message.coopCgList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 id = 2; */
        if (message.id !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.id);
        /* repeated com.midnights.game.CoopPoint coop_point_list = 11; */
        for (let i = 0; i < message.coopPointList.length; i++)
            CoopPoint.internalBinaryWrite(message.coopPointList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint32 finish_dialog_list = 10; */
        for (let i = 0; i < message.finishDialogList.length; i++)
            writer.tag(10, WireType.Varint).uint32(message.finishDialogList[i]);
        /* optional uint32 finished_end_count = 14; */
        if (message.finishedEndCount !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.finishedEndCount);
        /* optional uint32 total_end_count = 7; */
        if (message.totalEndCount !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.totalEndCount);
        /* repeated com.midnights.game.CoopReward coop_reward_list = 5; */
        for (let i = 0; i < message.coopRewardList.length; i++)
            CoopReward.internalBinaryWrite(message.coopRewardList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint32 lock_reason_list = 12; */
        for (let i = 0; i < message.lockReasonList.length; i++)
            writer.tag(12, WireType.Varint).uint32(message.lockReasonList[i]);
        /* optional com.midnights.game.CoopChapter.State state = 4; */
        if (message.state !== undefined)
            writer.tag(4, WireType.Varint).int32(message.state);
        /* map<uint32, uint32> seen_ending_map = 9; */
        for (let k of Object.keys(message.seenEndingMap))
            writer.tag(9, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.seenEndingMap[k as any]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopChapter
 */
export const CoopChapter = new CoopChapter$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopDataNotify$Type extends MessageType<CoopDataNotify> {
    constructor() {
        super("com.midnights.game.CoopDataNotify", [
            { no: 15, name: "chapter_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CoopChapter },
            { no: 7, name: "viewed_chapter_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "is_have_progress", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "cur_coop_point", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CoopDataNotify>): CoopDataNotify {
        const message = { chapterList: [], viewedChapterList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopDataNotify): CoopDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.CoopChapter chapter_list */ 15:
                    message.chapterList.push(CoopChapter.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated uint32 viewed_chapter_list */ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.viewedChapterList.push(reader.uint32());
                    else
                        message.viewedChapterList.push(reader.uint32());
                    break;
                case /* optional bool is_have_progress */ 10:
                    message.isHaveProgress = reader.bool();
                    break;
                case /* optional uint32 cur_coop_point */ 5:
                    message.curCoopPoint = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.CoopChapter chapter_list = 15; */
        for (let i = 0; i < message.chapterList.length; i++)
            CoopChapter.internalBinaryWrite(message.chapterList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint32 viewed_chapter_list = 7; */
        for (let i = 0; i < message.viewedChapterList.length; i++)
            writer.tag(7, WireType.Varint).uint32(message.viewedChapterList[i]);
        /* optional bool is_have_progress = 10; */
        if (message.isHaveProgress !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isHaveProgress);
        /* optional uint32 cur_coop_point = 5; */
        if (message.curCoopPoint !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.curCoopPoint);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopDataNotify
 */
export const CoopDataNotify = new CoopDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopChapterUpdateNotify$Type extends MessageType<CoopChapterUpdateNotify> {
    constructor() {
        super("com.midnights.game.CoopChapterUpdateNotify", [
            { no: 14, name: "chapter_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CoopChapter }
        ]);
    }
    create(value?: PartialMessage<CoopChapterUpdateNotify>): CoopChapterUpdateNotify {
        const message = { chapterList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopChapterUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopChapterUpdateNotify): CoopChapterUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.CoopChapter chapter_list */ 14:
                    message.chapterList.push(CoopChapter.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopChapterUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.CoopChapter chapter_list = 14; */
        for (let i = 0; i < message.chapterList.length; i++)
            CoopChapter.internalBinaryWrite(message.chapterList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopChapterUpdateNotify
 */
export const CoopChapterUpdateNotify = new CoopChapterUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopCgUpdateNotify$Type extends MessageType<CoopCgUpdateNotify> {
    constructor() {
        super("com.midnights.game.CoopCgUpdateNotify", [
            { no: 13, name: "cg_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CoopCgUpdateNotify>): CoopCgUpdateNotify {
        const message = { cgList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopCgUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopCgUpdateNotify): CoopCgUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 cg_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.cgList.push(reader.uint32());
                    else
                        message.cgList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopCgUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 cg_list = 13; */
        for (let i = 0; i < message.cgList.length; i++)
            writer.tag(13, WireType.Varint).uint32(message.cgList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopCgUpdateNotify
 */
export const CoopCgUpdateNotify = new CoopCgUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopRewardUpdateNotify$Type extends MessageType<CoopRewardUpdateNotify> {
    constructor() {
        super("com.midnights.game.CoopRewardUpdateNotify", [
            { no: 7, name: "reward_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CoopReward }
        ]);
    }
    create(value?: PartialMessage<CoopRewardUpdateNotify>): CoopRewardUpdateNotify {
        const message = { rewardList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopRewardUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopRewardUpdateNotify): CoopRewardUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.CoopReward reward_list */ 7:
                    message.rewardList.push(CoopReward.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopRewardUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.CoopReward reward_list = 7; */
        for (let i = 0; i < message.rewardList.length; i++)
            CoopReward.internalBinaryWrite(message.rewardList[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopRewardUpdateNotify
 */
export const CoopRewardUpdateNotify = new CoopRewardUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnlockCoopChapterReq$Type extends MessageType<UnlockCoopChapterReq> {
    constructor() {
        super("com.midnights.game.UnlockCoopChapterReq", [
            { no: 3, name: "chapter_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockCoopChapterReq>): UnlockCoopChapterReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockCoopChapterReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockCoopChapterReq): UnlockCoopChapterReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 chapter_id */ 3:
                    message.chapterId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockCoopChapterReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 chapter_id = 3; */
        if (message.chapterId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.chapterId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockCoopChapterReq
 */
export const UnlockCoopChapterReq = new UnlockCoopChapterReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnlockCoopChapterRsp$Type extends MessageType<UnlockCoopChapterRsp> {
    constructor() {
        super("com.midnights.game.UnlockCoopChapterRsp", [
            { no: 4, name: "chapter_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockCoopChapterRsp>): UnlockCoopChapterRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockCoopChapterRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockCoopChapterRsp): UnlockCoopChapterRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 chapter_id */ 4:
                    message.chapterId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 6:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockCoopChapterRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 chapter_id = 4; */
        if (message.chapterId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.chapterId);
        /* optional int32 retcode = 6; */
        if (message.retcode !== undefined)
            writer.tag(6, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockCoopChapterRsp
 */
export const UnlockCoopChapterRsp = new UnlockCoopChapterRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopPointUpdateNotify$Type extends MessageType<CoopPointUpdateNotify> {
    constructor() {
        super("com.midnights.game.CoopPointUpdateNotify", [
            { no: 13, name: "coop_point", kind: "message", T: () => CoopPoint }
        ]);
    }
    create(value?: PartialMessage<CoopPointUpdateNotify>): CoopPointUpdateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopPointUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopPointUpdateNotify): CoopPointUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.CoopPoint coop_point */ 13:
                    message.coopPoint = CoopPoint.internalBinaryRead(reader, reader.uint32(), options, message.coopPoint);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopPointUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.CoopPoint coop_point = 13; */
        if (message.coopPoint)
            CoopPoint.internalBinaryWrite(message.coopPoint, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopPointUpdateNotify
 */
export const CoopPointUpdateNotify = new CoopPointUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StartCoopPointReq$Type extends MessageType<StartCoopPointReq> {
    constructor() {
        super("com.midnights.game.StartCoopPointReq", [
            { no: 7, name: "coop_point", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<StartCoopPointReq>): StartCoopPointReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StartCoopPointReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StartCoopPointReq): StartCoopPointReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 coop_point */ 7:
                    message.coopPoint = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StartCoopPointReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 coop_point = 7; */
        if (message.coopPoint !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.coopPoint);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.StartCoopPointReq
 */
export const StartCoopPointReq = new StartCoopPointReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StartCoopPointRsp$Type extends MessageType<StartCoopPointRsp> {
    constructor() {
        super("com.midnights.game.StartCoopPointRsp", [
            { no: 9, name: "is_start", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "start_main_coop", kind: "message", T: () => MainCoop },
            { no: 13, name: "coop_point", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<StartCoopPointRsp>): StartCoopPointRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StartCoopPointRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StartCoopPointRsp): StartCoopPointRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_start */ 9:
                    message.isStart = reader.bool();
                    break;
                case /* optional com.midnights.game.MainCoop start_main_coop */ 15:
                    message.startMainCoop = MainCoop.internalBinaryRead(reader, reader.uint32(), options, message.startMainCoop);
                    break;
                case /* optional uint32 coop_point */ 13:
                    message.coopPoint = reader.uint32();
                    break;
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StartCoopPointRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_start = 9; */
        if (message.isStart !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isStart);
        /* optional com.midnights.game.MainCoop start_main_coop = 15; */
        if (message.startMainCoop)
            MainCoop.internalBinaryWrite(message.startMainCoop, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 coop_point = 13; */
        if (message.coopPoint !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.coopPoint);
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.StartCoopPointRsp
 */
export const StartCoopPointRsp = new StartCoopPointRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CancelCoopTaskReq$Type extends MessageType<CancelCoopTaskReq> {
    constructor() {
        super("com.midnights.game.CancelCoopTaskReq", [
            { no: 13, name: "chapter_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CancelCoopTaskReq>): CancelCoopTaskReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CancelCoopTaskReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CancelCoopTaskReq): CancelCoopTaskReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 chapter_id */ 13:
                    message.chapterId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CancelCoopTaskReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 chapter_id = 13; */
        if (message.chapterId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.chapterId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CancelCoopTaskReq
 */
export const CancelCoopTaskReq = new CancelCoopTaskReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CancelCoopTaskRsp$Type extends MessageType<CancelCoopTaskRsp> {
    constructor() {
        super("com.midnights.game.CancelCoopTaskRsp", [
            { no: 1, name: "chapter_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<CancelCoopTaskRsp>): CancelCoopTaskRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CancelCoopTaskRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CancelCoopTaskRsp): CancelCoopTaskRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 chapter_id */ 1:
                    message.chapterId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CancelCoopTaskRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 chapter_id = 1; */
        if (message.chapterId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.chapterId);
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CancelCoopTaskRsp
 */
export const CancelCoopTaskRsp = new CancelCoopTaskRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeCoopRewardReq$Type extends MessageType<TakeCoopRewardReq> {
    constructor() {
        super("com.midnights.game.TakeCoopRewardReq", [
            { no: 6, name: "reward_config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeCoopRewardReq>): TakeCoopRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeCoopRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeCoopRewardReq): TakeCoopRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 reward_config_id */ 6:
                    message.rewardConfigId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeCoopRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 reward_config_id = 6; */
        if (message.rewardConfigId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.rewardConfigId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeCoopRewardReq
 */
export const TakeCoopRewardReq = new TakeCoopRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeCoopRewardRsp$Type extends MessageType<TakeCoopRewardRsp> {
    constructor() {
        super("com.midnights.game.TakeCoopRewardRsp", [
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 1, name: "reward_config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeCoopRewardRsp>): TakeCoopRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeCoopRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeCoopRewardRsp): TakeCoopRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 reward_config_id */ 1:
                    message.rewardConfigId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeCoopRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        /* optional uint32 reward_config_id = 1; */
        if (message.rewardConfigId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.rewardConfigId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeCoopRewardRsp
 */
export const TakeCoopRewardRsp = new TakeCoopRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopProgressUpdateNotify$Type extends MessageType<CoopProgressUpdateNotify> {
    constructor() {
        super("com.midnights.game.CoopProgressUpdateNotify", [
            { no: 11, name: "cur_coop_point", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "is_have_progress", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<CoopProgressUpdateNotify>): CoopProgressUpdateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopProgressUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopProgressUpdateNotify): CoopProgressUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 cur_coop_point */ 11:
                    message.curCoopPoint = reader.uint32();
                    break;
                case /* optional bool is_have_progress */ 12:
                    message.isHaveProgress = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopProgressUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 cur_coop_point = 11; */
        if (message.curCoopPoint !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.curCoopPoint);
        /* optional bool is_have_progress = 12; */
        if (message.isHaveProgress !== undefined)
            writer.tag(12, WireType.Varint).bool(message.isHaveProgress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopProgressUpdateNotify
 */
export const CoopProgressUpdateNotify = new CoopProgressUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SaveCoopDialogReq$Type extends MessageType<SaveCoopDialogReq> {
    constructor() {
        super("com.midnights.game.SaveCoopDialogReq", [
            { no: 11, name: "main_coop_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "dialog_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SaveCoopDialogReq>): SaveCoopDialogReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SaveCoopDialogReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SaveCoopDialogReq): SaveCoopDialogReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 main_coop_id */ 11:
                    message.mainCoopId = reader.uint32();
                    break;
                case /* optional uint32 dialog_id */ 6:
                    message.dialogId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SaveCoopDialogReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 main_coop_id = 11; */
        if (message.mainCoopId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.mainCoopId);
        /* optional uint32 dialog_id = 6; */
        if (message.dialogId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.dialogId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SaveCoopDialogReq
 */
export const SaveCoopDialogReq = new SaveCoopDialogReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SaveCoopDialogRsp$Type extends MessageType<SaveCoopDialogRsp> {
    constructor() {
        super("com.midnights.game.SaveCoopDialogRsp", [
            { no: 8, name: "dialog_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "main_coop_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SaveCoopDialogRsp>): SaveCoopDialogRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SaveCoopDialogRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SaveCoopDialogRsp): SaveCoopDialogRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 dialog_id */ 8:
                    message.dialogId = reader.uint32();
                    break;
                case /* optional uint32 main_coop_id */ 10:
                    message.mainCoopId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SaveCoopDialogRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 dialog_id = 8; */
        if (message.dialogId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.dialogId);
        /* optional uint32 main_coop_id = 10; */
        if (message.mainCoopId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.mainCoopId);
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SaveCoopDialogRsp
 */
export const SaveCoopDialogRsp = new SaveCoopDialogRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CoopCgShowNotify$Type extends MessageType<CoopCgShowNotify> {
    constructor() {
        super("com.midnights.game.CoopCgShowNotify", [
            { no: 10, name: "cg_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CoopCgShowNotify>): CoopCgShowNotify {
        const message = { cgList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CoopCgShowNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CoopCgShowNotify): CoopCgShowNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 cg_list */ 10:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.cgList.push(reader.uint32());
                    else
                        message.cgList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CoopCgShowNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 cg_list = 10; */
        for (let i = 0; i < message.cgList.length; i++)
            writer.tag(10, WireType.Varint).uint32(message.cgList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CoopCgShowNotify
 */
export const CoopCgShowNotify = new CoopCgShowNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetCoopChapterViewedReq$Type extends MessageType<SetCoopChapterViewedReq> {
    constructor() {
        super("com.midnights.game.SetCoopChapterViewedReq", [
            { no: 2, name: "chapter_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetCoopChapterViewedReq>): SetCoopChapterViewedReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetCoopChapterViewedReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetCoopChapterViewedReq): SetCoopChapterViewedReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 chapter_id */ 2:
                    message.chapterId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetCoopChapterViewedReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 chapter_id = 2; */
        if (message.chapterId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.chapterId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetCoopChapterViewedReq
 */
export const SetCoopChapterViewedReq = new SetCoopChapterViewedReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetCoopChapterViewedRsp$Type extends MessageType<SetCoopChapterViewedRsp> {
    constructor() {
        super("com.midnights.game.SetCoopChapterViewedRsp", [
            { no: 11, name: "chapter_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetCoopChapterViewedRsp>): SetCoopChapterViewedRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetCoopChapterViewedRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetCoopChapterViewedRsp): SetCoopChapterViewedRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 chapter_id */ 11:
                    message.chapterId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetCoopChapterViewedRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 chapter_id = 11; */
        if (message.chapterId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.chapterId);
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetCoopChapterViewedRsp
 */
export const SetCoopChapterViewedRsp = new SetCoopChapterViewedRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MainCoopFailNotify$Type extends MessageType<MainCoopFailNotify> {
    constructor() {
        super("com.midnights.game.MainCoopFailNotify", [
            { no: 7, name: "textmap_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "chapter_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MainCoopFailNotify>): MainCoopFailNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MainCoopFailNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MainCoopFailNotify): MainCoopFailNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string textmap_id */ 7:
                    message.textmapId = reader.string();
                    break;
                case /* optional uint32 chapter_id */ 15:
                    message.chapterId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MainCoopFailNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string textmap_id = 7; */
        if (message.textmapId !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.textmapId);
        /* optional uint32 chapter_id = 15; */
        if (message.chapterId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.chapterId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MainCoopFailNotify
 */
export const MainCoopFailNotify = new MainCoopFailNotify$Type();
