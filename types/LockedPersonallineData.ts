/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: LockedPersonallineData.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class LockedPersonallineData extends pb_1.Message {
    #one_of_decls: number[][] = [[3, 1]];
    constructor(data?: any[] | ({
        lock_reason?: LockedPersonallineData.LockReason;
        personal_line_id?: number;
    } & (({
        chapter_id?: number;
        level?: never;
    } | {
        chapter_id?: never;
        level?: number;
    })))) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("lock_reason" in data && data.lock_reason != undefined) {
                this.lock_reason = data.lock_reason;
            }
            if ("personal_line_id" in data && data.personal_line_id != undefined) {
                this.personal_line_id = data.personal_line_id;
            }
            if ("chapter_id" in data && data.chapter_id != undefined) {
                this.chapter_id = data.chapter_id;
            }
            if ("level" in data && data.level != undefined) {
                this.level = data.level;
            }
        }
    }
    get lock_reason() {
        return pb_1.Message.getFieldWithDefault(this, 2, LockedPersonallineData.LockReason.LOCK_REASON_LEVEL) as LockedPersonallineData.LockReason;
    }
    set lock_reason(value: LockedPersonallineData.LockReason) {
        pb_1.Message.setField(this, 2, value);
    }
    get personal_line_id() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set personal_line_id(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    get chapter_id() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set chapter_id(value: number) {
        pb_1.Message.setOneofField(this, 3, this.#one_of_decls[0], value);
    }
    get has_chapter_id() {
        return pb_1.Message.getField(this, 3) != null;
    }
    get level() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set level(value: number) {
        pb_1.Message.setOneofField(this, 1, this.#one_of_decls[0], value);
    }
    get has_level() {
        return pb_1.Message.getField(this, 1) != null;
    }
    get param() {
        const cases: {
            [index: number]: "none" | "chapter_id" | "level";
        } = {
            0: "none",
            3: "chapter_id",
            1: "level"
        };
        return cases[pb_1.Message.computeOneofCase(this, [3, 1])];
    }
    static fromObject(data: {
        lock_reason?: LockedPersonallineData.LockReason;
        personal_line_id?: number;
        chapter_id?: number;
        level?: number;
    }): LockedPersonallineData {
        const message = new LockedPersonallineData({});
        if (data.lock_reason != null) {
            message.lock_reason = data.lock_reason;
        }
        if (data.personal_line_id != null) {
            message.personal_line_id = data.personal_line_id;
        }
        if (data.chapter_id != null) {
            message.chapter_id = data.chapter_id;
        }
        if (data.level != null) {
            message.level = data.level;
        }
        return message;
    }
    toObject() {
        const data: {
            lock_reason?: LockedPersonallineData.LockReason;
            personal_line_id?: number;
            chapter_id?: number;
            level?: number;
        } = {};
        if (this.lock_reason != null) {
            data.lock_reason = this.lock_reason;
        }
        if (this.personal_line_id != null) {
            data.personal_line_id = this.personal_line_id;
        }
        if (this.chapter_id != null) {
            data.chapter_id = this.chapter_id;
        }
        if (this.level != null) {
            data.level = this.level;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.lock_reason != LockedPersonallineData.LockReason.LOCK_REASON_LEVEL)
            writer.writeEnum(2, this.lock_reason);
        if (this.personal_line_id != 0)
            writer.writeUint32(13, this.personal_line_id);
        if (this.has_chapter_id)
            writer.writeUint32(3, this.chapter_id);
        if (this.has_level)
            writer.writeUint32(1, this.level);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): LockedPersonallineData {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new LockedPersonallineData();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 2:
                    message.lock_reason = reader.readEnum();
                    break;
                case 13:
                    message.personal_line_id = reader.readUint32();
                    break;
                case 3:
                    message.chapter_id = reader.readUint32();
                    break;
                case 1:
                    message.level = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): LockedPersonallineData {
        return LockedPersonallineData.deserialize(bytes);
    }
}
export namespace LockedPersonallineData {
    export enum LockReason {
        LOCK_REASON_LEVEL = 0,
        LOCK_REASON_QUEST = 1
    }
}
