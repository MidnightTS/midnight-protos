// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_blossom.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { Vector } from "./define";
/**
 * @generated from protobuf message com.midnights.game.BlossomBriefInfo
 */
export interface BlossomBriefInfo {
    /**
     * @generated from protobuf field: optional uint32 refresh_id = 13;
     */
    refreshId?: number;
    /**
     * @generated from protobuf field: optional uint32 reward_id = 5;
     */
    rewardId?: number;
    /**
     * @generated from protobuf field: optional uint32 city_id = 10;
     */
    cityId?: number;
    /**
     * @generated from protobuf field: optional uint32 resin = 11;
     */
    resin?: number;
    /**
     * @generated from protobuf field: optional uint32 state = 7;
     */
    state?: number;
    /**
     * @generated from protobuf field: optional bool is_guide_opened = 1;
     */
    isGuideOpened?: boolean;
    /**
     * @generated from protobuf field: optional uint32 monster_level = 8;
     */
    monsterLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 circle_camp_id = 15;
     */
    circleCampId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 12;
     */
    pos?: Vector;
    /**
     * @generated from protobuf field: optional uint32 scene_id = 9;
     */
    sceneId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.GetBlossomBriefInfoListReq
 */
export interface GetBlossomBriefInfoListReq {
    /**
     * @generated from protobuf field: repeated uint32 city_id_list = 4;
     */
    cityIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetBlossomBriefInfoListReq.CmdId
 */
export enum GetBlossomBriefInfoListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2772;
     */
    CMD_ID = 2772,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetBlossomBriefInfoListRsp
 */
export interface GetBlossomBriefInfoListRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.BlossomBriefInfo brief_info_list = 11;
     */
    briefInfoList: BlossomBriefInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetBlossomBriefInfoListRsp.CmdId
 */
export enum GetBlossomBriefInfoListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2798;
     */
    CMD_ID = 2798,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.BlossomBriefInfoNotify
 */
export interface BlossomBriefInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.BlossomBriefInfo brief_info_list = 4;
     */
    briefInfoList: BlossomBriefInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.BlossomBriefInfoNotify.CmdId
 */
export enum BlossomBriefInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2712;
     */
    CMD_ID = 2712,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.WorldOwnerBlossomBriefInfoNotify
 */
export interface WorldOwnerBlossomBriefInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.BlossomBriefInfo brief_info_list = 13;
     */
    briefInfoList: BlossomBriefInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.WorldOwnerBlossomBriefInfoNotify.CmdId
 */
export enum WorldOwnerBlossomBriefInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2735;
     */
    CMD_ID = 2735,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.BlossomScheduleInfo
 */
export interface BlossomScheduleInfo {
    /**
     * @generated from protobuf field: optional uint32 progress = 13;
     */
    progress?: number;
    /**
     * @generated from protobuf field: optional uint32 state = 10;
     */
    state?: number;
    /**
     * @generated from protobuf field: optional uint32 round = 4;
     */
    round?: number;
    /**
     * @generated from protobuf field: optional uint32 circle_camp_id = 15;
     */
    circleCampId?: number;
    /**
     * @generated from protobuf field: optional uint32 refresh_id = 6;
     */
    refreshId?: number;
    /**
     * @generated from protobuf field: optional uint32 finish_progress = 14;
     */
    finishProgress?: number;
}
/**
 * @generated from protobuf message com.midnights.game.WorldOwnerBlossomScheduleInfoNotify
 */
export interface WorldOwnerBlossomScheduleInfoNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.BlossomScheduleInfo schedule_info = 3;
     */
    scheduleInfo?: BlossomScheduleInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.WorldOwnerBlossomScheduleInfoNotify.CmdId
 */
export enum WorldOwnerBlossomScheduleInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2707;
     */
    CMD_ID = 2707,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.BlossomChestCreateNotify
 */
export interface BlossomChestCreateNotify {
    /**
     * @generated from protobuf field: optional uint32 refresh_id = 1;
     */
    refreshId?: number;
    /**
     * @generated from protobuf field: optional uint32 circle_camp_id = 10;
     */
    circleCampId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.BlossomChestCreateNotify.CmdId
 */
export enum BlossomChestCreateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2721;
     */
    CMD_ID = 2721,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.OpenBlossomCircleCampGuideNotify
 */
export interface OpenBlossomCircleCampGuideNotify {
    /**
     * @generated from protobuf field: optional uint32 refresh_id = 7;
     */
    refreshId?: number;
    /**
     * @generated from protobuf field: repeated uint32 circle_camp_id_list = 11;
     */
    circleCampIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.OpenBlossomCircleCampGuideNotify.CmdId
 */
export enum OpenBlossomCircleCampGuideNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2703;
     */
    CMD_ID = 2703,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf enum com.midnights.game.BlossomScheduleState
 */
export enum BlossomScheduleState {
    /**
     * @generated from protobuf enum value: BLOSSOM_SCHEDULE_NONE = 0;
     */
    BLOSSOM_SCHEDULE_NONE = 0,
    /**
     * @generated from protobuf enum value: BLOSSOM_SCHEDULE_INIT = 1;
     */
    BLOSSOM_SCHEDULE_INIT = 1,
    /**
     * @generated from protobuf enum value: BLOSSOM_SCHEDULE_IN_PROGRESS = 2;
     */
    BLOSSOM_SCHEDULE_IN_PROGRESS = 2,
    /**
     * @generated from protobuf enum value: BLOSSOM_SCHEDULE_REWARD = 3;
     */
    BLOSSOM_SCHEDULE_REWARD = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class BlossomBriefInfo$Type extends MessageType<BlossomBriefInfo> {
    constructor() {
        super("com.midnights.game.BlossomBriefInfo", [
            { no: 13, name: "refresh_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "reward_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "city_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "resin", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "state", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "is_guide_opened", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "monster_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "circle_camp_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "pos", kind: "message", T: () => Vector },
            { no: 9, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BlossomBriefInfo>): BlossomBriefInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BlossomBriefInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BlossomBriefInfo): BlossomBriefInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 refresh_id */ 13:
                    message.refreshId = reader.uint32();
                    break;
                case /* optional uint32 reward_id */ 5:
                    message.rewardId = reader.uint32();
                    break;
                case /* optional uint32 city_id */ 10:
                    message.cityId = reader.uint32();
                    break;
                case /* optional uint32 resin */ 11:
                    message.resin = reader.uint32();
                    break;
                case /* optional uint32 state */ 7:
                    message.state = reader.uint32();
                    break;
                case /* optional bool is_guide_opened */ 1:
                    message.isGuideOpened = reader.bool();
                    break;
                case /* optional uint32 monster_level */ 8:
                    message.monsterLevel = reader.uint32();
                    break;
                case /* optional uint32 circle_camp_id */ 15:
                    message.circleCampId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector pos */ 12:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                case /* optional uint32 scene_id */ 9:
                    message.sceneId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BlossomBriefInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 refresh_id = 13; */
        if (message.refreshId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.refreshId);
        /* optional uint32 reward_id = 5; */
        if (message.rewardId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.rewardId);
        /* optional uint32 city_id = 10; */
        if (message.cityId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.cityId);
        /* optional uint32 resin = 11; */
        if (message.resin !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.resin);
        /* optional uint32 state = 7; */
        if (message.state !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.state);
        /* optional bool is_guide_opened = 1; */
        if (message.isGuideOpened !== undefined)
            writer.tag(1, WireType.Varint).bool(message.isGuideOpened);
        /* optional uint32 monster_level = 8; */
        if (message.monsterLevel !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.monsterLevel);
        /* optional uint32 circle_camp_id = 15; */
        if (message.circleCampId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.circleCampId);
        /* optional com.midnights.game.Vector pos = 12; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 scene_id = 9; */
        if (message.sceneId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.sceneId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BlossomBriefInfo
 */
export const BlossomBriefInfo = new BlossomBriefInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBlossomBriefInfoListReq$Type extends MessageType<GetBlossomBriefInfoListReq> {
    constructor() {
        super("com.midnights.game.GetBlossomBriefInfoListReq", [
            { no: 4, name: "city_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetBlossomBriefInfoListReq>): GetBlossomBriefInfoListReq {
        const message = { cityIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetBlossomBriefInfoListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetBlossomBriefInfoListReq): GetBlossomBriefInfoListReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 city_id_list */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.cityIdList.push(reader.uint32());
                    else
                        message.cityIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetBlossomBriefInfoListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 city_id_list = 4; */
        for (let i = 0; i < message.cityIdList.length; i++)
            writer.tag(4, WireType.Varint).uint32(message.cityIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetBlossomBriefInfoListReq
 */
export const GetBlossomBriefInfoListReq = new GetBlossomBriefInfoListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBlossomBriefInfoListRsp$Type extends MessageType<GetBlossomBriefInfoListRsp> {
    constructor() {
        super("com.midnights.game.GetBlossomBriefInfoListRsp", [
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "brief_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => BlossomBriefInfo }
        ]);
    }
    create(value?: PartialMessage<GetBlossomBriefInfoListRsp>): GetBlossomBriefInfoListRsp {
        const message = { briefInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetBlossomBriefInfoListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetBlossomBriefInfoListRsp): GetBlossomBriefInfoListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.BlossomBriefInfo brief_info_list */ 11:
                    message.briefInfoList.push(BlossomBriefInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetBlossomBriefInfoListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.BlossomBriefInfo brief_info_list = 11; */
        for (let i = 0; i < message.briefInfoList.length; i++)
            BlossomBriefInfo.internalBinaryWrite(message.briefInfoList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetBlossomBriefInfoListRsp
 */
export const GetBlossomBriefInfoListRsp = new GetBlossomBriefInfoListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlossomBriefInfoNotify$Type extends MessageType<BlossomBriefInfoNotify> {
    constructor() {
        super("com.midnights.game.BlossomBriefInfoNotify", [
            { no: 4, name: "brief_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => BlossomBriefInfo }
        ]);
    }
    create(value?: PartialMessage<BlossomBriefInfoNotify>): BlossomBriefInfoNotify {
        const message = { briefInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BlossomBriefInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BlossomBriefInfoNotify): BlossomBriefInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.BlossomBriefInfo brief_info_list */ 4:
                    message.briefInfoList.push(BlossomBriefInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BlossomBriefInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.BlossomBriefInfo brief_info_list = 4; */
        for (let i = 0; i < message.briefInfoList.length; i++)
            BlossomBriefInfo.internalBinaryWrite(message.briefInfoList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BlossomBriefInfoNotify
 */
export const BlossomBriefInfoNotify = new BlossomBriefInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldOwnerBlossomBriefInfoNotify$Type extends MessageType<WorldOwnerBlossomBriefInfoNotify> {
    constructor() {
        super("com.midnights.game.WorldOwnerBlossomBriefInfoNotify", [
            { no: 13, name: "brief_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => BlossomBriefInfo }
        ]);
    }
    create(value?: PartialMessage<WorldOwnerBlossomBriefInfoNotify>): WorldOwnerBlossomBriefInfoNotify {
        const message = { briefInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WorldOwnerBlossomBriefInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorldOwnerBlossomBriefInfoNotify): WorldOwnerBlossomBriefInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.BlossomBriefInfo brief_info_list */ 13:
                    message.briefInfoList.push(BlossomBriefInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorldOwnerBlossomBriefInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.BlossomBriefInfo brief_info_list = 13; */
        for (let i = 0; i < message.briefInfoList.length; i++)
            BlossomBriefInfo.internalBinaryWrite(message.briefInfoList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldOwnerBlossomBriefInfoNotify
 */
export const WorldOwnerBlossomBriefInfoNotify = new WorldOwnerBlossomBriefInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlossomScheduleInfo$Type extends MessageType<BlossomScheduleInfo> {
    constructor() {
        super("com.midnights.game.BlossomScheduleInfo", [
            { no: 13, name: "progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "state", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "round", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "circle_camp_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "refresh_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "finish_progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BlossomScheduleInfo>): BlossomScheduleInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BlossomScheduleInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BlossomScheduleInfo): BlossomScheduleInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 progress */ 13:
                    message.progress = reader.uint32();
                    break;
                case /* optional uint32 state */ 10:
                    message.state = reader.uint32();
                    break;
                case /* optional uint32 round */ 4:
                    message.round = reader.uint32();
                    break;
                case /* optional uint32 circle_camp_id */ 15:
                    message.circleCampId = reader.uint32();
                    break;
                case /* optional uint32 refresh_id */ 6:
                    message.refreshId = reader.uint32();
                    break;
                case /* optional uint32 finish_progress */ 14:
                    message.finishProgress = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BlossomScheduleInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 progress = 13; */
        if (message.progress !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.progress);
        /* optional uint32 state = 10; */
        if (message.state !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.state);
        /* optional uint32 round = 4; */
        if (message.round !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.round);
        /* optional uint32 circle_camp_id = 15; */
        if (message.circleCampId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.circleCampId);
        /* optional uint32 refresh_id = 6; */
        if (message.refreshId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.refreshId);
        /* optional uint32 finish_progress = 14; */
        if (message.finishProgress !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.finishProgress);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BlossomScheduleInfo
 */
export const BlossomScheduleInfo = new BlossomScheduleInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WorldOwnerBlossomScheduleInfoNotify$Type extends MessageType<WorldOwnerBlossomScheduleInfoNotify> {
    constructor() {
        super("com.midnights.game.WorldOwnerBlossomScheduleInfoNotify", [
            { no: 3, name: "schedule_info", kind: "message", T: () => BlossomScheduleInfo }
        ]);
    }
    create(value?: PartialMessage<WorldOwnerBlossomScheduleInfoNotify>): WorldOwnerBlossomScheduleInfoNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WorldOwnerBlossomScheduleInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WorldOwnerBlossomScheduleInfoNotify): WorldOwnerBlossomScheduleInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.BlossomScheduleInfo schedule_info */ 3:
                    message.scheduleInfo = BlossomScheduleInfo.internalBinaryRead(reader, reader.uint32(), options, message.scheduleInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WorldOwnerBlossomScheduleInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.BlossomScheduleInfo schedule_info = 3; */
        if (message.scheduleInfo)
            BlossomScheduleInfo.internalBinaryWrite(message.scheduleInfo, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WorldOwnerBlossomScheduleInfoNotify
 */
export const WorldOwnerBlossomScheduleInfoNotify = new WorldOwnerBlossomScheduleInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BlossomChestCreateNotify$Type extends MessageType<BlossomChestCreateNotify> {
    constructor() {
        super("com.midnights.game.BlossomChestCreateNotify", [
            { no: 1, name: "refresh_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "circle_camp_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BlossomChestCreateNotify>): BlossomChestCreateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BlossomChestCreateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BlossomChestCreateNotify): BlossomChestCreateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 refresh_id */ 1:
                    message.refreshId = reader.uint32();
                    break;
                case /* optional uint32 circle_camp_id */ 10:
                    message.circleCampId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BlossomChestCreateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 refresh_id = 1; */
        if (message.refreshId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.refreshId);
        /* optional uint32 circle_camp_id = 10; */
        if (message.circleCampId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.circleCampId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BlossomChestCreateNotify
 */
export const BlossomChestCreateNotify = new BlossomChestCreateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OpenBlossomCircleCampGuideNotify$Type extends MessageType<OpenBlossomCircleCampGuideNotify> {
    constructor() {
        super("com.midnights.game.OpenBlossomCircleCampGuideNotify", [
            { no: 7, name: "refresh_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "circle_camp_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<OpenBlossomCircleCampGuideNotify>): OpenBlossomCircleCampGuideNotify {
        const message = { circleCampIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OpenBlossomCircleCampGuideNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OpenBlossomCircleCampGuideNotify): OpenBlossomCircleCampGuideNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 refresh_id */ 7:
                    message.refreshId = reader.uint32();
                    break;
                case /* repeated uint32 circle_camp_id_list */ 11:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.circleCampIdList.push(reader.uint32());
                    else
                        message.circleCampIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OpenBlossomCircleCampGuideNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 refresh_id = 7; */
        if (message.refreshId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.refreshId);
        /* repeated uint32 circle_camp_id_list = 11; */
        for (let i = 0; i < message.circleCampIdList.length; i++)
            writer.tag(11, WireType.Varint).uint32(message.circleCampIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OpenBlossomCircleCampGuideNotify
 */
export const OpenBlossomCircleCampGuideNotify = new OpenBlossomCircleCampGuideNotify$Type();
