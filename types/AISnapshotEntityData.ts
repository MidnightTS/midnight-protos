// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "AISnapshotEntityData.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AISnapshotEntitySkillCycle } from "./AISnapshotEntitySkillCycle";
/**
 * @generated from protobuf message AISnapshotEntityData
 */
export interface AISnapshotEntityData {
    /**
     * @generated from protobuf field: repeated AISnapshotEntitySkillCycle finished_skill_cycles = 14;
     */
    finishedSkillCycles: AISnapshotEntitySkillCycle[];
    /**
     * @generated from protobuf field: uint32 attack_target_id = 2;
     */
    attackTargetId: number;
    /**
     * @generated from protobuf field: uint32 entity_id = 6;
     */
    entityId: number;
    /**
     * @generated from protobuf field: float Unk3300_ALBMEMMJEJA = 13 [json_name = "Unk3300ALBMEMMJEJA"];
     */
    unk3300ALBMEMMJEJA: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_IADJCDJOKND = 5 [json_name = "Unk3300IADJCDJOKND"];
     */
    unk3300IADJCDJOKND: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_FNCIDLDKANO = 7 [json_name = "Unk3300FNCIDLDKANO"];
     */
    unk3300FNCIDLDKANO: number;
    /**
     * @generated from protobuf field: float Unk3300_GPCFOCIFHCD = 15 [json_name = "Unk3300GPCFOCIFHCD"];
     */
    unk3300GPCFOCIFHCD: number;
    /**
     * @generated from protobuf field: float Unk3300_FMBBEIHCCJO = 12 [json_name = "Unk3300FMBBEIHCCJO"];
     */
    unk3300FMBBEIHCCJO: number;
    /**
     * @generated from protobuf field: float Unk3300_LIJIDJOLLEB = 11 [json_name = "Unk3300LIJIDJOLLEB"];
     */
    unk3300LIJIDJOLLEB: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_GNBOAJHMNJO = 9 [json_name = "Unk3300GNBOAJHMNJO"];
     */
    unk3300GNBOAJHMNJO: number;
    /**
     * @generated from protobuf field: map<uint32, uint32> hitting_avatars = 4;
     */
    hittingAvatars: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: uint32 Unk3300_FIKEAEPLOHJ = 3 [json_name = "Unk3300FIKEAEPLOHJ"];
     */
    unk3300FIKEAEPLOHJ: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class AISnapshotEntityData$Type extends MessageType<AISnapshotEntityData> {
    constructor() {
        super("AISnapshotEntityData", [
            { no: 14, name: "finished_skill_cycles", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AISnapshotEntitySkillCycle },
            { no: 2, name: "attack_target_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "entity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "Unk3300_ALBMEMMJEJA", kind: "scalar", jsonName: "Unk3300ALBMEMMJEJA", T: 2 /*ScalarType.FLOAT*/ },
            { no: 5, name: "Unk3300_IADJCDJOKND", kind: "scalar", jsonName: "Unk3300IADJCDJOKND", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "Unk3300_FNCIDLDKANO", kind: "scalar", jsonName: "Unk3300FNCIDLDKANO", T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "Unk3300_GPCFOCIFHCD", kind: "scalar", jsonName: "Unk3300GPCFOCIFHCD", T: 2 /*ScalarType.FLOAT*/ },
            { no: 12, name: "Unk3300_FMBBEIHCCJO", kind: "scalar", jsonName: "Unk3300FMBBEIHCCJO", T: 2 /*ScalarType.FLOAT*/ },
            { no: 11, name: "Unk3300_LIJIDJOLLEB", kind: "scalar", jsonName: "Unk3300LIJIDJOLLEB", T: 2 /*ScalarType.FLOAT*/ },
            { no: 9, name: "Unk3300_GNBOAJHMNJO", kind: "scalar", jsonName: "Unk3300GNBOAJHMNJO", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "hitting_avatars", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 3, name: "Unk3300_FIKEAEPLOHJ", kind: "scalar", jsonName: "Unk3300FIKEAEPLOHJ", T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AISnapshotEntityData>): AISnapshotEntityData {
        const message = { finishedSkillCycles: [], attackTargetId: 0, entityId: 0, unk3300ALBMEMMJEJA: 0, unk3300IADJCDJOKND: 0, unk3300FNCIDLDKANO: 0, unk3300GPCFOCIFHCD: 0, unk3300FMBBEIHCCJO: 0, unk3300LIJIDJOLLEB: 0, unk3300GNBOAJHMNJO: 0, hittingAvatars: {}, unk3300FIKEAEPLOHJ: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AISnapshotEntityData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AISnapshotEntityData): AISnapshotEntityData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated AISnapshotEntitySkillCycle finished_skill_cycles */ 14:
                    message.finishedSkillCycles.push(AISnapshotEntitySkillCycle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* uint32 attack_target_id */ 2:
                    message.attackTargetId = reader.uint32();
                    break;
                case /* uint32 entity_id */ 6:
                    message.entityId = reader.uint32();
                    break;
                case /* float Unk3300_ALBMEMMJEJA = 13 [json_name = "Unk3300ALBMEMMJEJA"];*/ 13:
                    message.unk3300ALBMEMMJEJA = reader.float();
                    break;
                case /* uint32 Unk3300_IADJCDJOKND = 5 [json_name = "Unk3300IADJCDJOKND"];*/ 5:
                    message.unk3300IADJCDJOKND = reader.uint32();
                    break;
                case /* uint32 Unk3300_FNCIDLDKANO = 7 [json_name = "Unk3300FNCIDLDKANO"];*/ 7:
                    message.unk3300FNCIDLDKANO = reader.uint32();
                    break;
                case /* float Unk3300_GPCFOCIFHCD = 15 [json_name = "Unk3300GPCFOCIFHCD"];*/ 15:
                    message.unk3300GPCFOCIFHCD = reader.float();
                    break;
                case /* float Unk3300_FMBBEIHCCJO = 12 [json_name = "Unk3300FMBBEIHCCJO"];*/ 12:
                    message.unk3300FMBBEIHCCJO = reader.float();
                    break;
                case /* float Unk3300_LIJIDJOLLEB = 11 [json_name = "Unk3300LIJIDJOLLEB"];*/ 11:
                    message.unk3300LIJIDJOLLEB = reader.float();
                    break;
                case /* uint32 Unk3300_GNBOAJHMNJO = 9 [json_name = "Unk3300GNBOAJHMNJO"];*/ 9:
                    message.unk3300GNBOAJHMNJO = reader.uint32();
                    break;
                case /* map<uint32, uint32> hitting_avatars */ 4:
                    this.binaryReadMap4(message.hittingAvatars, reader, options);
                    break;
                case /* uint32 Unk3300_FIKEAEPLOHJ = 3 [json_name = "Unk3300FIKEAEPLOHJ"];*/ 3:
                    message.unk3300FIKEAEPLOHJ = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap4(map: AISnapshotEntityData["hittingAvatars"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AISnapshotEntityData["hittingAvatars"] | undefined, val: AISnapshotEntityData["hittingAvatars"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field AISnapshotEntityData.hitting_avatars");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: AISnapshotEntityData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated AISnapshotEntitySkillCycle finished_skill_cycles = 14; */
        for (let i = 0; i < message.finishedSkillCycles.length; i++)
            AISnapshotEntitySkillCycle.internalBinaryWrite(message.finishedSkillCycles[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* uint32 attack_target_id = 2; */
        if (message.attackTargetId !== 0)
            writer.tag(2, WireType.Varint).uint32(message.attackTargetId);
        /* uint32 entity_id = 6; */
        if (message.entityId !== 0)
            writer.tag(6, WireType.Varint).uint32(message.entityId);
        /* float Unk3300_ALBMEMMJEJA = 13 [json_name = "Unk3300ALBMEMMJEJA"]; */
        if (message.unk3300ALBMEMMJEJA !== 0)
            writer.tag(13, WireType.Bit32).float(message.unk3300ALBMEMMJEJA);
        /* uint32 Unk3300_IADJCDJOKND = 5 [json_name = "Unk3300IADJCDJOKND"]; */
        if (message.unk3300IADJCDJOKND !== 0)
            writer.tag(5, WireType.Varint).uint32(message.unk3300IADJCDJOKND);
        /* uint32 Unk3300_FNCIDLDKANO = 7 [json_name = "Unk3300FNCIDLDKANO"]; */
        if (message.unk3300FNCIDLDKANO !== 0)
            writer.tag(7, WireType.Varint).uint32(message.unk3300FNCIDLDKANO);
        /* float Unk3300_GPCFOCIFHCD = 15 [json_name = "Unk3300GPCFOCIFHCD"]; */
        if (message.unk3300GPCFOCIFHCD !== 0)
            writer.tag(15, WireType.Bit32).float(message.unk3300GPCFOCIFHCD);
        /* float Unk3300_FMBBEIHCCJO = 12 [json_name = "Unk3300FMBBEIHCCJO"]; */
        if (message.unk3300FMBBEIHCCJO !== 0)
            writer.tag(12, WireType.Bit32).float(message.unk3300FMBBEIHCCJO);
        /* float Unk3300_LIJIDJOLLEB = 11 [json_name = "Unk3300LIJIDJOLLEB"]; */
        if (message.unk3300LIJIDJOLLEB !== 0)
            writer.tag(11, WireType.Bit32).float(message.unk3300LIJIDJOLLEB);
        /* uint32 Unk3300_GNBOAJHMNJO = 9 [json_name = "Unk3300GNBOAJHMNJO"]; */
        if (message.unk3300GNBOAJHMNJO !== 0)
            writer.tag(9, WireType.Varint).uint32(message.unk3300GNBOAJHMNJO);
        /* map<uint32, uint32> hitting_avatars = 4; */
        for (let k of Object.keys(message.hittingAvatars))
            writer.tag(4, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.hittingAvatars[k as any]).join();
        /* uint32 Unk3300_FIKEAEPLOHJ = 3 [json_name = "Unk3300FIKEAEPLOHJ"]; */
        if (message.unk3300FIKEAEPLOHJ !== 0)
            writer.tag(3, WireType.Varint).uint32(message.unk3300FIKEAEPLOHJ);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AISnapshotEntityData
 */
export const AISnapshotEntityData = new AISnapshotEntityData$Type();
