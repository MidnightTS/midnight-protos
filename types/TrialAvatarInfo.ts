/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: TrialAvatarInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./Item";
import * as dependency_2 from "./TrialAvatarGrantRecord";
import * as pb_1 from "google-protobuf";
export class TrialAvatarInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        trial_avatar_id?: number;
        trial_equip_list?: dependency_1.Item[];
        grant_record?: dependency_2.TrialAvatarGrantRecord;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("trial_avatar_id" in data && data.trial_avatar_id != undefined) {
                this.trial_avatar_id = data.trial_avatar_id;
            }
            if ("trial_equip_list" in data && data.trial_equip_list != undefined) {
                this.trial_equip_list = data.trial_equip_list;
            }
            if ("grant_record" in data && data.grant_record != undefined) {
                this.grant_record = data.grant_record;
            }
        }
    }
    get trial_avatar_id() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set trial_avatar_id(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get trial_equip_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.Item, 2) as dependency_1.Item[];
    }
    set trial_equip_list(value: dependency_1.Item[]) {
        pb_1.Message.setRepeatedWrapperField(this, 2, value);
    }
    get grant_record() {
        return pb_1.Message.getWrapperField(this, dependency_2.TrialAvatarGrantRecord, 3) as dependency_2.TrialAvatarGrantRecord;
    }
    set grant_record(value: dependency_2.TrialAvatarGrantRecord) {
        pb_1.Message.setWrapperField(this, 3, value);
    }
    get has_grant_record() {
        return pb_1.Message.getField(this, 3) != null;
    }
    static fromObject(data: {
        trial_avatar_id?: number;
        trial_equip_list?: ReturnType<typeof dependency_1.Item.prototype.toObject>[];
        grant_record?: ReturnType<typeof dependency_2.TrialAvatarGrantRecord.prototype.toObject>;
    }): TrialAvatarInfo {
        const message = new TrialAvatarInfo({});
        if (data.trial_avatar_id != null) {
            message.trial_avatar_id = data.trial_avatar_id;
        }
        if (data.trial_equip_list != null) {
            message.trial_equip_list = data.trial_equip_list.map(item => dependency_1.Item.fromObject(item));
        }
        if (data.grant_record != null) {
            message.grant_record = dependency_2.TrialAvatarGrantRecord.fromObject(data.grant_record);
        }
        return message;
    }
    toObject() {
        const data: {
            trial_avatar_id?: number;
            trial_equip_list?: ReturnType<typeof dependency_1.Item.prototype.toObject>[];
            grant_record?: ReturnType<typeof dependency_2.TrialAvatarGrantRecord.prototype.toObject>;
        } = {};
        if (this.trial_avatar_id != null) {
            data.trial_avatar_id = this.trial_avatar_id;
        }
        if (this.trial_equip_list != null) {
            data.trial_equip_list = this.trial_equip_list.map((item: dependency_1.Item) => item.toObject());
        }
        if (this.grant_record != null) {
            data.grant_record = this.grant_record.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.trial_avatar_id != 0)
            writer.writeUint32(1, this.trial_avatar_id);
        if (this.trial_equip_list.length)
            writer.writeRepeatedMessage(2, this.trial_equip_list, (item: dependency_1.Item) => item.serialize(writer));
        if (this.has_grant_record)
            writer.writeMessage(3, this.grant_record, () => this.grant_record.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TrialAvatarInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TrialAvatarInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.trial_avatar_id = reader.readUint32();
                    break;
                case 2:
                    reader.readMessage(message.trial_equip_list, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.Item.deserialize(reader), dependency_1.Item));
                    break;
                case 3:
                    reader.readMessage(message.grant_record, () => message.grant_record = dependency_2.TrialAvatarGrantRecord.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): TrialAvatarInfo {
        return TrialAvatarInfo.deserialize(bytes);
    }
}
