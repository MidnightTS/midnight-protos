"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _MiracleRingDataNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MiracleRingDataNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: MiracleRingDataNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class MiracleRingDataNotify extends pb_1.Message {
    constructor(data) {
        super();
        _MiracleRingDataNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _MiracleRingDataNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_gadget_created" in data && data.is_gadget_created != undefined) {
                this.is_gadget_created = data.is_gadget_created;
            }
            if ("last_take_reward_time" in data && data.last_take_reward_time != undefined) {
                this.last_take_reward_time = data.last_take_reward_time;
            }
            if ("gadget_entity_id" in data && data.gadget_entity_id != undefined) {
                this.gadget_entity_id = data.gadget_entity_id;
            }
            if ("last_deliver_item_time" in data && data.last_deliver_item_time != undefined) {
                this.last_deliver_item_time = data.last_deliver_item_time;
            }
            if ("miracle_ring_cd" in data && data.miracle_ring_cd != undefined) {
                this.miracle_ring_cd = data.miracle_ring_cd;
            }
        }
    }
    get is_gadget_created() {
        return pb_1.Message.getFieldWithDefault(this, 8, false);
    }
    set is_gadget_created(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get last_take_reward_time() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0);
    }
    set last_take_reward_time(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get gadget_entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set gadget_entity_id(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get last_deliver_item_time() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0);
    }
    set last_deliver_item_time(value) {
        pb_1.Message.setField(this, 10, value);
    }
    get miracle_ring_cd() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set miracle_ring_cd(value) {
        pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data) {
        const message = new MiracleRingDataNotify({});
        if (data.is_gadget_created != null) {
            message.is_gadget_created = data.is_gadget_created;
        }
        if (data.last_take_reward_time != null) {
            message.last_take_reward_time = data.last_take_reward_time;
        }
        if (data.gadget_entity_id != null) {
            message.gadget_entity_id = data.gadget_entity_id;
        }
        if (data.last_deliver_item_time != null) {
            message.last_deliver_item_time = data.last_deliver_item_time;
        }
        if (data.miracle_ring_cd != null) {
            message.miracle_ring_cd = data.miracle_ring_cd;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.is_gadget_created != null) {
            data.is_gadget_created = this.is_gadget_created;
        }
        if (this.last_take_reward_time != null) {
            data.last_take_reward_time = this.last_take_reward_time;
        }
        if (this.gadget_entity_id != null) {
            data.gadget_entity_id = this.gadget_entity_id;
        }
        if (this.last_deliver_item_time != null) {
            data.last_deliver_item_time = this.last_deliver_item_time;
        }
        if (this.miracle_ring_cd != null) {
            data.miracle_ring_cd = this.miracle_ring_cd;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_gadget_created != false)
            writer.writeBool(8, this.is_gadget_created);
        if (this.last_take_reward_time != 0)
            writer.writeUint32(14, this.last_take_reward_time);
        if (this.gadget_entity_id != 0)
            writer.writeUint32(12, this.gadget_entity_id);
        if (this.last_deliver_item_time != 0)
            writer.writeUint32(10, this.last_deliver_item_time);
        if (this.miracle_ring_cd != 0)
            writer.writeUint32(7, this.miracle_ring_cd);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MiracleRingDataNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.is_gadget_created = reader.readBool();
                    break;
                case 14:
                    message.last_take_reward_time = reader.readUint32();
                    break;
                case 12:
                    message.gadget_entity_id = reader.readUint32();
                    break;
                case 10:
                    message.last_deliver_item_time = reader.readUint32();
                    break;
                case 7:
                    message.miracle_ring_cd = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return MiracleRingDataNotify.deserialize(bytes);
    }
}
exports.MiracleRingDataNotify = MiracleRingDataNotify;
_MiracleRingDataNotify_one_of_decls = new WeakMap();
