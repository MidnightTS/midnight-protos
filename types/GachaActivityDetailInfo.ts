/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: GachaActivityDetailInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./GachaStage";
import * as pb_1 from "google-protobuf";
export class GachaActivityDetailInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        Unk2700_PIDHKNLDALB?: number[];
        gacha_stage_list?: dependency_1.GachaStage[];
        Unk2700_KOHKBCABICD?: Map<number, number>;
        Unk2700_CDPAPBIOPCA?: number;
        Unk2700_DACHHINLDDJ?: Map<number, number>;
        Unk2700_FGFGLDIJJEK?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [6, 4], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("Unk2700_PIDHKNLDALB" in data && data.Unk2700_PIDHKNLDALB != undefined) {
                this.Unk2700_PIDHKNLDALB = data.Unk2700_PIDHKNLDALB;
            }
            if ("gacha_stage_list" in data && data.gacha_stage_list != undefined) {
                this.gacha_stage_list = data.gacha_stage_list;
            }
            if ("Unk2700_KOHKBCABICD" in data && data.Unk2700_KOHKBCABICD != undefined) {
                this.Unk2700_KOHKBCABICD = data.Unk2700_KOHKBCABICD;
            }
            if ("Unk2700_CDPAPBIOPCA" in data && data.Unk2700_CDPAPBIOPCA != undefined) {
                this.Unk2700_CDPAPBIOPCA = data.Unk2700_CDPAPBIOPCA;
            }
            if ("Unk2700_DACHHINLDDJ" in data && data.Unk2700_DACHHINLDDJ != undefined) {
                this.Unk2700_DACHHINLDDJ = data.Unk2700_DACHHINLDDJ;
            }
            if ("Unk2700_FGFGLDIJJEK" in data && data.Unk2700_FGFGLDIJJEK != undefined) {
                this.Unk2700_FGFGLDIJJEK = data.Unk2700_FGFGLDIJJEK;
            }
        }
        if (!this.Unk2700_KOHKBCABICD)
            this.Unk2700_KOHKBCABICD = new Map();
        if (!this.Unk2700_DACHHINLDDJ)
            this.Unk2700_DACHHINLDDJ = new Map();
    }
    get Unk2700_PIDHKNLDALB() {
        return pb_1.Message.getFieldWithDefault(this, 6, []) as number[];
    }
    set Unk2700_PIDHKNLDALB(value: number[]) {
        pb_1.Message.setField(this, 6, value);
    }
    get gacha_stage_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.GachaStage, 4) as dependency_1.GachaStage[];
    }
    set gacha_stage_list(value: dependency_1.GachaStage[]) {
        pb_1.Message.setRepeatedWrapperField(this, 4, value);
    }
    get Unk2700_KOHKBCABICD() {
        return pb_1.Message.getField(this, 8) as any as Map<number, number>;
    }
    set Unk2700_KOHKBCABICD(value: Map<number, number>) {
        pb_1.Message.setField(this, 8, value as any);
    }
    get Unk2700_CDPAPBIOPCA() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set Unk2700_CDPAPBIOPCA(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get Unk2700_DACHHINLDDJ() {
        return pb_1.Message.getField(this, 5) as any as Map<number, number>;
    }
    set Unk2700_DACHHINLDDJ(value: Map<number, number>) {
        pb_1.Message.setField(this, 5, value as any);
    }
    get Unk2700_FGFGLDIJJEK() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set Unk2700_FGFGLDIJJEK(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    static fromObject(data: {
        Unk2700_PIDHKNLDALB?: number[];
        gacha_stage_list?: ReturnType<typeof dependency_1.GachaStage.prototype.toObject>[];
        Unk2700_KOHKBCABICD?: {
            [key: number]: number;
        };
        Unk2700_CDPAPBIOPCA?: number;
        Unk2700_DACHHINLDDJ?: {
            [key: number]: number;
        };
        Unk2700_FGFGLDIJJEK?: number;
    }): GachaActivityDetailInfo {
        const message = new GachaActivityDetailInfo({});
        if (data.Unk2700_PIDHKNLDALB != null) {
            message.Unk2700_PIDHKNLDALB = data.Unk2700_PIDHKNLDALB;
        }
        if (data.gacha_stage_list != null) {
            message.gacha_stage_list = data.gacha_stage_list.map(item => dependency_1.GachaStage.fromObject(item));
        }
        if (typeof data.Unk2700_KOHKBCABICD == "object") {
            message.Unk2700_KOHKBCABICD = new Map(Object.entries(data.Unk2700_KOHKBCABICD).map(([key, value]) => [Number(key), value]));
        }
        if (data.Unk2700_CDPAPBIOPCA != null) {
            message.Unk2700_CDPAPBIOPCA = data.Unk2700_CDPAPBIOPCA;
        }
        if (typeof data.Unk2700_DACHHINLDDJ == "object") {
            message.Unk2700_DACHHINLDDJ = new Map(Object.entries(data.Unk2700_DACHHINLDDJ).map(([key, value]) => [Number(key), value]));
        }
        if (data.Unk2700_FGFGLDIJJEK != null) {
            message.Unk2700_FGFGLDIJJEK = data.Unk2700_FGFGLDIJJEK;
        }
        return message;
    }
    toObject() {
        const data: {
            Unk2700_PIDHKNLDALB?: number[];
            gacha_stage_list?: ReturnType<typeof dependency_1.GachaStage.prototype.toObject>[];
            Unk2700_KOHKBCABICD?: {
                [key: number]: number;
            };
            Unk2700_CDPAPBIOPCA?: number;
            Unk2700_DACHHINLDDJ?: {
                [key: number]: number;
            };
            Unk2700_FGFGLDIJJEK?: number;
        } = {};
        if (this.Unk2700_PIDHKNLDALB != null) {
            data.Unk2700_PIDHKNLDALB = this.Unk2700_PIDHKNLDALB;
        }
        if (this.gacha_stage_list != null) {
            data.gacha_stage_list = this.gacha_stage_list.map((item: dependency_1.GachaStage) => item.toObject());
        }
        if (this.Unk2700_KOHKBCABICD.size > 0) {
            data.Unk2700_KOHKBCABICD = (Object.fromEntries)(this.Unk2700_KOHKBCABICD);
        }
        if (this.Unk2700_CDPAPBIOPCA != null) {
            data.Unk2700_CDPAPBIOPCA = this.Unk2700_CDPAPBIOPCA;
        }
        if (this.Unk2700_DACHHINLDDJ.size > 0) {
            data.Unk2700_DACHHINLDDJ = (Object.fromEntries)(this.Unk2700_DACHHINLDDJ);
        }
        if (this.Unk2700_FGFGLDIJJEK != null) {
            data.Unk2700_FGFGLDIJJEK = this.Unk2700_FGFGLDIJJEK;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.Unk2700_PIDHKNLDALB.length)
            writer.writePackedUint32(6, this.Unk2700_PIDHKNLDALB);
        if (this.gacha_stage_list.length)
            writer.writeRepeatedMessage(4, this.gacha_stage_list, (item: dependency_1.GachaStage) => item.serialize(writer));
        for (const [key, value] of this.Unk2700_KOHKBCABICD) {
            writer.writeMessage(8, this.Unk2700_KOHKBCABICD, () => {
                writer.writeUint32(1, key);
                writer.writeUint32(2, value);
            });
        }
        if (this.Unk2700_CDPAPBIOPCA != 0)
            writer.writeUint32(3, this.Unk2700_CDPAPBIOPCA);
        for (const [key, value] of this.Unk2700_DACHHINLDDJ) {
            writer.writeMessage(5, this.Unk2700_DACHHINLDDJ, () => {
                writer.writeUint32(1, key);
                writer.writeUint32(2, value);
            });
        }
        if (this.Unk2700_FGFGLDIJJEK != 0)
            writer.writeUint32(12, this.Unk2700_FGFGLDIJJEK);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GachaActivityDetailInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GachaActivityDetailInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 6:
                    message.Unk2700_PIDHKNLDALB = reader.readPackedUint32();
                    break;
                case 4:
                    reader.readMessage(message.gacha_stage_list, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_1.GachaStage.deserialize(reader), dependency_1.GachaStage));
                    break;
                case 8:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.Unk2700_KOHKBCABICD as any, reader, reader.readUint32, reader.readUint32));
                    break;
                case 3:
                    message.Unk2700_CDPAPBIOPCA = reader.readUint32();
                    break;
                case 5:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.Unk2700_DACHHINLDDJ as any, reader, reader.readUint32, reader.readUint32));
                    break;
                case 12:
                    message.Unk2700_FGFGLDIJJEK = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GachaActivityDetailInfo {
        return GachaActivityDetailInfo.deserialize(bytes);
    }
}
