/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PlayerEnterSceneInfoNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./AvatarEnterSceneInfo";
import * as dependency_2 from "./MPLevelEntityInfo";
import * as dependency_3 from "./TeamEnterSceneInfo";
import * as pb_1 from "google-protobuf";
export class PlayerEnterSceneInfoNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        team_enter_info?: dependency_3.TeamEnterSceneInfo;
        enter_scene_token?: number;
        avatar_enter_info?: dependency_1.AvatarEnterSceneInfo[];
        cur_avatar_entity_id?: number;
        mp_level_entity_info?: dependency_2.MPLevelEntityInfo;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [7], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("team_enter_info" in data && data.team_enter_info != undefined) {
                this.team_enter_info = data.team_enter_info;
            }
            if ("enter_scene_token" in data && data.enter_scene_token != undefined) {
                this.enter_scene_token = data.enter_scene_token;
            }
            if ("avatar_enter_info" in data && data.avatar_enter_info != undefined) {
                this.avatar_enter_info = data.avatar_enter_info;
            }
            if ("cur_avatar_entity_id" in data && data.cur_avatar_entity_id != undefined) {
                this.cur_avatar_entity_id = data.cur_avatar_entity_id;
            }
            if ("mp_level_entity_info" in data && data.mp_level_entity_info != undefined) {
                this.mp_level_entity_info = data.mp_level_entity_info;
            }
        }
    }
    get team_enter_info() {
        return pb_1.Message.getWrapperField(this, dependency_3.TeamEnterSceneInfo, 8) as dependency_3.TeamEnterSceneInfo;
    }
    set team_enter_info(value: dependency_3.TeamEnterSceneInfo) {
        pb_1.Message.setWrapperField(this, 8, value);
    }
    get has_team_enter_info() {
        return pb_1.Message.getField(this, 8) != null;
    }
    get enter_scene_token() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set enter_scene_token(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get avatar_enter_info() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.AvatarEnterSceneInfo, 7) as dependency_1.AvatarEnterSceneInfo[];
    }
    set avatar_enter_info(value: dependency_1.AvatarEnterSceneInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 7, value);
    }
    get cur_avatar_entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set cur_avatar_entity_id(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get mp_level_entity_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.MPLevelEntityInfo, 5) as dependency_2.MPLevelEntityInfo;
    }
    set mp_level_entity_info(value: dependency_2.MPLevelEntityInfo) {
        pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_mp_level_entity_info() {
        return pb_1.Message.getField(this, 5) != null;
    }
    static fromObject(data: {
        team_enter_info?: ReturnType<typeof dependency_3.TeamEnterSceneInfo.prototype.toObject>;
        enter_scene_token?: number;
        avatar_enter_info?: ReturnType<typeof dependency_1.AvatarEnterSceneInfo.prototype.toObject>[];
        cur_avatar_entity_id?: number;
        mp_level_entity_info?: ReturnType<typeof dependency_2.MPLevelEntityInfo.prototype.toObject>;
    }): PlayerEnterSceneInfoNotify {
        const message = new PlayerEnterSceneInfoNotify({});
        if (data.team_enter_info != null) {
            message.team_enter_info = dependency_3.TeamEnterSceneInfo.fromObject(data.team_enter_info);
        }
        if (data.enter_scene_token != null) {
            message.enter_scene_token = data.enter_scene_token;
        }
        if (data.avatar_enter_info != null) {
            message.avatar_enter_info = data.avatar_enter_info.map(item => dependency_1.AvatarEnterSceneInfo.fromObject(item));
        }
        if (data.cur_avatar_entity_id != null) {
            message.cur_avatar_entity_id = data.cur_avatar_entity_id;
        }
        if (data.mp_level_entity_info != null) {
            message.mp_level_entity_info = dependency_2.MPLevelEntityInfo.fromObject(data.mp_level_entity_info);
        }
        return message;
    }
    toObject() {
        const data: {
            team_enter_info?: ReturnType<typeof dependency_3.TeamEnterSceneInfo.prototype.toObject>;
            enter_scene_token?: number;
            avatar_enter_info?: ReturnType<typeof dependency_1.AvatarEnterSceneInfo.prototype.toObject>[];
            cur_avatar_entity_id?: number;
            mp_level_entity_info?: ReturnType<typeof dependency_2.MPLevelEntityInfo.prototype.toObject>;
        } = {};
        if (this.team_enter_info != null) {
            data.team_enter_info = this.team_enter_info.toObject();
        }
        if (this.enter_scene_token != null) {
            data.enter_scene_token = this.enter_scene_token;
        }
        if (this.avatar_enter_info != null) {
            data.avatar_enter_info = this.avatar_enter_info.map((item: dependency_1.AvatarEnterSceneInfo) => item.toObject());
        }
        if (this.cur_avatar_entity_id != null) {
            data.cur_avatar_entity_id = this.cur_avatar_entity_id;
        }
        if (this.mp_level_entity_info != null) {
            data.mp_level_entity_info = this.mp_level_entity_info.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_team_enter_info)
            writer.writeMessage(8, this.team_enter_info, () => this.team_enter_info.serialize(writer));
        if (this.enter_scene_token != 0)
            writer.writeUint32(12, this.enter_scene_token);
        if (this.avatar_enter_info.length)
            writer.writeRepeatedMessage(7, this.avatar_enter_info, (item: dependency_1.AvatarEnterSceneInfo) => item.serialize(writer));
        if (this.cur_avatar_entity_id != 0)
            writer.writeUint32(6, this.cur_avatar_entity_id);
        if (this.has_mp_level_entity_info)
            writer.writeMessage(5, this.mp_level_entity_info, () => this.mp_level_entity_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PlayerEnterSceneInfoNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PlayerEnterSceneInfoNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    reader.readMessage(message.team_enter_info, () => message.team_enter_info = dependency_3.TeamEnterSceneInfo.deserialize(reader));
                    break;
                case 12:
                    message.enter_scene_token = reader.readUint32();
                    break;
                case 7:
                    reader.readMessage(message.avatar_enter_info, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_1.AvatarEnterSceneInfo.deserialize(reader), dependency_1.AvatarEnterSceneInfo));
                    break;
                case 6:
                    message.cur_avatar_entity_id = reader.readUint32();
                    break;
                case 5:
                    reader.readMessage(message.mp_level_entity_info, () => message.mp_level_entity_info = dependency_2.MPLevelEntityInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): PlayerEnterSceneInfoNotify {
        return PlayerEnterSceneInfoNotify.deserialize(bytes);
    }
}
