/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneEntityUpdateNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./SceneEntityInfo";
import * as dependency_2 from "./VisionType";
import * as pb_1 from "google-protobuf";
export class SceneEntityUpdateNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        param?: number;
        appear_type?: dependency_2.VisionType;
        entity_list?: dependency_1.SceneEntityInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [5], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("param" in data && data.param != undefined) {
                this.param = data.param;
            }
            if ("appear_type" in data && data.appear_type != undefined) {
                this.appear_type = data.appear_type;
            }
            if ("entity_list" in data && data.entity_list != undefined) {
                this.entity_list = data.entity_list;
            }
        }
    }
    get param() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;
    }
    set param(value: number) {
        pb_1.Message.setField(this, 10, value);
    }
    get appear_type() {
        return pb_1.Message.getFieldWithDefault(this, 13, dependency_2.VisionType.VISION_TYPE_NONE) as dependency_2.VisionType;
    }
    set appear_type(value: dependency_2.VisionType) {
        pb_1.Message.setField(this, 13, value);
    }
    get entity_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.SceneEntityInfo, 5) as dependency_1.SceneEntityInfo[];
    }
    set entity_list(value: dependency_1.SceneEntityInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 5, value);
    }
    static fromObject(data: {
        param?: number;
        appear_type?: dependency_2.VisionType;
        entity_list?: ReturnType<typeof dependency_1.SceneEntityInfo.prototype.toObject>[];
    }): SceneEntityUpdateNotify {
        const message = new SceneEntityUpdateNotify({});
        if (data.param != null) {
            message.param = data.param;
        }
        if (data.appear_type != null) {
            message.appear_type = data.appear_type;
        }
        if (data.entity_list != null) {
            message.entity_list = data.entity_list.map(item => dependency_1.SceneEntityInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            param?: number;
            appear_type?: dependency_2.VisionType;
            entity_list?: ReturnType<typeof dependency_1.SceneEntityInfo.prototype.toObject>[];
        } = {};
        if (this.param != null) {
            data.param = this.param;
        }
        if (this.appear_type != null) {
            data.appear_type = this.appear_type;
        }
        if (this.entity_list != null) {
            data.entity_list = this.entity_list.map((item: dependency_1.SceneEntityInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.param != 0)
            writer.writeUint32(10, this.param);
        if (this.appear_type != dependency_2.VisionType.VISION_TYPE_NONE)
            writer.writeEnum(13, this.appear_type);
        if (this.entity_list.length)
            writer.writeRepeatedMessage(5, this.entity_list, (item: dependency_1.SceneEntityInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SceneEntityUpdateNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneEntityUpdateNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 10:
                    message.param = reader.readUint32();
                    break;
                case 13:
                    message.appear_type = reader.readEnum();
                    break;
                case 5:
                    reader.readMessage(message.entity_list, () => pb_1.Message.addToRepeatedWrapperField(message, 5, dependency_1.SceneEntityInfo.deserialize(reader), dependency_1.SceneEntityInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): SceneEntityUpdateNotify {
        return SceneEntityUpdateNotify.deserialize(bytes);
    }
}
