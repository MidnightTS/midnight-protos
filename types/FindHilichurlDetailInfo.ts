/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: FindHilichurlDetailInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./FindHilichurlDayContentInfo";
import * as pb_1 from "google-protobuf";
export class FindHilichurlDetailInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        day_content_info_list?: dependency_1.FindHilichurlDayContentInfo[];
        min_open_player_level?: number;
        is_end_quest_accept?: boolean;
        content_close_time?: number;
        is_content_closed?: boolean;
        player_day_index?: number;
        day_index?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("day_content_info_list" in data && data.day_content_info_list != undefined) {
                this.day_content_info_list = data.day_content_info_list;
            }
            if ("min_open_player_level" in data && data.min_open_player_level != undefined) {
                this.min_open_player_level = data.min_open_player_level;
            }
            if ("is_end_quest_accept" in data && data.is_end_quest_accept != undefined) {
                this.is_end_quest_accept = data.is_end_quest_accept;
            }
            if ("content_close_time" in data && data.content_close_time != undefined) {
                this.content_close_time = data.content_close_time;
            }
            if ("is_content_closed" in data && data.is_content_closed != undefined) {
                this.is_content_closed = data.is_content_closed;
            }
            if ("player_day_index" in data && data.player_day_index != undefined) {
                this.player_day_index = data.player_day_index;
            }
            if ("day_index" in data && data.day_index != undefined) {
                this.day_index = data.day_index;
            }
        }
    }
    get day_content_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.FindHilichurlDayContentInfo, 1) as dependency_1.FindHilichurlDayContentInfo[];
    }
    set day_content_info_list(value: dependency_1.FindHilichurlDayContentInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    get min_open_player_level() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set min_open_player_level(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get is_end_quest_accept() {
        return pb_1.Message.getFieldWithDefault(this, 7, false) as boolean;
    }
    set is_end_quest_accept(value: boolean) {
        pb_1.Message.setField(this, 7, value);
    }
    get content_close_time() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set content_close_time(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get is_content_closed() {
        return pb_1.Message.getFieldWithDefault(this, 9, false) as boolean;
    }
    set is_content_closed(value: boolean) {
        pb_1.Message.setField(this, 9, value);
    }
    get player_day_index() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set player_day_index(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get day_index() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set day_index(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data: {
        day_content_info_list?: ReturnType<typeof dependency_1.FindHilichurlDayContentInfo.prototype.toObject>[];
        min_open_player_level?: number;
        is_end_quest_accept?: boolean;
        content_close_time?: number;
        is_content_closed?: boolean;
        player_day_index?: number;
        day_index?: number;
    }): FindHilichurlDetailInfo {
        const message = new FindHilichurlDetailInfo({});
        if (data.day_content_info_list != null) {
            message.day_content_info_list = data.day_content_info_list.map(item => dependency_1.FindHilichurlDayContentInfo.fromObject(item));
        }
        if (data.min_open_player_level != null) {
            message.min_open_player_level = data.min_open_player_level;
        }
        if (data.is_end_quest_accept != null) {
            message.is_end_quest_accept = data.is_end_quest_accept;
        }
        if (data.content_close_time != null) {
            message.content_close_time = data.content_close_time;
        }
        if (data.is_content_closed != null) {
            message.is_content_closed = data.is_content_closed;
        }
        if (data.player_day_index != null) {
            message.player_day_index = data.player_day_index;
        }
        if (data.day_index != null) {
            message.day_index = data.day_index;
        }
        return message;
    }
    toObject() {
        const data: {
            day_content_info_list?: ReturnType<typeof dependency_1.FindHilichurlDayContentInfo.prototype.toObject>[];
            min_open_player_level?: number;
            is_end_quest_accept?: boolean;
            content_close_time?: number;
            is_content_closed?: boolean;
            player_day_index?: number;
            day_index?: number;
        } = {};
        if (this.day_content_info_list != null) {
            data.day_content_info_list = this.day_content_info_list.map((item: dependency_1.FindHilichurlDayContentInfo) => item.toObject());
        }
        if (this.min_open_player_level != null) {
            data.min_open_player_level = this.min_open_player_level;
        }
        if (this.is_end_quest_accept != null) {
            data.is_end_quest_accept = this.is_end_quest_accept;
        }
        if (this.content_close_time != null) {
            data.content_close_time = this.content_close_time;
        }
        if (this.is_content_closed != null) {
            data.is_content_closed = this.is_content_closed;
        }
        if (this.player_day_index != null) {
            data.player_day_index = this.player_day_index;
        }
        if (this.day_index != null) {
            data.day_index = this.day_index;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.day_content_info_list.length)
            writer.writeRepeatedMessage(1, this.day_content_info_list, (item: dependency_1.FindHilichurlDayContentInfo) => item.serialize(writer));
        if (this.min_open_player_level != 0)
            writer.writeUint32(12, this.min_open_player_level);
        if (this.is_end_quest_accept != false)
            writer.writeBool(7, this.is_end_quest_accept);
        if (this.content_close_time != 0)
            writer.writeUint32(6, this.content_close_time);
        if (this.is_content_closed != false)
            writer.writeBool(9, this.is_content_closed);
        if (this.player_day_index != 0)
            writer.writeUint32(4, this.player_day_index);
        if (this.day_index != 0)
            writer.writeUint32(15, this.day_index);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): FindHilichurlDetailInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FindHilichurlDetailInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.day_content_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.FindHilichurlDayContentInfo.deserialize(reader), dependency_1.FindHilichurlDayContentInfo));
                    break;
                case 12:
                    message.min_open_player_level = reader.readUint32();
                    break;
                case 7:
                    message.is_end_quest_accept = reader.readBool();
                    break;
                case 6:
                    message.content_close_time = reader.readUint32();
                    break;
                case 9:
                    message.is_content_closed = reader.readBool();
                    break;
                case 4:
                    message.player_day_index = reader.readUint32();
                    break;
                case 15:
                    message.day_index = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): FindHilichurlDetailInfo {
        return FindHilichurlDetailInfo.deserialize(bytes);
    }
}
