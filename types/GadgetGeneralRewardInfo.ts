/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: GadgetGeneralRewardInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ItemParam";
import * as pb_1 from "google-protobuf";
export class GadgetGeneralRewardInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        resin?: number;
        dead_time?: number;
        remain_uid_list?: number[];
        qualify_uid_list?: number[];
        item_param?: dependency_1.ItemParam;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3, 4], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("resin" in data && data.resin != undefined) {
                this.resin = data.resin;
            }
            if ("dead_time" in data && data.dead_time != undefined) {
                this.dead_time = data.dead_time;
            }
            if ("remain_uid_list" in data && data.remain_uid_list != undefined) {
                this.remain_uid_list = data.remain_uid_list;
            }
            if ("qualify_uid_list" in data && data.qualify_uid_list != undefined) {
                this.qualify_uid_list = data.qualify_uid_list;
            }
            if ("item_param" in data && data.item_param != undefined) {
                this.item_param = data.item_param;
            }
        }
    }
    get resin() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set resin(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get dead_time() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set dead_time(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get remain_uid_list() {
        return pb_1.Message.getFieldWithDefault(this, 3, []) as number[];
    }
    set remain_uid_list(value: number[]) {
        pb_1.Message.setField(this, 3, value);
    }
    get qualify_uid_list() {
        return pb_1.Message.getFieldWithDefault(this, 4, []) as number[];
    }
    set qualify_uid_list(value: number[]) {
        pb_1.Message.setField(this, 4, value);
    }
    get item_param() {
        return pb_1.Message.getWrapperField(this, dependency_1.ItemParam, 5) as dependency_1.ItemParam;
    }
    set item_param(value: dependency_1.ItemParam) {
        pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_item_param() {
        return pb_1.Message.getField(this, 5) != null;
    }
    static fromObject(data: {
        resin?: number;
        dead_time?: number;
        remain_uid_list?: number[];
        qualify_uid_list?: number[];
        item_param?: ReturnType<typeof dependency_1.ItemParam.prototype.toObject>;
    }): GadgetGeneralRewardInfo {
        const message = new GadgetGeneralRewardInfo({});
        if (data.resin != null) {
            message.resin = data.resin;
        }
        if (data.dead_time != null) {
            message.dead_time = data.dead_time;
        }
        if (data.remain_uid_list != null) {
            message.remain_uid_list = data.remain_uid_list;
        }
        if (data.qualify_uid_list != null) {
            message.qualify_uid_list = data.qualify_uid_list;
        }
        if (data.item_param != null) {
            message.item_param = dependency_1.ItemParam.fromObject(data.item_param);
        }
        return message;
    }
    toObject() {
        const data: {
            resin?: number;
            dead_time?: number;
            remain_uid_list?: number[];
            qualify_uid_list?: number[];
            item_param?: ReturnType<typeof dependency_1.ItemParam.prototype.toObject>;
        } = {};
        if (this.resin != null) {
            data.resin = this.resin;
        }
        if (this.dead_time != null) {
            data.dead_time = this.dead_time;
        }
        if (this.remain_uid_list != null) {
            data.remain_uid_list = this.remain_uid_list;
        }
        if (this.qualify_uid_list != null) {
            data.qualify_uid_list = this.qualify_uid_list;
        }
        if (this.item_param != null) {
            data.item_param = this.item_param.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.resin != 0)
            writer.writeUint32(1, this.resin);
        if (this.dead_time != 0)
            writer.writeUint32(2, this.dead_time);
        if (this.remain_uid_list.length)
            writer.writePackedUint32(3, this.remain_uid_list);
        if (this.qualify_uid_list.length)
            writer.writePackedUint32(4, this.qualify_uid_list);
        if (this.has_item_param)
            writer.writeMessage(5, this.item_param, () => this.item_param.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GadgetGeneralRewardInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GadgetGeneralRewardInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.resin = reader.readUint32();
                    break;
                case 2:
                    message.dead_time = reader.readUint32();
                    break;
                case 3:
                    message.remain_uid_list = reader.readPackedUint32();
                    break;
                case 4:
                    message.qualify_uid_list = reader.readPackedUint32();
                    break;
                case 5:
                    reader.readMessage(message.item_param, () => message.item_param = dependency_1.ItemParam.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GadgetGeneralRewardInfo {
        return GadgetGeneralRewardInfo.deserialize(bytes);
    }
}
