/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: Unk2700_DMPIJLBHEAE.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./BundleInfo";
import * as dependency_2 from "./ScoreChallengeInfo";
import * as pb_1 from "google-protobuf";
export class Unk2700_DMPIJLBHEAE extends pb_1.Message {
    #one_of_decls: number[][] = [[11, 13, 2]];
    constructor(data?: any[] | ({
        challenge_type?: number;
        is_unlock?: boolean;
    } & (({
        bundle_info?: dependency_1.BundleInfo;
        score_challenge_info?: never;
        boss_challenge_id?: never;
    } | {
        bundle_info?: never;
        score_challenge_info?: dependency_2.ScoreChallengeInfo;
        boss_challenge_id?: never;
    } | {
        bundle_info?: never;
        score_challenge_info?: never;
        boss_challenge_id?: number;
    })))) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("challenge_type" in data && data.challenge_type != undefined) {
                this.challenge_type = data.challenge_type;
            }
            if ("is_unlock" in data && data.is_unlock != undefined) {
                this.is_unlock = data.is_unlock;
            }
            if ("bundle_info" in data && data.bundle_info != undefined) {
                this.bundle_info = data.bundle_info;
            }
            if ("score_challenge_info" in data && data.score_challenge_info != undefined) {
                this.score_challenge_info = data.score_challenge_info;
            }
            if ("boss_challenge_id" in data && data.boss_challenge_id != undefined) {
                this.boss_challenge_id = data.boss_challenge_id;
            }
        }
    }
    get challenge_type() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set challenge_type(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get is_unlock() {
        return pb_1.Message.getFieldWithDefault(this, 12, false) as boolean;
    }
    set is_unlock(value: boolean) {
        pb_1.Message.setField(this, 12, value);
    }
    get bundle_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.BundleInfo, 11) as dependency_1.BundleInfo;
    }
    set bundle_info(value: dependency_1.BundleInfo) {
        pb_1.Message.setOneofWrapperField(this, 11, this.#one_of_decls[0], value);
    }
    get has_bundle_info() {
        return pb_1.Message.getField(this, 11) != null;
    }
    get score_challenge_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.ScoreChallengeInfo, 13) as dependency_2.ScoreChallengeInfo;
    }
    set score_challenge_info(value: dependency_2.ScoreChallengeInfo) {
        pb_1.Message.setOneofWrapperField(this, 13, this.#one_of_decls[0], value);
    }
    get has_score_challenge_info() {
        return pb_1.Message.getField(this, 13) != null;
    }
    get boss_challenge_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set boss_challenge_id(value: number) {
        pb_1.Message.setOneofField(this, 2, this.#one_of_decls[0], value);
    }
    get has_boss_challenge_id() {
        return pb_1.Message.getField(this, 2) != null;
    }
    get Unk2700_AFHAGFONBFM() {
        const cases: {
            [index: number]: "none" | "bundle_info" | "score_challenge_info" | "boss_challenge_id";
        } = {
            0: "none",
            11: "bundle_info",
            13: "score_challenge_info",
            2: "boss_challenge_id"
        };
        return cases[pb_1.Message.computeOneofCase(this, [11, 13, 2])];
    }
    static fromObject(data: {
        challenge_type?: number;
        is_unlock?: boolean;
        bundle_info?: ReturnType<typeof dependency_1.BundleInfo.prototype.toObject>;
        score_challenge_info?: ReturnType<typeof dependency_2.ScoreChallengeInfo.prototype.toObject>;
        boss_challenge_id?: number;
    }): Unk2700_DMPIJLBHEAE {
        const message = new Unk2700_DMPIJLBHEAE({});
        if (data.challenge_type != null) {
            message.challenge_type = data.challenge_type;
        }
        if (data.is_unlock != null) {
            message.is_unlock = data.is_unlock;
        }
        if (data.bundle_info != null) {
            message.bundle_info = dependency_1.BundleInfo.fromObject(data.bundle_info);
        }
        if (data.score_challenge_info != null) {
            message.score_challenge_info = dependency_2.ScoreChallengeInfo.fromObject(data.score_challenge_info);
        }
        if (data.boss_challenge_id != null) {
            message.boss_challenge_id = data.boss_challenge_id;
        }
        return message;
    }
    toObject() {
        const data: {
            challenge_type?: number;
            is_unlock?: boolean;
            bundle_info?: ReturnType<typeof dependency_1.BundleInfo.prototype.toObject>;
            score_challenge_info?: ReturnType<typeof dependency_2.ScoreChallengeInfo.prototype.toObject>;
            boss_challenge_id?: number;
        } = {};
        if (this.challenge_type != null) {
            data.challenge_type = this.challenge_type;
        }
        if (this.is_unlock != null) {
            data.is_unlock = this.is_unlock;
        }
        if (this.bundle_info != null) {
            data.bundle_info = this.bundle_info.toObject();
        }
        if (this.score_challenge_info != null) {
            data.score_challenge_info = this.score_challenge_info.toObject();
        }
        if (this.boss_challenge_id != null) {
            data.boss_challenge_id = this.boss_challenge_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.challenge_type != 0)
            writer.writeUint32(5, this.challenge_type);
        if (this.is_unlock != false)
            writer.writeBool(12, this.is_unlock);
        if (this.has_bundle_info)
            writer.writeMessage(11, this.bundle_info, () => this.bundle_info.serialize(writer));
        if (this.has_score_challenge_info)
            writer.writeMessage(13, this.score_challenge_info, () => this.score_challenge_info.serialize(writer));
        if (this.has_boss_challenge_id)
            writer.writeUint32(2, this.boss_challenge_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Unk2700_DMPIJLBHEAE {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Unk2700_DMPIJLBHEAE();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 5:
                    message.challenge_type = reader.readUint32();
                    break;
                case 12:
                    message.is_unlock = reader.readBool();
                    break;
                case 11:
                    reader.readMessage(message.bundle_info, () => message.bundle_info = dependency_1.BundleInfo.deserialize(reader));
                    break;
                case 13:
                    reader.readMessage(message.score_challenge_info, () => message.score_challenge_info = dependency_2.ScoreChallengeInfo.deserialize(reader));
                    break;
                case 2:
                    message.boss_challenge_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): Unk2700_DMPIJLBHEAE {
        return Unk2700_DMPIJLBHEAE.deserialize(bytes);
    }
}
