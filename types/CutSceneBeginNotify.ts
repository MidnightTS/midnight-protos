/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CutSceneBeginNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./Unk3100_LFIMJOCPILC";
import * as pb_1 from "google-protobuf";
export class CutSceneBeginNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        is_wait_others?: boolean;
        cutscene_id?: number;
        extra_param_list?: dependency_1.Unk3100_LFIMJOCPILC[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_wait_others" in data && data.is_wait_others != undefined) {
                this.is_wait_others = data.is_wait_others;
            }
            if ("cutscene_id" in data && data.cutscene_id != undefined) {
                this.cutscene_id = data.cutscene_id;
            }
            if ("extra_param_list" in data && data.extra_param_list != undefined) {
                this.extra_param_list = data.extra_param_list;
            }
        }
    }
    get is_wait_others() {
        return pb_1.Message.getFieldWithDefault(this, 9, false) as boolean;
    }
    set is_wait_others(value: boolean) {
        pb_1.Message.setField(this, 9, value);
    }
    get cutscene_id() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0) as number;
    }
    set cutscene_id(value: number) {
        pb_1.Message.setField(this, 14, value);
    }
    get extra_param_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.Unk3100_LFIMJOCPILC, 3) as dependency_1.Unk3100_LFIMJOCPILC[];
    }
    set extra_param_list(value: dependency_1.Unk3100_LFIMJOCPILC[]) {
        pb_1.Message.setRepeatedWrapperField(this, 3, value);
    }
    static fromObject(data: {
        is_wait_others?: boolean;
        cutscene_id?: number;
        extra_param_list?: ReturnType<typeof dependency_1.Unk3100_LFIMJOCPILC.prototype.toObject>[];
    }): CutSceneBeginNotify {
        const message = new CutSceneBeginNotify({});
        if (data.is_wait_others != null) {
            message.is_wait_others = data.is_wait_others;
        }
        if (data.cutscene_id != null) {
            message.cutscene_id = data.cutscene_id;
        }
        if (data.extra_param_list != null) {
            message.extra_param_list = data.extra_param_list.map(item => dependency_1.Unk3100_LFIMJOCPILC.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            is_wait_others?: boolean;
            cutscene_id?: number;
            extra_param_list?: ReturnType<typeof dependency_1.Unk3100_LFIMJOCPILC.prototype.toObject>[];
        } = {};
        if (this.is_wait_others != null) {
            data.is_wait_others = this.is_wait_others;
        }
        if (this.cutscene_id != null) {
            data.cutscene_id = this.cutscene_id;
        }
        if (this.extra_param_list != null) {
            data.extra_param_list = this.extra_param_list.map((item: dependency_1.Unk3100_LFIMJOCPILC) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_wait_others != false)
            writer.writeBool(9, this.is_wait_others);
        if (this.cutscene_id != 0)
            writer.writeUint32(14, this.cutscene_id);
        if (this.extra_param_list.length)
            writer.writeRepeatedMessage(3, this.extra_param_list, (item: dependency_1.Unk3100_LFIMJOCPILC) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CutSceneBeginNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CutSceneBeginNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 9:
                    message.is_wait_others = reader.readBool();
                    break;
                case 14:
                    message.cutscene_id = reader.readUint32();
                    break;
                case 3:
                    reader.readMessage(message.extra_param_list, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.Unk3100_LFIMJOCPILC.deserialize(reader), dependency_1.Unk3100_LFIMJOCPILC));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): CutSceneBeginNotify {
        return CutSceneBeginNotify.deserialize(bytes);
    }
}
