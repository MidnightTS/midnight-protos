// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "WidgetCreatorInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { WidgetCreateLocationInfo } from "./WidgetCreateLocationInfo";
import { WidgetCreatorOpType } from "./WidgetCreatorOpType";
/**
 * @generated from protobuf message WidgetCreatorInfo
 */
export interface WidgetCreatorInfo {
    /**
     * @generated from protobuf field: WidgetCreatorOpType op_type = 14;
     */
    opType: WidgetCreatorOpType;
    /**
     * @generated from protobuf field: uint32 entity_id = 12;
     */
    entityId: number;
    /**
     * @generated from protobuf field: WidgetCreateLocationInfo location_info = 9;
     */
    locationInfo?: WidgetCreateLocationInfo;
}
// @generated message type with reflection information, may provide speed optimized methods
class WidgetCreatorInfo$Type extends MessageType<WidgetCreatorInfo> {
    constructor() {
        super("WidgetCreatorInfo", [
            { no: 14, name: "op_type", kind: "enum", T: () => ["WidgetCreatorOpType", WidgetCreatorOpType, "WIDGET_CREATOR_OP_TYPE_"] },
            { no: 12, name: "entity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "location_info", kind: "message", T: () => WidgetCreateLocationInfo }
        ]);
    }
    create(value?: PartialMessage<WidgetCreatorInfo>): WidgetCreatorInfo {
        const message = { opType: 0, entityId: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WidgetCreatorInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WidgetCreatorInfo): WidgetCreatorInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* WidgetCreatorOpType op_type */ 14:
                    message.opType = reader.int32();
                    break;
                case /* uint32 entity_id */ 12:
                    message.entityId = reader.uint32();
                    break;
                case /* WidgetCreateLocationInfo location_info */ 9:
                    message.locationInfo = WidgetCreateLocationInfo.internalBinaryRead(reader, reader.uint32(), options, message.locationInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WidgetCreatorInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* WidgetCreatorOpType op_type = 14; */
        if (message.opType !== 0)
            writer.tag(14, WireType.Varint).int32(message.opType);
        /* uint32 entity_id = 12; */
        if (message.entityId !== 0)
            writer.tag(12, WireType.Varint).uint32(message.entityId);
        /* WidgetCreateLocationInfo location_info = 9; */
        if (message.locationInfo)
            WidgetCreateLocationInfo.internalBinaryWrite(message.locationInfo, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message WidgetCreatorInfo
 */
export const WidgetCreatorInfo = new WidgetCreatorInfo$Type();
