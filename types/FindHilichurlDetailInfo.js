"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FindHilichurlDetailInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.FindHilichurlDetailInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: FindHilichurlDetailInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./FindHilichurlDayContentInfo");
const pb_1 = require("google-protobuf");
class FindHilichurlDetailInfo extends pb_1.Message {
    constructor(data) {
        super();
        _FindHilichurlDetailInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], __classPrivateFieldGet(this, _FindHilichurlDetailInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("day_content_info_list" in data && data.day_content_info_list != undefined) {
                this.day_content_info_list = data.day_content_info_list;
            }
            if ("min_open_player_level" in data && data.min_open_player_level != undefined) {
                this.min_open_player_level = data.min_open_player_level;
            }
            if ("is_end_quest_accept" in data && data.is_end_quest_accept != undefined) {
                this.is_end_quest_accept = data.is_end_quest_accept;
            }
            if ("content_close_time" in data && data.content_close_time != undefined) {
                this.content_close_time = data.content_close_time;
            }
            if ("is_content_closed" in data && data.is_content_closed != undefined) {
                this.is_content_closed = data.is_content_closed;
            }
            if ("player_day_index" in data && data.player_day_index != undefined) {
                this.player_day_index = data.player_day_index;
            }
            if ("day_index" in data && data.day_index != undefined) {
                this.day_index = data.day_index;
            }
        }
    }
    get day_content_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.FindHilichurlDayContentInfo, 1);
    }
    set day_content_info_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    get min_open_player_level() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set min_open_player_level(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get is_end_quest_accept() {
        return pb_1.Message.getFieldWithDefault(this, 7, false);
    }
    set is_end_quest_accept(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get content_close_time() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set content_close_time(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get is_content_closed() {
        return pb_1.Message.getFieldWithDefault(this, 9, false);
    }
    set is_content_closed(value) {
        pb_1.Message.setField(this, 9, value);
    }
    get player_day_index() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set player_day_index(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get day_index() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set day_index(value) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data) {
        const message = new FindHilichurlDetailInfo({});
        if (data.day_content_info_list != null) {
            message.day_content_info_list = data.day_content_info_list.map(item => dependency_1.FindHilichurlDayContentInfo.fromObject(item));
        }
        if (data.min_open_player_level != null) {
            message.min_open_player_level = data.min_open_player_level;
        }
        if (data.is_end_quest_accept != null) {
            message.is_end_quest_accept = data.is_end_quest_accept;
        }
        if (data.content_close_time != null) {
            message.content_close_time = data.content_close_time;
        }
        if (data.is_content_closed != null) {
            message.is_content_closed = data.is_content_closed;
        }
        if (data.player_day_index != null) {
            message.player_day_index = data.player_day_index;
        }
        if (data.day_index != null) {
            message.day_index = data.day_index;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.day_content_info_list != null) {
            data.day_content_info_list = this.day_content_info_list.map((item) => item.toObject());
        }
        if (this.min_open_player_level != null) {
            data.min_open_player_level = this.min_open_player_level;
        }
        if (this.is_end_quest_accept != null) {
            data.is_end_quest_accept = this.is_end_quest_accept;
        }
        if (this.content_close_time != null) {
            data.content_close_time = this.content_close_time;
        }
        if (this.is_content_closed != null) {
            data.is_content_closed = this.is_content_closed;
        }
        if (this.player_day_index != null) {
            data.player_day_index = this.player_day_index;
        }
        if (this.day_index != null) {
            data.day_index = this.day_index;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.day_content_info_list.length)
            writer.writeRepeatedMessage(1, this.day_content_info_list, (item) => item.serialize(writer));
        if (this.min_open_player_level != 0)
            writer.writeUint32(12, this.min_open_player_level);
        if (this.is_end_quest_accept != false)
            writer.writeBool(7, this.is_end_quest_accept);
        if (this.content_close_time != 0)
            writer.writeUint32(6, this.content_close_time);
        if (this.is_content_closed != false)
            writer.writeBool(9, this.is_content_closed);
        if (this.player_day_index != 0)
            writer.writeUint32(4, this.player_day_index);
        if (this.day_index != 0)
            writer.writeUint32(15, this.day_index);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FindHilichurlDetailInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.day_content_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.FindHilichurlDayContentInfo.deserialize(reader), dependency_1.FindHilichurlDayContentInfo));
                    break;
                case 12:
                    message.min_open_player_level = reader.readUint32();
                    break;
                case 7:
                    message.is_end_quest_accept = reader.readBool();
                    break;
                case 6:
                    message.content_close_time = reader.readUint32();
                    break;
                case 9:
                    message.is_content_closed = reader.readBool();
                    break;
                case 4:
                    message.player_day_index = reader.readUint32();
                    break;
                case 15:
                    message.day_index = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return FindHilichurlDetailInfo.deserialize(bytes);
    }
}
exports.FindHilichurlDetailInfo = FindHilichurlDetailInfo;
_FindHilichurlDetailInfo_one_of_decls = new WeakMap();
