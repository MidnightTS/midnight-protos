/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: GadgetPlayStopNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./GadgetPlayUidInfo";
import * as pb_1 from "google-protobuf";
export class GadgetPlayStopNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        is_win?: boolean;
        entity_id?: number;
        play_type?: number;
        uid_info_list?: dependency_1.GadgetPlayUidInfo[];
        score?: number;
        cost_time?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [8], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_win" in data && data.is_win != undefined) {
                this.is_win = data.is_win;
            }
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
            if ("play_type" in data && data.play_type != undefined) {
                this.play_type = data.play_type;
            }
            if ("uid_info_list" in data && data.uid_info_list != undefined) {
                this.uid_info_list = data.uid_info_list;
            }
            if ("score" in data && data.score != undefined) {
                this.score = data.score;
            }
            if ("cost_time" in data && data.cost_time != undefined) {
                this.cost_time = data.cost_time;
            }
        }
    }
    get is_win() {
        return pb_1.Message.getFieldWithDefault(this, 14, false) as boolean;
    }
    set is_win(value: boolean) {
        pb_1.Message.setField(this, 14, value);
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
    }
    set entity_id(value: number) {
        pb_1.Message.setField(this, 7, value);
    }
    get play_type() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set play_type(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get uid_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.GadgetPlayUidInfo, 8) as dependency_1.GadgetPlayUidInfo[];
    }
    set uid_info_list(value: dependency_1.GadgetPlayUidInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 8, value);
    }
    get score() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set score(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get cost_time() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set cost_time(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data: {
        is_win?: boolean;
        entity_id?: number;
        play_type?: number;
        uid_info_list?: ReturnType<typeof dependency_1.GadgetPlayUidInfo.prototype.toObject>[];
        score?: number;
        cost_time?: number;
    }): GadgetPlayStopNotify {
        const message = new GadgetPlayStopNotify({});
        if (data.is_win != null) {
            message.is_win = data.is_win;
        }
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        if (data.play_type != null) {
            message.play_type = data.play_type;
        }
        if (data.uid_info_list != null) {
            message.uid_info_list = data.uid_info_list.map(item => dependency_1.GadgetPlayUidInfo.fromObject(item));
        }
        if (data.score != null) {
            message.score = data.score;
        }
        if (data.cost_time != null) {
            message.cost_time = data.cost_time;
        }
        return message;
    }
    toObject() {
        const data: {
            is_win?: boolean;
            entity_id?: number;
            play_type?: number;
            uid_info_list?: ReturnType<typeof dependency_1.GadgetPlayUidInfo.prototype.toObject>[];
            score?: number;
            cost_time?: number;
        } = {};
        if (this.is_win != null) {
            data.is_win = this.is_win;
        }
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        if (this.play_type != null) {
            data.play_type = this.play_type;
        }
        if (this.uid_info_list != null) {
            data.uid_info_list = this.uid_info_list.map((item: dependency_1.GadgetPlayUidInfo) => item.toObject());
        }
        if (this.score != null) {
            data.score = this.score;
        }
        if (this.cost_time != null) {
            data.cost_time = this.cost_time;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_win != false)
            writer.writeBool(14, this.is_win);
        if (this.entity_id != 0)
            writer.writeUint32(7, this.entity_id);
        if (this.play_type != 0)
            writer.writeUint32(4, this.play_type);
        if (this.uid_info_list.length)
            writer.writeRepeatedMessage(8, this.uid_info_list, (item: dependency_1.GadgetPlayUidInfo) => item.serialize(writer));
        if (this.score != 0)
            writer.writeUint32(5, this.score);
        if (this.cost_time != 0)
            writer.writeUint32(6, this.cost_time);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): GadgetPlayStopNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GadgetPlayStopNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 14:
                    message.is_win = reader.readBool();
                    break;
                case 7:
                    message.entity_id = reader.readUint32();
                    break;
                case 4:
                    message.play_type = reader.readUint32();
                    break;
                case 8:
                    reader.readMessage(message.uid_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 8, dependency_1.GadgetPlayUidInfo.deserialize(reader), dependency_1.GadgetPlayUidInfo));
                    break;
                case 5:
                    message.score = reader.readUint32();
                    break;
                case 6:
                    message.cost_time = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): GadgetPlayStopNotify {
        return GadgetPlayStopNotify.deserialize(bytes);
    }
}
