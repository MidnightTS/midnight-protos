"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _CombineRsp_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CombineRsp = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CombineRsp.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./ItemParam");
const pb_1 = require("google-protobuf");
class CombineRsp extends pb_1.Message {
    constructor(data) {
        super();
        _CombineRsp_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3, 6, 9, 2, 12], __classPrivateFieldGet(this, _CombineRsp_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("cost_item_list" in data && data.cost_item_list != undefined) {
                this.cost_item_list = data.cost_item_list;
            }
            if ("retcode" in data && data.retcode != undefined) {
                this.retcode = data.retcode;
            }
            if ("total_extra_item_list" in data && data.total_extra_item_list != undefined) {
                this.total_extra_item_list = data.total_extra_item_list;
            }
            if ("combine_id" in data && data.combine_id != undefined) {
                this.combine_id = data.combine_id;
            }
            if ("total_random_item_list" in data && data.total_random_item_list != undefined) {
                this.total_random_item_list = data.total_random_item_list;
            }
            if ("result_item_list" in data && data.result_item_list != undefined) {
                this.result_item_list = data.result_item_list;
            }
            if ("combine_count" in data && data.combine_count != undefined) {
                this.combine_count = data.combine_count;
            }
            if ("total_return_item_list" in data && data.total_return_item_list != undefined) {
                this.total_return_item_list = data.total_return_item_list;
            }
            if ("avatar_guid" in data && data.avatar_guid != undefined) {
                this.avatar_guid = data.avatar_guid;
            }
        }
    }
    get cost_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 3);
    }
    set cost_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 3, value);
    }
    get retcode() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set retcode(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get total_extra_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 6);
    }
    set total_extra_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 6, value);
    }
    get combine_id() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set combine_id(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get total_random_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 9);
    }
    set total_random_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 9, value);
    }
    get result_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 2);
    }
    set result_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 2, value);
    }
    get combine_count() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0);
    }
    set combine_count(value) {
        pb_1.Message.setField(this, 13, value);
    }
    get total_return_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 12);
    }
    set total_return_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 12, value);
    }
    get avatar_guid() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0);
    }
    set avatar_guid(value) {
        pb_1.Message.setField(this, 10, value);
    }
    static fromObject(data) {
        const message = new CombineRsp({});
        if (data.cost_item_list != null) {
            message.cost_item_list = data.cost_item_list.map(item => dependency_1.ItemParam.fromObject(item));
        }
        if (data.retcode != null) {
            message.retcode = data.retcode;
        }
        if (data.total_extra_item_list != null) {
            message.total_extra_item_list = data.total_extra_item_list.map(item => dependency_1.ItemParam.fromObject(item));
        }
        if (data.combine_id != null) {
            message.combine_id = data.combine_id;
        }
        if (data.total_random_item_list != null) {
            message.total_random_item_list = data.total_random_item_list.map(item => dependency_1.ItemParam.fromObject(item));
        }
        if (data.result_item_list != null) {
            message.result_item_list = data.result_item_list.map(item => dependency_1.ItemParam.fromObject(item));
        }
        if (data.combine_count != null) {
            message.combine_count = data.combine_count;
        }
        if (data.total_return_item_list != null) {
            message.total_return_item_list = data.total_return_item_list.map(item => dependency_1.ItemParam.fromObject(item));
        }
        if (data.avatar_guid != null) {
            message.avatar_guid = data.avatar_guid;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.cost_item_list != null) {
            data.cost_item_list = this.cost_item_list.map((item) => item.toObject());
        }
        if (this.retcode != null) {
            data.retcode = this.retcode;
        }
        if (this.total_extra_item_list != null) {
            data.total_extra_item_list = this.total_extra_item_list.map((item) => item.toObject());
        }
        if (this.combine_id != null) {
            data.combine_id = this.combine_id;
        }
        if (this.total_random_item_list != null) {
            data.total_random_item_list = this.total_random_item_list.map((item) => item.toObject());
        }
        if (this.result_item_list != null) {
            data.result_item_list = this.result_item_list.map((item) => item.toObject());
        }
        if (this.combine_count != null) {
            data.combine_count = this.combine_count;
        }
        if (this.total_return_item_list != null) {
            data.total_return_item_list = this.total_return_item_list.map((item) => item.toObject());
        }
        if (this.avatar_guid != null) {
            data.avatar_guid = this.avatar_guid;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.cost_item_list.length)
            writer.writeRepeatedMessage(3, this.cost_item_list, (item) => item.serialize(writer));
        if (this.retcode != 0)
            writer.writeInt32(7, this.retcode);
        if (this.total_extra_item_list.length)
            writer.writeRepeatedMessage(6, this.total_extra_item_list, (item) => item.serialize(writer));
        if (this.combine_id != 0)
            writer.writeUint32(11, this.combine_id);
        if (this.total_random_item_list.length)
            writer.writeRepeatedMessage(9, this.total_random_item_list, (item) => item.serialize(writer));
        if (this.result_item_list.length)
            writer.writeRepeatedMessage(2, this.result_item_list, (item) => item.serialize(writer));
        if (this.combine_count != 0)
            writer.writeUint32(13, this.combine_count);
        if (this.total_return_item_list.length)
            writer.writeRepeatedMessage(12, this.total_return_item_list, (item) => item.serialize(writer));
        if (this.avatar_guid != 0)
            writer.writeUint64(10, this.avatar_guid);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CombineRsp();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 3:
                    reader.readMessage(message.cost_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                    break;
                case 7:
                    message.retcode = reader.readInt32();
                    break;
                case 6:
                    reader.readMessage(message.total_extra_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 6, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                    break;
                case 11:
                    message.combine_id = reader.readUint32();
                    break;
                case 9:
                    reader.readMessage(message.total_random_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 9, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                    break;
                case 2:
                    reader.readMessage(message.result_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                    break;
                case 13:
                    message.combine_count = reader.readUint32();
                    break;
                case 12:
                    reader.readMessage(message.total_return_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 12, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                    break;
                case 10:
                    message.avatar_guid = reader.readUint64();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return CombineRsp.deserialize(bytes);
    }
}
exports.CombineRsp = CombineRsp;
_CombineRsp_one_of_decls = new WeakMap();
