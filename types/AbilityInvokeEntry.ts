// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "AbilityInvokeEntry.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AbilityInvokeArgument } from "./AbilityInvokeArgument";
import { AbilityInvokeEntryHead } from "./AbilityInvokeEntryHead";
import { ForwardType } from "./ForwardType";
/**
 * @generated from protobuf message AbilityInvokeEntry
 */
export interface AbilityInvokeEntry {
    /**
     * @generated from protobuf field: ForwardType forward_type = 9;
     */
    forwardType: ForwardType;
    /**
     * @generated from protobuf field: uint32 event_id = 13;
     */
    eventId: number;
    /**
     * @generated from protobuf field: uint32 entity_id = 7;
     */
    entityId: number;
    /**
     * @generated from protobuf field: uint32 forward_peer = 14;
     */
    forwardPeer: number;
    /**
     * @generated from protobuf field: double total_tick_time = 10;
     */
    totalTickTime: number;
    /**
     * @generated from protobuf field: AbilityInvokeEntryHead head = 3;
     */
    head?: AbilityInvokeEntryHead;
    /**
     * @generated from protobuf field: bytes ability_data = 2;
     */
    abilityData: Uint8Array;
    /**
     * @generated from protobuf field: AbilityInvokeArgument argument_type = 8;
     */
    argumentType: AbilityInvokeArgument;
    /**
     * @generated from protobuf field: bool is_ignore_auth = 12;
     */
    isIgnoreAuth: boolean;
}
// @generated message type with reflection information, may provide speed optimized methods
class AbilityInvokeEntry$Type extends MessageType<AbilityInvokeEntry> {
    constructor() {
        super("AbilityInvokeEntry", [
            { no: 9, name: "forward_type", kind: "enum", T: () => ["ForwardType", ForwardType, "FORWARD_TYPE_"] },
            { no: 13, name: "event_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "entity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "forward_peer", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "total_tick_time", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 3, name: "head", kind: "message", T: () => AbilityInvokeEntryHead },
            { no: 2, name: "ability_data", kind: "scalar", T: 12 /*ScalarType.BYTES*/ },
            { no: 8, name: "argument_type", kind: "enum", T: () => ["AbilityInvokeArgument", AbilityInvokeArgument, "ABILITY_INVOKE_ARGUMENT_"] },
            { no: 12, name: "is_ignore_auth", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<AbilityInvokeEntry>): AbilityInvokeEntry {
        const message = { forwardType: 0, eventId: 0, entityId: 0, forwardPeer: 0, totalTickTime: 0, abilityData: new Uint8Array(0), argumentType: 0, isIgnoreAuth: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AbilityInvokeEntry>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AbilityInvokeEntry): AbilityInvokeEntry {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ForwardType forward_type */ 9:
                    message.forwardType = reader.int32();
                    break;
                case /* uint32 event_id */ 13:
                    message.eventId = reader.uint32();
                    break;
                case /* uint32 entity_id */ 7:
                    message.entityId = reader.uint32();
                    break;
                case /* uint32 forward_peer */ 14:
                    message.forwardPeer = reader.uint32();
                    break;
                case /* double total_tick_time */ 10:
                    message.totalTickTime = reader.double();
                    break;
                case /* AbilityInvokeEntryHead head */ 3:
                    message.head = AbilityInvokeEntryHead.internalBinaryRead(reader, reader.uint32(), options, message.head);
                    break;
                case /* bytes ability_data */ 2:
                    message.abilityData = reader.bytes();
                    break;
                case /* AbilityInvokeArgument argument_type */ 8:
                    message.argumentType = reader.int32();
                    break;
                case /* bool is_ignore_auth */ 12:
                    message.isIgnoreAuth = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AbilityInvokeEntry, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ForwardType forward_type = 9; */
        if (message.forwardType !== 0)
            writer.tag(9, WireType.Varint).int32(message.forwardType);
        /* uint32 event_id = 13; */
        if (message.eventId !== 0)
            writer.tag(13, WireType.Varint).uint32(message.eventId);
        /* uint32 entity_id = 7; */
        if (message.entityId !== 0)
            writer.tag(7, WireType.Varint).uint32(message.entityId);
        /* uint32 forward_peer = 14; */
        if (message.forwardPeer !== 0)
            writer.tag(14, WireType.Varint).uint32(message.forwardPeer);
        /* double total_tick_time = 10; */
        if (message.totalTickTime !== 0)
            writer.tag(10, WireType.Bit64).double(message.totalTickTime);
        /* AbilityInvokeEntryHead head = 3; */
        if (message.head)
            AbilityInvokeEntryHead.internalBinaryWrite(message.head, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bytes ability_data = 2; */
        if (message.abilityData.length)
            writer.tag(2, WireType.LengthDelimited).bytes(message.abilityData);
        /* AbilityInvokeArgument argument_type = 8; */
        if (message.argumentType !== 0)
            writer.tag(8, WireType.Varint).int32(message.argumentType);
        /* bool is_ignore_auth = 12; */
        if (message.isIgnoreAuth !== false)
            writer.tag(12, WireType.Varint).bool(message.isIgnoreAuth);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message AbilityInvokeEntry
 */
export const AbilityInvokeEntry = new AbilityInvokeEntry$Type();
