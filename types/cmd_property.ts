// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_property.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ChangHpReason } from "./define";
import { PlayerDieType } from "./define";
import { ServerBuff } from "./define";
import { PropValue } from "./define";
/**
 * @generated from protobuf message com.midnights.game.EntityPropNotify
 */
export interface EntityPropNotify {
    /**
     * @generated from protobuf field: map<uint32, com.midnights.game.PropValue> prop_map = 1;
     */
    propMap: {
        [key: number]: PropValue;
    };
    /**
     * @generated from protobuf field: optional uint32 entity_id = 14;
     */
    entityId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.EntityPropNotify.CmdId
 */
export enum EntityPropNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1272;
     */
    CMD_ID = 1272,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.LifeStateChangeNotify
 */
export interface LifeStateChangeNotify {
    /**
     * @generated from protobuf field: optional uint32 entity_id = 4;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ServerBuff server_buff_list = 6;
     */
    serverBuffList: ServerBuff[];
    /**
     * @generated from protobuf field: optional string attack_tag = 7;
     */
    attackTag?: string;
    /**
     * @generated from protobuf field: optional uint32 move_reliable_seq = 15;
     */
    moveReliableSeq?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.PlayerDieType die_type = 14;
     */
    dieType?: PlayerDieType;
    /**
     * @generated from protobuf field: optional uint32 life_state = 5;
     */
    lifeState?: number;
    /**
     * @generated from protobuf field: optional uint32 source_entity_id = 1;
     */
    sourceEntityId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.LifeStateChangeNotify.CmdId
 */
export enum LifeStateChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1298;
     */
    CMD_ID = 1298,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.EntityFightPropNotify
 */
export interface EntityFightPropNotify {
    /**
     * @generated from protobuf field: optional uint32 entity_id = 4;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: map<uint32, float> fight_prop_map = 8;
     */
    fightPropMap: {
        [key: number]: number;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.EntityFightPropNotify.CmdId
 */
export enum EntityFightPropNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1212;
     */
    CMD_ID = 1212,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.EntityFightPropUpdateNotify
 */
export interface EntityFightPropUpdateNotify {
    /**
     * @generated from protobuf field: map<uint32, float> fight_prop_map = 15;
     */
    fightPropMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 entity_id = 13;
     */
    entityId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.EntityFightPropUpdateNotify.CmdId
 */
export enum EntityFightPropUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1235;
     */
    CMD_ID = 1235,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarFightPropNotify
 */
export interface AvatarFightPropNotify {
    /**
     * @generated from protobuf field: map<uint32, float> fight_prop_map = 8;
     */
    fightPropMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 4;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarFightPropNotify.CmdId
 */
export enum AvatarFightPropNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1207;
     */
    CMD_ID = 1207,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarFightPropUpdateNotify
 */
export interface AvatarFightPropUpdateNotify {
    /**
     * @generated from protobuf field: map<uint32, float> fight_prop_map = 15;
     */
    fightPropMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 13;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarFightPropUpdateNotify.CmdId
 */
export enum AvatarFightPropUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1221;
     */
    CMD_ID = 1221,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.EntityFightPropChangeReasonNotify
 */
export interface EntityFightPropChangeReasonNotify {
    /**
     * @generated from protobuf field: repeated uint32 param_list = 10;
     */
    paramList: number[];
    /**
     * @generated from protobuf field: optional float prop_delta = 1;
     */
    propDelta?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ChangHpReason change_hp_reason = 14;
     */
    changeHpReason?: ChangHpReason;
    /**
     * @generated from protobuf field: optional com.midnights.game.PropChangeReason reason = 6;
     */
    reason?: PropChangeReason;
    /**
     * @generated from protobuf field: optional uint32 entity_id = 5;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ChangeEnergyReason change_energy_reson = 15;
     */
    changeEnergyReson?: ChangeEnergyReason;
    /**
     * @generated from protobuf field: optional uint32 prop_type = 13;
     */
    propType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.EntityFightPropChangeReasonNotify.CmdId
 */
export enum EntityFightPropChangeReasonNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1203;
     */
    CMD_ID = 1203,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarLifeStateChangeNotify
 */
export interface AvatarLifeStateChangeNotify {
    /**
     * @generated from protobuf field: optional uint32 life_state = 13;
     */
    lifeState?: number;
    /**
     * @generated from protobuf field: optional string attack_tag = 10;
     */
    attackTag?: string;
    /**
     * @generated from protobuf field: optional com.midnights.game.PlayerDieType die_type = 2;
     */
    dieType?: PlayerDieType;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ServerBuff server_buff_list = 12;
     */
    serverBuffList: ServerBuff[];
    /**
     * @generated from protobuf field: optional uint32 move_reliable_seq = 5;
     */
    moveReliableSeq?: number;
    /**
     * @generated from protobuf field: optional uint32 source_entity_id = 3;
     */
    sourceEntityId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 11;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarLifeStateChangeNotify.CmdId
 */
export enum AvatarLifeStateChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1290;
     */
    CMD_ID = 1290,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarPropChangeReasonNotify
 */
export interface AvatarPropChangeReasonNotify {
    /**
     * @generated from protobuf field: optional float old_value = 11;
     */
    oldValue?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.PropChangeReason reason = 5;
     */
    reason?: PropChangeReason;
    /**
     * @generated from protobuf field: optional uint32 prop_type = 1;
     */
    propType?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 8;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional float cur_value = 15;
     */
    curValue?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarPropChangeReasonNotify.CmdId
 */
export enum AvatarPropChangeReasonNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1273;
     */
    CMD_ID = 1273,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerPropChangeReasonNotify
 */
export interface PlayerPropChangeReasonNotify {
    /**
     * @generated from protobuf field: optional uint32 prop_type = 6;
     */
    propType?: number;
    /**
     * @generated from protobuf field: optional float old_value = 12;
     */
    oldValue?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.PropChangeReason reason = 1;
     */
    reason?: PropChangeReason;
    /**
     * @generated from protobuf field: optional float cur_value = 11;
     */
    curValue?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerPropChangeReasonNotify.CmdId
 */
export enum PlayerPropChangeReasonNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1299;
     */
    CMD_ID = 1299,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarPropNotify
 */
export interface AvatarPropNotify {
    /**
     * @generated from protobuf field: map<uint32, int64> prop_map = 14;
     */
    propMap: {
        [key: number]: bigint;
    };
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 15;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarPropNotify.CmdId
 */
export enum AvatarPropNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1231;
     */
    CMD_ID = 1231,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.MarkNewNotify
 */
export interface MarkNewNotify {
    /**
     * @generated from protobuf field: repeated uint32 id_list = 7;
     */
    idList: number[];
    /**
     * @generated from protobuf field: optional uint32 mark_new_type = 11;
     */
    markNewType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.MarkNewNotify.CmdId
 */
export enum MarkNewNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1275;
     */
    CMD_ID = 1275,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.PropChangeReason
 */
export enum PropChangeReason {
    /**
     * @generated from protobuf enum value: PROP_CHANGE_NONE = 0;
     */
    PROP_CHANGE_NONE = 0,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_STATUE_RECOVER = 1;
     */
    PROP_CHANGE_STATUE_RECOVER = 1,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_ENERGY_BALL = 2;
     */
    PROP_CHANGE_ENERGY_BALL = 2,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_ABILITY = 3;
     */
    PROP_CHANGE_ABILITY = 3,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_LEVELUP = 4;
     */
    PROP_CHANGE_LEVELUP = 4,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_ITEM = 5;
     */
    PROP_CHANGE_ITEM = 5,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_AVATAR_CARD = 6;
     */
    PROP_CHANGE_AVATAR_CARD = 6,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_CITY_LEVELUP = 7;
     */
    PROP_CHANGE_CITY_LEVELUP = 7,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_AVATAR_UPGRADE = 8;
     */
    PROP_CHANGE_AVATAR_UPGRADE = 8,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_AVATAR_PROMOTE = 9;
     */
    PROP_CHANGE_AVATAR_PROMOTE = 9,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_PLAYER_ADD_EXP = 10;
     */
    PROP_CHANGE_PLAYER_ADD_EXP = 10,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_FINISH_QUEST = 11;
     */
    PROP_CHANGE_FINISH_QUEST = 11,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_GM = 12;
     */
    PROP_CHANGE_GM = 12,
    /**
     * @generated from protobuf enum value: PROP_CHANGE_MANUAL_ADJUST_WORLD_LEVEL = 13;
     */
    PROP_CHANGE_MANUAL_ADJUST_WORLD_LEVEL = 13
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeEnergyReason
 */
export enum ChangeEnergyReason {
    /**
     * @generated from protobuf enum value: CHANGE_ENERGY_NONE = 0;
     */
    CHANGE_ENERGY_NONE = 0,
    /**
     * @generated from protobuf enum value: CHANGE_ENERGY_SKILL_START = 1;
     */
    CHANGE_ENERGY_SKILL_START = 1
}
/**
 * @generated from protobuf enum com.midnights.game.MarkNewType
 */
export enum MarkNewType {
    /**
     * @generated from protobuf enum value: MARK_NEW_TYPE_NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: MARK_NEW_TYPE_COMBINE = 1;
     */
    COMBINE = 1,
    /**
     * @generated from protobuf enum value: MARK_NEW_TYPE_FORGE = 2;
     */
    FORGE = 2
}
// @generated message type with reflection information, may provide speed optimized methods
class EntityPropNotify$Type extends MessageType<EntityPropNotify> {
    constructor() {
        super("com.midnights.game.EntityPropNotify", [
            { no: 1, name: "prop_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => PropValue } },
            { no: 14, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<EntityPropNotify>): EntityPropNotify {
        const message = { propMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EntityPropNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EntityPropNotify): EntityPropNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, com.midnights.game.PropValue> prop_map */ 1:
                    this.binaryReadMap1(message.propMap, reader, options);
                    break;
                case /* optional uint32 entity_id */ 14:
                    message.entityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap1(map: EntityPropNotify["propMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof EntityPropNotify["propMap"] | undefined, val: EntityPropNotify["propMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = PropValue.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.EntityPropNotify.prop_map");
            }
        }
        map[key ?? 0] = val ?? PropValue.create();
    }
    internalBinaryWrite(message: EntityPropNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, com.midnights.game.PropValue> prop_map = 1; */
        for (let k of Object.keys(message.propMap)) {
            writer.tag(1, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k));
            writer.tag(2, WireType.LengthDelimited).fork();
            PropValue.internalBinaryWrite(message.propMap[k as any], writer, options);
            writer.join().join();
        }
        /* optional uint32 entity_id = 14; */
        if (message.entityId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.entityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EntityPropNotify
 */
export const EntityPropNotify = new EntityPropNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LifeStateChangeNotify$Type extends MessageType<LifeStateChangeNotify> {
    constructor() {
        super("com.midnights.game.LifeStateChangeNotify", [
            { no: 4, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "server_buff_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ServerBuff },
            { no: 7, name: "attack_tag", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "move_reliable_seq", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "die_type", kind: "enum", opt: true, T: () => ["com.midnights.game.PlayerDieType", PlayerDieType] },
            { no: 5, name: "life_state", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "source_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<LifeStateChangeNotify>): LifeStateChangeNotify {
        const message = { serverBuffList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LifeStateChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LifeStateChangeNotify): LifeStateChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 entity_id */ 4:
                    message.entityId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ServerBuff server_buff_list */ 6:
                    message.serverBuffList.push(ServerBuff.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional string attack_tag */ 7:
                    message.attackTag = reader.string();
                    break;
                case /* optional uint32 move_reliable_seq */ 15:
                    message.moveReliableSeq = reader.uint32();
                    break;
                case /* optional com.midnights.game.PlayerDieType die_type */ 14:
                    message.dieType = reader.int32();
                    break;
                case /* optional uint32 life_state */ 5:
                    message.lifeState = reader.uint32();
                    break;
                case /* optional uint32 source_entity_id */ 1:
                    message.sourceEntityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LifeStateChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 entity_id = 4; */
        if (message.entityId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.entityId);
        /* repeated com.midnights.game.ServerBuff server_buff_list = 6; */
        for (let i = 0; i < message.serverBuffList.length; i++)
            ServerBuff.internalBinaryWrite(message.serverBuffList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional string attack_tag = 7; */
        if (message.attackTag !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.attackTag);
        /* optional uint32 move_reliable_seq = 15; */
        if (message.moveReliableSeq !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.moveReliableSeq);
        /* optional com.midnights.game.PlayerDieType die_type = 14; */
        if (message.dieType !== undefined)
            writer.tag(14, WireType.Varint).int32(message.dieType);
        /* optional uint32 life_state = 5; */
        if (message.lifeState !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.lifeState);
        /* optional uint32 source_entity_id = 1; */
        if (message.sourceEntityId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.sourceEntityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.LifeStateChangeNotify
 */
export const LifeStateChangeNotify = new LifeStateChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EntityFightPropNotify$Type extends MessageType<EntityFightPropNotify> {
    constructor() {
        super("com.midnights.game.EntityFightPropNotify", [
            { no: 4, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "fight_prop_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 2 /*ScalarType.FLOAT*/ } }
        ]);
    }
    create(value?: PartialMessage<EntityFightPropNotify>): EntityFightPropNotify {
        const message = { fightPropMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EntityFightPropNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EntityFightPropNotify): EntityFightPropNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 entity_id */ 4:
                    message.entityId = reader.uint32();
                    break;
                case /* map<uint32, float> fight_prop_map */ 8:
                    this.binaryReadMap8(message.fightPropMap, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap8(map: EntityFightPropNotify["fightPropMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof EntityFightPropNotify["fightPropMap"] | undefined, val: EntityFightPropNotify["fightPropMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.float();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.EntityFightPropNotify.fight_prop_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: EntityFightPropNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 entity_id = 4; */
        if (message.entityId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.entityId);
        /* map<uint32, float> fight_prop_map = 8; */
        for (let k of Object.keys(message.fightPropMap))
            writer.tag(8, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Bit32).float(message.fightPropMap[k as any]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EntityFightPropNotify
 */
export const EntityFightPropNotify = new EntityFightPropNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EntityFightPropUpdateNotify$Type extends MessageType<EntityFightPropUpdateNotify> {
    constructor() {
        super("com.midnights.game.EntityFightPropUpdateNotify", [
            { no: 15, name: "fight_prop_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 2 /*ScalarType.FLOAT*/ } },
            { no: 13, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<EntityFightPropUpdateNotify>): EntityFightPropUpdateNotify {
        const message = { fightPropMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EntityFightPropUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EntityFightPropUpdateNotify): EntityFightPropUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, float> fight_prop_map */ 15:
                    this.binaryReadMap15(message.fightPropMap, reader, options);
                    break;
                case /* optional uint32 entity_id */ 13:
                    message.entityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap15(map: EntityFightPropUpdateNotify["fightPropMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof EntityFightPropUpdateNotify["fightPropMap"] | undefined, val: EntityFightPropUpdateNotify["fightPropMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.float();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.EntityFightPropUpdateNotify.fight_prop_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: EntityFightPropUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, float> fight_prop_map = 15; */
        for (let k of Object.keys(message.fightPropMap))
            writer.tag(15, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Bit32).float(message.fightPropMap[k as any]).join();
        /* optional uint32 entity_id = 13; */
        if (message.entityId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.entityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EntityFightPropUpdateNotify
 */
export const EntityFightPropUpdateNotify = new EntityFightPropUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarFightPropNotify$Type extends MessageType<AvatarFightPropNotify> {
    constructor() {
        super("com.midnights.game.AvatarFightPropNotify", [
            { no: 8, name: "fight_prop_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 2 /*ScalarType.FLOAT*/ } },
            { no: 4, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarFightPropNotify>): AvatarFightPropNotify {
        const message = { fightPropMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarFightPropNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarFightPropNotify): AvatarFightPropNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, float> fight_prop_map */ 8:
                    this.binaryReadMap8(message.fightPropMap, reader, options);
                    break;
                case /* optional uint64 avatar_guid */ 4:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap8(map: AvatarFightPropNotify["fightPropMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarFightPropNotify["fightPropMap"] | undefined, val: AvatarFightPropNotify["fightPropMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.float();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarFightPropNotify.fight_prop_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: AvatarFightPropNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, float> fight_prop_map = 8; */
        for (let k of Object.keys(message.fightPropMap))
            writer.tag(8, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Bit32).float(message.fightPropMap[k as any]).join();
        /* optional uint64 avatar_guid = 4; */
        if (message.avatarGuid !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarFightPropNotify
 */
export const AvatarFightPropNotify = new AvatarFightPropNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarFightPropUpdateNotify$Type extends MessageType<AvatarFightPropUpdateNotify> {
    constructor() {
        super("com.midnights.game.AvatarFightPropUpdateNotify", [
            { no: 15, name: "fight_prop_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 2 /*ScalarType.FLOAT*/ } },
            { no: 13, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarFightPropUpdateNotify>): AvatarFightPropUpdateNotify {
        const message = { fightPropMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarFightPropUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarFightPropUpdateNotify): AvatarFightPropUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, float> fight_prop_map */ 15:
                    this.binaryReadMap15(message.fightPropMap, reader, options);
                    break;
                case /* optional uint64 avatar_guid */ 13:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap15(map: AvatarFightPropUpdateNotify["fightPropMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarFightPropUpdateNotify["fightPropMap"] | undefined, val: AvatarFightPropUpdateNotify["fightPropMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.float();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarFightPropUpdateNotify.fight_prop_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: AvatarFightPropUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, float> fight_prop_map = 15; */
        for (let k of Object.keys(message.fightPropMap))
            writer.tag(15, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Bit32).float(message.fightPropMap[k as any]).join();
        /* optional uint64 avatar_guid = 13; */
        if (message.avatarGuid !== undefined)
            writer.tag(13, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarFightPropUpdateNotify
 */
export const AvatarFightPropUpdateNotify = new AvatarFightPropUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EntityFightPropChangeReasonNotify$Type extends MessageType<EntityFightPropChangeReasonNotify> {
    constructor() {
        super("com.midnights.game.EntityFightPropChangeReasonNotify", [
            { no: 10, name: "param_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "prop_delta", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/ },
            { no: 14, name: "change_hp_reason", kind: "enum", opt: true, T: () => ["com.midnights.game.ChangHpReason", ChangHpReason] },
            { no: 6, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.PropChangeReason", PropChangeReason] },
            { no: 5, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "change_energy_reson", kind: "enum", opt: true, T: () => ["com.midnights.game.ChangeEnergyReason", ChangeEnergyReason] },
            { no: 13, name: "prop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<EntityFightPropChangeReasonNotify>): EntityFightPropChangeReasonNotify {
        const message = { paramList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EntityFightPropChangeReasonNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EntityFightPropChangeReasonNotify): EntityFightPropChangeReasonNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 param_list */ 10:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.paramList.push(reader.uint32());
                    else
                        message.paramList.push(reader.uint32());
                    break;
                case /* optional float prop_delta */ 1:
                    message.propDelta = reader.float();
                    break;
                case /* optional com.midnights.game.ChangHpReason change_hp_reason */ 14:
                    message.changeHpReason = reader.int32();
                    break;
                case /* optional com.midnights.game.PropChangeReason reason */ 6:
                    message.reason = reader.int32();
                    break;
                case /* optional uint32 entity_id */ 5:
                    message.entityId = reader.uint32();
                    break;
                case /* optional com.midnights.game.ChangeEnergyReason change_energy_reson */ 15:
                    message.changeEnergyReson = reader.int32();
                    break;
                case /* optional uint32 prop_type */ 13:
                    message.propType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EntityFightPropChangeReasonNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 param_list = 10; */
        if (message.paramList.length) {
            writer.tag(10, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.paramList.length; i++)
                writer.uint32(message.paramList[i]);
            writer.join();
        }
        /* optional float prop_delta = 1; */
        if (message.propDelta !== undefined)
            writer.tag(1, WireType.Bit32).float(message.propDelta);
        /* optional com.midnights.game.ChangHpReason change_hp_reason = 14; */
        if (message.changeHpReason !== undefined)
            writer.tag(14, WireType.Varint).int32(message.changeHpReason);
        /* optional com.midnights.game.PropChangeReason reason = 6; */
        if (message.reason !== undefined)
            writer.tag(6, WireType.Varint).int32(message.reason);
        /* optional uint32 entity_id = 5; */
        if (message.entityId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.entityId);
        /* optional com.midnights.game.ChangeEnergyReason change_energy_reson = 15; */
        if (message.changeEnergyReson !== undefined)
            writer.tag(15, WireType.Varint).int32(message.changeEnergyReson);
        /* optional uint32 prop_type = 13; */
        if (message.propType !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.propType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EntityFightPropChangeReasonNotify
 */
export const EntityFightPropChangeReasonNotify = new EntityFightPropChangeReasonNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarLifeStateChangeNotify$Type extends MessageType<AvatarLifeStateChangeNotify> {
    constructor() {
        super("com.midnights.game.AvatarLifeStateChangeNotify", [
            { no: 13, name: "life_state", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "attack_tag", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "die_type", kind: "enum", opt: true, T: () => ["com.midnights.game.PlayerDieType", PlayerDieType] },
            { no: 12, name: "server_buff_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ServerBuff },
            { no: 5, name: "move_reliable_seq", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "source_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarLifeStateChangeNotify>): AvatarLifeStateChangeNotify {
        const message = { serverBuffList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarLifeStateChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarLifeStateChangeNotify): AvatarLifeStateChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 life_state */ 13:
                    message.lifeState = reader.uint32();
                    break;
                case /* optional string attack_tag */ 10:
                    message.attackTag = reader.string();
                    break;
                case /* optional com.midnights.game.PlayerDieType die_type */ 2:
                    message.dieType = reader.int32();
                    break;
                case /* repeated com.midnights.game.ServerBuff server_buff_list */ 12:
                    message.serverBuffList.push(ServerBuff.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 move_reliable_seq */ 5:
                    message.moveReliableSeq = reader.uint32();
                    break;
                case /* optional uint32 source_entity_id */ 3:
                    message.sourceEntityId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 11:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarLifeStateChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 life_state = 13; */
        if (message.lifeState !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.lifeState);
        /* optional string attack_tag = 10; */
        if (message.attackTag !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.attackTag);
        /* optional com.midnights.game.PlayerDieType die_type = 2; */
        if (message.dieType !== undefined)
            writer.tag(2, WireType.Varint).int32(message.dieType);
        /* repeated com.midnights.game.ServerBuff server_buff_list = 12; */
        for (let i = 0; i < message.serverBuffList.length; i++)
            ServerBuff.internalBinaryWrite(message.serverBuffList[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 move_reliable_seq = 5; */
        if (message.moveReliableSeq !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.moveReliableSeq);
        /* optional uint32 source_entity_id = 3; */
        if (message.sourceEntityId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.sourceEntityId);
        /* optional uint64 avatar_guid = 11; */
        if (message.avatarGuid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarLifeStateChangeNotify
 */
export const AvatarLifeStateChangeNotify = new AvatarLifeStateChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarPropChangeReasonNotify$Type extends MessageType<AvatarPropChangeReasonNotify> {
    constructor() {
        super("com.midnights.game.AvatarPropChangeReasonNotify", [
            { no: 11, name: "old_value", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/ },
            { no: 5, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.PropChangeReason", PropChangeReason] },
            { no: 1, name: "prop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "cur_value", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarPropChangeReasonNotify>): AvatarPropChangeReasonNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarPropChangeReasonNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarPropChangeReasonNotify): AvatarPropChangeReasonNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional float old_value */ 11:
                    message.oldValue = reader.float();
                    break;
                case /* optional com.midnights.game.PropChangeReason reason */ 5:
                    message.reason = reader.int32();
                    break;
                case /* optional uint32 prop_type */ 1:
                    message.propType = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 8:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional float cur_value */ 15:
                    message.curValue = reader.float();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarPropChangeReasonNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional float old_value = 11; */
        if (message.oldValue !== undefined)
            writer.tag(11, WireType.Bit32).float(message.oldValue);
        /* optional com.midnights.game.PropChangeReason reason = 5; */
        if (message.reason !== undefined)
            writer.tag(5, WireType.Varint).int32(message.reason);
        /* optional uint32 prop_type = 1; */
        if (message.propType !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.propType);
        /* optional uint64 avatar_guid = 8; */
        if (message.avatarGuid !== undefined)
            writer.tag(8, WireType.Varint).uint64(message.avatarGuid);
        /* optional float cur_value = 15; */
        if (message.curValue !== undefined)
            writer.tag(15, WireType.Bit32).float(message.curValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarPropChangeReasonNotify
 */
export const AvatarPropChangeReasonNotify = new AvatarPropChangeReasonNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerPropChangeReasonNotify$Type extends MessageType<PlayerPropChangeReasonNotify> {
    constructor() {
        super("com.midnights.game.PlayerPropChangeReasonNotify", [
            { no: 6, name: "prop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "old_value", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/ },
            { no: 1, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.PropChangeReason", PropChangeReason] },
            { no: 11, name: "cur_value", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerPropChangeReasonNotify>): PlayerPropChangeReasonNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerPropChangeReasonNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerPropChangeReasonNotify): PlayerPropChangeReasonNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 prop_type */ 6:
                    message.propType = reader.uint32();
                    break;
                case /* optional float old_value */ 12:
                    message.oldValue = reader.float();
                    break;
                case /* optional com.midnights.game.PropChangeReason reason */ 1:
                    message.reason = reader.int32();
                    break;
                case /* optional float cur_value */ 11:
                    message.curValue = reader.float();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerPropChangeReasonNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 prop_type = 6; */
        if (message.propType !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.propType);
        /* optional float old_value = 12; */
        if (message.oldValue !== undefined)
            writer.tag(12, WireType.Bit32).float(message.oldValue);
        /* optional com.midnights.game.PropChangeReason reason = 1; */
        if (message.reason !== undefined)
            writer.tag(1, WireType.Varint).int32(message.reason);
        /* optional float cur_value = 11; */
        if (message.curValue !== undefined)
            writer.tag(11, WireType.Bit32).float(message.curValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerPropChangeReasonNotify
 */
export const PlayerPropChangeReasonNotify = new PlayerPropChangeReasonNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarPropNotify$Type extends MessageType<AvatarPropNotify> {
    constructor() {
        super("com.midnights.game.AvatarPropNotify", [
            { no: 14, name: "prop_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ } },
            { no: 15, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarPropNotify>): AvatarPropNotify {
        const message = { propMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarPropNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarPropNotify): AvatarPropNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, int64> prop_map */ 14:
                    this.binaryReadMap14(message.propMap, reader, options);
                    break;
                case /* optional uint64 avatar_guid */ 15:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap14(map: AvatarPropNotify["propMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarPropNotify["propMap"] | undefined, val: AvatarPropNotify["propMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.int64().toBigInt();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarPropNotify.prop_map");
            }
        }
        map[key ?? 0] = val ?? 0n;
    }
    internalBinaryWrite(message: AvatarPropNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, int64> prop_map = 14; */
        for (let k of Object.keys(message.propMap))
            writer.tag(14, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).int64(message.propMap[k as any]).join();
        /* optional uint64 avatar_guid = 15; */
        if (message.avatarGuid !== undefined)
            writer.tag(15, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarPropNotify
 */
export const AvatarPropNotify = new AvatarPropNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MarkNewNotify$Type extends MessageType<MarkNewNotify> {
    constructor() {
        super("com.midnights.game.MarkNewNotify", [
            { no: 7, name: "id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "mark_new_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<MarkNewNotify>): MarkNewNotify {
        const message = { idList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<MarkNewNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: MarkNewNotify): MarkNewNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 id_list */ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.idList.push(reader.uint32());
                    else
                        message.idList.push(reader.uint32());
                    break;
                case /* optional uint32 mark_new_type */ 11:
                    message.markNewType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: MarkNewNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 id_list = 7; */
        if (message.idList.length) {
            writer.tag(7, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.idList.length; i++)
                writer.uint32(message.idList[i]);
            writer.join();
        }
        /* optional uint32 mark_new_type = 11; */
        if (message.markNewType !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.markNewType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.MarkNewNotify
 */
export const MarkNewNotify = new MarkNewNotify$Type();
