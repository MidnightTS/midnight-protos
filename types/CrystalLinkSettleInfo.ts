/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CrystalLinkSettleInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class CrystalLinkSettleInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        kill_elite_monster_num?: number;
        final_score?: number;
        level_id?: number;
        is_new_record?: boolean;
        difficulty_id?: number;
        kill_normal_mosnter_num?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("kill_elite_monster_num" in data && data.kill_elite_monster_num != undefined) {
                this.kill_elite_monster_num = data.kill_elite_monster_num;
            }
            if ("final_score" in data && data.final_score != undefined) {
                this.final_score = data.final_score;
            }
            if ("level_id" in data && data.level_id != undefined) {
                this.level_id = data.level_id;
            }
            if ("is_new_record" in data && data.is_new_record != undefined) {
                this.is_new_record = data.is_new_record;
            }
            if ("difficulty_id" in data && data.difficulty_id != undefined) {
                this.difficulty_id = data.difficulty_id;
            }
            if ("kill_normal_mosnter_num" in data && data.kill_normal_mosnter_num != undefined) {
                this.kill_normal_mosnter_num = data.kill_normal_mosnter_num;
            }
        }
    }
    get kill_elite_monster_num() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set kill_elite_monster_num(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get final_score() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set final_score(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get level_id() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set level_id(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get is_new_record() {
        return pb_1.Message.getFieldWithDefault(this, 13, false) as boolean;
    }
    set is_new_record(value: boolean) {
        pb_1.Message.setField(this, 13, value);
    }
    get difficulty_id() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set difficulty_id(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get kill_normal_mosnter_num() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set kill_normal_mosnter_num(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    static fromObject(data: {
        kill_elite_monster_num?: number;
        final_score?: number;
        level_id?: number;
        is_new_record?: boolean;
        difficulty_id?: number;
        kill_normal_mosnter_num?: number;
    }): CrystalLinkSettleInfo {
        const message = new CrystalLinkSettleInfo({});
        if (data.kill_elite_monster_num != null) {
            message.kill_elite_monster_num = data.kill_elite_monster_num;
        }
        if (data.final_score != null) {
            message.final_score = data.final_score;
        }
        if (data.level_id != null) {
            message.level_id = data.level_id;
        }
        if (data.is_new_record != null) {
            message.is_new_record = data.is_new_record;
        }
        if (data.difficulty_id != null) {
            message.difficulty_id = data.difficulty_id;
        }
        if (data.kill_normal_mosnter_num != null) {
            message.kill_normal_mosnter_num = data.kill_normal_mosnter_num;
        }
        return message;
    }
    toObject() {
        const data: {
            kill_elite_monster_num?: number;
            final_score?: number;
            level_id?: number;
            is_new_record?: boolean;
            difficulty_id?: number;
            kill_normal_mosnter_num?: number;
        } = {};
        if (this.kill_elite_monster_num != null) {
            data.kill_elite_monster_num = this.kill_elite_monster_num;
        }
        if (this.final_score != null) {
            data.final_score = this.final_score;
        }
        if (this.level_id != null) {
            data.level_id = this.level_id;
        }
        if (this.is_new_record != null) {
            data.is_new_record = this.is_new_record;
        }
        if (this.difficulty_id != null) {
            data.difficulty_id = this.difficulty_id;
        }
        if (this.kill_normal_mosnter_num != null) {
            data.kill_normal_mosnter_num = this.kill_normal_mosnter_num;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.kill_elite_monster_num != 0)
            writer.writeUint32(2, this.kill_elite_monster_num);
        if (this.final_score != 0)
            writer.writeUint32(6, this.final_score);
        if (this.level_id != 0)
            writer.writeUint32(12, this.level_id);
        if (this.is_new_record != false)
            writer.writeBool(13, this.is_new_record);
        if (this.difficulty_id != 0)
            writer.writeUint32(9, this.difficulty_id);
        if (this.kill_normal_mosnter_num != 0)
            writer.writeUint32(3, this.kill_normal_mosnter_num);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CrystalLinkSettleInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CrystalLinkSettleInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 2:
                    message.kill_elite_monster_num = reader.readUint32();
                    break;
                case 6:
                    message.final_score = reader.readUint32();
                    break;
                case 12:
                    message.level_id = reader.readUint32();
                    break;
                case 13:
                    message.is_new_record = reader.readBool();
                    break;
                case 9:
                    message.difficulty_id = reader.readUint32();
                    break;
                case 3:
                    message.kill_normal_mosnter_num = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): CrystalLinkSettleInfo {
        return CrystalLinkSettleInfo.deserialize(bytes);
    }
}
