/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: OneofGatherPointDetectorData.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./Vector";
import * as pb_1 from "google-protobuf";
export class OneofGatherPointDetectorData extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        hint_center_pos?: dependency_1.Vector;
        hint_radius?: number;
        material_id?: number;
        config_id?: number;
        group_id?: number;
        is_all_collected?: boolean;
        is_hint_valid?: boolean;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("hint_center_pos" in data && data.hint_center_pos != undefined) {
                this.hint_center_pos = data.hint_center_pos;
            }
            if ("hint_radius" in data && data.hint_radius != undefined) {
                this.hint_radius = data.hint_radius;
            }
            if ("material_id" in data && data.material_id != undefined) {
                this.material_id = data.material_id;
            }
            if ("config_id" in data && data.config_id != undefined) {
                this.config_id = data.config_id;
            }
            if ("group_id" in data && data.group_id != undefined) {
                this.group_id = data.group_id;
            }
            if ("is_all_collected" in data && data.is_all_collected != undefined) {
                this.is_all_collected = data.is_all_collected;
            }
            if ("is_hint_valid" in data && data.is_hint_valid != undefined) {
                this.is_hint_valid = data.is_hint_valid;
            }
        }
    }
    get hint_center_pos() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 7) as dependency_1.Vector;
    }
    set hint_center_pos(value: dependency_1.Vector) {
        pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_hint_center_pos() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get hint_radius() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0) as number;
    }
    set hint_radius(value: number) {
        pb_1.Message.setField(this, 14, value);
    }
    get material_id() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;
    }
    set material_id(value: number) {
        pb_1.Message.setField(this, 10, value);
    }
    get config_id() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set config_id(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get group_id() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set group_id(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    get is_all_collected() {
        return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;
    }
    set is_all_collected(value: boolean) {
        pb_1.Message.setField(this, 4, value);
    }
    get is_hint_valid() {
        return pb_1.Message.getFieldWithDefault(this, 15, false) as boolean;
    }
    set is_hint_valid(value: boolean) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data: {
        hint_center_pos?: ReturnType<typeof dependency_1.Vector.prototype.toObject>;
        hint_radius?: number;
        material_id?: number;
        config_id?: number;
        group_id?: number;
        is_all_collected?: boolean;
        is_hint_valid?: boolean;
    }): OneofGatherPointDetectorData {
        const message = new OneofGatherPointDetectorData({});
        if (data.hint_center_pos != null) {
            message.hint_center_pos = dependency_1.Vector.fromObject(data.hint_center_pos);
        }
        if (data.hint_radius != null) {
            message.hint_radius = data.hint_radius;
        }
        if (data.material_id != null) {
            message.material_id = data.material_id;
        }
        if (data.config_id != null) {
            message.config_id = data.config_id;
        }
        if (data.group_id != null) {
            message.group_id = data.group_id;
        }
        if (data.is_all_collected != null) {
            message.is_all_collected = data.is_all_collected;
        }
        if (data.is_hint_valid != null) {
            message.is_hint_valid = data.is_hint_valid;
        }
        return message;
    }
    toObject() {
        const data: {
            hint_center_pos?: ReturnType<typeof dependency_1.Vector.prototype.toObject>;
            hint_radius?: number;
            material_id?: number;
            config_id?: number;
            group_id?: number;
            is_all_collected?: boolean;
            is_hint_valid?: boolean;
        } = {};
        if (this.hint_center_pos != null) {
            data.hint_center_pos = this.hint_center_pos.toObject();
        }
        if (this.hint_radius != null) {
            data.hint_radius = this.hint_radius;
        }
        if (this.material_id != null) {
            data.material_id = this.material_id;
        }
        if (this.config_id != null) {
            data.config_id = this.config_id;
        }
        if (this.group_id != null) {
            data.group_id = this.group_id;
        }
        if (this.is_all_collected != null) {
            data.is_all_collected = this.is_all_collected;
        }
        if (this.is_hint_valid != null) {
            data.is_hint_valid = this.is_hint_valid;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_hint_center_pos)
            writer.writeMessage(7, this.hint_center_pos, () => this.hint_center_pos.serialize(writer));
        if (this.hint_radius != 0)
            writer.writeUint32(14, this.hint_radius);
        if (this.material_id != 0)
            writer.writeUint32(10, this.material_id);
        if (this.config_id != 0)
            writer.writeUint32(6, this.config_id);
        if (this.group_id != 0)
            writer.writeUint32(13, this.group_id);
        if (this.is_all_collected != false)
            writer.writeBool(4, this.is_all_collected);
        if (this.is_hint_valid != false)
            writer.writeBool(15, this.is_hint_valid);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): OneofGatherPointDetectorData {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new OneofGatherPointDetectorData();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 7:
                    reader.readMessage(message.hint_center_pos, () => message.hint_center_pos = dependency_1.Vector.deserialize(reader));
                    break;
                case 14:
                    message.hint_radius = reader.readUint32();
                    break;
                case 10:
                    message.material_id = reader.readUint32();
                    break;
                case 6:
                    message.config_id = reader.readUint32();
                    break;
                case 13:
                    message.group_id = reader.readUint32();
                    break;
                case 4:
                    message.is_all_collected = reader.readBool();
                    break;
                case 15:
                    message.is_hint_valid = reader.readBool();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): OneofGatherPointDetectorData {
        return OneofGatherPointDetectorData.deserialize(bytes);
    }
}
