/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: BattlePassProduct.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class BattlePassProduct extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        normal_product_id?: string;
        extra_product_id?: string;
        upgrade_product_id?: string;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("normal_product_id" in data && data.normal_product_id != undefined) {
                this.normal_product_id = data.normal_product_id;
            }
            if ("extra_product_id" in data && data.extra_product_id != undefined) {
                this.extra_product_id = data.extra_product_id;
            }
            if ("upgrade_product_id" in data && data.upgrade_product_id != undefined) {
                this.upgrade_product_id = data.upgrade_product_id;
            }
        }
    }
    get normal_product_id() {
        return pb_1.Message.getFieldWithDefault(this, 13, "") as string;
    }
    set normal_product_id(value: string) {
        pb_1.Message.setField(this, 13, value);
    }
    get extra_product_id() {
        return pb_1.Message.getFieldWithDefault(this, 10, "") as string;
    }
    set extra_product_id(value: string) {
        pb_1.Message.setField(this, 10, value);
    }
    get upgrade_product_id() {
        return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
    }
    set upgrade_product_id(value: string) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data: {
        normal_product_id?: string;
        extra_product_id?: string;
        upgrade_product_id?: string;
    }): BattlePassProduct {
        const message = new BattlePassProduct({});
        if (data.normal_product_id != null) {
            message.normal_product_id = data.normal_product_id;
        }
        if (data.extra_product_id != null) {
            message.extra_product_id = data.extra_product_id;
        }
        if (data.upgrade_product_id != null) {
            message.upgrade_product_id = data.upgrade_product_id;
        }
        return message;
    }
    toObject() {
        const data: {
            normal_product_id?: string;
            extra_product_id?: string;
            upgrade_product_id?: string;
        } = {};
        if (this.normal_product_id != null) {
            data.normal_product_id = this.normal_product_id;
        }
        if (this.extra_product_id != null) {
            data.extra_product_id = this.extra_product_id;
        }
        if (this.upgrade_product_id != null) {
            data.upgrade_product_id = this.upgrade_product_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.normal_product_id.length)
            writer.writeString(13, this.normal_product_id);
        if (this.extra_product_id.length)
            writer.writeString(10, this.extra_product_id);
        if (this.upgrade_product_id.length)
            writer.writeString(6, this.upgrade_product_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): BattlePassProduct {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new BattlePassProduct();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 13:
                    message.normal_product_id = reader.readString();
                    break;
                case 10:
                    message.extra_product_id = reader.readString();
                    break;
                case 6:
                    message.upgrade_product_id = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): BattlePassProduct {
        return BattlePassProduct.deserialize(bytes);
    }
}
