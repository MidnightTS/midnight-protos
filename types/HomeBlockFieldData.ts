/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeBlockFieldData.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./HomeBlockSubFieldData";
import * as dependency_2 from "./Vector";
import * as pb_1 from "google-protobuf";
export class HomeBlockFieldData extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        rot?: dependency_2.Vector;
        pos?: dependency_2.Vector;
        guid?: number;
        furniture_id?: number;
        sub_field_list?: dependency_1.HomeBlockSubFieldData[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [7], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("rot" in data && data.rot != undefined) {
                this.rot = data.rot;
            }
            if ("pos" in data && data.pos != undefined) {
                this.pos = data.pos;
            }
            if ("guid" in data && data.guid != undefined) {
                this.guid = data.guid;
            }
            if ("furniture_id" in data && data.furniture_id != undefined) {
                this.furniture_id = data.furniture_id;
            }
            if ("sub_field_list" in data && data.sub_field_list != undefined) {
                this.sub_field_list = data.sub_field_list;
            }
        }
    }
    get rot() {
        return pb_1.Message.getWrapperField(this, dependency_2.Vector, 15) as dependency_2.Vector;
    }
    set rot(value: dependency_2.Vector) {
        pb_1.Message.setWrapperField(this, 15, value);
    }
    get has_rot() {
        return pb_1.Message.getField(this, 15) != null;
    }
    get pos() {
        return pb_1.Message.getWrapperField(this, dependency_2.Vector, 4) as dependency_2.Vector;
    }
    set pos(value: dependency_2.Vector) {
        pb_1.Message.setWrapperField(this, 4, value);
    }
    get has_pos() {
        return pb_1.Message.getField(this, 4) != null;
    }
    get guid() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set guid(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get furniture_id() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set furniture_id(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get sub_field_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.HomeBlockSubFieldData, 7) as dependency_1.HomeBlockSubFieldData[];
    }
    set sub_field_list(value: dependency_1.HomeBlockSubFieldData[]) {
        pb_1.Message.setRepeatedWrapperField(this, 7, value);
    }
    static fromObject(data: {
        rot?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
        pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
        guid?: number;
        furniture_id?: number;
        sub_field_list?: ReturnType<typeof dependency_1.HomeBlockSubFieldData.prototype.toObject>[];
    }): HomeBlockFieldData {
        const message = new HomeBlockFieldData({});
        if (data.rot != null) {
            message.rot = dependency_2.Vector.fromObject(data.rot);
        }
        if (data.pos != null) {
            message.pos = dependency_2.Vector.fromObject(data.pos);
        }
        if (data.guid != null) {
            message.guid = data.guid;
        }
        if (data.furniture_id != null) {
            message.furniture_id = data.furniture_id;
        }
        if (data.sub_field_list != null) {
            message.sub_field_list = data.sub_field_list.map(item => dependency_1.HomeBlockSubFieldData.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            rot?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
            pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
            guid?: number;
            furniture_id?: number;
            sub_field_list?: ReturnType<typeof dependency_1.HomeBlockSubFieldData.prototype.toObject>[];
        } = {};
        if (this.rot != null) {
            data.rot = this.rot.toObject();
        }
        if (this.pos != null) {
            data.pos = this.pos.toObject();
        }
        if (this.guid != null) {
            data.guid = this.guid;
        }
        if (this.furniture_id != null) {
            data.furniture_id = this.furniture_id;
        }
        if (this.sub_field_list != null) {
            data.sub_field_list = this.sub_field_list.map((item: dependency_1.HomeBlockSubFieldData) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_rot)
            writer.writeMessage(15, this.rot, () => this.rot.serialize(writer));
        if (this.has_pos)
            writer.writeMessage(4, this.pos, () => this.pos.serialize(writer));
        if (this.guid != 0)
            writer.writeUint32(9, this.guid);
        if (this.furniture_id != 0)
            writer.writeUint32(1, this.furniture_id);
        if (this.sub_field_list.length)
            writer.writeRepeatedMessage(7, this.sub_field_list, (item: dependency_1.HomeBlockSubFieldData) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): HomeBlockFieldData {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeBlockFieldData();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 15:
                    reader.readMessage(message.rot, () => message.rot = dependency_2.Vector.deserialize(reader));
                    break;
                case 4:
                    reader.readMessage(message.pos, () => message.pos = dependency_2.Vector.deserialize(reader));
                    break;
                case 9:
                    message.guid = reader.readUint32();
                    break;
                case 1:
                    message.furniture_id = reader.readUint32();
                    break;
                case 7:
                    reader.readMessage(message.sub_field_list, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_1.HomeBlockSubFieldData.deserialize(reader), dependency_1.HomeBlockSubFieldData));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): HomeBlockFieldData {
        return HomeBlockFieldData.deserialize(bytes);
    }
}
