// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "GachaItem.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ItemParam } from "./ItemParam";
import { GachaTransferItem } from "./GachaTransferItem";
/**
 * @generated from protobuf message GachaItem
 */
export interface GachaItem {
    /**
     * @generated from protobuf field: bool Unk3300_BGIOJBJFMFL = 8 [json_name = "Unk3300BGIOJBJFMFL"];
     */
    unk3300BGIOJBJFMFL: boolean;
    /**
     * @generated from protobuf field: repeated GachaTransferItem transfer_items = 6;
     */
    transferItems: GachaTransferItem[];
    /**
     * @generated from protobuf field: bool Unk3300_JNOOHBNJFIE = 13 [json_name = "Unk3300JNOOHBNJFIE"];
     */
    unk3300JNOOHBNJFIE: boolean;
    /**
     * @generated from protobuf field: ItemParam gacha_item = 5;
     */
    gachaItem?: ItemParam;
    /**
     * @generated from protobuf field: repeated ItemParam token_item_list = 10;
     */
    tokenItemList: ItemParam[];
}
// @generated message type with reflection information, may provide speed optimized methods
class GachaItem$Type extends MessageType<GachaItem> {
    constructor() {
        super("GachaItem", [
            { no: 8, name: "Unk3300_BGIOJBJFMFL", kind: "scalar", jsonName: "Unk3300BGIOJBJFMFL", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "transfer_items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => GachaTransferItem },
            { no: 13, name: "Unk3300_JNOOHBNJFIE", kind: "scalar", jsonName: "Unk3300JNOOHBNJFIE", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "gacha_item", kind: "message", T: () => ItemParam },
            { no: 10, name: "token_item_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ItemParam }
        ]);
    }
    create(value?: PartialMessage<GachaItem>): GachaItem {
        const message = { unk3300BGIOJBJFMFL: false, transferItems: [], unk3300JNOOHBNJFIE: false, tokenItemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GachaItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GachaItem): GachaItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool Unk3300_BGIOJBJFMFL = 8 [json_name = "Unk3300BGIOJBJFMFL"];*/ 8:
                    message.unk3300BGIOJBJFMFL = reader.bool();
                    break;
                case /* repeated GachaTransferItem transfer_items */ 6:
                    message.transferItems.push(GachaTransferItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool Unk3300_JNOOHBNJFIE = 13 [json_name = "Unk3300JNOOHBNJFIE"];*/ 13:
                    message.unk3300JNOOHBNJFIE = reader.bool();
                    break;
                case /* ItemParam gacha_item */ 5:
                    message.gachaItem = ItemParam.internalBinaryRead(reader, reader.uint32(), options, message.gachaItem);
                    break;
                case /* repeated ItemParam token_item_list */ 10:
                    message.tokenItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GachaItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool Unk3300_BGIOJBJFMFL = 8 [json_name = "Unk3300BGIOJBJFMFL"]; */
        if (message.unk3300BGIOJBJFMFL !== false)
            writer.tag(8, WireType.Varint).bool(message.unk3300BGIOJBJFMFL);
        /* repeated GachaTransferItem transfer_items = 6; */
        for (let i = 0; i < message.transferItems.length; i++)
            GachaTransferItem.internalBinaryWrite(message.transferItems[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bool Unk3300_JNOOHBNJFIE = 13 [json_name = "Unk3300JNOOHBNJFIE"]; */
        if (message.unk3300JNOOHBNJFIE !== false)
            writer.tag(13, WireType.Varint).bool(message.unk3300JNOOHBNJFIE);
        /* ItemParam gacha_item = 5; */
        if (message.gachaItem)
            ItemParam.internalBinaryWrite(message.gachaItem, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated ItemParam token_item_list = 10; */
        for (let i = 0; i < message.tokenItemList.length; i++)
            ItemParam.internalBinaryWrite(message.tokenItemList[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message GachaItem
 */
export const GachaItem = new GachaItem$Type();
