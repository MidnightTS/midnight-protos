"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _MarkMapReq_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MarkMapReq = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: MarkMapReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./MapMarkPoint");
const pb_1 = require("google-protobuf");
class MarkMapReq extends pb_1.Message {
    constructor(data) {
        super();
        _MarkMapReq_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _MarkMapReq_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("mark" in data && data.mark != undefined) {
                this.mark = data.mark;
            }
            if ("old" in data && data.old != undefined) {
                this.old = data.old;
            }
            if ("op" in data && data.op != undefined) {
                this.op = data.op;
            }
        }
    }
    get mark() {
        return pb_1.Message.getWrapperField(this, dependency_1.MapMarkPoint, 8);
    }
    set mark(value) {
        pb_1.Message.setWrapperField(this, 8, value);
    }
    get has_mark() {
        return pb_1.Message.getField(this, 8) != null;
    }
    get old() {
        return pb_1.Message.getWrapperField(this, dependency_1.MapMarkPoint, 6);
    }
    set old(value) {
        pb_1.Message.setWrapperField(this, 6, value);
    }
    get has_old() {
        return pb_1.Message.getField(this, 6) != null;
    }
    get op() {
        return pb_1.Message.getFieldWithDefault(this, 9, MarkMapReq.Operation.OPERATION_ADD);
    }
    set op(value) {
        pb_1.Message.setField(this, 9, value);
    }
    static fromObject(data) {
        const message = new MarkMapReq({});
        if (data.mark != null) {
            message.mark = dependency_1.MapMarkPoint.fromObject(data.mark);
        }
        if (data.old != null) {
            message.old = dependency_1.MapMarkPoint.fromObject(data.old);
        }
        if (data.op != null) {
            message.op = data.op;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.mark != null) {
            data.mark = this.mark.toObject();
        }
        if (this.old != null) {
            data.old = this.old.toObject();
        }
        if (this.op != null) {
            data.op = this.op;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_mark)
            writer.writeMessage(8, this.mark, () => this.mark.serialize(writer));
        if (this.has_old)
            writer.writeMessage(6, this.old, () => this.old.serialize(writer));
        if (this.op != MarkMapReq.Operation.OPERATION_ADD)
            writer.writeEnum(9, this.op);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MarkMapReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    reader.readMessage(message.mark, () => message.mark = dependency_1.MapMarkPoint.deserialize(reader));
                    break;
                case 6:
                    reader.readMessage(message.old, () => message.old = dependency_1.MapMarkPoint.deserialize(reader));
                    break;
                case 9:
                    message.op = reader.readEnum();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return MarkMapReq.deserialize(bytes);
    }
}
exports.MarkMapReq = MarkMapReq;
_MarkMapReq_one_of_decls = new WeakMap();
(function (MarkMapReq) {
    let Operation;
    (function (Operation) {
        Operation[Operation["OPERATION_ADD"] = 0] = "OPERATION_ADD";
        Operation[Operation["OPERATION_MOD"] = 1] = "OPERATION_MOD";
        Operation[Operation["OPERATION_DEL"] = 2] = "OPERATION_DEL";
        Operation[Operation["OPERATION_GET"] = 3] = "OPERATION_GET";
    })(Operation = MarkMapReq.Operation || (MarkMapReq.Operation = {}));
})(MarkMapReq = exports.MarkMapReq || (exports.MarkMapReq = {}));
