// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "FleurFairMinigameInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { FleurFairMusicGameInfo } from "./FleurFairMusicGameInfo";
import { FleurFairFallInfo } from "./FleurFairFallInfo";
import { FleurFairBalloonInfo } from "./FleurFairBalloonInfo";
/**
 * @generated from protobuf message FleurFairMinigameInfo
 */
export interface FleurFairMinigameInfo {
    /**
     * @generated from protobuf field: uint32 minigame_id = 3;
     */
    minigameId: number;
    /**
     * @generated from protobuf field: bool is_open = 15;
     */
    isOpen: boolean;
    /**
     * @generated from protobuf field: uint32 open_time = 13;
     */
    openTime: number;
    /**
     * @generated from protobuf oneof: detail
     */
    detail: {
        oneofKind: "balloonInfo";
        /**
         * @generated from protobuf field: FleurFairBalloonInfo balloon_info = 1;
         */
        balloonInfo: FleurFairBalloonInfo;
    } | {
        oneofKind: "fallInfo";
        /**
         * @generated from protobuf field: FleurFairFallInfo fall_info = 10;
         */
        fallInfo: FleurFairFallInfo;
    } | {
        oneofKind: "musicInfo";
        /**
         * @generated from protobuf field: FleurFairMusicGameInfo music_info = 14;
         */
        musicInfo: FleurFairMusicGameInfo;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class FleurFairMinigameInfo$Type extends MessageType<FleurFairMinigameInfo> {
    constructor() {
        super("FleurFairMinigameInfo", [
            { no: 3, name: "minigame_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "is_open", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "open_time", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "balloon_info", kind: "message", oneof: "detail", T: () => FleurFairBalloonInfo },
            { no: 10, name: "fall_info", kind: "message", oneof: "detail", T: () => FleurFairFallInfo },
            { no: 14, name: "music_info", kind: "message", oneof: "detail", T: () => FleurFairMusicGameInfo }
        ]);
    }
    create(value?: PartialMessage<FleurFairMinigameInfo>): FleurFairMinigameInfo {
        const message = { minigameId: 0, isOpen: false, openTime: 0, detail: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FleurFairMinigameInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FleurFairMinigameInfo): FleurFairMinigameInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 minigame_id */ 3:
                    message.minigameId = reader.uint32();
                    break;
                case /* bool is_open */ 15:
                    message.isOpen = reader.bool();
                    break;
                case /* uint32 open_time */ 13:
                    message.openTime = reader.uint32();
                    break;
                case /* FleurFairBalloonInfo balloon_info */ 1:
                    message.detail = {
                        oneofKind: "balloonInfo",
                        balloonInfo: FleurFairBalloonInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).balloonInfo)
                    };
                    break;
                case /* FleurFairFallInfo fall_info */ 10:
                    message.detail = {
                        oneofKind: "fallInfo",
                        fallInfo: FleurFairFallInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).fallInfo)
                    };
                    break;
                case /* FleurFairMusicGameInfo music_info */ 14:
                    message.detail = {
                        oneofKind: "musicInfo",
                        musicInfo: FleurFairMusicGameInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).musicInfo)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FleurFairMinigameInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 minigame_id = 3; */
        if (message.minigameId !== 0)
            writer.tag(3, WireType.Varint).uint32(message.minigameId);
        /* bool is_open = 15; */
        if (message.isOpen !== false)
            writer.tag(15, WireType.Varint).bool(message.isOpen);
        /* uint32 open_time = 13; */
        if (message.openTime !== 0)
            writer.tag(13, WireType.Varint).uint32(message.openTime);
        /* FleurFairBalloonInfo balloon_info = 1; */
        if (message.detail.oneofKind === "balloonInfo")
            FleurFairBalloonInfo.internalBinaryWrite(message.detail.balloonInfo, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* FleurFairFallInfo fall_info = 10; */
        if (message.detail.oneofKind === "fallInfo")
            FleurFairFallInfo.internalBinaryWrite(message.detail.fallInfo, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* FleurFairMusicGameInfo music_info = 14; */
        if (message.detail.oneofKind === "musicInfo")
            FleurFairMusicGameInfo.internalBinaryWrite(message.detail.musicInfo, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message FleurFairMinigameInfo
 */
export const FleurFairMinigameInfo = new FleurFairMinigameInfo$Type();
