"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _MsgParam_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgParam = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: MsgParam.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class MsgParam extends pb_1.Message {
    constructor(data) {
        super();
        _MsgParam_one_of_decls.set(this, [[9, 7, 4]]);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _MsgParam_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("int_param" in data && data.int_param != undefined) {
                this.int_param = data.int_param;
            }
            if ("flt_param" in data && data.flt_param != undefined) {
                this.flt_param = data.flt_param;
            }
            if ("str_param" in data && data.str_param != undefined) {
                this.str_param = data.str_param;
            }
        }
    }
    get int_param() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0);
    }
    set int_param(value) {
        pb_1.Message.setOneofField(this, 9, __classPrivateFieldGet(this, _MsgParam_one_of_decls, "f")[0], value);
    }
    get has_int_param() {
        return pb_1.Message.getField(this, 9) != null;
    }
    get flt_param() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set flt_param(value) {
        pb_1.Message.setOneofField(this, 7, __classPrivateFieldGet(this, _MsgParam_one_of_decls, "f")[0], value);
    }
    get has_flt_param() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get str_param() {
        return pb_1.Message.getFieldWithDefault(this, 4, "");
    }
    set str_param(value) {
        pb_1.Message.setOneofField(this, 4, __classPrivateFieldGet(this, _MsgParam_one_of_decls, "f")[0], value);
    }
    get has_str_param() {
        return pb_1.Message.getField(this, 4) != null;
    }
    get param() {
        const cases = {
            0: "none",
            9: "int_param",
            7: "flt_param",
            4: "str_param"
        };
        return cases[pb_1.Message.computeOneofCase(this, [9, 7, 4])];
    }
    static fromObject(data) {
        const message = new MsgParam({});
        if (data.int_param != null) {
            message.int_param = data.int_param;
        }
        if (data.flt_param != null) {
            message.flt_param = data.flt_param;
        }
        if (data.str_param != null) {
            message.str_param = data.str_param;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.int_param != null) {
            data.int_param = this.int_param;
        }
        if (this.flt_param != null) {
            data.flt_param = this.flt_param;
        }
        if (this.str_param != null) {
            data.str_param = this.str_param;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_int_param)
            writer.writeUint32(9, this.int_param);
        if (this.has_flt_param)
            writer.writeFloat(7, this.flt_param);
        if (this.has_str_param)
            writer.writeString(4, this.str_param);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MsgParam();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 9:
                    message.int_param = reader.readUint32();
                    break;
                case 7:
                    message.flt_param = reader.readFloat();
                    break;
                case 4:
                    message.str_param = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return MsgParam.deserialize(bytes);
    }
}
exports.MsgParam = MsgParam;
_MsgParam_one_of_decls = new WeakMap();
