"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _GadgetInteractReq_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.GadgetInteractReq = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: GadgetInteractReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./InterOpType");
const dependency_2 = require("./ResinCostType");
const pb_1 = require("google-protobuf");
class GadgetInteractReq extends pb_1.Message {
    constructor(data) {
        super();
        _GadgetInteractReq_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _GadgetInteractReq_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("gadget_id" in data && data.gadget_id != undefined) {
                this.gadget_id = data.gadget_id;
            }
            if ("is_use_condense_resin" in data && data.is_use_condense_resin != undefined) {
                this.is_use_condense_resin = data.is_use_condense_resin;
            }
            if ("op_type" in data && data.op_type != undefined) {
                this.op_type = data.op_type;
            }
            if ("resin_cost_type" in data && data.resin_cost_type != undefined) {
                this.resin_cost_type = data.resin_cost_type;
            }
            if ("Unk2700_DCPBGMKCHGJ" in data && data.Unk2700_DCPBGMKCHGJ != undefined) {
                this.Unk2700_DCPBGMKCHGJ = data.Unk2700_DCPBGMKCHGJ;
            }
            if ("gadget_entity_id" in data && data.gadget_entity_id != undefined) {
                this.gadget_entity_id = data.gadget_entity_id;
            }
        }
    }
    get gadget_id() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0);
    }
    set gadget_id(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get is_use_condense_resin() {
        return pb_1.Message.getFieldWithDefault(this, 15, false);
    }
    set is_use_condense_resin(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get op_type() {
        return pb_1.Message.getFieldWithDefault(this, 5, dependency_1.InterOpType.INTER_OP_TYPE_FINISH);
    }
    set op_type(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get resin_cost_type() {
        return pb_1.Message.getFieldWithDefault(this, 1, dependency_2.ResinCostType.RESIN_COST_TYPE_NONE);
    }
    set resin_cost_type(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get Unk2700_DCPBGMKCHGJ() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set Unk2700_DCPBGMKCHGJ(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get gadget_entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set gadget_entity_id(value) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data) {
        const message = new GadgetInteractReq({});
        if (data.gadget_id != null) {
            message.gadget_id = data.gadget_id;
        }
        if (data.is_use_condense_resin != null) {
            message.is_use_condense_resin = data.is_use_condense_resin;
        }
        if (data.op_type != null) {
            message.op_type = data.op_type;
        }
        if (data.resin_cost_type != null) {
            message.resin_cost_type = data.resin_cost_type;
        }
        if (data.Unk2700_DCPBGMKCHGJ != null) {
            message.Unk2700_DCPBGMKCHGJ = data.Unk2700_DCPBGMKCHGJ;
        }
        if (data.gadget_entity_id != null) {
            message.gadget_entity_id = data.gadget_entity_id;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.gadget_id != null) {
            data.gadget_id = this.gadget_id;
        }
        if (this.is_use_condense_resin != null) {
            data.is_use_condense_resin = this.is_use_condense_resin;
        }
        if (this.op_type != null) {
            data.op_type = this.op_type;
        }
        if (this.resin_cost_type != null) {
            data.resin_cost_type = this.resin_cost_type;
        }
        if (this.Unk2700_DCPBGMKCHGJ != null) {
            data.Unk2700_DCPBGMKCHGJ = this.Unk2700_DCPBGMKCHGJ;
        }
        if (this.gadget_entity_id != null) {
            data.gadget_entity_id = this.gadget_entity_id;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.gadget_id != 0)
            writer.writeUint32(8, this.gadget_id);
        if (this.is_use_condense_resin != false)
            writer.writeBool(15, this.is_use_condense_resin);
        if (this.op_type != dependency_1.InterOpType.INTER_OP_TYPE_FINISH)
            writer.writeEnum(5, this.op_type);
        if (this.resin_cost_type != dependency_2.ResinCostType.RESIN_COST_TYPE_NONE)
            writer.writeEnum(1, this.resin_cost_type);
        if (this.Unk2700_DCPBGMKCHGJ != 0)
            writer.writeUint32(2, this.Unk2700_DCPBGMKCHGJ);
        if (this.gadget_entity_id != 0)
            writer.writeUint32(4, this.gadget_entity_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GadgetInteractReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.gadget_id = reader.readUint32();
                    break;
                case 15:
                    message.is_use_condense_resin = reader.readBool();
                    break;
                case 5:
                    message.op_type = reader.readEnum();
                    break;
                case 1:
                    message.resin_cost_type = reader.readEnum();
                    break;
                case 2:
                    message.Unk2700_DCPBGMKCHGJ = reader.readUint32();
                    break;
                case 4:
                    message.gadget_entity_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return GadgetInteractReq.deserialize(bytes);
    }
}
exports.GadgetInteractReq = GadgetInteractReq;
_GadgetInteractReq_one_of_decls = new WeakMap();
