// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_reunion.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message com.midnights.game.ReunionSignInInfo
 */
export interface ReunionSignInInfo {
    /**
     * @generated from protobuf field: optional uint32 sign_in_count = 6;
     */
    signInCount?: number;
    /**
     * @generated from protobuf field: repeated uint32 reward_day_list = 8;
     */
    rewardDayList: number[];
    /**
     * @generated from protobuf field: optional uint32 config_id = 12;
     */
    configId?: number;
    /**
     * @generated from protobuf field: optional uint32 last_sign_in_time = 11;
     */
    lastSignInTime?: number;
}
/**
 * @generated from protobuf message com.midnights.game.ReunionWatcherInfo
 */
export interface ReunionWatcherInfo {
    /**
     * @generated from protobuf field: optional uint32 reward_unlock_time = 12;
     */
    rewardUnlockTime?: number;
    /**
     * @generated from protobuf field: optional uint32 watcher_id = 3;
     */
    watcherId?: number;
    /**
     * @generated from protobuf field: optional uint32 total_progress = 4;
     */
    totalProgress?: number;
    /**
     * @generated from protobuf field: optional uint32 cur_progress = 11;
     */
    curProgress?: number;
    /**
     * @generated from protobuf field: optional bool is_taken_reward = 14;
     */
    isTakenReward?: boolean;
}
/**
 * @generated from protobuf message com.midnights.game.ReunionMissionInfo
 */
export interface ReunionMissionInfo {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ReunionWatcherInfo cur_day_watcher_list = 3;
     */
    curDayWatcherList: ReunionWatcherInfo[];
    /**
     * @generated from protobuf field: optional uint32 cur_score = 11;
     */
    curScore?: number;
    /**
     * @generated from protobuf field: optional bool is_taken_reward = 8;
     */
    isTakenReward?: boolean;
    /**
     * @generated from protobuf field: repeated bool is_taken_reward_list = 6;
     */
    isTakenRewardList: boolean[];
    /**
     * @generated from protobuf field: optional uint32 next_refresh_time = 5;
     */
    nextRefreshTime?: number;
    /**
     * @generated from protobuf field: optional bool is_finished = 9;
     */
    isFinished?: boolean;
    /**
     * @generated from protobuf field: optional uint32 mission_id = 12;
     */
    missionId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ReunionWatcherInfo watcher_list = 2;
     */
    watcherList: ReunionWatcherInfo[];
}
/**
 * @generated from protobuf message com.midnights.game.ReunionPrivilegeInfo
 */
export interface ReunionPrivilegeInfo {
    /**
     * @generated from protobuf field: optional uint32 cur_day_count = 7;
     */
    curDayCount?: number;
    /**
     * @generated from protobuf field: optional uint32 total_count = 10;
     */
    totalCount?: number;
    /**
     * @generated from protobuf field: optional uint32 privilege_id = 4;
     */
    privilegeId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.ReunionBriefInfo
 */
export interface ReunionBriefInfo {
    /**
     * @generated from protobuf field: optional uint32 first_gift_reward_id = 15;
     */
    firstGiftRewardId?: number;
    /**
     * @generated from protobuf field: optional uint32 privilege_id = 5;
     */
    privilegeId?: number;
    /**
     * @generated from protobuf field: optional uint32 mission_id = 10;
     */
    missionId?: number;
    /**
     * @generated from protobuf field: optional uint32 first_day_start_time = 3;
     */
    firstDayStartTime?: number;
    /**
     * @generated from protobuf field: optional bool sign_in_has_reward = 2;
     */
    signInHasReward?: boolean;
    /**
     * @generated from protobuf field: optional uint32 start_time = 7;
     */
    startTime?: number;
    /**
     * @generated from protobuf field: optional bool is_taken_first_gift = 8;
     */
    isTakenFirstGift?: boolean;
    /**
     * @generated from protobuf field: optional uint32 finish_time = 12;
     */
    finishTime?: number;
    /**
     * @generated from protobuf field: optional bool mission_has_reward = 9;
     */
    missionHasReward?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionPrivilegeInfo privilege_info = 14;
     */
    privilegeInfo?: ReunionPrivilegeInfo;
    /**
     * @generated from protobuf field: optional string version = 13;
     */
    version?: string;
    /**
     * @generated from protobuf field: optional uint32 sign_in_config_id = 6;
     */
    signInConfigId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.ReunionBriefInfoReq
 */
export interface ReunionBriefInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.ReunionBriefInfoReq.CmdId
 */
export enum ReunionBriefInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5076;
     */
    CMD_ID = 5076,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReunionBriefInfoRsp
 */
export interface ReunionBriefInfoRsp {
    /**
     * @generated from protobuf field: optional bool is_activate = 13;
     */
    isActivate?: boolean;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionBriefInfo reunion_brief_info = 5;
     */
    reunionBriefInfo?: ReunionBriefInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.ReunionBriefInfoRsp.CmdId
 */
export enum ReunionBriefInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5068;
     */
    CMD_ID = 5068,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeReunionFirstGiftRewardReq
 */
export interface TakeReunionFirstGiftRewardReq {
}
/**
 * @generated from protobuf enum com.midnights.game.TakeReunionFirstGiftRewardReq.CmdId
 */
export enum TakeReunionFirstGiftRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5075;
     */
    CMD_ID = 5075,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeReunionFirstGiftRewardRsp
 */
export interface TakeReunionFirstGiftRewardRsp {
    /**
     * @generated from protobuf field: optional int32 reward_id = 9;
     */
    rewardId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeReunionFirstGiftRewardRsp.CmdId
 */
export enum TakeReunionFirstGiftRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5057;
     */
    CMD_ID = 5057,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetReunionSignInInfoReq
 */
export interface GetReunionSignInInfoReq {
    /**
     * @generated from protobuf field: optional uint32 sign_in_config_id = 10;
     */
    signInConfigId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetReunionSignInInfoReq.CmdId
 */
export enum GetReunionSignInInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5052;
     */
    CMD_ID = 5052,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetReunionSignInInfoRsp
 */
export interface GetReunionSignInInfoRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionSignInInfo sign_in_info = 5;
     */
    signInInfo?: ReunionSignInInfo;
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetReunionSignInInfoRsp.CmdId
 */
export enum GetReunionSignInInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5081;
     */
    CMD_ID = 5081,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeReunionSignInRewardReq
 */
export interface TakeReunionSignInRewardReq {
    /**
     * @generated from protobuf field: optional uint32 reward_day = 12;
     */
    rewardDay?: number;
    /**
     * @generated from protobuf field: optional uint32 config_id = 14;
     */
    configId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeReunionSignInRewardReq.CmdId
 */
export enum TakeReunionSignInRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5079;
     */
    CMD_ID = 5079,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeReunionSignInRewardRsp
 */
export interface TakeReunionSignInRewardRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionSignInInfo sign_in_info = 10;
     */
    signInInfo?: ReunionSignInInfo;
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeReunionSignInRewardRsp.CmdId
 */
export enum TakeReunionSignInRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5072;
     */
    CMD_ID = 5072,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetReunionMissionInfoReq
 */
export interface GetReunionMissionInfoReq {
    /**
     * @generated from protobuf field: optional uint32 mission_id = 14;
     */
    missionId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetReunionMissionInfoReq.CmdId
 */
export enum GetReunionMissionInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5094;
     */
    CMD_ID = 5094,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetReunionMissionInfoRsp
 */
export interface GetReunionMissionInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionMissionInfo mission_info = 14;
     */
    missionInfo?: ReunionMissionInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.GetReunionMissionInfoRsp.CmdId
 */
export enum GetReunionMissionInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5099;
     */
    CMD_ID = 5099,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeReunionWatcherRewardReq
 */
export interface TakeReunionWatcherRewardReq {
    /**
     * @generated from protobuf field: optional uint32 watcher_id = 12;
     */
    watcherId?: number;
    /**
     * @generated from protobuf field: optional uint32 mission_id = 15;
     */
    missionId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeReunionWatcherRewardReq.CmdId
 */
export enum TakeReunionWatcherRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5070;
     */
    CMD_ID = 5070,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeReunionWatcherRewardRsp
 */
export interface TakeReunionWatcherRewardRsp {
    /**
     * @generated from protobuf field: optional uint32 mission_id = 15;
     */
    missionId?: number;
    /**
     * @generated from protobuf field: optional uint32 watcher_id = 9;
     */
    watcherId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeReunionWatcherRewardRsp.CmdId
 */
export enum TakeReunionWatcherRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5095;
     */
    CMD_ID = 5095,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UpdateReunionWatcherNotify
 */
export interface UpdateReunionWatcherNotify {
    /**
     * @generated from protobuf field: optional uint32 mission_id = 3;
     */
    missionId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionWatcherInfo watcher_info = 10;
     */
    watcherInfo?: ReunionWatcherInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.UpdateReunionWatcherNotify.CmdId
 */
export enum UpdateReunionWatcherNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5091;
     */
    CMD_ID = 5091,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeReunionMissionRewardReq
 */
export interface TakeReunionMissionRewardReq {
    /**
     * @generated from protobuf field: optional uint32 reward_id = 7;
     */
    rewardId?: number;
    /**
     * @generated from protobuf field: optional uint32 reward_index = 4;
     */
    rewardIndex?: number;
    /**
     * @generated from protobuf field: optional uint32 mission_id = 12;
     */
    missionId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeReunionMissionRewardReq.CmdId
 */
export enum TakeReunionMissionRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5092;
     */
    CMD_ID = 5092,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeReunionMissionRewardRsp
 */
export interface TakeReunionMissionRewardRsp {
    /**
     * @generated from protobuf field: optional uint32 reward_index = 12;
     */
    rewardIndex?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionMissionInfo mission_info = 9;
     */
    missionInfo?: ReunionMissionInfo;
    /**
     * @generated from protobuf field: optional uint32 reward_id = 3;
     */
    rewardId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeReunionMissionRewardRsp.CmdId
 */
export enum TakeReunionMissionRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5064;
     */
    CMD_ID = 5064,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetReunionPrivilegeInfoReq
 */
export interface GetReunionPrivilegeInfoReq {
    /**
     * @generated from protobuf field: optional uint32 privilege_id = 10;
     */
    privilegeId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetReunionPrivilegeInfoReq.CmdId
 */
export enum GetReunionPrivilegeInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5097;
     */
    CMD_ID = 5097,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetReunionPrivilegeInfoRsp
 */
export interface GetReunionPrivilegeInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionPrivilegeInfo privilege_info = 1;
     */
    privilegeInfo?: ReunionPrivilegeInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.GetReunionPrivilegeInfoRsp.CmdId
 */
export enum GetReunionPrivilegeInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5087;
     */
    CMD_ID = 5087,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReunionSettleNotify
 */
export interface ReunionSettleNotify {
}
/**
 * @generated from protobuf enum com.midnights.game.ReunionSettleNotify.CmdId
 */
export enum ReunionSettleNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5073;
     */
    CMD_ID = 5073,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReunionActivateNotify
 */
export interface ReunionActivateNotify {
    /**
     * @generated from protobuf field: optional bool is_activate = 9;
     */
    isActivate?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionBriefInfo reunion_brief_info = 13;
     */
    reunionBriefInfo?: ReunionBriefInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.ReunionActivateNotify.CmdId
 */
export enum ReunionActivateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5085;
     */
    CMD_ID = 5085,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReunionPrivilegeChangeNotify
 */
export interface ReunionPrivilegeChangeNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionPrivilegeInfo privilege_info = 13;
     */
    privilegeInfo?: ReunionPrivilegeInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.ReunionPrivilegeChangeNotify.CmdId
 */
export enum ReunionPrivilegeChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5098;
     */
    CMD_ID = 5098,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReunionDailyRefreshNotify
 */
export interface ReunionDailyRefreshNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.ReunionBriefInfo reunion_brief_info = 4;
     */
    reunionBriefInfo?: ReunionBriefInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.ReunionDailyRefreshNotify.CmdId
 */
export enum ReunionDailyRefreshNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5100;
     */
    CMD_ID = 5100,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class ReunionSignInInfo$Type extends MessageType<ReunionSignInInfo> {
    constructor() {
        super("com.midnights.game.ReunionSignInInfo", [
            { no: 6, name: "sign_in_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "reward_day_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "last_sign_in_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ReunionSignInInfo>): ReunionSignInInfo {
        const message = { rewardDayList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionSignInInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionSignInInfo): ReunionSignInInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 sign_in_count */ 6:
                    message.signInCount = reader.uint32();
                    break;
                case /* repeated uint32 reward_day_list */ 8:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.rewardDayList.push(reader.uint32());
                    else
                        message.rewardDayList.push(reader.uint32());
                    break;
                case /* optional uint32 config_id */ 12:
                    message.configId = reader.uint32();
                    break;
                case /* optional uint32 last_sign_in_time */ 11:
                    message.lastSignInTime = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionSignInInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 sign_in_count = 6; */
        if (message.signInCount !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.signInCount);
        /* repeated uint32 reward_day_list = 8; */
        for (let i = 0; i < message.rewardDayList.length; i++)
            writer.tag(8, WireType.Varint).uint32(message.rewardDayList[i]);
        /* optional uint32 config_id = 12; */
        if (message.configId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.configId);
        /* optional uint32 last_sign_in_time = 11; */
        if (message.lastSignInTime !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.lastSignInTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionSignInInfo
 */
export const ReunionSignInInfo = new ReunionSignInInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionWatcherInfo$Type extends MessageType<ReunionWatcherInfo> {
    constructor() {
        super("com.midnights.game.ReunionWatcherInfo", [
            { no: 12, name: "reward_unlock_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "watcher_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "total_progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "cur_progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "is_taken_reward", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ReunionWatcherInfo>): ReunionWatcherInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionWatcherInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionWatcherInfo): ReunionWatcherInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 reward_unlock_time */ 12:
                    message.rewardUnlockTime = reader.uint32();
                    break;
                case /* optional uint32 watcher_id */ 3:
                    message.watcherId = reader.uint32();
                    break;
                case /* optional uint32 total_progress */ 4:
                    message.totalProgress = reader.uint32();
                    break;
                case /* optional uint32 cur_progress */ 11:
                    message.curProgress = reader.uint32();
                    break;
                case /* optional bool is_taken_reward */ 14:
                    message.isTakenReward = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionWatcherInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 reward_unlock_time = 12; */
        if (message.rewardUnlockTime !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.rewardUnlockTime);
        /* optional uint32 watcher_id = 3; */
        if (message.watcherId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.watcherId);
        /* optional uint32 total_progress = 4; */
        if (message.totalProgress !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.totalProgress);
        /* optional uint32 cur_progress = 11; */
        if (message.curProgress !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.curProgress);
        /* optional bool is_taken_reward = 14; */
        if (message.isTakenReward !== undefined)
            writer.tag(14, WireType.Varint).bool(message.isTakenReward);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionWatcherInfo
 */
export const ReunionWatcherInfo = new ReunionWatcherInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionMissionInfo$Type extends MessageType<ReunionMissionInfo> {
    constructor() {
        super("com.midnights.game.ReunionMissionInfo", [
            { no: 3, name: "cur_day_watcher_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ReunionWatcherInfo },
            { no: 11, name: "cur_score", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "is_taken_reward", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "is_taken_reward_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "next_refresh_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "is_finished", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "mission_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "watcher_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ReunionWatcherInfo }
        ]);
    }
    create(value?: PartialMessage<ReunionMissionInfo>): ReunionMissionInfo {
        const message = { curDayWatcherList: [], isTakenRewardList: [], watcherList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionMissionInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionMissionInfo): ReunionMissionInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ReunionWatcherInfo cur_day_watcher_list */ 3:
                    message.curDayWatcherList.push(ReunionWatcherInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 cur_score */ 11:
                    message.curScore = reader.uint32();
                    break;
                case /* optional bool is_taken_reward */ 8:
                    message.isTakenReward = reader.bool();
                    break;
                case /* repeated bool is_taken_reward_list */ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.isTakenRewardList.push(reader.bool());
                    else
                        message.isTakenRewardList.push(reader.bool());
                    break;
                case /* optional uint32 next_refresh_time */ 5:
                    message.nextRefreshTime = reader.uint32();
                    break;
                case /* optional bool is_finished */ 9:
                    message.isFinished = reader.bool();
                    break;
                case /* optional uint32 mission_id */ 12:
                    message.missionId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ReunionWatcherInfo watcher_list */ 2:
                    message.watcherList.push(ReunionWatcherInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionMissionInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ReunionWatcherInfo cur_day_watcher_list = 3; */
        for (let i = 0; i < message.curDayWatcherList.length; i++)
            ReunionWatcherInfo.internalBinaryWrite(message.curDayWatcherList[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 cur_score = 11; */
        if (message.curScore !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.curScore);
        /* optional bool is_taken_reward = 8; */
        if (message.isTakenReward !== undefined)
            writer.tag(8, WireType.Varint).bool(message.isTakenReward);
        /* repeated bool is_taken_reward_list = 6; */
        for (let i = 0; i < message.isTakenRewardList.length; i++)
            writer.tag(6, WireType.Varint).bool(message.isTakenRewardList[i]);
        /* optional uint32 next_refresh_time = 5; */
        if (message.nextRefreshTime !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.nextRefreshTime);
        /* optional bool is_finished = 9; */
        if (message.isFinished !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isFinished);
        /* optional uint32 mission_id = 12; */
        if (message.missionId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.missionId);
        /* repeated com.midnights.game.ReunionWatcherInfo watcher_list = 2; */
        for (let i = 0; i < message.watcherList.length; i++)
            ReunionWatcherInfo.internalBinaryWrite(message.watcherList[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionMissionInfo
 */
export const ReunionMissionInfo = new ReunionMissionInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionPrivilegeInfo$Type extends MessageType<ReunionPrivilegeInfo> {
    constructor() {
        super("com.midnights.game.ReunionPrivilegeInfo", [
            { no: 7, name: "cur_day_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "total_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "privilege_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ReunionPrivilegeInfo>): ReunionPrivilegeInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionPrivilegeInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionPrivilegeInfo): ReunionPrivilegeInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 cur_day_count */ 7:
                    message.curDayCount = reader.uint32();
                    break;
                case /* optional uint32 total_count */ 10:
                    message.totalCount = reader.uint32();
                    break;
                case /* optional uint32 privilege_id */ 4:
                    message.privilegeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionPrivilegeInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 cur_day_count = 7; */
        if (message.curDayCount !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.curDayCount);
        /* optional uint32 total_count = 10; */
        if (message.totalCount !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.totalCount);
        /* optional uint32 privilege_id = 4; */
        if (message.privilegeId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.privilegeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionPrivilegeInfo
 */
export const ReunionPrivilegeInfo = new ReunionPrivilegeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionBriefInfo$Type extends MessageType<ReunionBriefInfo> {
    constructor() {
        super("com.midnights.game.ReunionBriefInfo", [
            { no: 15, name: "first_gift_reward_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "privilege_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "mission_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "first_day_start_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "sign_in_has_reward", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "start_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "is_taken_first_gift", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "finish_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "mission_has_reward", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "privilege_info", kind: "message", T: () => ReunionPrivilegeInfo },
            { no: 13, name: "version", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "sign_in_config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ReunionBriefInfo>): ReunionBriefInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionBriefInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionBriefInfo): ReunionBriefInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 first_gift_reward_id */ 15:
                    message.firstGiftRewardId = reader.uint32();
                    break;
                case /* optional uint32 privilege_id */ 5:
                    message.privilegeId = reader.uint32();
                    break;
                case /* optional uint32 mission_id */ 10:
                    message.missionId = reader.uint32();
                    break;
                case /* optional uint32 first_day_start_time */ 3:
                    message.firstDayStartTime = reader.uint32();
                    break;
                case /* optional bool sign_in_has_reward */ 2:
                    message.signInHasReward = reader.bool();
                    break;
                case /* optional uint32 start_time */ 7:
                    message.startTime = reader.uint32();
                    break;
                case /* optional bool is_taken_first_gift */ 8:
                    message.isTakenFirstGift = reader.bool();
                    break;
                case /* optional uint32 finish_time */ 12:
                    message.finishTime = reader.uint32();
                    break;
                case /* optional bool mission_has_reward */ 9:
                    message.missionHasReward = reader.bool();
                    break;
                case /* optional com.midnights.game.ReunionPrivilegeInfo privilege_info */ 14:
                    message.privilegeInfo = ReunionPrivilegeInfo.internalBinaryRead(reader, reader.uint32(), options, message.privilegeInfo);
                    break;
                case /* optional string version */ 13:
                    message.version = reader.string();
                    break;
                case /* optional uint32 sign_in_config_id */ 6:
                    message.signInConfigId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionBriefInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 first_gift_reward_id = 15; */
        if (message.firstGiftRewardId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.firstGiftRewardId);
        /* optional uint32 privilege_id = 5; */
        if (message.privilegeId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.privilegeId);
        /* optional uint32 mission_id = 10; */
        if (message.missionId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.missionId);
        /* optional uint32 first_day_start_time = 3; */
        if (message.firstDayStartTime !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.firstDayStartTime);
        /* optional bool sign_in_has_reward = 2; */
        if (message.signInHasReward !== undefined)
            writer.tag(2, WireType.Varint).bool(message.signInHasReward);
        /* optional uint32 start_time = 7; */
        if (message.startTime !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.startTime);
        /* optional bool is_taken_first_gift = 8; */
        if (message.isTakenFirstGift !== undefined)
            writer.tag(8, WireType.Varint).bool(message.isTakenFirstGift);
        /* optional uint32 finish_time = 12; */
        if (message.finishTime !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.finishTime);
        /* optional bool mission_has_reward = 9; */
        if (message.missionHasReward !== undefined)
            writer.tag(9, WireType.Varint).bool(message.missionHasReward);
        /* optional com.midnights.game.ReunionPrivilegeInfo privilege_info = 14; */
        if (message.privilegeInfo)
            ReunionPrivilegeInfo.internalBinaryWrite(message.privilegeInfo, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* optional string version = 13; */
        if (message.version !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.version);
        /* optional uint32 sign_in_config_id = 6; */
        if (message.signInConfigId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.signInConfigId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionBriefInfo
 */
export const ReunionBriefInfo = new ReunionBriefInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionBriefInfoReq$Type extends MessageType<ReunionBriefInfoReq> {
    constructor() {
        super("com.midnights.game.ReunionBriefInfoReq", []);
    }
    create(value?: PartialMessage<ReunionBriefInfoReq>): ReunionBriefInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionBriefInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionBriefInfoReq): ReunionBriefInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ReunionBriefInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionBriefInfoReq
 */
export const ReunionBriefInfoReq = new ReunionBriefInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionBriefInfoRsp$Type extends MessageType<ReunionBriefInfoRsp> {
    constructor() {
        super("com.midnights.game.ReunionBriefInfoRsp", [
            { no: 13, name: "is_activate", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "reunion_brief_info", kind: "message", T: () => ReunionBriefInfo }
        ]);
    }
    create(value?: PartialMessage<ReunionBriefInfoRsp>): ReunionBriefInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionBriefInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionBriefInfoRsp): ReunionBriefInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_activate */ 13:
                    message.isActivate = reader.bool();
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.ReunionBriefInfo reunion_brief_info */ 5:
                    message.reunionBriefInfo = ReunionBriefInfo.internalBinaryRead(reader, reader.uint32(), options, message.reunionBriefInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionBriefInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_activate = 13; */
        if (message.isActivate !== undefined)
            writer.tag(13, WireType.Varint).bool(message.isActivate);
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.ReunionBriefInfo reunion_brief_info = 5; */
        if (message.reunionBriefInfo)
            ReunionBriefInfo.internalBinaryWrite(message.reunionBriefInfo, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionBriefInfoRsp
 */
export const ReunionBriefInfoRsp = new ReunionBriefInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeReunionFirstGiftRewardReq$Type extends MessageType<TakeReunionFirstGiftRewardReq> {
    constructor() {
        super("com.midnights.game.TakeReunionFirstGiftRewardReq", []);
    }
    create(value?: PartialMessage<TakeReunionFirstGiftRewardReq>): TakeReunionFirstGiftRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeReunionFirstGiftRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeReunionFirstGiftRewardReq): TakeReunionFirstGiftRewardReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: TakeReunionFirstGiftRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeReunionFirstGiftRewardReq
 */
export const TakeReunionFirstGiftRewardReq = new TakeReunionFirstGiftRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeReunionFirstGiftRewardRsp$Type extends MessageType<TakeReunionFirstGiftRewardRsp> {
    constructor() {
        super("com.midnights.game.TakeReunionFirstGiftRewardRsp", [
            { no: 9, name: "reward_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeReunionFirstGiftRewardRsp>): TakeReunionFirstGiftRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeReunionFirstGiftRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeReunionFirstGiftRewardRsp): TakeReunionFirstGiftRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 reward_id */ 9:
                    message.rewardId = reader.int32();
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeReunionFirstGiftRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 reward_id = 9; */
        if (message.rewardId !== undefined)
            writer.tag(9, WireType.Varint).int32(message.rewardId);
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeReunionFirstGiftRewardRsp
 */
export const TakeReunionFirstGiftRewardRsp = new TakeReunionFirstGiftRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetReunionSignInInfoReq$Type extends MessageType<GetReunionSignInInfoReq> {
    constructor() {
        super("com.midnights.game.GetReunionSignInInfoReq", [
            { no: 10, name: "sign_in_config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetReunionSignInInfoReq>): GetReunionSignInInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetReunionSignInInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetReunionSignInInfoReq): GetReunionSignInInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 sign_in_config_id */ 10:
                    message.signInConfigId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetReunionSignInInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 sign_in_config_id = 10; */
        if (message.signInConfigId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.signInConfigId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetReunionSignInInfoReq
 */
export const GetReunionSignInInfoReq = new GetReunionSignInInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetReunionSignInInfoRsp$Type extends MessageType<GetReunionSignInInfoRsp> {
    constructor() {
        super("com.midnights.game.GetReunionSignInInfoRsp", [
            { no: 5, name: "sign_in_info", kind: "message", T: () => ReunionSignInInfo },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetReunionSignInInfoRsp>): GetReunionSignInInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetReunionSignInInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetReunionSignInInfoRsp): GetReunionSignInInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ReunionSignInInfo sign_in_info */ 5:
                    message.signInInfo = ReunionSignInInfo.internalBinaryRead(reader, reader.uint32(), options, message.signInInfo);
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetReunionSignInInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ReunionSignInInfo sign_in_info = 5; */
        if (message.signInInfo)
            ReunionSignInInfo.internalBinaryWrite(message.signInInfo, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetReunionSignInInfoRsp
 */
export const GetReunionSignInInfoRsp = new GetReunionSignInInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeReunionSignInRewardReq$Type extends MessageType<TakeReunionSignInRewardReq> {
    constructor() {
        super("com.midnights.game.TakeReunionSignInRewardReq", [
            { no: 12, name: "reward_day", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeReunionSignInRewardReq>): TakeReunionSignInRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeReunionSignInRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeReunionSignInRewardReq): TakeReunionSignInRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 reward_day */ 12:
                    message.rewardDay = reader.uint32();
                    break;
                case /* optional uint32 config_id */ 14:
                    message.configId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeReunionSignInRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 reward_day = 12; */
        if (message.rewardDay !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.rewardDay);
        /* optional uint32 config_id = 14; */
        if (message.configId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.configId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeReunionSignInRewardReq
 */
export const TakeReunionSignInRewardReq = new TakeReunionSignInRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeReunionSignInRewardRsp$Type extends MessageType<TakeReunionSignInRewardRsp> {
    constructor() {
        super("com.midnights.game.TakeReunionSignInRewardRsp", [
            { no: 10, name: "sign_in_info", kind: "message", T: () => ReunionSignInInfo },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeReunionSignInRewardRsp>): TakeReunionSignInRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeReunionSignInRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeReunionSignInRewardRsp): TakeReunionSignInRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ReunionSignInInfo sign_in_info */ 10:
                    message.signInInfo = ReunionSignInInfo.internalBinaryRead(reader, reader.uint32(), options, message.signInInfo);
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeReunionSignInRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ReunionSignInInfo sign_in_info = 10; */
        if (message.signInInfo)
            ReunionSignInInfo.internalBinaryWrite(message.signInInfo, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeReunionSignInRewardRsp
 */
export const TakeReunionSignInRewardRsp = new TakeReunionSignInRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetReunionMissionInfoReq$Type extends MessageType<GetReunionMissionInfoReq> {
    constructor() {
        super("com.midnights.game.GetReunionMissionInfoReq", [
            { no: 14, name: "mission_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetReunionMissionInfoReq>): GetReunionMissionInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetReunionMissionInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetReunionMissionInfoReq): GetReunionMissionInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 mission_id */ 14:
                    message.missionId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetReunionMissionInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 mission_id = 14; */
        if (message.missionId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.missionId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetReunionMissionInfoReq
 */
export const GetReunionMissionInfoReq = new GetReunionMissionInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetReunionMissionInfoRsp$Type extends MessageType<GetReunionMissionInfoRsp> {
    constructor() {
        super("com.midnights.game.GetReunionMissionInfoRsp", [
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "mission_info", kind: "message", T: () => ReunionMissionInfo }
        ]);
    }
    create(value?: PartialMessage<GetReunionMissionInfoRsp>): GetReunionMissionInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetReunionMissionInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetReunionMissionInfoRsp): GetReunionMissionInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.ReunionMissionInfo mission_info */ 14:
                    message.missionInfo = ReunionMissionInfo.internalBinaryRead(reader, reader.uint32(), options, message.missionInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetReunionMissionInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.ReunionMissionInfo mission_info = 14; */
        if (message.missionInfo)
            ReunionMissionInfo.internalBinaryWrite(message.missionInfo, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetReunionMissionInfoRsp
 */
export const GetReunionMissionInfoRsp = new GetReunionMissionInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeReunionWatcherRewardReq$Type extends MessageType<TakeReunionWatcherRewardReq> {
    constructor() {
        super("com.midnights.game.TakeReunionWatcherRewardReq", [
            { no: 12, name: "watcher_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "mission_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeReunionWatcherRewardReq>): TakeReunionWatcherRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeReunionWatcherRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeReunionWatcherRewardReq): TakeReunionWatcherRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 watcher_id */ 12:
                    message.watcherId = reader.uint32();
                    break;
                case /* optional uint32 mission_id */ 15:
                    message.missionId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeReunionWatcherRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 watcher_id = 12; */
        if (message.watcherId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.watcherId);
        /* optional uint32 mission_id = 15; */
        if (message.missionId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.missionId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeReunionWatcherRewardReq
 */
export const TakeReunionWatcherRewardReq = new TakeReunionWatcherRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeReunionWatcherRewardRsp$Type extends MessageType<TakeReunionWatcherRewardRsp> {
    constructor() {
        super("com.midnights.game.TakeReunionWatcherRewardRsp", [
            { no: 15, name: "mission_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "watcher_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeReunionWatcherRewardRsp>): TakeReunionWatcherRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeReunionWatcherRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeReunionWatcherRewardRsp): TakeReunionWatcherRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 mission_id */ 15:
                    message.missionId = reader.uint32();
                    break;
                case /* optional uint32 watcher_id */ 9:
                    message.watcherId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeReunionWatcherRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 mission_id = 15; */
        if (message.missionId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.missionId);
        /* optional uint32 watcher_id = 9; */
        if (message.watcherId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.watcherId);
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeReunionWatcherRewardRsp
 */
export const TakeReunionWatcherRewardRsp = new TakeReunionWatcherRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpdateReunionWatcherNotify$Type extends MessageType<UpdateReunionWatcherNotify> {
    constructor() {
        super("com.midnights.game.UpdateReunionWatcherNotify", [
            { no: 3, name: "mission_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "watcher_info", kind: "message", T: () => ReunionWatcherInfo }
        ]);
    }
    create(value?: PartialMessage<UpdateReunionWatcherNotify>): UpdateReunionWatcherNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UpdateReunionWatcherNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UpdateReunionWatcherNotify): UpdateReunionWatcherNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 mission_id */ 3:
                    message.missionId = reader.uint32();
                    break;
                case /* optional com.midnights.game.ReunionWatcherInfo watcher_info */ 10:
                    message.watcherInfo = ReunionWatcherInfo.internalBinaryRead(reader, reader.uint32(), options, message.watcherInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UpdateReunionWatcherNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 mission_id = 3; */
        if (message.missionId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.missionId);
        /* optional com.midnights.game.ReunionWatcherInfo watcher_info = 10; */
        if (message.watcherInfo)
            ReunionWatcherInfo.internalBinaryWrite(message.watcherInfo, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UpdateReunionWatcherNotify
 */
export const UpdateReunionWatcherNotify = new UpdateReunionWatcherNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeReunionMissionRewardReq$Type extends MessageType<TakeReunionMissionRewardReq> {
    constructor() {
        super("com.midnights.game.TakeReunionMissionRewardReq", [
            { no: 7, name: "reward_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "reward_index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "mission_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeReunionMissionRewardReq>): TakeReunionMissionRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeReunionMissionRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeReunionMissionRewardReq): TakeReunionMissionRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 reward_id */ 7:
                    message.rewardId = reader.uint32();
                    break;
                case /* optional uint32 reward_index */ 4:
                    message.rewardIndex = reader.uint32();
                    break;
                case /* optional uint32 mission_id */ 12:
                    message.missionId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeReunionMissionRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 reward_id = 7; */
        if (message.rewardId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.rewardId);
        /* optional uint32 reward_index = 4; */
        if (message.rewardIndex !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.rewardIndex);
        /* optional uint32 mission_id = 12; */
        if (message.missionId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.missionId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeReunionMissionRewardReq
 */
export const TakeReunionMissionRewardReq = new TakeReunionMissionRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeReunionMissionRewardRsp$Type extends MessageType<TakeReunionMissionRewardRsp> {
    constructor() {
        super("com.midnights.game.TakeReunionMissionRewardRsp", [
            { no: 12, name: "reward_index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "mission_info", kind: "message", T: () => ReunionMissionInfo },
            { no: 3, name: "reward_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeReunionMissionRewardRsp>): TakeReunionMissionRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeReunionMissionRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeReunionMissionRewardRsp): TakeReunionMissionRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 reward_index */ 12:
                    message.rewardIndex = reader.uint32();
                    break;
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.ReunionMissionInfo mission_info */ 9:
                    message.missionInfo = ReunionMissionInfo.internalBinaryRead(reader, reader.uint32(), options, message.missionInfo);
                    break;
                case /* optional uint32 reward_id */ 3:
                    message.rewardId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeReunionMissionRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 reward_index = 12; */
        if (message.rewardIndex !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.rewardIndex);
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.ReunionMissionInfo mission_info = 9; */
        if (message.missionInfo)
            ReunionMissionInfo.internalBinaryWrite(message.missionInfo, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 reward_id = 3; */
        if (message.rewardId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.rewardId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeReunionMissionRewardRsp
 */
export const TakeReunionMissionRewardRsp = new TakeReunionMissionRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetReunionPrivilegeInfoReq$Type extends MessageType<GetReunionPrivilegeInfoReq> {
    constructor() {
        super("com.midnights.game.GetReunionPrivilegeInfoReq", [
            { no: 10, name: "privilege_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetReunionPrivilegeInfoReq>): GetReunionPrivilegeInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetReunionPrivilegeInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetReunionPrivilegeInfoReq): GetReunionPrivilegeInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 privilege_id */ 10:
                    message.privilegeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetReunionPrivilegeInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 privilege_id = 10; */
        if (message.privilegeId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.privilegeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetReunionPrivilegeInfoReq
 */
export const GetReunionPrivilegeInfoReq = new GetReunionPrivilegeInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetReunionPrivilegeInfoRsp$Type extends MessageType<GetReunionPrivilegeInfoRsp> {
    constructor() {
        super("com.midnights.game.GetReunionPrivilegeInfoRsp", [
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 1, name: "privilege_info", kind: "message", T: () => ReunionPrivilegeInfo }
        ]);
    }
    create(value?: PartialMessage<GetReunionPrivilegeInfoRsp>): GetReunionPrivilegeInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetReunionPrivilegeInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetReunionPrivilegeInfoRsp): GetReunionPrivilegeInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.ReunionPrivilegeInfo privilege_info */ 1:
                    message.privilegeInfo = ReunionPrivilegeInfo.internalBinaryRead(reader, reader.uint32(), options, message.privilegeInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetReunionPrivilegeInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.ReunionPrivilegeInfo privilege_info = 1; */
        if (message.privilegeInfo)
            ReunionPrivilegeInfo.internalBinaryWrite(message.privilegeInfo, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetReunionPrivilegeInfoRsp
 */
export const GetReunionPrivilegeInfoRsp = new GetReunionPrivilegeInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionSettleNotify$Type extends MessageType<ReunionSettleNotify> {
    constructor() {
        super("com.midnights.game.ReunionSettleNotify", []);
    }
    create(value?: PartialMessage<ReunionSettleNotify>): ReunionSettleNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionSettleNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionSettleNotify): ReunionSettleNotify {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ReunionSettleNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionSettleNotify
 */
export const ReunionSettleNotify = new ReunionSettleNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionActivateNotify$Type extends MessageType<ReunionActivateNotify> {
    constructor() {
        super("com.midnights.game.ReunionActivateNotify", [
            { no: 9, name: "is_activate", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "reunion_brief_info", kind: "message", T: () => ReunionBriefInfo }
        ]);
    }
    create(value?: PartialMessage<ReunionActivateNotify>): ReunionActivateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionActivateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionActivateNotify): ReunionActivateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_activate */ 9:
                    message.isActivate = reader.bool();
                    break;
                case /* optional com.midnights.game.ReunionBriefInfo reunion_brief_info */ 13:
                    message.reunionBriefInfo = ReunionBriefInfo.internalBinaryRead(reader, reader.uint32(), options, message.reunionBriefInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionActivateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_activate = 9; */
        if (message.isActivate !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isActivate);
        /* optional com.midnights.game.ReunionBriefInfo reunion_brief_info = 13; */
        if (message.reunionBriefInfo)
            ReunionBriefInfo.internalBinaryWrite(message.reunionBriefInfo, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionActivateNotify
 */
export const ReunionActivateNotify = new ReunionActivateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionPrivilegeChangeNotify$Type extends MessageType<ReunionPrivilegeChangeNotify> {
    constructor() {
        super("com.midnights.game.ReunionPrivilegeChangeNotify", [
            { no: 13, name: "privilege_info", kind: "message", T: () => ReunionPrivilegeInfo }
        ]);
    }
    create(value?: PartialMessage<ReunionPrivilegeChangeNotify>): ReunionPrivilegeChangeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionPrivilegeChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionPrivilegeChangeNotify): ReunionPrivilegeChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ReunionPrivilegeInfo privilege_info */ 13:
                    message.privilegeInfo = ReunionPrivilegeInfo.internalBinaryRead(reader, reader.uint32(), options, message.privilegeInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionPrivilegeChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ReunionPrivilegeInfo privilege_info = 13; */
        if (message.privilegeInfo)
            ReunionPrivilegeInfo.internalBinaryWrite(message.privilegeInfo, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionPrivilegeChangeNotify
 */
export const ReunionPrivilegeChangeNotify = new ReunionPrivilegeChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReunionDailyRefreshNotify$Type extends MessageType<ReunionDailyRefreshNotify> {
    constructor() {
        super("com.midnights.game.ReunionDailyRefreshNotify", [
            { no: 4, name: "reunion_brief_info", kind: "message", T: () => ReunionBriefInfo }
        ]);
    }
    create(value?: PartialMessage<ReunionDailyRefreshNotify>): ReunionDailyRefreshNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReunionDailyRefreshNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReunionDailyRefreshNotify): ReunionDailyRefreshNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.ReunionBriefInfo reunion_brief_info */ 4:
                    message.reunionBriefInfo = ReunionBriefInfo.internalBinaryRead(reader, reader.uint32(), options, message.reunionBriefInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReunionDailyRefreshNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.ReunionBriefInfo reunion_brief_info = 4; */
        if (message.reunionBriefInfo)
            ReunionBriefInfo.internalBinaryWrite(message.reunionBriefInfo, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReunionDailyRefreshNotify
 */
export const ReunionDailyRefreshNotify = new ReunionDailyRefreshNotify$Type();
