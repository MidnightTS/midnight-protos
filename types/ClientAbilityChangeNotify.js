"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ClientAbilityChangeNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ClientAbilityChangeNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ClientAbilityChangeNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./AbilityInvokeEntry");
const pb_1 = require("google-protobuf");
class ClientAbilityChangeNotify extends pb_1.Message {
    constructor(data) {
        super();
        _ClientAbilityChangeNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], __classPrivateFieldGet(this, _ClientAbilityChangeNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("Unk2200_FNAFDMAPLHP" in data && data.Unk2200_FNAFDMAPLHP != undefined) {
                this.Unk2200_FNAFDMAPLHP = data.Unk2200_FNAFDMAPLHP;
            }
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
            if ("invokes" in data && data.invokes != undefined) {
                this.invokes = data.invokes;
            }
        }
    }
    get Unk2200_FNAFDMAPLHP() {
        return pb_1.Message.getFieldWithDefault(this, 9, false);
    }
    set Unk2200_FNAFDMAPLHP(value) {
        pb_1.Message.setField(this, 9, value);
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set entity_id(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get invokes() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.AbilityInvokeEntry, 3);
    }
    set invokes(value) {
        pb_1.Message.setRepeatedWrapperField(this, 3, value);
    }
    static fromObject(data) {
        const message = new ClientAbilityChangeNotify({});
        if (data.Unk2200_FNAFDMAPLHP != null) {
            message.Unk2200_FNAFDMAPLHP = data.Unk2200_FNAFDMAPLHP;
        }
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        if (data.invokes != null) {
            message.invokes = data.invokes.map(item => dependency_1.AbilityInvokeEntry.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.Unk2200_FNAFDMAPLHP != null) {
            data.Unk2200_FNAFDMAPLHP = this.Unk2200_FNAFDMAPLHP;
        }
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        if (this.invokes != null) {
            data.invokes = this.invokes.map((item) => item.toObject());
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.Unk2200_FNAFDMAPLHP != false)
            writer.writeBool(9, this.Unk2200_FNAFDMAPLHP);
        if (this.entity_id != 0)
            writer.writeUint32(2, this.entity_id);
        if (this.invokes.length)
            writer.writeRepeatedMessage(3, this.invokes, (item) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ClientAbilityChangeNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 9:
                    message.Unk2200_FNAFDMAPLHP = reader.readBool();
                    break;
                case 2:
                    message.entity_id = reader.readUint32();
                    break;
                case 3:
                    reader.readMessage(message.invokes, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.AbilityInvokeEntry.deserialize(reader), dependency_1.AbilityInvokeEntry));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return ClientAbilityChangeNotify.deserialize(bytes);
    }
}
exports.ClientAbilityChangeNotify = ClientAbilityChangeNotify;
_ClientAbilityChangeNotify_one_of_decls = new WeakMap();
