"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FoundationInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.FoundationInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: FoundationInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./FoundationStatus");
const pb_1 = require("google-protobuf");
class FoundationInfo extends pb_1.Message {
    constructor(data) {
        super();
        _FoundationInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], __classPrivateFieldGet(this, _FoundationInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("status" in data && data.status != undefined) {
                this.status = data.status;
            }
            if ("uid_list" in data && data.uid_list != undefined) {
                this.uid_list = data.uid_list;
            }
            if ("current_building_id" in data && data.current_building_id != undefined) {
                this.current_building_id = data.current_building_id;
            }
            if ("begin_build_time_ms" in data && data.begin_build_time_ms != undefined) {
                this.begin_build_time_ms = data.begin_build_time_ms;
            }
        }
    }
    get status() {
        return pb_1.Message.getFieldWithDefault(this, 1, dependency_1.FoundationStatus.FOUNDATION_STATUS_NONE);
    }
    set status(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get uid_list() {
        return pb_1.Message.getFieldWithDefault(this, 2, []);
    }
    set uid_list(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get current_building_id() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set current_building_id(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get begin_build_time_ms() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set begin_build_time_ms(value) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data) {
        const message = new FoundationInfo({});
        if (data.status != null) {
            message.status = data.status;
        }
        if (data.uid_list != null) {
            message.uid_list = data.uid_list;
        }
        if (data.current_building_id != null) {
            message.current_building_id = data.current_building_id;
        }
        if (data.begin_build_time_ms != null) {
            message.begin_build_time_ms = data.begin_build_time_ms;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.status != null) {
            data.status = this.status;
        }
        if (this.uid_list != null) {
            data.uid_list = this.uid_list;
        }
        if (this.current_building_id != null) {
            data.current_building_id = this.current_building_id;
        }
        if (this.begin_build_time_ms != null) {
            data.begin_build_time_ms = this.begin_build_time_ms;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.status != dependency_1.FoundationStatus.FOUNDATION_STATUS_NONE)
            writer.writeEnum(1, this.status);
        if (this.uid_list.length)
            writer.writePackedUint32(2, this.uid_list);
        if (this.current_building_id != 0)
            writer.writeUint32(3, this.current_building_id);
        if (this.begin_build_time_ms != 0)
            writer.writeUint32(4, this.begin_build_time_ms);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FoundationInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.status = reader.readEnum();
                    break;
                case 2:
                    message.uid_list = reader.readPackedUint32();
                    break;
                case 3:
                    message.current_building_id = reader.readUint32();
                    break;
                case 4:
                    message.begin_build_time_ms = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return FoundationInfo.deserialize(bytes);
    }
}
exports.FoundationInfo = FoundationInfo;
_FoundationInfo_one_of_decls = new WeakMap();
