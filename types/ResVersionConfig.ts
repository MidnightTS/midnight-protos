/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ResVersionConfig.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class ResVersionConfig extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        version?: number;
        relogin?: boolean;
        md5?: string;
        release_total_size?: string;
        version_suffix?: string;
        branch?: string;
        next_script_version?: string;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("version" in data && data.version != undefined) {
                this.version = data.version;
            }
            if ("relogin" in data && data.relogin != undefined) {
                this.relogin = data.relogin;
            }
            if ("md5" in data && data.md5 != undefined) {
                this.md5 = data.md5;
            }
            if ("release_total_size" in data && data.release_total_size != undefined) {
                this.release_total_size = data.release_total_size;
            }
            if ("version_suffix" in data && data.version_suffix != undefined) {
                this.version_suffix = data.version_suffix;
            }
            if ("branch" in data && data.branch != undefined) {
                this.branch = data.branch;
            }
            if ("next_script_version" in data && data.next_script_version != undefined) {
                this.next_script_version = data.next_script_version;
            }
        }
    }
    get version() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set version(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get relogin() {
        return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
    }
    set relogin(value: boolean) {
        pb_1.Message.setField(this, 2, value);
    }
    get md5() {
        return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
    }
    set md5(value: string) {
        pb_1.Message.setField(this, 3, value);
    }
    get release_total_size() {
        return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
    }
    set release_total_size(value: string) {
        pb_1.Message.setField(this, 4, value);
    }
    get version_suffix() {
        return pb_1.Message.getFieldWithDefault(this, 5, "") as string;
    }
    set version_suffix(value: string) {
        pb_1.Message.setField(this, 5, value);
    }
    get branch() {
        return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
    }
    set branch(value: string) {
        pb_1.Message.setField(this, 6, value);
    }
    get next_script_version() {
        return pb_1.Message.getFieldWithDefault(this, 7, "") as string;
    }
    set next_script_version(value: string) {
        pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data: {
        version?: number;
        relogin?: boolean;
        md5?: string;
        release_total_size?: string;
        version_suffix?: string;
        branch?: string;
        next_script_version?: string;
    }): ResVersionConfig {
        const message = new ResVersionConfig({});
        if (data.version != null) {
            message.version = data.version;
        }
        if (data.relogin != null) {
            message.relogin = data.relogin;
        }
        if (data.md5 != null) {
            message.md5 = data.md5;
        }
        if (data.release_total_size != null) {
            message.release_total_size = data.release_total_size;
        }
        if (data.version_suffix != null) {
            message.version_suffix = data.version_suffix;
        }
        if (data.branch != null) {
            message.branch = data.branch;
        }
        if (data.next_script_version != null) {
            message.next_script_version = data.next_script_version;
        }
        return message;
    }
    toObject() {
        const data: {
            version?: number;
            relogin?: boolean;
            md5?: string;
            release_total_size?: string;
            version_suffix?: string;
            branch?: string;
            next_script_version?: string;
        } = {};
        if (this.version != null) {
            data.version = this.version;
        }
        if (this.relogin != null) {
            data.relogin = this.relogin;
        }
        if (this.md5 != null) {
            data.md5 = this.md5;
        }
        if (this.release_total_size != null) {
            data.release_total_size = this.release_total_size;
        }
        if (this.version_suffix != null) {
            data.version_suffix = this.version_suffix;
        }
        if (this.branch != null) {
            data.branch = this.branch;
        }
        if (this.next_script_version != null) {
            data.next_script_version = this.next_script_version;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.version != 0)
            writer.writeUint32(1, this.version);
        if (this.relogin != false)
            writer.writeBool(2, this.relogin);
        if (this.md5.length)
            writer.writeString(3, this.md5);
        if (this.release_total_size.length)
            writer.writeString(4, this.release_total_size);
        if (this.version_suffix.length)
            writer.writeString(5, this.version_suffix);
        if (this.branch.length)
            writer.writeString(6, this.branch);
        if (this.next_script_version.length)
            writer.writeString(7, this.next_script_version);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ResVersionConfig {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ResVersionConfig();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.version = reader.readUint32();
                    break;
                case 2:
                    message.relogin = reader.readBool();
                    break;
                case 3:
                    message.md5 = reader.readString();
                    break;
                case 4:
                    message.release_total_size = reader.readString();
                    break;
                case 5:
                    message.version_suffix = reader.readString();
                    break;
                case 6:
                    message.branch = reader.readString();
                    break;
                case 7:
                    message.next_script_version = reader.readString();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ResVersionConfig {
        return ResVersionConfig.deserialize(bytes);
    }
}
