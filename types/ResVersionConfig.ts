// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "ResVersionConfig.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
//
// MidnightTS - But it's coming down, no sound, it's all around.
// Copyright (C) 2022 - MidnightTS Team.
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message com.midnights.game.ResVersionConfig
 */
export interface ResVersionConfig {
    /**
     * @generated from protobuf field: optional uint32 version = 1;
     */
    version?: number;
    /**
     * @generated from protobuf field: optional bool relogin = 2;
     */
    relogin?: boolean;
    /**
     * @generated from protobuf field: optional string md5 = 3;
     */
    md5?: string;
    /**
     * @generated from protobuf field: optional string release_total_size = 4;
     */
    releaseTotalSize?: string;
    /**
     * @generated from protobuf field: optional string version_suffix = 5;
     */
    versionSuffix?: string;
    /**
     * @generated from protobuf field: optional string branch = 6;
     */
    branch?: string;
    /**
     * @generated from protobuf field: optional string next_script_version = 7;
     */
    nextScriptVersion?: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class ResVersionConfig$Type extends MessageType<ResVersionConfig> {
    constructor() {
        super("com.midnights.game.ResVersionConfig", [
            { no: 1, name: "version", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "relogin", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "md5", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "release_total_size", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "version_suffix", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "branch", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "next_script_version", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ResVersionConfig>): ResVersionConfig {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ResVersionConfig>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ResVersionConfig): ResVersionConfig {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 version */ 1:
                    message.version = reader.uint32();
                    break;
                case /* optional bool relogin */ 2:
                    message.relogin = reader.bool();
                    break;
                case /* optional string md5 */ 3:
                    message.md5 = reader.string();
                    break;
                case /* optional string release_total_size */ 4:
                    message.releaseTotalSize = reader.string();
                    break;
                case /* optional string version_suffix */ 5:
                    message.versionSuffix = reader.string();
                    break;
                case /* optional string branch */ 6:
                    message.branch = reader.string();
                    break;
                case /* optional string next_script_version */ 7:
                    message.nextScriptVersion = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ResVersionConfig, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 version = 1; */
        if (message.version !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.version);
        /* optional bool relogin = 2; */
        if (message.relogin !== undefined)
            writer.tag(2, WireType.Varint).bool(message.relogin);
        /* optional string md5 = 3; */
        if (message.md5 !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.md5);
        /* optional string release_total_size = 4; */
        if (message.releaseTotalSize !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.releaseTotalSize);
        /* optional string version_suffix = 5; */
        if (message.versionSuffix !== undefined)
            writer.tag(5, WireType.LengthDelimited).string(message.versionSuffix);
        /* optional string branch = 6; */
        if (message.branch !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.branch);
        /* optional string next_script_version = 7; */
        if (message.nextScriptVersion !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.nextScriptVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ResVersionConfig
 */
export const ResVersionConfig = new ResVersionConfig$Type();
