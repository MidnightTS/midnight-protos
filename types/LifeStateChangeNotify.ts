// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "LifeStateChangeNotify.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { PlayerDieType } from "./PlayerDieType";
import { ServerBuff } from "./ServerBuff";
/**
 * enum CmdId {
 *   option allow_alias = true;
 *   NONE = 0;
 *   CMD_ID = 1230;
 *   ENET_CHANNEL_ID = 0;
 *   ENET_IS_RELIABLE = 1;
 * }
 *
 * @generated from protobuf message LifeStateChangeNotify
 */
export interface LifeStateChangeNotify {
    /**
     * @generated from protobuf field: uint32 move_reliable_seq = 7;
     */
    moveReliableSeq: number;
    /**
     * @generated from protobuf field: uint32 entity_id = 8;
     */
    entityId: number;
    /**
     * @generated from protobuf field: uint32 life_state = 10;
     */
    lifeState: number;
    /**
     * @generated from protobuf field: repeated ServerBuff server_buff_list = 15;
     */
    serverBuffList: ServerBuff[];
    /**
     * @generated from protobuf field: uint32 source_entity_id = 11;
     */
    sourceEntityId: number;
    /**
     * @generated from protobuf field: PlayerDieType die_type = 4;
     */
    dieType: PlayerDieType;
    /**
     * @generated from protobuf field: string attack_tag = 13;
     */
    attackTag: string;
}
// @generated message type with reflection information, may provide speed optimized methods
class LifeStateChangeNotify$Type extends MessageType<LifeStateChangeNotify> {
    constructor() {
        super("LifeStateChangeNotify", [
            { no: 7, name: "move_reliable_seq", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "entity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "life_state", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "server_buff_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ServerBuff },
            { no: 11, name: "source_entity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "die_type", kind: "enum", T: () => ["PlayerDieType", PlayerDieType, "PLAYER_DIE_TYPE_"] },
            { no: 13, name: "attack_tag", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<LifeStateChangeNotify>): LifeStateChangeNotify {
        const message = { moveReliableSeq: 0, entityId: 0, lifeState: 0, serverBuffList: [], sourceEntityId: 0, dieType: 0, attackTag: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LifeStateChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LifeStateChangeNotify): LifeStateChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint32 move_reliable_seq */ 7:
                    message.moveReliableSeq = reader.uint32();
                    break;
                case /* uint32 entity_id */ 8:
                    message.entityId = reader.uint32();
                    break;
                case /* uint32 life_state */ 10:
                    message.lifeState = reader.uint32();
                    break;
                case /* repeated ServerBuff server_buff_list */ 15:
                    message.serverBuffList.push(ServerBuff.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* uint32 source_entity_id */ 11:
                    message.sourceEntityId = reader.uint32();
                    break;
                case /* PlayerDieType die_type */ 4:
                    message.dieType = reader.int32();
                    break;
                case /* string attack_tag */ 13:
                    message.attackTag = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LifeStateChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint32 move_reliable_seq = 7; */
        if (message.moveReliableSeq !== 0)
            writer.tag(7, WireType.Varint).uint32(message.moveReliableSeq);
        /* uint32 entity_id = 8; */
        if (message.entityId !== 0)
            writer.tag(8, WireType.Varint).uint32(message.entityId);
        /* uint32 life_state = 10; */
        if (message.lifeState !== 0)
            writer.tag(10, WireType.Varint).uint32(message.lifeState);
        /* repeated ServerBuff server_buff_list = 15; */
        for (let i = 0; i < message.serverBuffList.length; i++)
            ServerBuff.internalBinaryWrite(message.serverBuffList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* uint32 source_entity_id = 11; */
        if (message.sourceEntityId !== 0)
            writer.tag(11, WireType.Varint).uint32(message.sourceEntityId);
        /* PlayerDieType die_type = 4; */
        if (message.dieType !== 0)
            writer.tag(4, WireType.Varint).int32(message.dieType);
        /* string attack_tag = 13; */
        if (message.attackTag !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.attackTag);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message LifeStateChangeNotify
 */
export const LifeStateChangeNotify = new LifeStateChangeNotify$Type();
