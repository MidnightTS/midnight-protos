// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_home.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { GalleryStopReason } from "./cmd_gallery";
import { BalloonGallerySettleInfo } from "./cmd_gallery";
import { RacingGallerySettleInfo } from "./cmd_gallery";
import { CustomCommonNodeInfo } from "./define";
import { ItemParam } from "./define";
import { ProfilePicture } from "./define";
import { HomeMarkPointFurnitureData } from "./define";
import { Uint32Pair } from "./define";
import { OnlinePlayerInfo } from "./define";
import { FriendEnterHomeOption } from "./define";
import { Vector } from "./define";
import { LanguageType } from "./define";
import { HomeSceneArrangementMuipData } from "./define";
/**
 * @generated from protobuf message com.midnights.game.HomeVerifyFurnitureData
 */
export interface HomeVerifyFurnitureData {
    /**
     * @generated from protobuf field: repeated uint32 type = 7;
     */
    type: number[];
    /**
     * @generated from protobuf field: optional uint32 id = 5;
     */
    id?: number;
    /**
     * @generated from protobuf field: optional uint32 num = 9;
     */
    num?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeVerifyBlockData
 */
export interface HomeVerifyBlockData {
    /**
     * @generated from protobuf field: optional uint32 block_id = 10;
     */
    blockId?: number;
    /**
     * @generated from protobuf field: optional uint32 furniture_count = 9;
     */
    furnitureCount?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeVerifySceneData
 */
export interface HomeVerifySceneData {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeVerifyBlockData blocks = 6;
     */
    blocks: HomeVerifyBlockData[];
    /**
     * @generated from protobuf field: optional uint32 module_id = 11;
     */
    moduleId?: number;
    /**
     * @generated from protobuf field: optional uint32 scene_id = 4;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 version = 14;
     */
    version?: number;
    /**
     * @generated from protobuf field: optional uint32 is_room = 2;
     */
    isRoom?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeVerifyData
 */
export interface HomeVerifyData {
    /**
     * @generated from protobuf field: optional string aid = 7;
     */
    aid?: string;
    /**
     * @generated from protobuf field: optional fixed32 timestamp = 15;
     */
    timestamp?: number;
    /**
     * @generated from protobuf field: optional uint32 uid = 5;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeSceneArrangementMuipData arrangement_data = 9;
     */
    arrangementData?: HomeSceneArrangementMuipData;
    /**
     * @generated from protobuf field: optional string region = 3;
     */
    region?: string;
    /**
     * @generated from protobuf field: optional string token = 1;
     */
    token?: string;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeVerifySceneData home_info = 6;
     */
    homeInfo?: HomeVerifySceneData;
    /**
     * @generated from protobuf field: optional com.midnights.game.LanguageType lang = 8;
     */
    lang?: LanguageType;
}
/**
 * @generated from protobuf message com.midnights.game.TryEnterHomeReq
 */
export interface TryEnterHomeReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 3;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional bool is_transfer_to_safe_point = 10;
     */
    isTransferToSafePoint?: boolean;
    /**
     * @generated from protobuf field: optional uint32 target_point = 9;
     */
    targetPoint?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TryEnterHomeReq.CmdId
 */
export enum TryEnterHomeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4482;
     */
    CMD_ID = 4482,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TryEnterHomeRsp
 */
export interface TryEnterHomeRsp {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 15;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 param_list = 10;
     */
    paramList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.TryEnterHomeRsp.CmdId
 */
export enum TryEnterHomeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4653;
     */
    CMD_ID = 4653,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.JoinHomeWorldFailNotify
 */
export interface JoinHomeWorldFailNotify {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 6;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.JoinHomeWorldFailNotify.CmdId
 */
export enum JoinHomeWorldFailNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4530;
     */
    CMD_ID = 4530,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeBlockNotify
 */
export interface HomeBlockNotify {
    /**
     * @generated from protobuf field: optional uint32 end_time = 3;
     */
    endTime?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeBlockNotify.CmdId
 */
export enum HomeBlockNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4543;
     */
    CMD_ID = 4543,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeBasicInfo
 */
export interface HomeBasicInfo {
    /**
     * @generated from protobuf field: optional uint32 level = 10;
     */
    level?: number;
    /**
     * @generated from protobuf field: optional uint32 cur_room_scene_id = 13;
     */
    curRoomSceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 cur_module_id = 9;
     */
    curModuleId?: number;
    /**
     * @generated from protobuf field: optional bool is_in_edit_mode = 5;
     */
    isInEditMode?: boolean;
    /**
     * @generated from protobuf field: optional uint32 home_owner_uid = 3;
     */
    homeOwnerUid?: number;
    /**
     * @generated from protobuf field: optional uint64 exp = 14;
     */
    exp?: bigint;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeLimitedShopInfo limited_shop_info = 15;
     */
    limitedShopInfo?: HomeLimitedShopInfo;
    /**
     * @generated from protobuf field: optional string owner_nick_name = 4;
     */
    ownerNickName?: string;
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetBasicInfoReq
 */
export interface HomeGetBasicInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetBasicInfoReq.CmdId
 */
export enum HomeGetBasicInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4655;
     */
    CMD_ID = 4655,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeBasicInfoNotify
 */
export interface HomeBasicInfoNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeBasicInfo basic_info = 15;
     */
    basicInfo?: HomeBasicInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeBasicInfoNotify.CmdId
 */
export enum HomeBasicInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4885;
     */
    CMD_ID = 4885,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChangeEditModeReq
 */
export interface HomeChangeEditModeReq {
    /**
     * @generated from protobuf field: optional bool is_enter_edit_mode = 12;
     */
    isEnterEditMode?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChangeEditModeReq.CmdId
 */
export enum HomeChangeEditModeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4564;
     */
    CMD_ID = 4564,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChangeEditModeRsp
 */
export interface HomeChangeEditModeRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional bool is_enter_edit_mode = 5;
     */
    isEnterEditMode?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChangeEditModeRsp.CmdId
 */
export enum HomeChangeEditModeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4559;
     */
    CMD_ID = 4559,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChangeModuleReq
 */
export interface HomeChangeModuleReq {
    /**
     * @generated from protobuf field: optional uint32 target_module_id = 5;
     */
    targetModuleId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChangeModuleReq.CmdId
 */
export enum HomeChangeModuleReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4809;
     */
    CMD_ID = 4809,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChangeModuleRsp
 */
export interface HomeChangeModuleRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 target_module_id = 2;
     */
    targetModuleId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChangeModuleRsp.CmdId
 */
export enum HomeChangeModuleRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4596;
     */
    CMD_ID = 4596,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeFurnitureData
 */
export interface HomeFurnitureData {
    /**
     * @generated from protobuf field: optional uint32 version = 6;
     */
    version?: number;
    /**
     * @generated from protobuf field: optional int32 parent_furniture_index = 3;
     */
    parentFurnitureIndex?: number;
    /**
     * @generated from protobuf field: optional uint32 furniture_id = 4;
     */
    furnitureId?: number;
    /**
     * @generated from protobuf field: optional uint32 guid = 9;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_rot = 10;
     */
    spawnRot?: Vector;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_pos = 8;
     */
    spawnPos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.HomeFurnitureSuiteData
 */
export interface HomeFurnitureSuiteData {
    /**
     * @generated from protobuf field: optional bool is_allow_summon = 10;
     */
    isAllowSummon?: boolean;
    /**
     * @generated from protobuf field: optional uint32 suite_id = 6;
     */
    suiteId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_pos = 8;
     */
    spawnPos?: Vector;
    /**
     * @generated from protobuf field: optional uint32 guid = 13;
     */
    guid?: number;
    /**
     * @generated from protobuf field: repeated int32 included_furniture_index_list = 1;
     */
    includedFurnitureIndexList: number[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeNpcData
 */
export interface HomeNpcData {
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 14;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_pos = 15;
     */
    spawnPos?: Vector;
    /**
     * @generated from protobuf field: optional uint32 costume_id = 3;
     */
    costumeId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_rot = 13;
     */
    spawnRot?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.HomeAnimalData
 */
export interface HomeAnimalData {
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_rot = 10;
     */
    spawnRot?: Vector;
    /**
     * @generated from protobuf field: optional uint32 furniture_id = 5;
     */
    furnitureId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_pos = 6;
     */
    spawnPos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.WeekendDjinnInfo
 */
export interface WeekendDjinnInfo {
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector rot = 14;
     */
    rot?: Vector;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 10;
     */
    pos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.HomeBlockDotPattern
 */
export interface HomeBlockDotPattern {
    /**
     * @generated from protobuf field: optional uint32 width = 8;
     */
    width?: number;
    /**
     * @generated from protobuf field: optional uint32 height = 11;
     */
    height?: number;
    /**
     * @generated from protobuf field: optional bytes data = 9;
     */
    data?: Uint8Array;
}
/**
 * @generated from protobuf message com.midnights.game.HomeBlockSubFieldData
 */
export interface HomeBlockSubFieldData {
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector rot = 3;
     */
    rot?: Vector;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 1;
     */
    pos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.HomeBlockFieldData
 */
export interface HomeBlockFieldData {
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector rot = 15;
     */
    rot?: Vector;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 4;
     */
    pos?: Vector;
    /**
     * @generated from protobuf field: optional uint32 guid = 9;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional uint32 furniture_id = 1;
     */
    furnitureId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeBlockSubFieldData sub_field_list = 7;
     */
    subFieldList: HomeBlockSubFieldData[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeTransferData
 */
export interface HomeTransferData {
    /**
     * @generated from protobuf field: optional uint32 guid = 15;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_pos = 7;
     */
    spawnPos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.HomeFurnitureGroupData
 */
export interface HomeFurnitureGroupData {
    /**
     * @generated from protobuf field: optional uint32 group_furniture_index = 8;
     */
    groupFurnitureIndex?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFurnitureData virtual_furniure_list = 3;
     */
    virtualFurniureList: HomeFurnitureData[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeFurnitureCustomSuiteData
 */
export interface HomeFurnitureCustomSuiteData {
    /**
     * @generated from protobuf field: optional uint32 guid = 11;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_pos = 14;
     */
    spawnPos?: Vector;
    /**
     * @generated from protobuf field: repeated int32 included_furniture_index_list = 12;
     */
    includedFurnitureIndexList: number[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeBlockArrangementInfo
 */
export interface HomeBlockArrangementInfo {
    /**
     * @generated from protobuf field: optional bool is_unlocked = 1;
     */
    isUnlocked?: boolean;
    /**
     * @generated from protobuf field: optional uint32 comfort_value = 2;
     */
    comfortValue?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeAnimalData deploy_animal_list = 4;
     */
    deployAnimalList: HomeAnimalData[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFurnitureGroupData furniture_group_list = 5;
     */
    furnitureGroupList: HomeFurnitureGroupData[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.WeekendDjinnInfo weekend_djinn_info_list = 13;
     */
    weekendDjinnInfoList: WeekendDjinnInfo[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFurnitureSuiteData furniture_suite_list = 15;
     */
    furnitureSuiteList: HomeFurnitureSuiteData[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeBlockFieldData field_list = 3;
     */
    fieldList: HomeBlockFieldData[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeNpcData deploy_npc_list = 11;
     */
    deployNpcList: HomeNpcData[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeBlockDotPattern dot_pattern_list = 7;
     */
    dotPatternList: HomeBlockDotPattern[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFurnitureData persistent_furniture_list = 9;
     */
    persistentFurnitureList: HomeFurnitureData[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFurnitureData deploy_furniure_list = 12;
     */
    deployFurniureList: HomeFurnitureData[];
    /**
     * @generated from protobuf field: optional uint32 block_id = 6;
     */
    blockId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFurnitureCustomSuiteData furniture_custom_suite_list = 14;
     */
    furnitureCustomSuiteList: HomeFurnitureCustomSuiteData[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeSceneArrangementInfo
 */
export interface HomeSceneArrangementInfo {
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector born_rot = 4;
     */
    bornRot?: Vector;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector born_pos = 1;
     */
    bornPos?: Vector;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFurnitureData stair_list = 11;
     */
    stairList: HomeFurnitureData[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFurnitureData door_list = 13;
     */
    doorList: HomeFurnitureData[];
    /**
     * @generated from protobuf field: optional bool is_set_born_pos = 10;
     */
    isSetBornPos?: boolean;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeBlockArrangementInfo block_arrangement_info_list = 8;
     */
    blockArrangementInfoList: HomeBlockArrangementInfo[];
    /**
     * @generated from protobuf field: optional uint32 scene_id = 2;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 bgm_id = 12;
     */
    bgmId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector djinn_pos = 9;
     */
    djinnPos?: Vector;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeFurnitureData main_house = 14;
     */
    mainHouse?: HomeFurnitureData;
    /**
     * @generated from protobuf field: optional uint32 comfort_value = 7;
     */
    comfortValue?: number;
    /**
     * @generated from protobuf field: optional uint32 tmp_version = 5;
     */
    tmpVersion?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetArrangementInfoReq
 */
export interface HomeGetArrangementInfoReq {
    /**
     * @generated from protobuf field: repeated uint32 scene_id_list = 13;
     */
    sceneIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetArrangementInfoReq.CmdId
 */
export enum HomeGetArrangementInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4848;
     */
    CMD_ID = 4848,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetArrangementInfoRsp
 */
export interface HomeGetArrangementInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 6;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info_list = 14;
     */
    sceneArrangementInfoList: HomeSceneArrangementInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetArrangementInfoRsp.CmdId
 */
export enum HomeGetArrangementInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4844;
     */
    CMD_ID = 4844,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeUpdateArrangementInfoReq
 */
export interface HomeUpdateArrangementInfoReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info = 6;
     */
    sceneArrangementInfo?: HomeSceneArrangementInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeUpdateArrangementInfoReq.CmdId
 */
export enum HomeUpdateArrangementInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4510;
     */
    CMD_ID = 4510,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeUpdateArrangementInfoRsp
 */
export interface HomeUpdateArrangementInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeUpdateArrangementInfoRsp.CmdId
 */
export enum HomeUpdateArrangementInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4757;
     */
    CMD_ID = 4757,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerHomeCompInfo
 */
export interface PlayerHomeCompInfo {
    /**
     * @generated from protobuf field: repeated uint32 unlocked_module_id_list = 4;
     */
    unlockedModuleIdList: number[];
    /**
     * @generated from protobuf field: repeated uint32 seen_module_id_list = 2;
     */
    seenModuleIdList: number[];
    /**
     * @generated from protobuf field: repeated uint32 levelup_reward_got_level_list = 7;
     */
    levelupRewardGotLevelList: number[];
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option = 8;
     */
    friendEnterHomeOption?: FriendEnterHomeOption;
}
/**
 * @generated from protobuf message com.midnights.game.GetPlayerHomeCompInfoReq
 */
export interface GetPlayerHomeCompInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetPlayerHomeCompInfoReq.CmdId
 */
export enum GetPlayerHomeCompInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4597;
     */
    CMD_ID = 4597,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerHomeCompInfoNotify
 */
export interface PlayerHomeCompInfoNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.PlayerHomeCompInfo comp_info = 4;
     */
    compInfo?: PlayerHomeCompInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerHomeCompInfoNotify.CmdId
 */
export enum PlayerHomeCompInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4880;
     */
    CMD_ID = 4880,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetFriendEnterHomeOptionReq
 */
export interface SetFriendEnterHomeOptionReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.FriendEnterHomeOption option = 7;
     */
    option?: FriendEnterHomeOption;
}
/**
 * @generated from protobuf enum com.midnights.game.SetFriendEnterHomeOptionReq.CmdId
 */
export enum SetFriendEnterHomeOptionReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4494;
     */
    CMD_ID = 4494,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetFriendEnterHomeOptionRsp
 */
export interface SetFriendEnterHomeOptionRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SetFriendEnterHomeOptionRsp.CmdId
 */
export enum SetFriendEnterHomeOptionRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4743;
     */
    CMD_ID = 4743,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerApplyEnterHomeNotify
 */
export interface PlayerApplyEnterHomeNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.OnlinePlayerInfo src_player_info = 9;
     */
    srcPlayerInfo?: OnlinePlayerInfo;
    /**
     * @generated from protobuf field: optional uint32 src_app_id = 10;
     */
    srcAppId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerApplyEnterHomeNotify.CmdId
 */
export enum PlayerApplyEnterHomeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4533;
     */
    CMD_ID = 4533,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerApplyEnterHomeResultReq
 */
export interface PlayerApplyEnterHomeResultReq {
    /**
     * @generated from protobuf field: optional uint32 apply_uid = 14;
     */
    applyUid?: number;
    /**
     * @generated from protobuf field: optional bool is_agreed = 10;
     */
    isAgreed?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerApplyEnterHomeResultReq.CmdId
 */
export enum PlayerApplyEnterHomeResultReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4693;
     */
    CMD_ID = 4693,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerApplyEnterHomeResultRsp
 */
export interface PlayerApplyEnterHomeResultRsp {
    /**
     * @generated from protobuf field: optional bool is_agreed = 2;
     */
    isAgreed?: boolean;
    /**
     * @generated from protobuf field: optional uint32 apply_uid = 11;
     */
    applyUid?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 param = 10;
     */
    param?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerApplyEnterHomeResultRsp.CmdId
 */
export enum PlayerApplyEnterHomeResultRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4706;
     */
    CMD_ID = 4706,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerApplyEnterHomeResultNotify
 */
export interface PlayerApplyEnterHomeResultNotify {
    /**
     * @generated from protobuf field: optional string target_nickname = 7;
     */
    targetNickname?: string;
    /**
     * @generated from protobuf field: optional com.midnights.game.PlayerApplyEnterHomeResultNotify.Reason reason = 5;
     */
    reason?: PlayerApplyEnterHomeResultNotify_Reason;
    /**
     * @generated from protobuf field: optional uint32 target_uid = 12;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional bool is_agreed = 9;
     */
    isAgreed?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerApplyEnterHomeResultNotify.Reason
 */
export enum PlayerApplyEnterHomeResultNotify_Reason {
    /**
     * @generated from protobuf enum value: PLAYER_JUDGE = 0;
     */
    PLAYER_JUDGE = 0,
    /**
     * @generated from protobuf enum value: PLAYER_ENTER_OPTION_REFUSE = 1;
     */
    PLAYER_ENTER_OPTION_REFUSE = 1,
    /**
     * @generated from protobuf enum value: PLAYER_ENTER_OPTION_DIRECT = 2;
     */
    PLAYER_ENTER_OPTION_DIRECT = 2,
    /**
     * @generated from protobuf enum value: SYSTEM_JUDGE = 3;
     */
    SYSTEM_JUDGE = 3,
    /**
     * @generated from protobuf enum value: HOST_IN_MATCH = 4;
     */
    HOST_IN_MATCH = 4,
    /**
     * @generated from protobuf enum value: PS_PLAYER_NOT_ACCEPT_OTHERS = 5;
     */
    PS_PLAYER_NOT_ACCEPT_OTHERS = 5,
    /**
     * @generated from protobuf enum value: OPEN_STATE_NOT_OPEN = 6;
     */
    OPEN_STATE_NOT_OPEN = 6,
    /**
     * @generated from protobuf enum value: HOST_IN_EDIT_MODE = 7;
     */
    HOST_IN_EDIT_MODE = 7,
    /**
     * @generated from protobuf enum value: PRIOR_CHECK = 8;
     */
    PRIOR_CHECK = 8
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerApplyEnterHomeResultNotify.CmdId
 */
export enum PlayerApplyEnterHomeResultNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4468;
     */
    CMD_ID = 4468,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSceneJumpReq
 */
export interface HomeSceneJumpReq {
    /**
     * @generated from protobuf field: optional bool is_enter_room_scene = 9;
     */
    isEnterRoomScene?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSceneJumpReq.CmdId
 */
export enum HomeSceneJumpReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4528;
     */
    CMD_ID = 4528,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSceneJumpRsp
 */
export interface HomeSceneJumpRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional bool is_enter_room_scene = 8;
     */
    isEnterRoomScene?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSceneJumpRsp.CmdId
 */
export enum HomeSceneJumpRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4698;
     */
    CMD_ID = 4698,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChooseModuleReq
 */
export interface HomeChooseModuleReq {
    /**
     * @generated from protobuf field: optional uint32 module_id = 9;
     */
    moduleId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChooseModuleReq.CmdId
 */
export enum HomeChooseModuleReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4524;
     */
    CMD_ID = 4524,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChooseModuleRsp
 */
export interface HomeChooseModuleRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 module_id = 8;
     */
    moduleId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChooseModuleRsp.CmdId
 */
export enum HomeChooseModuleRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4648;
     */
    CMD_ID = 4648,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeModuleUnlockNotify
 */
export interface HomeModuleUnlockNotify {
    /**
     * @generated from protobuf field: optional uint32 module_id = 8;
     */
    moduleId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeModuleUnlockNotify.CmdId
 */
export enum HomeModuleUnlockNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4560;
     */
    CMD_ID = 4560,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetOnlineStatusReq
 */
export interface HomeGetOnlineStatusReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetOnlineStatusReq.CmdId
 */
export enum HomeGetOnlineStatusReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4820;
     */
    CMD_ID = 4820,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetOnlineStatusRsp
 */
export interface HomeGetOnlineStatusRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.OnlinePlayerInfo player_info_list = 13;
     */
    playerInfoList: OnlinePlayerInfo[];
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetOnlineStatusRsp.CmdId
 */
export enum HomeGetOnlineStatusRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4705;
     */
    CMD_ID = 4705,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeKickPlayerReq
 */
export interface HomeKickPlayerReq {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 12;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional bool is_kick_all = 13;
     */
    isKickAll?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeKickPlayerReq.CmdId
 */
export enum HomeKickPlayerReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4870;
     */
    CMD_ID = 4870,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeKickPlayerRsp
 */
export interface HomeKickPlayerRsp {
    /**
     * @generated from protobuf field: optional uint32 target_uid = 4;
     */
    targetUid?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional bool is_kick_all = 10;
     */
    isKickAll?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeKickPlayerRsp.CmdId
 */
export enum HomeKickPlayerRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4691;
     */
    CMD_ID = 4691,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeModuleSeenReq
 */
export interface HomeModuleSeenReq {
    /**
     * @generated from protobuf field: repeated uint32 seen_module_id_list = 5;
     */
    seenModuleIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeModuleSeenReq.CmdId
 */
export enum HomeModuleSeenReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4499;
     */
    CMD_ID = 4499,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeModuleSeenRsp
 */
export interface HomeModuleSeenRsp {
    /**
     * @generated from protobuf field: repeated uint32 seen_module_id_list = 13;
     */
    seenModuleIdList: number[];
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeModuleSeenRsp.CmdId
 */
export enum HomeModuleSeenRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4821;
     */
    CMD_ID = 4821,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UnlockedFurnitureFormulaDataNotify
 */
export interface UnlockedFurnitureFormulaDataNotify {
    /**
     * @generated from protobuf field: repeated uint32 furniture_id_list = 15;
     */
    furnitureIdList: number[];
    /**
     * @generated from protobuf field: optional bool is_all = 11;
     */
    isAll?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockedFurnitureFormulaDataNotify.CmdId
 */
export enum UnlockedFurnitureFormulaDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4846;
     */
    CMD_ID = 4846,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.UnlockedFurnitureSuiteDataNotify
 */
export interface UnlockedFurnitureSuiteDataNotify {
    /**
     * @generated from protobuf field: optional bool is_all = 10;
     */
    isAll?: boolean;
    /**
     * @generated from protobuf field: repeated uint32 furniture_suite_id_list = 5;
     */
    furnitureSuiteIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.UnlockedFurnitureSuiteDataNotify.CmdId
 */
export enum UnlockedFurnitureSuiteDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4454;
     */
    CMD_ID = 4454,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetHomeLevelUpRewardReq
 */
export interface GetHomeLevelUpRewardReq {
    /**
     * @generated from protobuf field: optional uint32 level = 15;
     */
    level?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetHomeLevelUpRewardReq.CmdId
 */
export enum GetHomeLevelUpRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4557;
     */
    CMD_ID = 4557,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetHomeLevelUpRewardRsp
 */
export interface GetHomeLevelUpRewardRsp {
    /**
     * @generated from protobuf field: optional uint32 level = 1;
     */
    level?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 6;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetHomeLevelUpRewardRsp.CmdId
 */
export enum GetHomeLevelUpRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4603;
     */
    CMD_ID = 4603,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetFurnitureCurModuleArrangeCountReq
 */
export interface GetFurnitureCurModuleArrangeCountReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetFurnitureCurModuleArrangeCountReq.CmdId
 */
export enum GetFurnitureCurModuleArrangeCountReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4711;
     */
    CMD_ID = 4711,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureCurModuleArrangeCountNotify
 */
export interface FurnitureCurModuleArrangeCountNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.Uint32Pair furniture_arrange_count_list = 13;
     */
    furnitureArrangeCountList: Uint32Pair[];
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureCurModuleArrangeCountNotify.CmdId
 */
export enum FurnitureCurModuleArrangeCountNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4498;
     */
    CMD_ID = 4498,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeModuleComfortInfo
 */
export interface HomeModuleComfortInfo {
    /**
     * @generated from protobuf field: optional uint32 module_id = 13;
     */
    moduleId?: number;
    /**
     * @generated from protobuf field: optional uint32 room_scene_comfort_value = 9;
     */
    roomSceneComfortValue?: number;
    /**
     * @generated from protobuf field: repeated uint32 world_scene_block_comfort_value_list = 3;
     */
    worldSceneBlockComfortValueList: number[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeComfortInfoNotify
 */
export interface HomeComfortInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeModuleComfortInfo module_info_list = 6;
     */
    moduleInfoList: HomeModuleComfortInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeComfortInfoNotify.CmdId
 */
export enum HomeComfortInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4699;
     */
    CMD_ID = 4699,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerQuitFromHomeNotify
 */
export interface PlayerQuitFromHomeNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.PlayerQuitFromHomeNotify.QuitReason reason = 6;
     */
    reason?: PlayerQuitFromHomeNotify_QuitReason;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerQuitFromHomeNotify.QuitReason
 */
export enum PlayerQuitFromHomeNotify_QuitReason {
    /**
     * @generated from protobuf enum value: INVALID = 0;
     */
    INVALID = 0,
    /**
     * @generated from protobuf enum value: KICK_BY_HOST = 1;
     */
    KICK_BY_HOST = 1,
    /**
     * @generated from protobuf enum value: BACK_TO_MY_WORLD = 2;
     */
    BACK_TO_MY_WORLD = 2,
    /**
     * @generated from protobuf enum value: HOME_BLOCKED = 3;
     */
    HOME_BLOCKED = 3,
    /**
     * @generated from protobuf enum value: HOME_IN_EDIT_MODE = 4;
     */
    HOME_IN_EDIT_MODE = 4,
    /**
     * @generated from protobuf enum value: BY_MUIP = 5;
     */
    BY_MUIP = 5,
    /**
     * @generated from protobuf enum value: CUR_MODULE_CLOSED = 6;
     */
    CUR_MODULE_CLOSED = 6
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerQuitFromHomeNotify.CmdId
 */
export enum PlayerQuitFromHomeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4656;
     */
    CMD_ID = 4656,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.OtherPlayerEnterHomeNotify
 */
export interface OtherPlayerEnterHomeNotify {
    /**
     * @generated from protobuf field: optional string nickname = 7;
     */
    nickname?: string;
    /**
     * @generated from protobuf field: optional com.midnights.game.OtherPlayerEnterHomeNotify.Reason reason = 3;
     */
    reason?: OtherPlayerEnterHomeNotify_Reason;
}
/**
 * @generated from protobuf enum com.midnights.game.OtherPlayerEnterHomeNotify.Reason
 */
export enum OtherPlayerEnterHomeNotify_Reason {
    /**
     * @generated from protobuf enum value: INVALID = 0;
     */
    INVALID = 0,
    /**
     * @generated from protobuf enum value: ENTER = 1;
     */
    ENTER = 1,
    /**
     * @generated from protobuf enum value: LEAVE = 2;
     */
    LEAVE = 2
}
/**
 * @generated from protobuf enum com.midnights.game.OtherPlayerEnterHomeNotify.CmdId
 */
export enum OtherPlayerEnterHomeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4628;
     */
    CMD_ID = 4628,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePriorCheckNotify
 */
export interface HomePriorCheckNotify {
    /**
     * @generated from protobuf field: optional fixed32 end_time = 7;
     */
    endTime?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomePriorCheckNotify.CmdId
 */
export enum HomePriorCheckNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4599;
     */
    CMD_ID = 4599,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeMarkPointSceneData
 */
export interface HomeMarkPointSceneData {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeMarkPointFurnitureData furniture_list = 6;
     */
    furnitureList: HomeMarkPointFurnitureData[];
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector teapot_spirit_pos = 4;
     */
    teapotSpiritPos?: Vector;
    /**
     * @generated from protobuf field: optional uint32 scene_id = 2;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 module_id = 5;
     */
    moduleId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector safe_point_pos = 11;
     */
    safePointPos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.HomeMarkPointNotify
 */
export interface HomeMarkPointNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeMarkPointSceneData mark_point_data_list = 12;
     */
    markPointDataList: HomeMarkPointSceneData[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeMarkPointNotify.CmdId
 */
export enum HomeMarkPointNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4474;
     */
    CMD_ID = 4474,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAllUnlockedBgmIdListNotify
 */
export interface HomeAllUnlockedBgmIdListNotify {
    /**
     * @generated from protobuf field: repeated uint32 all_unlocked_bgm_id_list = 11;
     */
    allUnlockedBgmIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAllUnlockedBgmIdListNotify.CmdId
 */
export enum HomeAllUnlockedBgmIdListNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4608;
     */
    CMD_ID = 4608,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeNewUnlockedBgmIdListNotify
 */
export interface HomeNewUnlockedBgmIdListNotify {
    /**
     * @generated from protobuf field: repeated uint32 new_unlocked_bgm_id_list = 11;
     */
    newUnlockedBgmIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeNewUnlockedBgmIdListNotify.CmdId
 */
export enum HomeNewUnlockedBgmIdListNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4847;
     */
    CMD_ID = 4847,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChangeBgmReq
 */
export interface HomeChangeBgmReq {
    /**
     * @generated from protobuf field: optional uint32 bgm_id = 14;
     */
    bgmId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChangeBgmReq.CmdId
 */
export enum HomeChangeBgmReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4558;
     */
    CMD_ID = 4558,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChangeBgmRsp
 */
export interface HomeChangeBgmRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChangeBgmRsp.CmdId
 */
export enum HomeChangeBgmRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4488;
     */
    CMD_ID = 4488,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeChangeBgmNotify
 */
export interface HomeChangeBgmNotify {
    /**
     * @generated from protobuf field: optional uint32 bgm_id = 12;
     */
    bgmId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeChangeBgmNotify.CmdId
 */
export enum HomeChangeBgmNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4872;
     */
    CMD_ID = 4872,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePreChangeEditModeNotify
 */
export interface HomePreChangeEditModeNotify {
    /**
     * @generated from protobuf field: optional bool is_enter_edit_mode = 15;
     */
    isEnterEditMode?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomePreChangeEditModeNotify.CmdId
 */
export enum HomePreChangeEditModeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4639;
     */
    CMD_ID = 4639,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeEnterEditModeFinishReq
 */
export interface HomeEnterEditModeFinishReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeEnterEditModeFinishReq.CmdId
 */
export enum HomeEnterEditModeFinishReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4537;
     */
    CMD_ID = 4537,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeEnterEditModeFinishRsp
 */
export interface HomeEnterEditModeFinishRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeEnterEditModeFinishRsp.CmdId
 */
export enum HomeEnterEditModeFinishRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4615;
     */
    CMD_ID = 4615,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeData
 */
export interface FurnitureMakeData {
    /**
     * @generated from protobuf field: optional uint32 index = 15;
     */
    index?: number;
    /**
     * @generated from protobuf field: optional uint32 dur_time = 1;
     */
    durTime?: number;
    /**
     * @generated from protobuf field: optional fixed32 begin_time = 11;
     */
    beginTime?: number;
    /**
     * @generated from protobuf field: optional fixed32 accelerate_time = 6;
     */
    accelerateTime?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 2;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional uint32 make_id = 5;
     */
    makeId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeSlot
 */
export interface FurnitureMakeSlot {
    /**
     * @generated from protobuf field: repeated com.midnights.game.FurnitureMakeData furniture_make_data_list = 14;
     */
    furnitureMakeDataList: FurnitureMakeData[];
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeBeHelpedData
 */
export interface FurnitureMakeBeHelpedData {
    /**
     * @generated from protobuf field: optional fixed32 time = 12;
     */
    time?: number;
    /**
     * @generated from protobuf field: optional uint32 icon = 11;
     */
    icon?: number;
    /**
     * @generated from protobuf field: optional uint32 uid = 7;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional string player_name = 10;
     */
    playerName?: string;
    /**
     * @generated from protobuf field: optional com.midnights.game.ProfilePicture profile_picture = 1;
     */
    profilePicture?: ProfilePicture;
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeHelpData
 */
export interface FurnitureMakeHelpData {
    /**
     * @generated from protobuf field: optional uint32 times = 2;
     */
    times?: number;
    /**
     * @generated from protobuf field: optional uint32 uid = 13;
     */
    uid?: number;
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeMakeInfo
 */
export interface FurnitureMakeMakeInfo {
    /**
     * @generated from protobuf field: optional uint32 furniture_id = 13;
     */
    furnitureId?: number;
    /**
     * @generated from protobuf field: optional uint32 make_count = 9;
     */
    makeCount?: number;
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeReq
 */
export interface FurnitureMakeReq {
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeReq.CmdId
 */
export enum FurnitureMakeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4477;
     */
    CMD_ID = 4477,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeRsp
 */
export interface FurnitureMakeRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.FurnitureMakeBeHelpedData helped_data_list = 13;
     */
    helpedDataList: FurnitureMakeBeHelpedData[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.FurnitureMakeMakeInfo make_info_list = 4;
     */
    makeInfoList: FurnitureMakeMakeInfo[];
    /**
     * @generated from protobuf field: optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 1;
     */
    furnitureMakeSlot?: FurnitureMakeSlot;
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.FurnitureMakeHelpData help_data_list = 2;
     */
    helpDataList: FurnitureMakeHelpData[];
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeRsp.CmdId
 */
export enum FurnitureMakeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4782;
     */
    CMD_ID = 4782,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeFurnitureMakeReq
 */
export interface TakeFurnitureMakeReq {
    /**
     * @generated from protobuf field: optional uint32 index = 8;
     */
    index?: number;
    /**
     * @generated from protobuf field: optional bool is_fast_finish = 12;
     */
    isFastFinish?: boolean;
    /**
     * @generated from protobuf field: optional uint32 make_id = 7;
     */
    makeId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TakeFurnitureMakeReq.CmdId
 */
export enum TakeFurnitureMakeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4772;
     */
    CMD_ID = 4772,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TakeFurnitureMakeRsp
 */
export interface TakeFurnitureMakeRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 8;
     */
    furnitureMakeSlot?: FurnitureMakeSlot;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam return_item_list = 2;
     */
    returnItemList: ItemParam[];
    /**
     * @generated from protobuf field: optional uint32 make_id = 6;
     */
    makeId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam output_item_list = 14;
     */
    outputItemList: ItemParam[];
}
/**
 * @generated from protobuf enum com.midnights.game.TakeFurnitureMakeRsp.CmdId
 */
export enum TakeFurnitureMakeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4769;
     */
    CMD_ID = 4769,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeFinishNotify
 */
export interface FurnitureMakeFinishNotify {
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeFinishNotify.CmdId
 */
export enum FurnitureMakeFinishNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4841;
     */
    CMD_ID = 4841,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeStartReq
 */
export interface FurnitureMakeStartReq {
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 9;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional uint32 make_id = 1;
     */
    makeId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeStartReq.CmdId
 */
export enum FurnitureMakeStartReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4633;
     */
    CMD_ID = 4633,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeStartRsp
 */
export interface FurnitureMakeStartRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 5;
     */
    furnitureMakeSlot?: FurnitureMakeSlot;
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeStartRsp.CmdId
 */
export enum FurnitureMakeStartRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4729;
     */
    CMD_ID = 4729,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeCancelReq
 */
export interface FurnitureMakeCancelReq {
    /**
     * @generated from protobuf field: optional uint32 index = 4;
     */
    index?: number;
    /**
     * @generated from protobuf field: optional uint32 make_id = 15;
     */
    makeId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeCancelReq.CmdId
 */
export enum FurnitureMakeCancelReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4555;
     */
    CMD_ID = 4555,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeCancelRsp
 */
export interface FurnitureMakeCancelRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 make_id = 2;
     */
    makeId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 15;
     */
    furnitureMakeSlot?: FurnitureMakeSlot;
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeCancelRsp.CmdId
 */
export enum FurnitureMakeCancelRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4683;
     */
    CMD_ID = 4683,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeBeHelpedNotify
 */
export interface FurnitureMakeBeHelpedNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 7;
     */
    furnitureMakeSlot?: FurnitureMakeSlot;
    /**
     * @generated from protobuf field: optional com.midnights.game.FurnitureMakeBeHelpedData furniture_make_helped_data = 2;
     */
    furnitureMakeHelpedData?: FurnitureMakeBeHelpedData;
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeBeHelpedNotify.CmdId
 */
export enum FurnitureMakeBeHelpedNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4578;
     */
    CMD_ID = 4578,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeHelpReq
 */
export interface FurnitureMakeHelpReq {
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeHelpReq.CmdId
 */
export enum FurnitureMakeHelpReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4865;
     */
    CMD_ID = 4865,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FurnitureMakeHelpRsp
 */
export interface FurnitureMakeHelpRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.FurnitureMakeHelpData help_data_list = 6;
     */
    helpDataList: FurnitureMakeHelpData[];
}
/**
 * @generated from protobuf enum com.midnights.game.FurnitureMakeHelpRsp.CmdId
 */
export enum FurnitureMakeHelpRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4756;
     */
    CMD_ID = 4756,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FunitureMakeMakeInfoChangeNotify
 */
export interface FunitureMakeMakeInfoChangeNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.FurnitureMakeMakeInfo make_info = 1;
     */
    makeInfo?: FurnitureMakeMakeInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.FunitureMakeMakeInfoChangeNotify.CmdId
 */
export enum FunitureMakeMakeInfoChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4898;
     */
    CMD_ID = 4898,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopInfo
 */
export interface HomeLimitedShopInfo {
    /**
     * @generated from protobuf field: optional fixed32 next_close_time = 9;
     */
    nextCloseTime?: number;
    /**
     * @generated from protobuf field: optional fixed32 next_guest_open_time = 11;
     */
    nextGuestOpenTime?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector djinn_rot = 7;
     */
    djinnRot?: Vector;
    /**
     * @generated from protobuf field: optional uint32 uid = 4;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional fixed32 next_open_time = 6;
     */
    nextOpenTime?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector djinn_pos = 2;
     */
    djinnPos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopInfoReq
 */
export interface HomeLimitedShopInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeLimitedShopInfoReq.CmdId
 */
export enum HomeLimitedShopInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4825;
     */
    CMD_ID = 4825,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopInfoRsp
 */
export interface HomeLimitedShopInfoRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeLimitedShopInfo shop_info = 10;
     */
    shopInfo?: HomeLimitedShopInfo;
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeLimitedShopInfoRsp.CmdId
 */
export enum HomeLimitedShopInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4796;
     */
    CMD_ID = 4796,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopInfoNotify
 */
export interface HomeLimitedShopInfoNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeLimitedShopInfo shop_info = 2;
     */
    shopInfo?: HomeLimitedShopInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeLimitedShopInfoNotify.CmdId
 */
export enum HomeLimitedShopInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4887;
     */
    CMD_ID = 4887,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopGoods
 */
export interface HomeLimitedShopGoods {
    /**
     * @generated from protobuf field: optional uint32 buy_limit = 8;
     */
    buyLimit?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam cost_item_list = 15;
     */
    costItemList: ItemParam[];
    /**
     * @generated from protobuf field: optional uint32 bought_num = 1;
     */
    boughtNum?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ItemParam goods_item = 6;
     */
    goodsItem?: ItemParam;
    /**
     * @generated from protobuf field: optional uint32 goods_id = 13;
     */
    goodsId?: number;
    /**
     * @generated from protobuf field: optional uint32 disable_type = 3;
     */
    disableType?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShop
 */
export interface HomeLimitedShop {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeLimitedShopGoods goods_list = 8;
     */
    goodsList: HomeLimitedShopGoods[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopGoodsListReq
 */
export interface HomeLimitedShopGoodsListReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeLimitedShopGoodsListReq.CmdId
 */
export enum HomeLimitedShopGoodsListReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4552;
     */
    CMD_ID = 4552,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopGoodsListRsp
 */
export interface HomeLimitedShopGoodsListRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 6;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeLimitedShop shop = 12;
     */
    shop?: HomeLimitedShop;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeLimitedShopGoodsListRsp.CmdId
 */
export enum HomeLimitedShopGoodsListRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4546;
     */
    CMD_ID = 4546,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopBuyGoodsReq
 */
export interface HomeLimitedShopBuyGoodsReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeLimitedShopGoods goods = 3;
     */
    goods?: HomeLimitedShopGoods;
    /**
     * @generated from protobuf field: optional uint32 buy_count = 10;
     */
    buyCount?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeLimitedShopBuyGoodsReq.CmdId
 */
export enum HomeLimitedShopBuyGoodsReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4760;
     */
    CMD_ID = 4760,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopBuyGoodsRsp
 */
export interface HomeLimitedShopBuyGoodsRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeLimitedShopGoods goods_list = 13;
     */
    goodsList: HomeLimitedShopGoods[];
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeLimitedShopGoods goods = 5;
     */
    goods?: HomeLimitedShopGoods;
    /**
     * @generated from protobuf field: optional uint32 buy_count = 8;
     */
    buyCount?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeLimitedShopBuyGoodsRsp.CmdId
 */
export enum HomeLimitedShopBuyGoodsRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4750;
     */
    CMD_ID = 4750,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeLimitedShopInfoChangeNotify
 */
export interface HomeLimitedShopInfoChangeNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeLimitedShopGoods goods_list = 5;
     */
    goodsList: HomeLimitedShopGoods[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeLimitedShopInfoChangeNotify.CmdId
 */
export enum HomeLimitedShopInfoChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4790;
     */
    CMD_ID = 4790,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeResource
 */
export interface HomeResource {
    /**
     * @generated from protobuf field: optional fixed32 next_refresh_time = 15;
     */
    nextRefreshTime?: number;
    /**
     * @generated from protobuf field: optional uint32 store_limit = 3;
     */
    storeLimit?: number;
    /**
     * @generated from protobuf field: optional uint32 store_value = 12;
     */
    storeValue?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeResourceNotify
 */
export interface HomeResourceNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeResource home_coin = 9;
     */
    homeCoin?: HomeResource;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeResource fetter_exp = 8;
     */
    fetterExp?: HomeResource;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeResourceNotify.CmdId
 */
export enum HomeResourceNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4892;
     */
    CMD_ID = 4892,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeResourceTakeHomeCoinReq
 */
export interface HomeResourceTakeHomeCoinReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeResourceTakeHomeCoinReq.CmdId
 */
export enum HomeResourceTakeHomeCoinReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4479;
     */
    CMD_ID = 4479,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeResourceTakeHomeCoinRsp
 */
export interface HomeResourceTakeHomeCoinRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeResource home_coin = 7;
     */
    homeCoin?: HomeResource;
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeResourceTakeHomeCoinRsp.CmdId
 */
export enum HomeResourceTakeHomeCoinRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4541;
     */
    CMD_ID = 4541,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeResourceTakeFetterExpReq
 */
export interface HomeResourceTakeFetterExpReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeResourceTakeFetterExpReq.CmdId
 */
export enum HomeResourceTakeFetterExpReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4768;
     */
    CMD_ID = 4768,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeResourceTakeFetterExpRsp
 */
export interface HomeResourceTakeFetterExpRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeResource fetter_exp = 4;
     */
    fetterExp?: HomeResource;
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeResourceTakeFetterExpRsp.CmdId
 */
export enum HomeResourceTakeFetterExpRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4645;
     */
    CMD_ID = 4645,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarTalkFinishInfo
 */
export interface HomeAvatarTalkFinishInfo {
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 9;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: repeated uint32 finish_talk_id_list = 3;
     */
    finishTalkIdList: number[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarTalkFinishInfoNotify
 */
export interface HomeAvatarTalkFinishInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeAvatarTalkFinishInfo avatar_talk_info_list = 9;
     */
    avatarTalkInfoList: HomeAvatarTalkFinishInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarTalkFinishInfoNotify.CmdId
 */
export enum HomeAvatarTalkFinishInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4896;
     */
    CMD_ID = 4896,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarTalkReq
 */
export interface HomeAvatarTalkReq {
    /**
     * @generated from protobuf field: optional uint32 talk_id = 12;
     */
    talkId?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 15;
     */
    avatarId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarTalkReq.CmdId
 */
export enum HomeAvatarTalkReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4688;
     */
    CMD_ID = 4688,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarTalkRsp
 */
export interface HomeAvatarTalkRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeAvatarTalkFinishInfo avatar_talk_info = 3;
     */
    avatarTalkInfo?: HomeAvatarTalkFinishInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarTalkRsp.CmdId
 */
export enum HomeAvatarTalkRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4464;
     */
    CMD_ID = 4464,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarRewardEventInfo
 */
export interface HomeAvatarRewardEventInfo {
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 1;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional uint32 guid = 12;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional uint32 event_id = 2;
     */
    eventId?: number;
    /**
     * @generated from protobuf field: optional uint32 suite_id = 14;
     */
    suiteId?: number;
    /**
     * @generated from protobuf field: optional uint32 random_position = 9;
     */
    randomPosition?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarRewardEventNotify
 */
export interface HomeAvatarRewardEventNotify {
    /**
     * @generated from protobuf field: optional bool is_event_trigger = 4;
     */
    isEventTrigger?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeAvatarRewardEventInfo reward_event = 2;
     */
    rewardEvent?: HomeAvatarRewardEventInfo;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeAvatarRewardEventInfo pending_list = 8;
     */
    pendingList: HomeAvatarRewardEventInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarRewardEventNotify.CmdId
 */
export enum HomeAvatarRewardEventNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4852;
     */
    CMD_ID = 4852,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarRewardEventGetReq
 */
export interface HomeAvatarRewardEventGetReq {
    /**
     * @generated from protobuf field: optional uint32 event_id = 9;
     */
    eventId?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 7;
     */
    avatarId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarRewardEventGetReq.CmdId
 */
export enum HomeAvatarRewardEventGetReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4551;
     */
    CMD_ID = 4551,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarRewardEventGetRsp
 */
export interface HomeAvatarRewardEventGetRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam item_list = 4;
     */
    itemList: ItemParam[];
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 event_id = 8;
     */
    eventId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarRewardEventGetRsp.CmdId
 */
export enum HomeAvatarRewardEventGetRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4833;
     */
    CMD_ID = 4833,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarSummonEventInfo
 */
export interface HomeAvatarSummonEventInfo {
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 3;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional uint32 guid = 8;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional uint32 event_id = 9;
     */
    eventId?: number;
    /**
     * @generated from protobuf field: optional uint32 suit_id = 12;
     */
    suitId?: number;
    /**
     * @generated from protobuf field: optional uint32 event_over_time = 2;
     */
    eventOverTime?: number;
    /**
     * @generated from protobuf field: optional uint32 random_position = 10;
     */
    randomPosition?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarSummonAllEventNotify
 */
export interface HomeAvatarSummonAllEventNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeAvatarSummonEventInfo summon_event_list = 1;
     */
    summonEventList: HomeAvatarSummonEventInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarSummonAllEventNotify.CmdId
 */
export enum HomeAvatarSummonAllEventNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4808;
     */
    CMD_ID = 4808,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarSummonEventReq
 */
export interface HomeAvatarSummonEventReq {
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 7;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional uint32 suit_id = 9;
     */
    suitId?: number;
    /**
     * @generated from protobuf field: optional uint32 guid = 12;
     */
    guid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarSummonEventReq.CmdId
 */
export enum HomeAvatarSummonEventReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4806;
     */
    CMD_ID = 4806,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarSummonEventRsp
 */
export interface HomeAvatarSummonEventRsp {
    /**
     * @generated from protobuf field: optional uint32 event_id = 11;
     */
    eventId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarSummonEventRsp.CmdId
 */
export enum HomeAvatarSummonEventRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4817;
     */
    CMD_ID = 4817,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarCostumeChangeNotify
 */
export interface HomeAvatarCostumeChangeNotify {
    /**
     * @generated from protobuf field: optional uint32 costume_id = 4;
     */
    costumeId?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 10;
     */
    avatarId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarCostumeChangeNotify.CmdId
 */
export enum HomeAvatarCostumeChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4748;
     */
    CMD_ID = 4748,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarSummonFinishReq
 */
export interface HomeAvatarSummonFinishReq {
    /**
     * @generated from protobuf field: optional uint32 event_id = 12;
     */
    eventId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarSummonFinishReq.CmdId
 */
export enum HomeAvatarSummonFinishReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4629;
     */
    CMD_ID = 4629,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarSummonFinishRsp
 */
export interface HomeAvatarSummonFinishRsp {
    /**
     * @generated from protobuf field: optional uint32 event_id = 8;
     */
    eventId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarSummonFinishRsp.CmdId
 */
export enum HomeAvatarSummonFinishRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4696;
     */
    CMD_ID = 4696,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvtarAllFinishRewardNotify
 */
export interface HomeAvtarAllFinishRewardNotify {
    /**
     * @generated from protobuf field: repeated uint32 event_id_list = 13;
     */
    eventIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvtarAllFinishRewardNotify.CmdId
 */
export enum HomeAvtarAllFinishRewardNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4453;
     */
    CMD_ID = 4453,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeAvatarAllFinishRewardNotify
 */
export interface HomeAvatarAllFinishRewardNotify {
    /**
     * @generated from protobuf field: repeated uint32 event_id_list = 7;
     */
    eventIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeAvatarAllFinishRewardNotify.CmdId
 */
export enum HomeAvatarAllFinishRewardNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4741;
     */
    CMD_ID = 4741,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSceneInitFinishReq
 */
export interface HomeSceneInitFinishReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSceneInitFinishReq.CmdId
 */
export enum HomeSceneInitFinishReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4674;
     */
    CMD_ID = 4674,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSceneInitFinishRsp
 */
export interface HomeSceneInitFinishRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 6;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSceneInitFinishRsp.CmdId
 */
export enum HomeSceneInitFinishRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4505;
     */
    CMD_ID = 4505,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantSeedReq
 */
export interface HomePlantSeedReq {
    /**
     * @generated from protobuf field: optional uint32 index = 4;
     */
    index?: number;
    /**
     * @generated from protobuf field: optional uint32 field_guid = 14;
     */
    fieldGuid?: number;
    /**
     * @generated from protobuf field: repeated uint32 seed_id_list = 13;
     */
    seedIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantSeedReq.CmdId
 */
export enum HomePlantSeedReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4804;
     */
    CMD_ID = 4804,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantSeedRsp
 */
export interface HomePlantSeedRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantSeedRsp.CmdId
 */
export enum HomePlantSeedRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4556;
     */
    CMD_ID = 4556,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantWeedReq
 */
export interface HomePlantWeedReq {
    /**
     * @generated from protobuf field: optional uint32 field_guid = 9;
     */
    fieldGuid?: number;
    /**
     * @generated from protobuf field: optional uint32 index = 3;
     */
    index?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantWeedReq.CmdId
 */
export enum HomePlantWeedReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4640;
     */
    CMD_ID = 4640,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantWeedRsp
 */
export interface HomePlantWeedRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantWeedRsp.CmdId
 */
export enum HomePlantWeedRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4527;
     */
    CMD_ID = 4527,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantSubFieldData
 */
export interface HomePlantSubFieldData {
    /**
     * @generated from protobuf field: repeated uint32 entity_id_list = 15;
     */
    entityIdList: number[];
    /**
     * @generated from protobuf field: optional com.midnights.game.HomePlantFieldStatus field_status = 14;
     */
    fieldStatus?: HomePlantFieldStatus;
    /**
     * @generated from protobuf field: optional uint32 home_gather_id = 9;
     */
    homeGatherId?: number;
    /**
     * @generated from protobuf field: optional uint32 seed_id = 8;
     */
    seedId?: number;
    /**
     * @generated from protobuf field: optional fixed32 end_time = 4;
     */
    endTime?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantFieldData
 */
export interface HomePlantFieldData {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomePlantSubFieldData sub_field_list = 13;
     */
    subFieldList: HomePlantSubFieldData[];
    /**
     * @generated from protobuf field: optional uint32 furniture_id = 9;
     */
    furnitureId?: number;
    /**
     * @generated from protobuf field: optional uint32 scene_id = 1;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 field_guid = 10;
     */
    fieldGuid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector spawn_pos = 12;
     */
    spawnPos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantInfoNotify
 */
export interface HomePlantInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomePlantFieldData field_list = 4;
     */
    fieldList: HomePlantFieldData[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantInfoNotify.CmdId
 */
export enum HomePlantInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4587;
     */
    CMD_ID = 4587,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantFieldNotify
 */
export interface HomePlantFieldNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomePlantFieldData field = 13;
     */
    field?: HomePlantFieldData;
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantFieldNotify.CmdId
 */
export enum HomePlantFieldNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4549;
     */
    CMD_ID = 4549,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantInfoReq
 */
export interface HomePlantInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantInfoReq.CmdId
 */
export enum HomePlantInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4647;
     */
    CMD_ID = 4647,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePlantInfoRsp
 */
export interface HomePlantInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomePlantFieldData field_list = 15;
     */
    fieldList: HomePlantFieldData[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantInfoRsp.CmdId
 */
export enum HomePlantInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4701;
     */
    CMD_ID = 4701,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeTransferReq
 */
export interface HomeTransferReq {
    /**
     * @generated from protobuf field: optional uint32 guid = 1;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional bool is_transfer_to_safe_point = 12;
     */
    isTransferToSafePoint?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeTransferReq.CmdId
 */
export enum HomeTransferReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4726;
     */
    CMD_ID = 4726,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeTransferRsp
 */
export interface HomeTransferRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeTransferRsp.CmdId
 */
export enum HomeTransferRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4616;
     */
    CMD_ID = 4616,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeFishFarmingInfo
 */
export interface HomeFishFarmingInfo {
    /**
     * @generated from protobuf field: repeated uint32 fish_id_list = 11;
     */
    fishIdList: number[];
    /**
     * @generated from protobuf field: optional uint32 fishpond_guid = 14;
     */
    fishpondGuid?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetFishFarmingInfoReq
 */
export interface HomeGetFishFarmingInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetFishFarmingInfoReq.CmdId
 */
export enum HomeGetFishFarmingInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4476;
     */
    CMD_ID = 4476,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetFishFarmingInfoRsp
 */
export interface HomeGetFishFarmingInfoRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFishFarmingInfo fish_farming_info_list = 7;
     */
    fishFarmingInfoList: HomeFishFarmingInfo[];
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetFishFarmingInfoRsp.CmdId
 */
export enum HomeGetFishFarmingInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4678;
     */
    CMD_ID = 4678,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeFishFarmingInfoNotify
 */
export interface HomeFishFarmingInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeFishFarmingInfo fish_farming_info_list = 15;
     */
    fishFarmingInfoList: HomeFishFarmingInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeFishFarmingInfoNotify.CmdId
 */
export enum HomeFishFarmingInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4677;
     */
    CMD_ID = 4677,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeUpdateFishFarmingInfoReq
 */
export interface HomeUpdateFishFarmingInfoReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeFishFarmingInfo fish_farming_info = 5;
     */
    fishFarmingInfo?: HomeFishFarmingInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeUpdateFishFarmingInfoReq.CmdId
 */
export enum HomeUpdateFishFarmingInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4544;
     */
    CMD_ID = 4544,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeUpdateFishFarmingInfoRsp
 */
export interface HomeUpdateFishFarmingInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeUpdateFishFarmingInfoRsp.CmdId
 */
export enum HomeUpdateFishFarmingInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4857;
     */
    CMD_ID = 4857,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeScenePointFishFarmingInfo
 */
export interface HomeScenePointFishFarmingInfo {
    /**
     * @generated from protobuf field: optional uint32 scene_id = 13;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: repeated uint32 fish_id_list = 1;
     */
    fishIdList: number[];
    /**
     * @generated from protobuf field: optional uint32 local_entity_id = 3;
     */
    localEntityId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeUpdateScenePointFishFarmingInfoReq
 */
export interface HomeUpdateScenePointFishFarmingInfoReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeScenePointFishFarmingInfo fish_farming_info = 7;
     */
    fishFarmingInfo?: HomeScenePointFishFarmingInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeUpdateScenePointFishFarmingInfoReq.CmdId
 */
export enum HomeUpdateScenePointFishFarmingInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4511;
     */
    CMD_ID = 4511,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeUpdateScenePointFishFarmingInfoRsp
 */
export interface HomeUpdateScenePointFishFarmingInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeUpdateScenePointFishFarmingInfoRsp.CmdId
 */
export enum HomeUpdateScenePointFishFarmingInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4540;
     */
    CMD_ID = 4540,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeScenePointFishFarmingInfoNotify
 */
export interface HomeScenePointFishFarmingInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeScenePointFishFarmingInfo fish_farming_info_list = 7;
     */
    fishFarmingInfoList: HomeScenePointFishFarmingInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeScenePointFishFarmingInfoNotify.CmdId
 */
export enum HomeScenePointFishFarmingInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4547;
     */
    CMD_ID = 4547,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeCustomFurnitureInfo
 */
export interface HomeCustomFurnitureInfo {
    /**
     * @generated from protobuf field: repeated com.midnights.game.CustomCommonNodeInfo sub_furniture_list = 12;
     */
    subFurnitureList: CustomCommonNodeInfo[];
    /**
     * @generated from protobuf field: optional uint32 guid = 6;
     */
    guid?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeCustomFurnitureInfoNotify
 */
export interface HomeCustomFurnitureInfoNotify {
    /**
     * @generated from protobuf field: repeated uint32 delete_custom_furniture_list = 4;
     */
    deleteCustomFurnitureList: number[];
    /**
     * @generated from protobuf field: map<uint32, uint32> used_sub_furniture_count_map = 15;
     */
    usedSubFurnitureCountMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info_list = 11;
     */
    customFurnitureInfoList: HomeCustomFurnitureInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomeCustomFurnitureInfoNotify.CmdId
 */
export enum HomeCustomFurnitureInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4712;
     */
    CMD_ID = 4712,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeEditCustomFurnitureReq
 */
export interface HomeEditCustomFurnitureReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info = 15;
     */
    customFurnitureInfo?: HomeCustomFurnitureInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeEditCustomFurnitureReq.CmdId
 */
export enum HomeEditCustomFurnitureReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4724;
     */
    CMD_ID = 4724,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeEditCustomFurnitureRsp
 */
export interface HomeEditCustomFurnitureRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info = 11;
     */
    customFurnitureInfo?: HomeCustomFurnitureInfo;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeEditCustomFurnitureRsp.CmdId
 */
export enum HomeEditCustomFurnitureRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4496;
     */
    CMD_ID = 4496,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePictureFrameInfo
 */
export interface HomePictureFrameInfo {
    /**
     * @generated from protobuf field: optional uint32 guid = 11;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional uint32 picture_id = 6;
     */
    pictureId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomePictureFrameInfoNotify
 */
export interface HomePictureFrameInfoNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomePictureFrameInfo picture_frame_info_list = 12;
     */
    pictureFrameInfoList: HomePictureFrameInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.HomePictureFrameInfoNotify.CmdId
 */
export enum HomePictureFrameInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4878;
     */
    CMD_ID = 4878,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeUpdatePictureFrameInfoReq
 */
export interface HomeUpdatePictureFrameInfoReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomePictureFrameInfo picture_frame_info = 1;
     */
    pictureFrameInfo?: HomePictureFrameInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeUpdatePictureFrameInfoReq.CmdId
 */
export enum HomeUpdatePictureFrameInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4486;
     */
    CMD_ID = 4486,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeUpdatePictureFrameInfoRsp
 */
export interface HomeUpdatePictureFrameInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomePictureFrameInfo picture_frame_info = 14;
     */
    pictureFrameInfo?: HomePictureFrameInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeUpdatePictureFrameInfoRsp.CmdId
 */
export enum HomeUpdatePictureFrameInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4641;
     */
    CMD_ID = 4641,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeRacingGallerySettleNotify
 */
export interface HomeRacingGallerySettleNotify {
    /**
     * @generated from protobuf field: optional uint32 gallery_id = 11;
     */
    galleryId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.RacingGallerySettleInfo settle_info = 12;
     */
    settleInfo?: RacingGallerySettleInfo;
    /**
     * @generated from protobuf field: optional uint32 rank = 7;
     */
    rank?: number;
    /**
     * @generated from protobuf field: optional bool is_new_record = 2;
     */
    isNewRecord?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeRacingGallerySettleNotify.CmdId
 */
export enum HomeRacingGallerySettleNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4805;
     */
    CMD_ID = 4805,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeGroupPlayerInfo
 */
export interface HomeGroupPlayerInfo {
    /**
     * @generated from protobuf field: optional string online_id = 14;
     */
    onlineId?: string;
    /**
     * @generated from protobuf field: optional string psn_id = 6;
     */
    psnId?: string;
    /**
     * @generated from protobuf field: optional string nickname = 15;
     */
    nickname?: string;
    /**
     * @generated from protobuf field: optional uint32 player_level = 4;
     */
    playerLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 uid = 2;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ProfilePicture profile_picture = 5;
     */
    profilePicture?: ProfilePicture;
}
/**
 * @generated from protobuf message com.midnights.game.HomeRacingGalleryRecord
 */
export interface HomeRacingGalleryRecord {
    /**
     * @generated from protobuf field: optional uint32 use_time = 1;
     */
    useTime?: number;
    /**
     * @generated from protobuf field: optional uint32 timestamp = 8;
     */
    timestamp?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeGroupPlayerInfo player_info = 12;
     */
    playerInfo?: HomeGroupPlayerInfo;
}
/**
 * @generated from protobuf message com.midnights.game.HomeRacingRecord
 */
export interface HomeRacingRecord {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeRacingGalleryRecord record_list = 7;
     */
    recordList: HomeRacingGalleryRecord[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeBalloonGalleryRecord
 */
export interface HomeBalloonGalleryRecord {
    /**
     * @generated from protobuf field: optional uint32 hit_count = 12;
     */
    hitCount?: number;
    /**
     * @generated from protobuf field: optional uint32 score = 11;
     */
    score?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeGroupPlayerInfo player_info = 5;
     */
    playerInfo?: HomeGroupPlayerInfo;
    /**
     * @generated from protobuf field: optional uint32 timestamp = 2;
     */
    timestamp?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeBalloonRecord
 */
export interface HomeBalloonRecord {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeBalloonGalleryRecord record_list = 15;
     */
    recordList: HomeBalloonGalleryRecord[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeStakePlayRecord
 */
export interface HomeStakePlayRecord {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeGroupPlayerInfo engaged_player_info_list = 14;
     */
    engagedPlayerInfoList: HomeGroupPlayerInfo[];
    /**
     * @generated from protobuf field: optional uint32 timestamp = 9;
     */
    timestamp?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeStakeRecord
 */
export interface HomeStakeRecord {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeStakePlayRecord record_list = 13;
     */
    recordList: HomeStakePlayRecord[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeSeekFurniturePlayerScore
 */
export interface HomeSeekFurniturePlayerScore {
    /**
     * @generated from protobuf field: optional uint32 score = 12;
     */
    score?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeGroupPlayerInfo player_info = 10;
     */
    playerInfo?: HomeGroupPlayerInfo;
}
/**
 * @generated from protobuf message com.midnights.game.HomeSeekFurnitureOneRecord
 */
export interface HomeSeekFurnitureOneRecord {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeSeekFurniturePlayerScore engaged_player_score_list = 8;
     */
    engagedPlayerScoreList: HomeSeekFurniturePlayerScore[];
    /**
     * @generated from protobuf field: optional uint32 timestamp = 3;
     */
    timestamp?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeSeekFurnitureAllRecord
 */
export interface HomeSeekFurnitureAllRecord {
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeSeekFurnitureOneRecord record_list = 5;
     */
    recordList: HomeSeekFurnitureOneRecord[];
}
/**
 * @generated from protobuf message com.midnights.game.HomeGroupRecord
 */
export interface HomeGroupRecord {
    /**
     * @generated from protobuf field: optional uint32 group_id = 5;
     */
    groupId?: number;
    /**
     * @generated from protobuf oneof: detail
     */
    detail: {
        oneofKind: "racingGalleryInfo";
        /**
         * @generated from protobuf field: com.midnights.game.HomeRacingRecord racing_gallery_info = 467;
         */
        racingGalleryInfo: HomeRacingRecord;
    } | {
        oneofKind: "balloonGalleryInfo";
        /**
         * @generated from protobuf field: com.midnights.game.HomeBalloonRecord balloon_gallery_info = 1410;
         */
        balloonGalleryInfo: HomeBalloonRecord;
    } | {
        oneofKind: "stakePlayInfo";
        /**
         * @generated from protobuf field: com.midnights.game.HomeStakeRecord stake_play_info = 347;
         */
        stakePlayInfo: HomeStakeRecord;
    } | {
        oneofKind: "seekFurnitureGalleryInfo";
        /**
         * @generated from protobuf field: com.midnights.game.HomeSeekFurnitureAllRecord seek_furniture_gallery_info = 1822;
         */
        seekFurnitureGalleryInfo: HomeSeekFurnitureAllRecord;
    } | {
        oneofKind: undefined;
    };
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetGroupRecordReq
 */
export interface HomeGetGroupRecordReq {
    /**
     * @generated from protobuf field: optional uint32 group_id = 14;
     */
    groupId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetGroupRecordReq.CmdId
 */
export enum HomeGetGroupRecordReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4523;
     */
    CMD_ID = 4523,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetGroupRecordRsp
 */
export interface HomeGetGroupRecordRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeGroupRecord group_record = 7;
     */
    groupRecord?: HomeGroupRecord;
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 record_type = 1;
     */
    recordType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetGroupRecordRsp.CmdId
 */
export enum HomeGetGroupRecordRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4538;
     */
    CMD_ID = 4538,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeClearGroupRecordReq
 */
export interface HomeClearGroupRecordReq {
    /**
     * @generated from protobuf field: optional uint32 group_id = 2;
     */
    groupId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeClearGroupRecordReq.CmdId
 */
export enum HomeClearGroupRecordReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4759;
     */
    CMD_ID = 4759,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeClearGroupRecordRsp
 */
export interface HomeClearGroupRecordRsp {
    /**
     * @generated from protobuf field: optional uint32 group_id = 4;
     */
    groupId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeClearGroupRecordRsp.CmdId
 */
export enum HomeClearGroupRecordRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4605;
     */
    CMD_ID = 4605,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeBalloonGallerySettleNotify
 */
export interface HomeBalloonGallerySettleNotify {
    /**
     * @generated from protobuf field: optional uint32 gallery_id = 1;
     */
    galleryId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.BalloonGallerySettleInfo settle_info = 5;
     */
    settleInfo?: BalloonGallerySettleInfo;
    /**
     * @generated from protobuf field: optional uint32 rank = 6;
     */
    rank?: number;
    /**
     * @generated from protobuf field: optional bool is_new_record = 4;
     */
    isNewRecord?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeBalloonGallerySettleNotify.CmdId
 */
export enum HomeBalloonGallerySettleNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4811;
     */
    CMD_ID = 4811,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeBalloonGalleryScoreNotify
 */
export interface HomeBalloonGalleryScoreNotify {
    /**
     * @generated from protobuf field: optional uint32 trigger_entity_id = 10;
     */
    triggerEntityId?: number;
    /**
     * @generated from protobuf field: optional uint32 cur_score = 9;
     */
    curScore?: number;
    /**
     * @generated from protobuf field: optional uint32 add_score = 7;
     */
    addScore?: number;
    /**
     * @generated from protobuf field: optional uint32 gallery_id = 5;
     */
    galleryId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeBalloonGalleryScoreNotify.CmdId
 */
export enum HomeBalloonGalleryScoreNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4654;
     */
    CMD_ID = 4654,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSeekFurnitureGalleryScoreNotify
 */
export interface HomeSeekFurnitureGalleryScoreNotify {
    /**
     * @generated from protobuf field: optional uint32 gallery_id = 15;
     */
    galleryId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeSeekFurnitureOneRecord record = 5;
     */
    record?: HomeSeekFurnitureOneRecord;
    /**
     * @generated from protobuf field: optional com.midnights.game.GalleryStopReason reason = 4;
     */
    reason?: GalleryStopReason;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSeekFurnitureGalleryScoreNotify.CmdId
 */
export enum HomeSeekFurnitureGalleryScoreNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4583;
     */
    CMD_ID = 4583,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetHomeExchangeWoodInfoReq
 */
export interface GetHomeExchangeWoodInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetHomeExchangeWoodInfoReq.CmdId
 */
export enum GetHomeExchangeWoodInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4473;
     */
    CMD_ID = 4473,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetHomeExchangeWoodInfoRsp
 */
export interface GetHomeExchangeWoodInfoRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.GetHomeExchangeWoodInfoRsp.HomeExchangeWoodInfo wood_info_list = 5;
     */
    woodInfoList: GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo[];
}
/**
 * @generated from protobuf message com.midnights.game.GetHomeExchangeWoodInfoRsp.HomeExchangeWoodInfo
 */
export interface GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo {
    /**
     * @generated from protobuf field: optional uint32 exchange_limit = 7;
     */
    exchangeLimit?: number;
    /**
     * @generated from protobuf field: optional uint32 exchanged_count = 12;
     */
    exchangedCount?: number;
    /**
     * @generated from protobuf field: optional fixed32 next_refresh_time = 14;
     */
    nextRefreshTime?: number;
    /**
     * @generated from protobuf field: optional uint32 wood_id = 2;
     */
    woodId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetHomeExchangeWoodInfoRsp.CmdId
 */
export enum GetHomeExchangeWoodInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4659;
     */
    CMD_ID = 4659,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeExchangeWoodReq
 */
export interface HomeExchangeWoodReq {
    /**
     * @generated from protobuf field: map<uint32, uint32> material_count_map = 3;
     */
    materialCountMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 wood_id = 12;
     */
    woodId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeExchangeWoodReq.CmdId
 */
export enum HomeExchangeWoodReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4576;
     */
    CMD_ID = 4576,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeExchangeWoodRsp
 */
export interface HomeExchangeWoodRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 wood_id = 1;
     */
    woodId?: number;
    /**
     * @generated from protobuf field: optional uint32 wood_count = 3;
     */
    woodCount?: number;
    /**
     * @generated from protobuf field: optional uint32 exchanged_count = 2;
     */
    exchangedCount?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeExchangeWoodRsp.CmdId
 */
export enum HomeExchangeWoodRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4622;
     */
    CMD_ID = 4622,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeBlueprintSlotInfo
 */
export interface HomeBlueprintSlotInfo {
    /**
     * @generated from protobuf field: optional uint32 module_id = 12;
     */
    moduleId?: number;
    /**
     * @generated from protobuf field: optional uint32 block_id = 14;
     */
    blockId?: number;
    /**
     * @generated from protobuf field: optional uint32 scene_id = 4;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 slot_id = 5;
     */
    slotId?: number;
    /**
     * @generated from protobuf field: optional string share_code = 11;
     */
    shareCode?: string;
    /**
     * @generated from protobuf field: optional bool is_allow_copy = 3;
     */
    isAllowCopy?: boolean;
    /**
     * @generated from protobuf field: optional uint32 create_time = 6;
     */
    createTime?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetBlueprintSlotInfoReq
 */
export interface HomeGetBlueprintSlotInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetBlueprintSlotInfoReq.CmdId
 */
export enum HomeGetBlueprintSlotInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4584;
     */
    CMD_ID = 4584,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeGetBlueprintSlotInfoRsp
 */
export interface HomeGetBlueprintSlotInfoRsp {
    /**
     * @generated from protobuf field: repeated uint32 delete_slot_id_list = 6;
     */
    deleteSlotIdList: number[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.HomeBlueprintSlotInfo slot_info_list = 3;
     */
    slotInfoList: HomeBlueprintSlotInfo[];
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeGetBlueprintSlotInfoRsp.CmdId
 */
export enum HomeGetBlueprintSlotInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4662;
     */
    CMD_ID = 4662,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSetBlueprintSlotOptionReq
 */
export interface HomeSetBlueprintSlotOptionReq {
    /**
     * @generated from protobuf field: optional uint32 slot_id = 1;
     */
    slotId?: number;
    /**
     * @generated from protobuf field: optional bool is_allow_copy = 8;
     */
    isAllowCopy?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSetBlueprintSlotOptionReq.CmdId
 */
export enum HomeSetBlueprintSlotOptionReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4798;
     */
    CMD_ID = 4798,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSetBlueprintSlotOptionRsp
 */
export interface HomeSetBlueprintSlotOptionRsp {
    /**
     * @generated from protobuf field: optional uint32 slot_id = 13;
     */
    slotId?: number;
    /**
     * @generated from protobuf field: optional bool is_allow_copy = 7;
     */
    isAllowCopy?: boolean;
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSetBlueprintSlotOptionRsp.CmdId
 */
export enum HomeSetBlueprintSlotOptionRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4786;
     */
    CMD_ID = 4786,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSetBlueprintFriendOptionReq
 */
export interface HomeSetBlueprintFriendOptionReq {
    /**
     * @generated from protobuf field: optional bool is_allow_friend_copy = 9;
     */
    isAllowFriendCopy?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSetBlueprintFriendOptionReq.CmdId
 */
export enum HomeSetBlueprintFriendOptionReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4554;
     */
    CMD_ID = 4554,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSetBlueprintFriendOptionRsp
 */
export interface HomeSetBlueprintFriendOptionRsp {
    /**
     * @generated from protobuf field: optional bool is_allow_friend_copy = 2;
     */
    isAllowFriendCopy?: boolean;
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSetBlueprintFriendOptionRsp.CmdId
 */
export enum HomeSetBlueprintFriendOptionRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4604;
     */
    CMD_ID = 4604,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeBlueprintInfoNotify
 */
export interface HomeBlueprintInfoNotify {
    /**
     * @generated from protobuf field: optional bool is_allow_friend_copy = 15;
     */
    isAllowFriendCopy?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeBlueprintInfoNotify.CmdId
 */
export enum HomeBlueprintInfoNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4765;
     */
    CMD_ID = 4765,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePreviewBlueprintReq
 */
export interface HomePreviewBlueprintReq {
    /**
     * @generated from protobuf field: optional string share_code = 7;
     */
    shareCode?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.HomePreviewBlueprintReq.CmdId
 */
export enum HomePreviewBlueprintReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4478;
     */
    CMD_ID = 4478,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomePreviewBlueprintRsp
 */
export interface HomePreviewBlueprintRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info = 12;
     */
    sceneArrangementInfo?: HomeSceneArrangementInfo;
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional string share_code = 14;
     */
    shareCode?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.HomePreviewBlueprintRsp.CmdId
 */
export enum HomePreviewBlueprintRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4738;
     */
    CMD_ID = 4738,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeCreateBlueprintReq
 */
export interface HomeCreateBlueprintReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info = 2;
     */
    sceneArrangementInfo?: HomeSceneArrangementInfo;
    /**
     * @generated from protobuf field: optional uint32 slot_id = 13;
     */
    slotId?: number;
    /**
     * @generated from protobuf field: optional string server_share_code = 6;
     */
    serverShareCode?: string;
    /**
     * @generated from protobuf field: optional uint32 gen_share_code_count = 4;
     */
    genShareCodeCount?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeCreateBlueprintReq.CmdId
 */
export enum HomeCreateBlueprintReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4619;
     */
    CMD_ID = 4619,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeCreateBlueprintRsp
 */
export interface HomeCreateBlueprintRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeBlueprintSlotInfo slot_info = 1;
     */
    slotInfo?: HomeBlueprintSlotInfo;
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeCreateBlueprintRsp.CmdId
 */
export enum HomeCreateBlueprintRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4606;
     */
    CMD_ID = 4606,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeDeleteBlueprintReq
 */
export interface HomeDeleteBlueprintReq {
    /**
     * @generated from protobuf field: optional uint32 slot_id = 2;
     */
    slotId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeDeleteBlueprintReq.CmdId
 */
export enum HomeDeleteBlueprintReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4502;
     */
    CMD_ID = 4502,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeDeleteBlueprintRsp
 */
export interface HomeDeleteBlueprintRsp {
    /**
     * @generated from protobuf field: optional uint32 slot_id = 5;
     */
    slotId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeDeleteBlueprintRsp.CmdId
 */
export enum HomeDeleteBlueprintRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4586;
     */
    CMD_ID = 4586,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeBlueprintSearchInfo
 */
export interface HomeBlueprintSearchInfo {
    /**
     * @generated from protobuf field: optional uint32 scene_id = 5;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 module_id = 9;
     */
    moduleId?: number;
    /**
     * @generated from protobuf field: optional string share_code = 8;
     */
    shareCode?: string;
    /**
     * @generated from protobuf field: optional uint32 block_id = 12;
     */
    blockId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.HomeSearchBlueprintReq
 */
export interface HomeSearchBlueprintReq {
    /**
     * @generated from protobuf field: optional string share_code = 13;
     */
    shareCode?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSearchBlueprintReq.CmdId
 */
export enum HomeSearchBlueprintReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4889;
     */
    CMD_ID = 4889,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSearchBlueprintRsp
 */
export interface HomeSearchBlueprintRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.HomeBlueprintSearchInfo search_info = 8;
     */
    searchInfo?: HomeBlueprintSearchInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSearchBlueprintRsp.CmdId
 */
export enum HomeSearchBlueprintRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4593;
     */
    CMD_ID = 4593,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSaveArrangementNoChangeReq
 */
export interface HomeSaveArrangementNoChangeReq {
    /**
     * @generated from protobuf field: optional uint32 scene_id = 4;
     */
    sceneId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSaveArrangementNoChangeReq.CmdId
 */
export enum HomeSaveArrangementNoChangeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4704;
     */
    CMD_ID = 4704,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.HomeSaveArrangementNoChangeRsp
 */
export interface HomeSaveArrangementNoChangeRsp {
    /**
     * @generated from protobuf field: optional uint32 scene_id = 4;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.HomeSaveArrangementNoChangeRsp.CmdId
 */
export enum HomeSaveArrangementNoChangeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 4668;
     */
    CMD_ID = 4668,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.HomePlantFieldStatus
 */
export enum HomePlantFieldStatus {
    /**
     * @generated from protobuf enum value: HOME_FIELD_STATUE_NONE = 0;
     */
    HOME_FIELD_STATUE_NONE = 0,
    /**
     * @generated from protobuf enum value: HOME_FIELD_STATUE_SEED = 1;
     */
    HOME_FIELD_STATUE_SEED = 1,
    /**
     * @generated from protobuf enum value: HOME_FIELD_STATUE_SPROUT = 2;
     */
    HOME_FIELD_STATUE_SPROUT = 2,
    /**
     * @generated from protobuf enum value: HOME_FIELD_STATUE_GATHER = 3;
     */
    HOME_FIELD_STATUE_GATHER = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class HomeVerifyFurnitureData$Type extends MessageType<HomeVerifyFurnitureData> {
    constructor() {
        super("com.midnights.game.HomeVerifyFurnitureData", [
            { no: 7, name: "type", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeVerifyFurnitureData>): HomeVerifyFurnitureData {
        const message = { type: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeVerifyFurnitureData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeVerifyFurnitureData): HomeVerifyFurnitureData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 type */ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.type.push(reader.uint32());
                    else
                        message.type.push(reader.uint32());
                    break;
                case /* optional uint32 id */ 5:
                    message.id = reader.uint32();
                    break;
                case /* optional uint32 num */ 9:
                    message.num = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeVerifyFurnitureData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 type = 7; */
        for (let i = 0; i < message.type.length; i++)
            writer.tag(7, WireType.Varint).uint32(message.type[i]);
        /* optional uint32 id = 5; */
        if (message.id !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.id);
        /* optional uint32 num = 9; */
        if (message.num !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.num);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeVerifyFurnitureData
 */
export const HomeVerifyFurnitureData = new HomeVerifyFurnitureData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeVerifyBlockData$Type extends MessageType<HomeVerifyBlockData> {
    constructor() {
        super("com.midnights.game.HomeVerifyBlockData", [
            { no: 10, name: "block_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "furniture_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeVerifyBlockData>): HomeVerifyBlockData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeVerifyBlockData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeVerifyBlockData): HomeVerifyBlockData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 block_id */ 10:
                    message.blockId = reader.uint32();
                    break;
                case /* optional uint32 furniture_count */ 9:
                    message.furnitureCount = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeVerifyBlockData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 block_id = 10; */
        if (message.blockId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.blockId);
        /* optional uint32 furniture_count = 9; */
        if (message.furnitureCount !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.furnitureCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeVerifyBlockData
 */
export const HomeVerifyBlockData = new HomeVerifyBlockData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeVerifySceneData$Type extends MessageType<HomeVerifySceneData> {
    constructor() {
        super("com.midnights.game.HomeVerifySceneData", [
            { no: 6, name: "blocks", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeVerifyBlockData },
            { no: 11, name: "module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "version", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "is_room", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeVerifySceneData>): HomeVerifySceneData {
        const message = { blocks: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeVerifySceneData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeVerifySceneData): HomeVerifySceneData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeVerifyBlockData blocks */ 6:
                    message.blocks.push(HomeVerifyBlockData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 module_id */ 11:
                    message.moduleId = reader.uint32();
                    break;
                case /* optional uint32 scene_id */ 4:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 version */ 14:
                    message.version = reader.uint32();
                    break;
                case /* optional uint32 is_room */ 2:
                    message.isRoom = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeVerifySceneData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeVerifyBlockData blocks = 6; */
        for (let i = 0; i < message.blocks.length; i++)
            HomeVerifyBlockData.internalBinaryWrite(message.blocks[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 module_id = 11; */
        if (message.moduleId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.moduleId);
        /* optional uint32 scene_id = 4; */
        if (message.sceneId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 version = 14; */
        if (message.version !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.version);
        /* optional uint32 is_room = 2; */
        if (message.isRoom !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.isRoom);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeVerifySceneData
 */
export const HomeVerifySceneData = new HomeVerifySceneData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeVerifyData$Type extends MessageType<HomeVerifyData> {
    constructor() {
        super("com.midnights.game.HomeVerifyData", [
            { no: 7, name: "aid", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "timestamp", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 5, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "arrangement_data", kind: "message", T: () => HomeSceneArrangementMuipData },
            { no: 3, name: "region", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 1, name: "token", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "home_info", kind: "message", T: () => HomeVerifySceneData },
            { no: 8, name: "lang", kind: "enum", opt: true, T: () => ["com.midnights.game.LanguageType", LanguageType] }
        ]);
    }
    create(value?: PartialMessage<HomeVerifyData>): HomeVerifyData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeVerifyData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeVerifyData): HomeVerifyData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string aid */ 7:
                    message.aid = reader.string();
                    break;
                case /* optional fixed32 timestamp */ 15:
                    message.timestamp = reader.fixed32();
                    break;
                case /* optional uint32 uid */ 5:
                    message.uid = reader.uint32();
                    break;
                case /* optional com.midnights.game.HomeSceneArrangementMuipData arrangement_data */ 9:
                    message.arrangementData = HomeSceneArrangementMuipData.internalBinaryRead(reader, reader.uint32(), options, message.arrangementData);
                    break;
                case /* optional string region */ 3:
                    message.region = reader.string();
                    break;
                case /* optional string token */ 1:
                    message.token = reader.string();
                    break;
                case /* optional com.midnights.game.HomeVerifySceneData home_info */ 6:
                    message.homeInfo = HomeVerifySceneData.internalBinaryRead(reader, reader.uint32(), options, message.homeInfo);
                    break;
                case /* optional com.midnights.game.LanguageType lang */ 8:
                    message.lang = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeVerifyData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string aid = 7; */
        if (message.aid !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.aid);
        /* optional fixed32 timestamp = 15; */
        if (message.timestamp !== undefined)
            writer.tag(15, WireType.Bit32).fixed32(message.timestamp);
        /* optional uint32 uid = 5; */
        if (message.uid !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.uid);
        /* optional com.midnights.game.HomeSceneArrangementMuipData arrangement_data = 9; */
        if (message.arrangementData)
            HomeSceneArrangementMuipData.internalBinaryWrite(message.arrangementData, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional string region = 3; */
        if (message.region !== undefined)
            writer.tag(3, WireType.LengthDelimited).string(message.region);
        /* optional string token = 1; */
        if (message.token !== undefined)
            writer.tag(1, WireType.LengthDelimited).string(message.token);
        /* optional com.midnights.game.HomeVerifySceneData home_info = 6; */
        if (message.homeInfo)
            HomeVerifySceneData.internalBinaryWrite(message.homeInfo, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.LanguageType lang = 8; */
        if (message.lang !== undefined)
            writer.tag(8, WireType.Varint).int32(message.lang);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeVerifyData
 */
export const HomeVerifyData = new HomeVerifyData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TryEnterHomeReq$Type extends MessageType<TryEnterHomeReq> {
    constructor() {
        super("com.midnights.game.TryEnterHomeReq", [
            { no: 3, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "is_transfer_to_safe_point", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "target_point", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TryEnterHomeReq>): TryEnterHomeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TryEnterHomeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TryEnterHomeReq): TryEnterHomeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 3:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional bool is_transfer_to_safe_point */ 10:
                    message.isTransferToSafePoint = reader.bool();
                    break;
                case /* optional uint32 target_point */ 9:
                    message.targetPoint = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TryEnterHomeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 3; */
        if (message.targetUid !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.targetUid);
        /* optional bool is_transfer_to_safe_point = 10; */
        if (message.isTransferToSafePoint !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isTransferToSafePoint);
        /* optional uint32 target_point = 9; */
        if (message.targetPoint !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.targetPoint);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TryEnterHomeReq
 */
export const TryEnterHomeReq = new TryEnterHomeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TryEnterHomeRsp$Type extends MessageType<TryEnterHomeRsp> {
    constructor() {
        super("com.midnights.game.TryEnterHomeRsp", [
            { no: 15, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "param_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TryEnterHomeRsp>): TryEnterHomeRsp {
        const message = { paramList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TryEnterHomeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TryEnterHomeRsp): TryEnterHomeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 15:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 param_list */ 10:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.paramList.push(reader.uint32());
                    else
                        message.paramList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TryEnterHomeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 15; */
        if (message.targetUid !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.targetUid);
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        /* repeated uint32 param_list = 10; */
        for (let i = 0; i < message.paramList.length; i++)
            writer.tag(10, WireType.Varint).uint32(message.paramList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TryEnterHomeRsp
 */
export const TryEnterHomeRsp = new TryEnterHomeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class JoinHomeWorldFailNotify$Type extends MessageType<JoinHomeWorldFailNotify> {
    constructor() {
        super("com.midnights.game.JoinHomeWorldFailNotify", [
            { no: 6, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<JoinHomeWorldFailNotify>): JoinHomeWorldFailNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<JoinHomeWorldFailNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: JoinHomeWorldFailNotify): JoinHomeWorldFailNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 6:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: JoinHomeWorldFailNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 6; */
        if (message.targetUid !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.targetUid);
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.JoinHomeWorldFailNotify
 */
export const JoinHomeWorldFailNotify = new JoinHomeWorldFailNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBlockNotify$Type extends MessageType<HomeBlockNotify> {
    constructor() {
        super("com.midnights.game.HomeBlockNotify", [
            { no: 3, name: "end_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBlockNotify>): HomeBlockNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBlockNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBlockNotify): HomeBlockNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 end_time */ 3:
                    message.endTime = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBlockNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 end_time = 3; */
        if (message.endTime !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.endTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBlockNotify
 */
export const HomeBlockNotify = new HomeBlockNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBasicInfo$Type extends MessageType<HomeBasicInfo> {
    constructor() {
        super("com.midnights.game.HomeBasicInfo", [
            { no: 10, name: "level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "cur_room_scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "cur_module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "is_in_edit_mode", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "home_owner_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "exp", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "limited_shop_info", kind: "message", T: () => HomeLimitedShopInfo },
            { no: 4, name: "owner_nick_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBasicInfo>): HomeBasicInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBasicInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBasicInfo): HomeBasicInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 level */ 10:
                    message.level = reader.uint32();
                    break;
                case /* optional uint32 cur_room_scene_id */ 13:
                    message.curRoomSceneId = reader.uint32();
                    break;
                case /* optional uint32 cur_module_id */ 9:
                    message.curModuleId = reader.uint32();
                    break;
                case /* optional bool is_in_edit_mode */ 5:
                    message.isInEditMode = reader.bool();
                    break;
                case /* optional uint32 home_owner_uid */ 3:
                    message.homeOwnerUid = reader.uint32();
                    break;
                case /* optional uint64 exp */ 14:
                    message.exp = reader.uint64().toBigInt();
                    break;
                case /* optional com.midnights.game.HomeLimitedShopInfo limited_shop_info */ 15:
                    message.limitedShopInfo = HomeLimitedShopInfo.internalBinaryRead(reader, reader.uint32(), options, message.limitedShopInfo);
                    break;
                case /* optional string owner_nick_name */ 4:
                    message.ownerNickName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBasicInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 level = 10; */
        if (message.level !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.level);
        /* optional uint32 cur_room_scene_id = 13; */
        if (message.curRoomSceneId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.curRoomSceneId);
        /* optional uint32 cur_module_id = 9; */
        if (message.curModuleId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.curModuleId);
        /* optional bool is_in_edit_mode = 5; */
        if (message.isInEditMode !== undefined)
            writer.tag(5, WireType.Varint).bool(message.isInEditMode);
        /* optional uint32 home_owner_uid = 3; */
        if (message.homeOwnerUid !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.homeOwnerUid);
        /* optional uint64 exp = 14; */
        if (message.exp !== undefined)
            writer.tag(14, WireType.Varint).uint64(message.exp);
        /* optional com.midnights.game.HomeLimitedShopInfo limited_shop_info = 15; */
        if (message.limitedShopInfo)
            HomeLimitedShopInfo.internalBinaryWrite(message.limitedShopInfo, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional string owner_nick_name = 4; */
        if (message.ownerNickName !== undefined)
            writer.tag(4, WireType.LengthDelimited).string(message.ownerNickName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBasicInfo
 */
export const HomeBasicInfo = new HomeBasicInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetBasicInfoReq$Type extends MessageType<HomeGetBasicInfoReq> {
    constructor() {
        super("com.midnights.game.HomeGetBasicInfoReq", []);
    }
    create(value?: PartialMessage<HomeGetBasicInfoReq>): HomeGetBasicInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetBasicInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetBasicInfoReq): HomeGetBasicInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeGetBasicInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetBasicInfoReq
 */
export const HomeGetBasicInfoReq = new HomeGetBasicInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBasicInfoNotify$Type extends MessageType<HomeBasicInfoNotify> {
    constructor() {
        super("com.midnights.game.HomeBasicInfoNotify", [
            { no: 15, name: "basic_info", kind: "message", T: () => HomeBasicInfo }
        ]);
    }
    create(value?: PartialMessage<HomeBasicInfoNotify>): HomeBasicInfoNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBasicInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBasicInfoNotify): HomeBasicInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeBasicInfo basic_info */ 15:
                    message.basicInfo = HomeBasicInfo.internalBinaryRead(reader, reader.uint32(), options, message.basicInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBasicInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeBasicInfo basic_info = 15; */
        if (message.basicInfo)
            HomeBasicInfo.internalBinaryWrite(message.basicInfo, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBasicInfoNotify
 */
export const HomeBasicInfoNotify = new HomeBasicInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChangeEditModeReq$Type extends MessageType<HomeChangeEditModeReq> {
    constructor() {
        super("com.midnights.game.HomeChangeEditModeReq", [
            { no: 12, name: "is_enter_edit_mode", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChangeEditModeReq>): HomeChangeEditModeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChangeEditModeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChangeEditModeReq): HomeChangeEditModeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_enter_edit_mode */ 12:
                    message.isEnterEditMode = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChangeEditModeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_enter_edit_mode = 12; */
        if (message.isEnterEditMode !== undefined)
            writer.tag(12, WireType.Varint).bool(message.isEnterEditMode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChangeEditModeReq
 */
export const HomeChangeEditModeReq = new HomeChangeEditModeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChangeEditModeRsp$Type extends MessageType<HomeChangeEditModeRsp> {
    constructor() {
        super("com.midnights.game.HomeChangeEditModeRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "is_enter_edit_mode", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChangeEditModeRsp>): HomeChangeEditModeRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChangeEditModeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChangeEditModeRsp): HomeChangeEditModeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* optional bool is_enter_edit_mode */ 5:
                    message.isEnterEditMode = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChangeEditModeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* optional bool is_enter_edit_mode = 5; */
        if (message.isEnterEditMode !== undefined)
            writer.tag(5, WireType.Varint).bool(message.isEnterEditMode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChangeEditModeRsp
 */
export const HomeChangeEditModeRsp = new HomeChangeEditModeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChangeModuleReq$Type extends MessageType<HomeChangeModuleReq> {
    constructor() {
        super("com.midnights.game.HomeChangeModuleReq", [
            { no: 5, name: "target_module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChangeModuleReq>): HomeChangeModuleReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChangeModuleReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChangeModuleReq): HomeChangeModuleReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_module_id */ 5:
                    message.targetModuleId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChangeModuleReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_module_id = 5; */
        if (message.targetModuleId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.targetModuleId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChangeModuleReq
 */
export const HomeChangeModuleReq = new HomeChangeModuleReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChangeModuleRsp$Type extends MessageType<HomeChangeModuleRsp> {
    constructor() {
        super("com.midnights.game.HomeChangeModuleRsp", [
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "target_module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChangeModuleRsp>): HomeChangeModuleRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChangeModuleRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChangeModuleRsp): HomeChangeModuleRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 target_module_id */ 2:
                    message.targetModuleId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChangeModuleRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        /* optional uint32 target_module_id = 2; */
        if (message.targetModuleId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.targetModuleId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChangeModuleRsp
 */
export const HomeChangeModuleRsp = new HomeChangeModuleRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeFurnitureData$Type extends MessageType<HomeFurnitureData> {
    constructor() {
        super("com.midnights.game.HomeFurnitureData", [
            { no: 6, name: "version", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "parent_furniture_index", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "furniture_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "spawn_rot", kind: "message", T: () => Vector },
            { no: 8, name: "spawn_pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<HomeFurnitureData>): HomeFurnitureData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeFurnitureData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeFurnitureData): HomeFurnitureData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 version */ 6:
                    message.version = reader.uint32();
                    break;
                case /* optional int32 parent_furniture_index */ 3:
                    message.parentFurnitureIndex = reader.int32();
                    break;
                case /* optional uint32 furniture_id */ 4:
                    message.furnitureId = reader.uint32();
                    break;
                case /* optional uint32 guid */ 9:
                    message.guid = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector spawn_rot */ 10:
                    message.spawnRot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnRot);
                    break;
                case /* optional com.midnights.game.Vector spawn_pos */ 8:
                    message.spawnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnPos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeFurnitureData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 version = 6; */
        if (message.version !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.version);
        /* optional int32 parent_furniture_index = 3; */
        if (message.parentFurnitureIndex !== undefined)
            writer.tag(3, WireType.Varint).int32(message.parentFurnitureIndex);
        /* optional uint32 furniture_id = 4; */
        if (message.furnitureId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.furnitureId);
        /* optional uint32 guid = 9; */
        if (message.guid !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.guid);
        /* optional com.midnights.game.Vector spawn_rot = 10; */
        if (message.spawnRot)
            Vector.internalBinaryWrite(message.spawnRot, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.Vector spawn_pos = 8; */
        if (message.spawnPos)
            Vector.internalBinaryWrite(message.spawnPos, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeFurnitureData
 */
export const HomeFurnitureData = new HomeFurnitureData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeFurnitureSuiteData$Type extends MessageType<HomeFurnitureSuiteData> {
    constructor() {
        super("com.midnights.game.HomeFurnitureSuiteData", [
            { no: 10, name: "is_allow_summon", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "suite_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "spawn_pos", kind: "message", T: () => Vector },
            { no: 13, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "included_furniture_index_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeFurnitureSuiteData>): HomeFurnitureSuiteData {
        const message = { includedFurnitureIndexList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeFurnitureSuiteData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeFurnitureSuiteData): HomeFurnitureSuiteData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_allow_summon */ 10:
                    message.isAllowSummon = reader.bool();
                    break;
                case /* optional uint32 suite_id */ 6:
                    message.suiteId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector spawn_pos */ 8:
                    message.spawnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnPos);
                    break;
                case /* optional uint32 guid */ 13:
                    message.guid = reader.uint32();
                    break;
                case /* repeated int32 included_furniture_index_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.includedFurnitureIndexList.push(reader.int32());
                    else
                        message.includedFurnitureIndexList.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeFurnitureSuiteData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_allow_summon = 10; */
        if (message.isAllowSummon !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isAllowSummon);
        /* optional uint32 suite_id = 6; */
        if (message.suiteId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.suiteId);
        /* optional com.midnights.game.Vector spawn_pos = 8; */
        if (message.spawnPos)
            Vector.internalBinaryWrite(message.spawnPos, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 guid = 13; */
        if (message.guid !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.guid);
        /* repeated int32 included_furniture_index_list = 1; */
        for (let i = 0; i < message.includedFurnitureIndexList.length; i++)
            writer.tag(1, WireType.Varint).int32(message.includedFurnitureIndexList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeFurnitureSuiteData
 */
export const HomeFurnitureSuiteData = new HomeFurnitureSuiteData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeNpcData$Type extends MessageType<HomeNpcData> {
    constructor() {
        super("com.midnights.game.HomeNpcData", [
            { no: 14, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "spawn_pos", kind: "message", T: () => Vector },
            { no: 3, name: "costume_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "spawn_rot", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<HomeNpcData>): HomeNpcData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeNpcData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeNpcData): HomeNpcData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 avatar_id */ 14:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector spawn_pos */ 15:
                    message.spawnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnPos);
                    break;
                case /* optional uint32 costume_id */ 3:
                    message.costumeId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector spawn_rot */ 13:
                    message.spawnRot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnRot);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeNpcData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 avatar_id = 14; */
        if (message.avatarId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.avatarId);
        /* optional com.midnights.game.Vector spawn_pos = 15; */
        if (message.spawnPos)
            Vector.internalBinaryWrite(message.spawnPos, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 costume_id = 3; */
        if (message.costumeId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.costumeId);
        /* optional com.midnights.game.Vector spawn_rot = 13; */
        if (message.spawnRot)
            Vector.internalBinaryWrite(message.spawnRot, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeNpcData
 */
export const HomeNpcData = new HomeNpcData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAnimalData$Type extends MessageType<HomeAnimalData> {
    constructor() {
        super("com.midnights.game.HomeAnimalData", [
            { no: 10, name: "spawn_rot", kind: "message", T: () => Vector },
            { no: 5, name: "furniture_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "spawn_pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<HomeAnimalData>): HomeAnimalData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAnimalData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAnimalData): HomeAnimalData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Vector spawn_rot */ 10:
                    message.spawnRot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnRot);
                    break;
                case /* optional uint32 furniture_id */ 5:
                    message.furnitureId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector spawn_pos */ 6:
                    message.spawnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnPos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAnimalData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Vector spawn_rot = 10; */
        if (message.spawnRot)
            Vector.internalBinaryWrite(message.spawnRot, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 furniture_id = 5; */
        if (message.furnitureId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.furnitureId);
        /* optional com.midnights.game.Vector spawn_pos = 6; */
        if (message.spawnPos)
            Vector.internalBinaryWrite(message.spawnPos, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAnimalData
 */
export const HomeAnimalData = new HomeAnimalData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WeekendDjinnInfo$Type extends MessageType<WeekendDjinnInfo> {
    constructor() {
        super("com.midnights.game.WeekendDjinnInfo", [
            { no: 14, name: "rot", kind: "message", T: () => Vector },
            { no: 10, name: "pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<WeekendDjinnInfo>): WeekendDjinnInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WeekendDjinnInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WeekendDjinnInfo): WeekendDjinnInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Vector rot */ 14:
                    message.rot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.rot);
                    break;
                case /* optional com.midnights.game.Vector pos */ 10:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WeekendDjinnInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Vector rot = 14; */
        if (message.rot)
            Vector.internalBinaryWrite(message.rot, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.Vector pos = 10; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WeekendDjinnInfo
 */
export const WeekendDjinnInfo = new WeekendDjinnInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBlockDotPattern$Type extends MessageType<HomeBlockDotPattern> {
    constructor() {
        super("com.midnights.game.HomeBlockDotPattern", [
            { no: 8, name: "width", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "height", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "data", kind: "scalar", opt: true, T: 12 /*ScalarType.BYTES*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBlockDotPattern>): HomeBlockDotPattern {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBlockDotPattern>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBlockDotPattern): HomeBlockDotPattern {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 width */ 8:
                    message.width = reader.uint32();
                    break;
                case /* optional uint32 height */ 11:
                    message.height = reader.uint32();
                    break;
                case /* optional bytes data */ 9:
                    message.data = reader.bytes();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBlockDotPattern, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 width = 8; */
        if (message.width !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.width);
        /* optional uint32 height = 11; */
        if (message.height !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.height);
        /* optional bytes data = 9; */
        if (message.data !== undefined)
            writer.tag(9, WireType.LengthDelimited).bytes(message.data);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBlockDotPattern
 */
export const HomeBlockDotPattern = new HomeBlockDotPattern$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBlockSubFieldData$Type extends MessageType<HomeBlockSubFieldData> {
    constructor() {
        super("com.midnights.game.HomeBlockSubFieldData", [
            { no: 3, name: "rot", kind: "message", T: () => Vector },
            { no: 1, name: "pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<HomeBlockSubFieldData>): HomeBlockSubFieldData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBlockSubFieldData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBlockSubFieldData): HomeBlockSubFieldData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Vector rot */ 3:
                    message.rot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.rot);
                    break;
                case /* optional com.midnights.game.Vector pos */ 1:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBlockSubFieldData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Vector rot = 3; */
        if (message.rot)
            Vector.internalBinaryWrite(message.rot, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.Vector pos = 1; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBlockSubFieldData
 */
export const HomeBlockSubFieldData = new HomeBlockSubFieldData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBlockFieldData$Type extends MessageType<HomeBlockFieldData> {
    constructor() {
        super("com.midnights.game.HomeBlockFieldData", [
            { no: 15, name: "rot", kind: "message", T: () => Vector },
            { no: 4, name: "pos", kind: "message", T: () => Vector },
            { no: 9, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "furniture_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "sub_field_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeBlockSubFieldData }
        ]);
    }
    create(value?: PartialMessage<HomeBlockFieldData>): HomeBlockFieldData {
        const message = { subFieldList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBlockFieldData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBlockFieldData): HomeBlockFieldData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Vector rot */ 15:
                    message.rot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.rot);
                    break;
                case /* optional com.midnights.game.Vector pos */ 4:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                case /* optional uint32 guid */ 9:
                    message.guid = reader.uint32();
                    break;
                case /* optional uint32 furniture_id */ 1:
                    message.furnitureId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.HomeBlockSubFieldData sub_field_list */ 7:
                    message.subFieldList.push(HomeBlockSubFieldData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBlockFieldData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Vector rot = 15; */
        if (message.rot)
            Vector.internalBinaryWrite(message.rot, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.Vector pos = 4; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 guid = 9; */
        if (message.guid !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.guid);
        /* optional uint32 furniture_id = 1; */
        if (message.furnitureId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.furnitureId);
        /* repeated com.midnights.game.HomeBlockSubFieldData sub_field_list = 7; */
        for (let i = 0; i < message.subFieldList.length; i++)
            HomeBlockSubFieldData.internalBinaryWrite(message.subFieldList[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBlockFieldData
 */
export const HomeBlockFieldData = new HomeBlockFieldData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeTransferData$Type extends MessageType<HomeTransferData> {
    constructor() {
        super("com.midnights.game.HomeTransferData", [
            { no: 15, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "spawn_pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<HomeTransferData>): HomeTransferData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeTransferData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeTransferData): HomeTransferData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 guid */ 15:
                    message.guid = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector spawn_pos */ 7:
                    message.spawnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnPos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeTransferData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 guid = 15; */
        if (message.guid !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.guid);
        /* optional com.midnights.game.Vector spawn_pos = 7; */
        if (message.spawnPos)
            Vector.internalBinaryWrite(message.spawnPos, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeTransferData
 */
export const HomeTransferData = new HomeTransferData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeFurnitureGroupData$Type extends MessageType<HomeFurnitureGroupData> {
    constructor() {
        super("com.midnights.game.HomeFurnitureGroupData", [
            { no: 8, name: "group_furniture_index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "virtual_furniure_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFurnitureData }
        ]);
    }
    create(value?: PartialMessage<HomeFurnitureGroupData>): HomeFurnitureGroupData {
        const message = { virtualFurniureList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeFurnitureGroupData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeFurnitureGroupData): HomeFurnitureGroupData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 group_furniture_index */ 8:
                    message.groupFurnitureIndex = reader.uint32();
                    break;
                case /* repeated com.midnights.game.HomeFurnitureData virtual_furniure_list */ 3:
                    message.virtualFurniureList.push(HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeFurnitureGroupData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 group_furniture_index = 8; */
        if (message.groupFurnitureIndex !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.groupFurnitureIndex);
        /* repeated com.midnights.game.HomeFurnitureData virtual_furniure_list = 3; */
        for (let i = 0; i < message.virtualFurniureList.length; i++)
            HomeFurnitureData.internalBinaryWrite(message.virtualFurniureList[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeFurnitureGroupData
 */
export const HomeFurnitureGroupData = new HomeFurnitureGroupData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeFurnitureCustomSuiteData$Type extends MessageType<HomeFurnitureCustomSuiteData> {
    constructor() {
        super("com.midnights.game.HomeFurnitureCustomSuiteData", [
            { no: 11, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "spawn_pos", kind: "message", T: () => Vector },
            { no: 12, name: "included_furniture_index_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeFurnitureCustomSuiteData>): HomeFurnitureCustomSuiteData {
        const message = { includedFurnitureIndexList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeFurnitureCustomSuiteData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeFurnitureCustomSuiteData): HomeFurnitureCustomSuiteData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 guid */ 11:
                    message.guid = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector spawn_pos */ 14:
                    message.spawnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnPos);
                    break;
                case /* repeated int32 included_furniture_index_list */ 12:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.includedFurnitureIndexList.push(reader.int32());
                    else
                        message.includedFurnitureIndexList.push(reader.int32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeFurnitureCustomSuiteData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 guid = 11; */
        if (message.guid !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.guid);
        /* optional com.midnights.game.Vector spawn_pos = 14; */
        if (message.spawnPos)
            Vector.internalBinaryWrite(message.spawnPos, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* repeated int32 included_furniture_index_list = 12; */
        for (let i = 0; i < message.includedFurnitureIndexList.length; i++)
            writer.tag(12, WireType.Varint).int32(message.includedFurnitureIndexList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeFurnitureCustomSuiteData
 */
export const HomeFurnitureCustomSuiteData = new HomeFurnitureCustomSuiteData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBlockArrangementInfo$Type extends MessageType<HomeBlockArrangementInfo> {
    constructor() {
        super("com.midnights.game.HomeBlockArrangementInfo", [
            { no: 1, name: "is_unlocked", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "comfort_value", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "deploy_animal_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeAnimalData },
            { no: 5, name: "furniture_group_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFurnitureGroupData },
            { no: 13, name: "weekend_djinn_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => WeekendDjinnInfo },
            { no: 15, name: "furniture_suite_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFurnitureSuiteData },
            { no: 3, name: "field_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeBlockFieldData },
            { no: 11, name: "deploy_npc_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeNpcData },
            { no: 7, name: "dot_pattern_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeBlockDotPattern },
            { no: 9, name: "persistent_furniture_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFurnitureData },
            { no: 12, name: "deploy_furniure_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFurnitureData },
            { no: 6, name: "block_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "furniture_custom_suite_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFurnitureCustomSuiteData }
        ]);
    }
    create(value?: PartialMessage<HomeBlockArrangementInfo>): HomeBlockArrangementInfo {
        const message = { deployAnimalList: [], furnitureGroupList: [], weekendDjinnInfoList: [], furnitureSuiteList: [], fieldList: [], deployNpcList: [], dotPatternList: [], persistentFurnitureList: [], deployFurniureList: [], furnitureCustomSuiteList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBlockArrangementInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBlockArrangementInfo): HomeBlockArrangementInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_unlocked */ 1:
                    message.isUnlocked = reader.bool();
                    break;
                case /* optional uint32 comfort_value */ 2:
                    message.comfortValue = reader.uint32();
                    break;
                case /* repeated com.midnights.game.HomeAnimalData deploy_animal_list */ 4:
                    message.deployAnimalList.push(HomeAnimalData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.HomeFurnitureGroupData furniture_group_list */ 5:
                    message.furnitureGroupList.push(HomeFurnitureGroupData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.WeekendDjinnInfo weekend_djinn_info_list */ 13:
                    message.weekendDjinnInfoList.push(WeekendDjinnInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.HomeFurnitureSuiteData furniture_suite_list */ 15:
                    message.furnitureSuiteList.push(HomeFurnitureSuiteData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.HomeBlockFieldData field_list */ 3:
                    message.fieldList.push(HomeBlockFieldData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.HomeNpcData deploy_npc_list */ 11:
                    message.deployNpcList.push(HomeNpcData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.HomeBlockDotPattern dot_pattern_list */ 7:
                    message.dotPatternList.push(HomeBlockDotPattern.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.HomeFurnitureData persistent_furniture_list */ 9:
                    message.persistentFurnitureList.push(HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.HomeFurnitureData deploy_furniure_list */ 12:
                    message.deployFurniureList.push(HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 block_id */ 6:
                    message.blockId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.HomeFurnitureCustomSuiteData furniture_custom_suite_list */ 14:
                    message.furnitureCustomSuiteList.push(HomeFurnitureCustomSuiteData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBlockArrangementInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_unlocked = 1; */
        if (message.isUnlocked !== undefined)
            writer.tag(1, WireType.Varint).bool(message.isUnlocked);
        /* optional uint32 comfort_value = 2; */
        if (message.comfortValue !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.comfortValue);
        /* repeated com.midnights.game.HomeAnimalData deploy_animal_list = 4; */
        for (let i = 0; i < message.deployAnimalList.length; i++)
            HomeAnimalData.internalBinaryWrite(message.deployAnimalList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeFurnitureGroupData furniture_group_list = 5; */
        for (let i = 0; i < message.furnitureGroupList.length; i++)
            HomeFurnitureGroupData.internalBinaryWrite(message.furnitureGroupList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.WeekendDjinnInfo weekend_djinn_info_list = 13; */
        for (let i = 0; i < message.weekendDjinnInfoList.length; i++)
            WeekendDjinnInfo.internalBinaryWrite(message.weekendDjinnInfoList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeFurnitureSuiteData furniture_suite_list = 15; */
        for (let i = 0; i < message.furnitureSuiteList.length; i++)
            HomeFurnitureSuiteData.internalBinaryWrite(message.furnitureSuiteList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeBlockFieldData field_list = 3; */
        for (let i = 0; i < message.fieldList.length; i++)
            HomeBlockFieldData.internalBinaryWrite(message.fieldList[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeNpcData deploy_npc_list = 11; */
        for (let i = 0; i < message.deployNpcList.length; i++)
            HomeNpcData.internalBinaryWrite(message.deployNpcList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeBlockDotPattern dot_pattern_list = 7; */
        for (let i = 0; i < message.dotPatternList.length; i++)
            HomeBlockDotPattern.internalBinaryWrite(message.dotPatternList[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeFurnitureData persistent_furniture_list = 9; */
        for (let i = 0; i < message.persistentFurnitureList.length; i++)
            HomeFurnitureData.internalBinaryWrite(message.persistentFurnitureList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeFurnitureData deploy_furniure_list = 12; */
        for (let i = 0; i < message.deployFurniureList.length; i++)
            HomeFurnitureData.internalBinaryWrite(message.deployFurniureList[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 block_id = 6; */
        if (message.blockId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.blockId);
        /* repeated com.midnights.game.HomeFurnitureCustomSuiteData furniture_custom_suite_list = 14; */
        for (let i = 0; i < message.furnitureCustomSuiteList.length; i++)
            HomeFurnitureCustomSuiteData.internalBinaryWrite(message.furnitureCustomSuiteList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBlockArrangementInfo
 */
export const HomeBlockArrangementInfo = new HomeBlockArrangementInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSceneArrangementInfo$Type extends MessageType<HomeSceneArrangementInfo> {
    constructor() {
        super("com.midnights.game.HomeSceneArrangementInfo", [
            { no: 4, name: "born_rot", kind: "message", T: () => Vector },
            { no: 1, name: "born_pos", kind: "message", T: () => Vector },
            { no: 11, name: "stair_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFurnitureData },
            { no: 13, name: "door_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFurnitureData },
            { no: 10, name: "is_set_born_pos", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "block_arrangement_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeBlockArrangementInfo },
            { no: 2, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "bgm_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "djinn_pos", kind: "message", T: () => Vector },
            { no: 14, name: "main_house", kind: "message", T: () => HomeFurnitureData },
            { no: 7, name: "comfort_value", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "tmp_version", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSceneArrangementInfo>): HomeSceneArrangementInfo {
        const message = { stairList: [], doorList: [], blockArrangementInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSceneArrangementInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSceneArrangementInfo): HomeSceneArrangementInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Vector born_rot */ 4:
                    message.bornRot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.bornRot);
                    break;
                case /* optional com.midnights.game.Vector born_pos */ 1:
                    message.bornPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.bornPos);
                    break;
                case /* repeated com.midnights.game.HomeFurnitureData stair_list */ 11:
                    message.stairList.push(HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.HomeFurnitureData door_list */ 13:
                    message.doorList.push(HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional bool is_set_born_pos */ 10:
                    message.isSetBornPos = reader.bool();
                    break;
                case /* repeated com.midnights.game.HomeBlockArrangementInfo block_arrangement_info_list */ 8:
                    message.blockArrangementInfoList.push(HomeBlockArrangementInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 scene_id */ 2:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 bgm_id */ 12:
                    message.bgmId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector djinn_pos */ 9:
                    message.djinnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.djinnPos);
                    break;
                case /* optional com.midnights.game.HomeFurnitureData main_house */ 14:
                    message.mainHouse = HomeFurnitureData.internalBinaryRead(reader, reader.uint32(), options, message.mainHouse);
                    break;
                case /* optional uint32 comfort_value */ 7:
                    message.comfortValue = reader.uint32();
                    break;
                case /* optional uint32 tmp_version */ 5:
                    message.tmpVersion = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSceneArrangementInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Vector born_rot = 4; */
        if (message.bornRot)
            Vector.internalBinaryWrite(message.bornRot, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.Vector born_pos = 1; */
        if (message.bornPos)
            Vector.internalBinaryWrite(message.bornPos, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeFurnitureData stair_list = 11; */
        for (let i = 0; i < message.stairList.length; i++)
            HomeFurnitureData.internalBinaryWrite(message.stairList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeFurnitureData door_list = 13; */
        for (let i = 0; i < message.doorList.length; i++)
            HomeFurnitureData.internalBinaryWrite(message.doorList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_set_born_pos = 10; */
        if (message.isSetBornPos !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isSetBornPos);
        /* repeated com.midnights.game.HomeBlockArrangementInfo block_arrangement_info_list = 8; */
        for (let i = 0; i < message.blockArrangementInfoList.length; i++)
            HomeBlockArrangementInfo.internalBinaryWrite(message.blockArrangementInfoList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 scene_id = 2; */
        if (message.sceneId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 bgm_id = 12; */
        if (message.bgmId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.bgmId);
        /* optional com.midnights.game.Vector djinn_pos = 9; */
        if (message.djinnPos)
            Vector.internalBinaryWrite(message.djinnPos, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.HomeFurnitureData main_house = 14; */
        if (message.mainHouse)
            HomeFurnitureData.internalBinaryWrite(message.mainHouse, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 comfort_value = 7; */
        if (message.comfortValue !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.comfortValue);
        /* optional uint32 tmp_version = 5; */
        if (message.tmpVersion !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.tmpVersion);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSceneArrangementInfo
 */
export const HomeSceneArrangementInfo = new HomeSceneArrangementInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetArrangementInfoReq$Type extends MessageType<HomeGetArrangementInfoReq> {
    constructor() {
        super("com.midnights.game.HomeGetArrangementInfoReq", [
            { no: 13, name: "scene_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeGetArrangementInfoReq>): HomeGetArrangementInfoReq {
        const message = { sceneIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetArrangementInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetArrangementInfoReq): HomeGetArrangementInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 scene_id_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.sceneIdList.push(reader.uint32());
                    else
                        message.sceneIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGetArrangementInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 scene_id_list = 13; */
        for (let i = 0; i < message.sceneIdList.length; i++)
            writer.tag(13, WireType.Varint).uint32(message.sceneIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetArrangementInfoReq
 */
export const HomeGetArrangementInfoReq = new HomeGetArrangementInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetArrangementInfoRsp$Type extends MessageType<HomeGetArrangementInfoRsp> {
    constructor() {
        super("com.midnights.game.HomeGetArrangementInfoRsp", [
            { no: 6, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "scene_arrangement_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeSceneArrangementInfo }
        ]);
    }
    create(value?: PartialMessage<HomeGetArrangementInfoRsp>): HomeGetArrangementInfoRsp {
        const message = { sceneArrangementInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetArrangementInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetArrangementInfoRsp): HomeGetArrangementInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 6:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info_list */ 14:
                    message.sceneArrangementInfoList.push(HomeSceneArrangementInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGetArrangementInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 6; */
        if (message.retcode !== undefined)
            writer.tag(6, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info_list = 14; */
        for (let i = 0; i < message.sceneArrangementInfoList.length; i++)
            HomeSceneArrangementInfo.internalBinaryWrite(message.sceneArrangementInfoList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetArrangementInfoRsp
 */
export const HomeGetArrangementInfoRsp = new HomeGetArrangementInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeUpdateArrangementInfoReq$Type extends MessageType<HomeUpdateArrangementInfoReq> {
    constructor() {
        super("com.midnights.game.HomeUpdateArrangementInfoReq", [
            { no: 6, name: "scene_arrangement_info", kind: "message", T: () => HomeSceneArrangementInfo }
        ]);
    }
    create(value?: PartialMessage<HomeUpdateArrangementInfoReq>): HomeUpdateArrangementInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeUpdateArrangementInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeUpdateArrangementInfoReq): HomeUpdateArrangementInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info */ 6:
                    message.sceneArrangementInfo = HomeSceneArrangementInfo.internalBinaryRead(reader, reader.uint32(), options, message.sceneArrangementInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeUpdateArrangementInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info = 6; */
        if (message.sceneArrangementInfo)
            HomeSceneArrangementInfo.internalBinaryWrite(message.sceneArrangementInfo, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeUpdateArrangementInfoReq
 */
export const HomeUpdateArrangementInfoReq = new HomeUpdateArrangementInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeUpdateArrangementInfoRsp$Type extends MessageType<HomeUpdateArrangementInfoRsp> {
    constructor() {
        super("com.midnights.game.HomeUpdateArrangementInfoRsp", [
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeUpdateArrangementInfoRsp>): HomeUpdateArrangementInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeUpdateArrangementInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeUpdateArrangementInfoRsp): HomeUpdateArrangementInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeUpdateArrangementInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeUpdateArrangementInfoRsp
 */
export const HomeUpdateArrangementInfoRsp = new HomeUpdateArrangementInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerHomeCompInfo$Type extends MessageType<PlayerHomeCompInfo> {
    constructor() {
        super("com.midnights.game.PlayerHomeCompInfo", [
            { no: 4, name: "unlocked_module_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "seen_module_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "levelup_reward_got_level_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "friend_enter_home_option", kind: "enum", opt: true, T: () => ["com.midnights.game.FriendEnterHomeOption", FriendEnterHomeOption, "FRIEND_ENTER_HOME_OPTION_"] }
        ]);
    }
    create(value?: PartialMessage<PlayerHomeCompInfo>): PlayerHomeCompInfo {
        const message = { unlockedModuleIdList: [], seenModuleIdList: [], levelupRewardGotLevelList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerHomeCompInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerHomeCompInfo): PlayerHomeCompInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 unlocked_module_id_list */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.unlockedModuleIdList.push(reader.uint32());
                    else
                        message.unlockedModuleIdList.push(reader.uint32());
                    break;
                case /* repeated uint32 seen_module_id_list */ 2:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.seenModuleIdList.push(reader.uint32());
                    else
                        message.seenModuleIdList.push(reader.uint32());
                    break;
                case /* repeated uint32 levelup_reward_got_level_list */ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.levelupRewardGotLevelList.push(reader.uint32());
                    else
                        message.levelupRewardGotLevelList.push(reader.uint32());
                    break;
                case /* optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option */ 8:
                    message.friendEnterHomeOption = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerHomeCompInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 unlocked_module_id_list = 4; */
        for (let i = 0; i < message.unlockedModuleIdList.length; i++)
            writer.tag(4, WireType.Varint).uint32(message.unlockedModuleIdList[i]);
        /* repeated uint32 seen_module_id_list = 2; */
        for (let i = 0; i < message.seenModuleIdList.length; i++)
            writer.tag(2, WireType.Varint).uint32(message.seenModuleIdList[i]);
        /* repeated uint32 levelup_reward_got_level_list = 7; */
        for (let i = 0; i < message.levelupRewardGotLevelList.length; i++)
            writer.tag(7, WireType.Varint).uint32(message.levelupRewardGotLevelList[i]);
        /* optional com.midnights.game.FriendEnterHomeOption friend_enter_home_option = 8; */
        if (message.friendEnterHomeOption !== undefined)
            writer.tag(8, WireType.Varint).int32(message.friendEnterHomeOption);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerHomeCompInfo
 */
export const PlayerHomeCompInfo = new PlayerHomeCompInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPlayerHomeCompInfoReq$Type extends MessageType<GetPlayerHomeCompInfoReq> {
    constructor() {
        super("com.midnights.game.GetPlayerHomeCompInfoReq", []);
    }
    create(value?: PartialMessage<GetPlayerHomeCompInfoReq>): GetPlayerHomeCompInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPlayerHomeCompInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPlayerHomeCompInfoReq): GetPlayerHomeCompInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetPlayerHomeCompInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPlayerHomeCompInfoReq
 */
export const GetPlayerHomeCompInfoReq = new GetPlayerHomeCompInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerHomeCompInfoNotify$Type extends MessageType<PlayerHomeCompInfoNotify> {
    constructor() {
        super("com.midnights.game.PlayerHomeCompInfoNotify", [
            { no: 4, name: "comp_info", kind: "message", T: () => PlayerHomeCompInfo }
        ]);
    }
    create(value?: PartialMessage<PlayerHomeCompInfoNotify>): PlayerHomeCompInfoNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerHomeCompInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerHomeCompInfoNotify): PlayerHomeCompInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.PlayerHomeCompInfo comp_info */ 4:
                    message.compInfo = PlayerHomeCompInfo.internalBinaryRead(reader, reader.uint32(), options, message.compInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerHomeCompInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.PlayerHomeCompInfo comp_info = 4; */
        if (message.compInfo)
            PlayerHomeCompInfo.internalBinaryWrite(message.compInfo, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerHomeCompInfoNotify
 */
export const PlayerHomeCompInfoNotify = new PlayerHomeCompInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetFriendEnterHomeOptionReq$Type extends MessageType<SetFriendEnterHomeOptionReq> {
    constructor() {
        super("com.midnights.game.SetFriendEnterHomeOptionReq", [
            { no: 7, name: "option", kind: "enum", opt: true, T: () => ["com.midnights.game.FriendEnterHomeOption", FriendEnterHomeOption, "FRIEND_ENTER_HOME_OPTION_"] }
        ]);
    }
    create(value?: PartialMessage<SetFriendEnterHomeOptionReq>): SetFriendEnterHomeOptionReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetFriendEnterHomeOptionReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetFriendEnterHomeOptionReq): SetFriendEnterHomeOptionReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.FriendEnterHomeOption option */ 7:
                    message.option = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetFriendEnterHomeOptionReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.FriendEnterHomeOption option = 7; */
        if (message.option !== undefined)
            writer.tag(7, WireType.Varint).int32(message.option);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetFriendEnterHomeOptionReq
 */
export const SetFriendEnterHomeOptionReq = new SetFriendEnterHomeOptionReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetFriendEnterHomeOptionRsp$Type extends MessageType<SetFriendEnterHomeOptionRsp> {
    constructor() {
        super("com.midnights.game.SetFriendEnterHomeOptionRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SetFriendEnterHomeOptionRsp>): SetFriendEnterHomeOptionRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetFriendEnterHomeOptionRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetFriendEnterHomeOptionRsp): SetFriendEnterHomeOptionRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetFriendEnterHomeOptionRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetFriendEnterHomeOptionRsp
 */
export const SetFriendEnterHomeOptionRsp = new SetFriendEnterHomeOptionRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerApplyEnterHomeNotify$Type extends MessageType<PlayerApplyEnterHomeNotify> {
    constructor() {
        super("com.midnights.game.PlayerApplyEnterHomeNotify", [
            { no: 9, name: "src_player_info", kind: "message", T: () => OnlinePlayerInfo },
            { no: 10, name: "src_app_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerApplyEnterHomeNotify>): PlayerApplyEnterHomeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerApplyEnterHomeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerApplyEnterHomeNotify): PlayerApplyEnterHomeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.OnlinePlayerInfo src_player_info */ 9:
                    message.srcPlayerInfo = OnlinePlayerInfo.internalBinaryRead(reader, reader.uint32(), options, message.srcPlayerInfo);
                    break;
                case /* optional uint32 src_app_id */ 10:
                    message.srcAppId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerApplyEnterHomeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.OnlinePlayerInfo src_player_info = 9; */
        if (message.srcPlayerInfo)
            OnlinePlayerInfo.internalBinaryWrite(message.srcPlayerInfo, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 src_app_id = 10; */
        if (message.srcAppId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.srcAppId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerApplyEnterHomeNotify
 */
export const PlayerApplyEnterHomeNotify = new PlayerApplyEnterHomeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerApplyEnterHomeResultReq$Type extends MessageType<PlayerApplyEnterHomeResultReq> {
    constructor() {
        super("com.midnights.game.PlayerApplyEnterHomeResultReq", [
            { no: 14, name: "apply_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "is_agreed", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerApplyEnterHomeResultReq>): PlayerApplyEnterHomeResultReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerApplyEnterHomeResultReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerApplyEnterHomeResultReq): PlayerApplyEnterHomeResultReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 apply_uid */ 14:
                    message.applyUid = reader.uint32();
                    break;
                case /* optional bool is_agreed */ 10:
                    message.isAgreed = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerApplyEnterHomeResultReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 apply_uid = 14; */
        if (message.applyUid !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.applyUid);
        /* optional bool is_agreed = 10; */
        if (message.isAgreed !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isAgreed);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerApplyEnterHomeResultReq
 */
export const PlayerApplyEnterHomeResultReq = new PlayerApplyEnterHomeResultReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerApplyEnterHomeResultRsp$Type extends MessageType<PlayerApplyEnterHomeResultRsp> {
    constructor() {
        super("com.midnights.game.PlayerApplyEnterHomeResultRsp", [
            { no: 2, name: "is_agreed", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "apply_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "param", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerApplyEnterHomeResultRsp>): PlayerApplyEnterHomeResultRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerApplyEnterHomeResultRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerApplyEnterHomeResultRsp): PlayerApplyEnterHomeResultRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_agreed */ 2:
                    message.isAgreed = reader.bool();
                    break;
                case /* optional uint32 apply_uid */ 11:
                    message.applyUid = reader.uint32();
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 param */ 10:
                    message.param = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerApplyEnterHomeResultRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_agreed = 2; */
        if (message.isAgreed !== undefined)
            writer.tag(2, WireType.Varint).bool(message.isAgreed);
        /* optional uint32 apply_uid = 11; */
        if (message.applyUid !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.applyUid);
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        /* optional uint32 param = 10; */
        if (message.param !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.param);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerApplyEnterHomeResultRsp
 */
export const PlayerApplyEnterHomeResultRsp = new PlayerApplyEnterHomeResultRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerApplyEnterHomeResultNotify$Type extends MessageType<PlayerApplyEnterHomeResultNotify> {
    constructor() {
        super("com.midnights.game.PlayerApplyEnterHomeResultNotify", [
            { no: 7, name: "target_nickname", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.PlayerApplyEnterHomeResultNotify.Reason", PlayerApplyEnterHomeResultNotify_Reason] },
            { no: 12, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "is_agreed", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerApplyEnterHomeResultNotify>): PlayerApplyEnterHomeResultNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerApplyEnterHomeResultNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerApplyEnterHomeResultNotify): PlayerApplyEnterHomeResultNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string target_nickname */ 7:
                    message.targetNickname = reader.string();
                    break;
                case /* optional com.midnights.game.PlayerApplyEnterHomeResultNotify.Reason reason */ 5:
                    message.reason = reader.int32();
                    break;
                case /* optional uint32 target_uid */ 12:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional bool is_agreed */ 9:
                    message.isAgreed = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerApplyEnterHomeResultNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string target_nickname = 7; */
        if (message.targetNickname !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.targetNickname);
        /* optional com.midnights.game.PlayerApplyEnterHomeResultNotify.Reason reason = 5; */
        if (message.reason !== undefined)
            writer.tag(5, WireType.Varint).int32(message.reason);
        /* optional uint32 target_uid = 12; */
        if (message.targetUid !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.targetUid);
        /* optional bool is_agreed = 9; */
        if (message.isAgreed !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isAgreed);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerApplyEnterHomeResultNotify
 */
export const PlayerApplyEnterHomeResultNotify = new PlayerApplyEnterHomeResultNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSceneJumpReq$Type extends MessageType<HomeSceneJumpReq> {
    constructor() {
        super("com.midnights.game.HomeSceneJumpReq", [
            { no: 9, name: "is_enter_room_scene", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSceneJumpReq>): HomeSceneJumpReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSceneJumpReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSceneJumpReq): HomeSceneJumpReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_enter_room_scene */ 9:
                    message.isEnterRoomScene = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSceneJumpReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_enter_room_scene = 9; */
        if (message.isEnterRoomScene !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isEnterRoomScene);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSceneJumpReq
 */
export const HomeSceneJumpReq = new HomeSceneJumpReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSceneJumpRsp$Type extends MessageType<HomeSceneJumpRsp> {
    constructor() {
        super("com.midnights.game.HomeSceneJumpRsp", [
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "is_enter_room_scene", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSceneJumpRsp>): HomeSceneJumpRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSceneJumpRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSceneJumpRsp): HomeSceneJumpRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* optional bool is_enter_room_scene */ 8:
                    message.isEnterRoomScene = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSceneJumpRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        /* optional bool is_enter_room_scene = 8; */
        if (message.isEnterRoomScene !== undefined)
            writer.tag(8, WireType.Varint).bool(message.isEnterRoomScene);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSceneJumpRsp
 */
export const HomeSceneJumpRsp = new HomeSceneJumpRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChooseModuleReq$Type extends MessageType<HomeChooseModuleReq> {
    constructor() {
        super("com.midnights.game.HomeChooseModuleReq", [
            { no: 9, name: "module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChooseModuleReq>): HomeChooseModuleReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChooseModuleReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChooseModuleReq): HomeChooseModuleReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 module_id */ 9:
                    message.moduleId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChooseModuleReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 module_id = 9; */
        if (message.moduleId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.moduleId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChooseModuleReq
 */
export const HomeChooseModuleReq = new HomeChooseModuleReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChooseModuleRsp$Type extends MessageType<HomeChooseModuleRsp> {
    constructor() {
        super("com.midnights.game.HomeChooseModuleRsp", [
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChooseModuleRsp>): HomeChooseModuleRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChooseModuleRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChooseModuleRsp): HomeChooseModuleRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 module_id */ 8:
                    message.moduleId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChooseModuleRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        /* optional uint32 module_id = 8; */
        if (message.moduleId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.moduleId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChooseModuleRsp
 */
export const HomeChooseModuleRsp = new HomeChooseModuleRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeModuleUnlockNotify$Type extends MessageType<HomeModuleUnlockNotify> {
    constructor() {
        super("com.midnights.game.HomeModuleUnlockNotify", [
            { no: 8, name: "module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeModuleUnlockNotify>): HomeModuleUnlockNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeModuleUnlockNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeModuleUnlockNotify): HomeModuleUnlockNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 module_id */ 8:
                    message.moduleId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeModuleUnlockNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 module_id = 8; */
        if (message.moduleId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.moduleId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeModuleUnlockNotify
 */
export const HomeModuleUnlockNotify = new HomeModuleUnlockNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetOnlineStatusReq$Type extends MessageType<HomeGetOnlineStatusReq> {
    constructor() {
        super("com.midnights.game.HomeGetOnlineStatusReq", []);
    }
    create(value?: PartialMessage<HomeGetOnlineStatusReq>): HomeGetOnlineStatusReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetOnlineStatusReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetOnlineStatusReq): HomeGetOnlineStatusReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeGetOnlineStatusReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetOnlineStatusReq
 */
export const HomeGetOnlineStatusReq = new HomeGetOnlineStatusReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetOnlineStatusRsp$Type extends MessageType<HomeGetOnlineStatusRsp> {
    constructor() {
        super("com.midnights.game.HomeGetOnlineStatusRsp", [
            { no: 13, name: "player_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => OnlinePlayerInfo },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeGetOnlineStatusRsp>): HomeGetOnlineStatusRsp {
        const message = { playerInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetOnlineStatusRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetOnlineStatusRsp): HomeGetOnlineStatusRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.OnlinePlayerInfo player_info_list */ 13:
                    message.playerInfoList.push(OnlinePlayerInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGetOnlineStatusRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.OnlinePlayerInfo player_info_list = 13; */
        for (let i = 0; i < message.playerInfoList.length; i++)
            OnlinePlayerInfo.internalBinaryWrite(message.playerInfoList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetOnlineStatusRsp
 */
export const HomeGetOnlineStatusRsp = new HomeGetOnlineStatusRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeKickPlayerReq$Type extends MessageType<HomeKickPlayerReq> {
    constructor() {
        super("com.midnights.game.HomeKickPlayerReq", [
            { no: 12, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "is_kick_all", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeKickPlayerReq>): HomeKickPlayerReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeKickPlayerReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeKickPlayerReq): HomeKickPlayerReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 12:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional bool is_kick_all */ 13:
                    message.isKickAll = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeKickPlayerReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 12; */
        if (message.targetUid !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.targetUid);
        /* optional bool is_kick_all = 13; */
        if (message.isKickAll !== undefined)
            writer.tag(13, WireType.Varint).bool(message.isKickAll);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeKickPlayerReq
 */
export const HomeKickPlayerReq = new HomeKickPlayerReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeKickPlayerRsp$Type extends MessageType<HomeKickPlayerRsp> {
    constructor() {
        super("com.midnights.game.HomeKickPlayerRsp", [
            { no: 4, name: "target_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "is_kick_all", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeKickPlayerRsp>): HomeKickPlayerRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeKickPlayerRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeKickPlayerRsp): HomeKickPlayerRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 target_uid */ 4:
                    message.targetUid = reader.uint32();
                    break;
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                case /* optional bool is_kick_all */ 10:
                    message.isKickAll = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeKickPlayerRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 target_uid = 4; */
        if (message.targetUid !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.targetUid);
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        /* optional bool is_kick_all = 10; */
        if (message.isKickAll !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isKickAll);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeKickPlayerRsp
 */
export const HomeKickPlayerRsp = new HomeKickPlayerRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeModuleSeenReq$Type extends MessageType<HomeModuleSeenReq> {
    constructor() {
        super("com.midnights.game.HomeModuleSeenReq", [
            { no: 5, name: "seen_module_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeModuleSeenReq>): HomeModuleSeenReq {
        const message = { seenModuleIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeModuleSeenReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeModuleSeenReq): HomeModuleSeenReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 seen_module_id_list */ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.seenModuleIdList.push(reader.uint32());
                    else
                        message.seenModuleIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeModuleSeenReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 seen_module_id_list = 5; */
        for (let i = 0; i < message.seenModuleIdList.length; i++)
            writer.tag(5, WireType.Varint).uint32(message.seenModuleIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeModuleSeenReq
 */
export const HomeModuleSeenReq = new HomeModuleSeenReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeModuleSeenRsp$Type extends MessageType<HomeModuleSeenRsp> {
    constructor() {
        super("com.midnights.game.HomeModuleSeenRsp", [
            { no: 13, name: "seen_module_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeModuleSeenRsp>): HomeModuleSeenRsp {
        const message = { seenModuleIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeModuleSeenRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeModuleSeenRsp): HomeModuleSeenRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 seen_module_id_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.seenModuleIdList.push(reader.uint32());
                    else
                        message.seenModuleIdList.push(reader.uint32());
                    break;
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeModuleSeenRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 seen_module_id_list = 13; */
        for (let i = 0; i < message.seenModuleIdList.length; i++)
            writer.tag(13, WireType.Varint).uint32(message.seenModuleIdList[i]);
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeModuleSeenRsp
 */
export const HomeModuleSeenRsp = new HomeModuleSeenRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnlockedFurnitureFormulaDataNotify$Type extends MessageType<UnlockedFurnitureFormulaDataNotify> {
    constructor() {
        super("com.midnights.game.UnlockedFurnitureFormulaDataNotify", [
            { no: 15, name: "furniture_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "is_all", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockedFurnitureFormulaDataNotify>): UnlockedFurnitureFormulaDataNotify {
        const message = { furnitureIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockedFurnitureFormulaDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockedFurnitureFormulaDataNotify): UnlockedFurnitureFormulaDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 furniture_id_list */ 15:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.furnitureIdList.push(reader.uint32());
                    else
                        message.furnitureIdList.push(reader.uint32());
                    break;
                case /* optional bool is_all */ 11:
                    message.isAll = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockedFurnitureFormulaDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 furniture_id_list = 15; */
        for (let i = 0; i < message.furnitureIdList.length; i++)
            writer.tag(15, WireType.Varint).uint32(message.furnitureIdList[i]);
        /* optional bool is_all = 11; */
        if (message.isAll !== undefined)
            writer.tag(11, WireType.Varint).bool(message.isAll);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockedFurnitureFormulaDataNotify
 */
export const UnlockedFurnitureFormulaDataNotify = new UnlockedFurnitureFormulaDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnlockedFurnitureSuiteDataNotify$Type extends MessageType<UnlockedFurnitureSuiteDataNotify> {
    constructor() {
        super("com.midnights.game.UnlockedFurnitureSuiteDataNotify", [
            { no: 10, name: "is_all", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "furniture_suite_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<UnlockedFurnitureSuiteDataNotify>): UnlockedFurnitureSuiteDataNotify {
        const message = { furnitureSuiteIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<UnlockedFurnitureSuiteDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: UnlockedFurnitureSuiteDataNotify): UnlockedFurnitureSuiteDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_all */ 10:
                    message.isAll = reader.bool();
                    break;
                case /* repeated uint32 furniture_suite_id_list */ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.furnitureSuiteIdList.push(reader.uint32());
                    else
                        message.furnitureSuiteIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: UnlockedFurnitureSuiteDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_all = 10; */
        if (message.isAll !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isAll);
        /* repeated uint32 furniture_suite_id_list = 5; */
        for (let i = 0; i < message.furnitureSuiteIdList.length; i++)
            writer.tag(5, WireType.Varint).uint32(message.furnitureSuiteIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.UnlockedFurnitureSuiteDataNotify
 */
export const UnlockedFurnitureSuiteDataNotify = new UnlockedFurnitureSuiteDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetHomeLevelUpRewardReq$Type extends MessageType<GetHomeLevelUpRewardReq> {
    constructor() {
        super("com.midnights.game.GetHomeLevelUpRewardReq", [
            { no: 15, name: "level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetHomeLevelUpRewardReq>): GetHomeLevelUpRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetHomeLevelUpRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetHomeLevelUpRewardReq): GetHomeLevelUpRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 level */ 15:
                    message.level = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetHomeLevelUpRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 level = 15; */
        if (message.level !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.level);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetHomeLevelUpRewardReq
 */
export const GetHomeLevelUpRewardReq = new GetHomeLevelUpRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetHomeLevelUpRewardRsp$Type extends MessageType<GetHomeLevelUpRewardRsp> {
    constructor() {
        super("com.midnights.game.GetHomeLevelUpRewardRsp", [
            { no: 1, name: "level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetHomeLevelUpRewardRsp>): GetHomeLevelUpRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetHomeLevelUpRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetHomeLevelUpRewardRsp): GetHomeLevelUpRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 level */ 1:
                    message.level = reader.uint32();
                    break;
                case /* optional int32 retcode */ 6:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetHomeLevelUpRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 level = 1; */
        if (message.level !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.level);
        /* optional int32 retcode = 6; */
        if (message.retcode !== undefined)
            writer.tag(6, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetHomeLevelUpRewardRsp
 */
export const GetHomeLevelUpRewardRsp = new GetHomeLevelUpRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetFurnitureCurModuleArrangeCountReq$Type extends MessageType<GetFurnitureCurModuleArrangeCountReq> {
    constructor() {
        super("com.midnights.game.GetFurnitureCurModuleArrangeCountReq", []);
    }
    create(value?: PartialMessage<GetFurnitureCurModuleArrangeCountReq>): GetFurnitureCurModuleArrangeCountReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetFurnitureCurModuleArrangeCountReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetFurnitureCurModuleArrangeCountReq): GetFurnitureCurModuleArrangeCountReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetFurnitureCurModuleArrangeCountReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetFurnitureCurModuleArrangeCountReq
 */
export const GetFurnitureCurModuleArrangeCountReq = new GetFurnitureCurModuleArrangeCountReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureCurModuleArrangeCountNotify$Type extends MessageType<FurnitureCurModuleArrangeCountNotify> {
    constructor() {
        super("com.midnights.game.FurnitureCurModuleArrangeCountNotify", [
            { no: 13, name: "furniture_arrange_count_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => Uint32Pair }
        ]);
    }
    create(value?: PartialMessage<FurnitureCurModuleArrangeCountNotify>): FurnitureCurModuleArrangeCountNotify {
        const message = { furnitureArrangeCountList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureCurModuleArrangeCountNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureCurModuleArrangeCountNotify): FurnitureCurModuleArrangeCountNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.Uint32Pair furniture_arrange_count_list */ 13:
                    message.furnitureArrangeCountList.push(Uint32Pair.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureCurModuleArrangeCountNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.Uint32Pair furniture_arrange_count_list = 13; */
        for (let i = 0; i < message.furnitureArrangeCountList.length; i++)
            Uint32Pair.internalBinaryWrite(message.furnitureArrangeCountList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureCurModuleArrangeCountNotify
 */
export const FurnitureCurModuleArrangeCountNotify = new FurnitureCurModuleArrangeCountNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeModuleComfortInfo$Type extends MessageType<HomeModuleComfortInfo> {
    constructor() {
        super("com.midnights.game.HomeModuleComfortInfo", [
            { no: 13, name: "module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "room_scene_comfort_value", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "world_scene_block_comfort_value_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeModuleComfortInfo>): HomeModuleComfortInfo {
        const message = { worldSceneBlockComfortValueList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeModuleComfortInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeModuleComfortInfo): HomeModuleComfortInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 module_id */ 13:
                    message.moduleId = reader.uint32();
                    break;
                case /* optional uint32 room_scene_comfort_value */ 9:
                    message.roomSceneComfortValue = reader.uint32();
                    break;
                case /* repeated uint32 world_scene_block_comfort_value_list */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.worldSceneBlockComfortValueList.push(reader.uint32());
                    else
                        message.worldSceneBlockComfortValueList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeModuleComfortInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 module_id = 13; */
        if (message.moduleId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.moduleId);
        /* optional uint32 room_scene_comfort_value = 9; */
        if (message.roomSceneComfortValue !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.roomSceneComfortValue);
        /* repeated uint32 world_scene_block_comfort_value_list = 3; */
        for (let i = 0; i < message.worldSceneBlockComfortValueList.length; i++)
            writer.tag(3, WireType.Varint).uint32(message.worldSceneBlockComfortValueList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeModuleComfortInfo
 */
export const HomeModuleComfortInfo = new HomeModuleComfortInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeComfortInfoNotify$Type extends MessageType<HomeComfortInfoNotify> {
    constructor() {
        super("com.midnights.game.HomeComfortInfoNotify", [
            { no: 6, name: "module_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeModuleComfortInfo }
        ]);
    }
    create(value?: PartialMessage<HomeComfortInfoNotify>): HomeComfortInfoNotify {
        const message = { moduleInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeComfortInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeComfortInfoNotify): HomeComfortInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeModuleComfortInfo module_info_list */ 6:
                    message.moduleInfoList.push(HomeModuleComfortInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeComfortInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeModuleComfortInfo module_info_list = 6; */
        for (let i = 0; i < message.moduleInfoList.length; i++)
            HomeModuleComfortInfo.internalBinaryWrite(message.moduleInfoList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeComfortInfoNotify
 */
export const HomeComfortInfoNotify = new HomeComfortInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerQuitFromHomeNotify$Type extends MessageType<PlayerQuitFromHomeNotify> {
    constructor() {
        super("com.midnights.game.PlayerQuitFromHomeNotify", [
            { no: 6, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.PlayerQuitFromHomeNotify.QuitReason", PlayerQuitFromHomeNotify_QuitReason] }
        ]);
    }
    create(value?: PartialMessage<PlayerQuitFromHomeNotify>): PlayerQuitFromHomeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerQuitFromHomeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerQuitFromHomeNotify): PlayerQuitFromHomeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.PlayerQuitFromHomeNotify.QuitReason reason */ 6:
                    message.reason = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerQuitFromHomeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.PlayerQuitFromHomeNotify.QuitReason reason = 6; */
        if (message.reason !== undefined)
            writer.tag(6, WireType.Varint).int32(message.reason);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerQuitFromHomeNotify
 */
export const PlayerQuitFromHomeNotify = new PlayerQuitFromHomeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OtherPlayerEnterHomeNotify$Type extends MessageType<OtherPlayerEnterHomeNotify> {
    constructor() {
        super("com.midnights.game.OtherPlayerEnterHomeNotify", [
            { no: 7, name: "nickname", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.OtherPlayerEnterHomeNotify.Reason", OtherPlayerEnterHomeNotify_Reason] }
        ]);
    }
    create(value?: PartialMessage<OtherPlayerEnterHomeNotify>): OtherPlayerEnterHomeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OtherPlayerEnterHomeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OtherPlayerEnterHomeNotify): OtherPlayerEnterHomeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string nickname */ 7:
                    message.nickname = reader.string();
                    break;
                case /* optional com.midnights.game.OtherPlayerEnterHomeNotify.Reason reason */ 3:
                    message.reason = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OtherPlayerEnterHomeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string nickname = 7; */
        if (message.nickname !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.nickname);
        /* optional com.midnights.game.OtherPlayerEnterHomeNotify.Reason reason = 3; */
        if (message.reason !== undefined)
            writer.tag(3, WireType.Varint).int32(message.reason);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OtherPlayerEnterHomeNotify
 */
export const OtherPlayerEnterHomeNotify = new OtherPlayerEnterHomeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePriorCheckNotify$Type extends MessageType<HomePriorCheckNotify> {
    constructor() {
        super("com.midnights.game.HomePriorCheckNotify", [
            { no: 7, name: "end_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ }
        ]);
    }
    create(value?: PartialMessage<HomePriorCheckNotify>): HomePriorCheckNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePriorCheckNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePriorCheckNotify): HomePriorCheckNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional fixed32 end_time */ 7:
                    message.endTime = reader.fixed32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePriorCheckNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional fixed32 end_time = 7; */
        if (message.endTime !== undefined)
            writer.tag(7, WireType.Bit32).fixed32(message.endTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePriorCheckNotify
 */
export const HomePriorCheckNotify = new HomePriorCheckNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeMarkPointSceneData$Type extends MessageType<HomeMarkPointSceneData> {
    constructor() {
        super("com.midnights.game.HomeMarkPointSceneData", [
            { no: 6, name: "furniture_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeMarkPointFurnitureData },
            { no: 4, name: "teapot_spirit_pos", kind: "message", T: () => Vector },
            { no: 2, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "safe_point_pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<HomeMarkPointSceneData>): HomeMarkPointSceneData {
        const message = { furnitureList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeMarkPointSceneData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeMarkPointSceneData): HomeMarkPointSceneData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeMarkPointFurnitureData furniture_list */ 6:
                    message.furnitureList.push(HomeMarkPointFurnitureData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional com.midnights.game.Vector teapot_spirit_pos */ 4:
                    message.teapotSpiritPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.teapotSpiritPos);
                    break;
                case /* optional uint32 scene_id */ 2:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 module_id */ 5:
                    message.moduleId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector safe_point_pos */ 11:
                    message.safePointPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.safePointPos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeMarkPointSceneData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeMarkPointFurnitureData furniture_list = 6; */
        for (let i = 0; i < message.furnitureList.length; i++)
            HomeMarkPointFurnitureData.internalBinaryWrite(message.furnitureList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.Vector teapot_spirit_pos = 4; */
        if (message.teapotSpiritPos)
            Vector.internalBinaryWrite(message.teapotSpiritPos, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 scene_id = 2; */
        if (message.sceneId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 module_id = 5; */
        if (message.moduleId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.moduleId);
        /* optional com.midnights.game.Vector safe_point_pos = 11; */
        if (message.safePointPos)
            Vector.internalBinaryWrite(message.safePointPos, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeMarkPointSceneData
 */
export const HomeMarkPointSceneData = new HomeMarkPointSceneData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeMarkPointNotify$Type extends MessageType<HomeMarkPointNotify> {
    constructor() {
        super("com.midnights.game.HomeMarkPointNotify", [
            { no: 12, name: "mark_point_data_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeMarkPointSceneData }
        ]);
    }
    create(value?: PartialMessage<HomeMarkPointNotify>): HomeMarkPointNotify {
        const message = { markPointDataList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeMarkPointNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeMarkPointNotify): HomeMarkPointNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeMarkPointSceneData mark_point_data_list */ 12:
                    message.markPointDataList.push(HomeMarkPointSceneData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeMarkPointNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeMarkPointSceneData mark_point_data_list = 12; */
        for (let i = 0; i < message.markPointDataList.length; i++)
            HomeMarkPointSceneData.internalBinaryWrite(message.markPointDataList[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeMarkPointNotify
 */
export const HomeMarkPointNotify = new HomeMarkPointNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAllUnlockedBgmIdListNotify$Type extends MessageType<HomeAllUnlockedBgmIdListNotify> {
    constructor() {
        super("com.midnights.game.HomeAllUnlockedBgmIdListNotify", [
            { no: 11, name: "all_unlocked_bgm_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAllUnlockedBgmIdListNotify>): HomeAllUnlockedBgmIdListNotify {
        const message = { allUnlockedBgmIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAllUnlockedBgmIdListNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAllUnlockedBgmIdListNotify): HomeAllUnlockedBgmIdListNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 all_unlocked_bgm_id_list */ 11:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.allUnlockedBgmIdList.push(reader.uint32());
                    else
                        message.allUnlockedBgmIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAllUnlockedBgmIdListNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 all_unlocked_bgm_id_list = 11; */
        for (let i = 0; i < message.allUnlockedBgmIdList.length; i++)
            writer.tag(11, WireType.Varint).uint32(message.allUnlockedBgmIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAllUnlockedBgmIdListNotify
 */
export const HomeAllUnlockedBgmIdListNotify = new HomeAllUnlockedBgmIdListNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeNewUnlockedBgmIdListNotify$Type extends MessageType<HomeNewUnlockedBgmIdListNotify> {
    constructor() {
        super("com.midnights.game.HomeNewUnlockedBgmIdListNotify", [
            { no: 11, name: "new_unlocked_bgm_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeNewUnlockedBgmIdListNotify>): HomeNewUnlockedBgmIdListNotify {
        const message = { newUnlockedBgmIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeNewUnlockedBgmIdListNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeNewUnlockedBgmIdListNotify): HomeNewUnlockedBgmIdListNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 new_unlocked_bgm_id_list */ 11:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.newUnlockedBgmIdList.push(reader.uint32());
                    else
                        message.newUnlockedBgmIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeNewUnlockedBgmIdListNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 new_unlocked_bgm_id_list = 11; */
        for (let i = 0; i < message.newUnlockedBgmIdList.length; i++)
            writer.tag(11, WireType.Varint).uint32(message.newUnlockedBgmIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeNewUnlockedBgmIdListNotify
 */
export const HomeNewUnlockedBgmIdListNotify = new HomeNewUnlockedBgmIdListNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChangeBgmReq$Type extends MessageType<HomeChangeBgmReq> {
    constructor() {
        super("com.midnights.game.HomeChangeBgmReq", [
            { no: 14, name: "bgm_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChangeBgmReq>): HomeChangeBgmReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChangeBgmReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChangeBgmReq): HomeChangeBgmReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bgm_id */ 14:
                    message.bgmId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChangeBgmReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bgm_id = 14; */
        if (message.bgmId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.bgmId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChangeBgmReq
 */
export const HomeChangeBgmReq = new HomeChangeBgmReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChangeBgmRsp$Type extends MessageType<HomeChangeBgmRsp> {
    constructor() {
        super("com.midnights.game.HomeChangeBgmRsp", [
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChangeBgmRsp>): HomeChangeBgmRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChangeBgmRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChangeBgmRsp): HomeChangeBgmRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChangeBgmRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChangeBgmRsp
 */
export const HomeChangeBgmRsp = new HomeChangeBgmRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeChangeBgmNotify$Type extends MessageType<HomeChangeBgmNotify> {
    constructor() {
        super("com.midnights.game.HomeChangeBgmNotify", [
            { no: 12, name: "bgm_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeChangeBgmNotify>): HomeChangeBgmNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeChangeBgmNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeChangeBgmNotify): HomeChangeBgmNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bgm_id */ 12:
                    message.bgmId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeChangeBgmNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bgm_id = 12; */
        if (message.bgmId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.bgmId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeChangeBgmNotify
 */
export const HomeChangeBgmNotify = new HomeChangeBgmNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePreChangeEditModeNotify$Type extends MessageType<HomePreChangeEditModeNotify> {
    constructor() {
        super("com.midnights.game.HomePreChangeEditModeNotify", [
            { no: 15, name: "is_enter_edit_mode", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomePreChangeEditModeNotify>): HomePreChangeEditModeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePreChangeEditModeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePreChangeEditModeNotify): HomePreChangeEditModeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_enter_edit_mode */ 15:
                    message.isEnterEditMode = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePreChangeEditModeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_enter_edit_mode = 15; */
        if (message.isEnterEditMode !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isEnterEditMode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePreChangeEditModeNotify
 */
export const HomePreChangeEditModeNotify = new HomePreChangeEditModeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeEnterEditModeFinishReq$Type extends MessageType<HomeEnterEditModeFinishReq> {
    constructor() {
        super("com.midnights.game.HomeEnterEditModeFinishReq", []);
    }
    create(value?: PartialMessage<HomeEnterEditModeFinishReq>): HomeEnterEditModeFinishReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeEnterEditModeFinishReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeEnterEditModeFinishReq): HomeEnterEditModeFinishReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeEnterEditModeFinishReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeEnterEditModeFinishReq
 */
export const HomeEnterEditModeFinishReq = new HomeEnterEditModeFinishReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeEnterEditModeFinishRsp$Type extends MessageType<HomeEnterEditModeFinishRsp> {
    constructor() {
        super("com.midnights.game.HomeEnterEditModeFinishRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeEnterEditModeFinishRsp>): HomeEnterEditModeFinishRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeEnterEditModeFinishRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeEnterEditModeFinishRsp): HomeEnterEditModeFinishRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeEnterEditModeFinishRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeEnterEditModeFinishRsp
 */
export const HomeEnterEditModeFinishRsp = new HomeEnterEditModeFinishRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeData$Type extends MessageType<FurnitureMakeData> {
    constructor() {
        super("com.midnights.game.FurnitureMakeData", [
            { no: 15, name: "index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "dur_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "begin_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 6, name: "accelerate_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 2, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "make_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeData>): FurnitureMakeData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeData): FurnitureMakeData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 index */ 15:
                    message.index = reader.uint32();
                    break;
                case /* optional uint32 dur_time */ 1:
                    message.durTime = reader.uint32();
                    break;
                case /* optional fixed32 begin_time */ 11:
                    message.beginTime = reader.fixed32();
                    break;
                case /* optional fixed32 accelerate_time */ 6:
                    message.accelerateTime = reader.fixed32();
                    break;
                case /* optional uint32 avatar_id */ 2:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional uint32 make_id */ 5:
                    message.makeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 index = 15; */
        if (message.index !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.index);
        /* optional uint32 dur_time = 1; */
        if (message.durTime !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.durTime);
        /* optional fixed32 begin_time = 11; */
        if (message.beginTime !== undefined)
            writer.tag(11, WireType.Bit32).fixed32(message.beginTime);
        /* optional fixed32 accelerate_time = 6; */
        if (message.accelerateTime !== undefined)
            writer.tag(6, WireType.Bit32).fixed32(message.accelerateTime);
        /* optional uint32 avatar_id = 2; */
        if (message.avatarId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.avatarId);
        /* optional uint32 make_id = 5; */
        if (message.makeId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.makeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeData
 */
export const FurnitureMakeData = new FurnitureMakeData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeSlot$Type extends MessageType<FurnitureMakeSlot> {
    constructor() {
        super("com.midnights.game.FurnitureMakeSlot", [
            { no: 14, name: "furniture_make_data_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => FurnitureMakeData }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeSlot>): FurnitureMakeSlot {
        const message = { furnitureMakeDataList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeSlot>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeSlot): FurnitureMakeSlot {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.FurnitureMakeData furniture_make_data_list */ 14:
                    message.furnitureMakeDataList.push(FurnitureMakeData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeSlot, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.FurnitureMakeData furniture_make_data_list = 14; */
        for (let i = 0; i < message.furnitureMakeDataList.length; i++)
            FurnitureMakeData.internalBinaryWrite(message.furnitureMakeDataList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeSlot
 */
export const FurnitureMakeSlot = new FurnitureMakeSlot$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeBeHelpedData$Type extends MessageType<FurnitureMakeBeHelpedData> {
    constructor() {
        super("com.midnights.game.FurnitureMakeBeHelpedData", [
            { no: 12, name: "time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 11, name: "icon", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "player_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 1, name: "profile_picture", kind: "message", T: () => ProfilePicture }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeBeHelpedData>): FurnitureMakeBeHelpedData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeBeHelpedData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeBeHelpedData): FurnitureMakeBeHelpedData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional fixed32 time */ 12:
                    message.time = reader.fixed32();
                    break;
                case /* optional uint32 icon */ 11:
                    message.icon = reader.uint32();
                    break;
                case /* optional uint32 uid */ 7:
                    message.uid = reader.uint32();
                    break;
                case /* optional string player_name */ 10:
                    message.playerName = reader.string();
                    break;
                case /* optional com.midnights.game.ProfilePicture profile_picture */ 1:
                    message.profilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.profilePicture);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeBeHelpedData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional fixed32 time = 12; */
        if (message.time !== undefined)
            writer.tag(12, WireType.Bit32).fixed32(message.time);
        /* optional uint32 icon = 11; */
        if (message.icon !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.icon);
        /* optional uint32 uid = 7; */
        if (message.uid !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.uid);
        /* optional string player_name = 10; */
        if (message.playerName !== undefined)
            writer.tag(10, WireType.LengthDelimited).string(message.playerName);
        /* optional com.midnights.game.ProfilePicture profile_picture = 1; */
        if (message.profilePicture)
            ProfilePicture.internalBinaryWrite(message.profilePicture, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeBeHelpedData
 */
export const FurnitureMakeBeHelpedData = new FurnitureMakeBeHelpedData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeHelpData$Type extends MessageType<FurnitureMakeHelpData> {
    constructor() {
        super("com.midnights.game.FurnitureMakeHelpData", [
            { no: 2, name: "times", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeHelpData>): FurnitureMakeHelpData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeHelpData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeHelpData): FurnitureMakeHelpData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 times */ 2:
                    message.times = reader.uint32();
                    break;
                case /* optional uint32 uid */ 13:
                    message.uid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeHelpData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 times = 2; */
        if (message.times !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.times);
        /* optional uint32 uid = 13; */
        if (message.uid !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.uid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeHelpData
 */
export const FurnitureMakeHelpData = new FurnitureMakeHelpData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeMakeInfo$Type extends MessageType<FurnitureMakeMakeInfo> {
    constructor() {
        super("com.midnights.game.FurnitureMakeMakeInfo", [
            { no: 13, name: "furniture_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "make_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeMakeInfo>): FurnitureMakeMakeInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeMakeInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeMakeInfo): FurnitureMakeMakeInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 furniture_id */ 13:
                    message.furnitureId = reader.uint32();
                    break;
                case /* optional uint32 make_count */ 9:
                    message.makeCount = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeMakeInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 furniture_id = 13; */
        if (message.furnitureId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.furnitureId);
        /* optional uint32 make_count = 9; */
        if (message.makeCount !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.makeCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeMakeInfo
 */
export const FurnitureMakeMakeInfo = new FurnitureMakeMakeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeReq$Type extends MessageType<FurnitureMakeReq> {
    constructor() {
        super("com.midnights.game.FurnitureMakeReq", []);
    }
    create(value?: PartialMessage<FurnitureMakeReq>): FurnitureMakeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeReq): FurnitureMakeReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: FurnitureMakeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeReq
 */
export const FurnitureMakeReq = new FurnitureMakeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeRsp$Type extends MessageType<FurnitureMakeRsp> {
    constructor() {
        super("com.midnights.game.FurnitureMakeRsp", [
            { no: 13, name: "helped_data_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => FurnitureMakeBeHelpedData },
            { no: 4, name: "make_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => FurnitureMakeMakeInfo },
            { no: 1, name: "furniture_make_slot", kind: "message", T: () => FurnitureMakeSlot },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "help_data_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => FurnitureMakeHelpData }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeRsp>): FurnitureMakeRsp {
        const message = { helpedDataList: [], makeInfoList: [], helpDataList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeRsp): FurnitureMakeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.FurnitureMakeBeHelpedData helped_data_list */ 13:
                    message.helpedDataList.push(FurnitureMakeBeHelpedData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.FurnitureMakeMakeInfo make_info_list */ 4:
                    message.makeInfoList.push(FurnitureMakeMakeInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot */ 1:
                    message.furnitureMakeSlot = FurnitureMakeSlot.internalBinaryRead(reader, reader.uint32(), options, message.furnitureMakeSlot);
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.FurnitureMakeHelpData help_data_list */ 2:
                    message.helpDataList.push(FurnitureMakeHelpData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.FurnitureMakeBeHelpedData helped_data_list = 13; */
        for (let i = 0; i < message.helpedDataList.length; i++)
            FurnitureMakeBeHelpedData.internalBinaryWrite(message.helpedDataList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.FurnitureMakeMakeInfo make_info_list = 4; */
        for (let i = 0; i < message.makeInfoList.length; i++)
            FurnitureMakeMakeInfo.internalBinaryWrite(message.makeInfoList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 1; */
        if (message.furnitureMakeSlot)
            FurnitureMakeSlot.internalBinaryWrite(message.furnitureMakeSlot, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.FurnitureMakeHelpData help_data_list = 2; */
        for (let i = 0; i < message.helpDataList.length; i++)
            FurnitureMakeHelpData.internalBinaryWrite(message.helpDataList[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeRsp
 */
export const FurnitureMakeRsp = new FurnitureMakeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeFurnitureMakeReq$Type extends MessageType<TakeFurnitureMakeReq> {
    constructor() {
        super("com.midnights.game.TakeFurnitureMakeReq", [
            { no: 8, name: "index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "is_fast_finish", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "make_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TakeFurnitureMakeReq>): TakeFurnitureMakeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeFurnitureMakeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeFurnitureMakeReq): TakeFurnitureMakeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 index */ 8:
                    message.index = reader.uint32();
                    break;
                case /* optional bool is_fast_finish */ 12:
                    message.isFastFinish = reader.bool();
                    break;
                case /* optional uint32 make_id */ 7:
                    message.makeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeFurnitureMakeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 index = 8; */
        if (message.index !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.index);
        /* optional bool is_fast_finish = 12; */
        if (message.isFastFinish !== undefined)
            writer.tag(12, WireType.Varint).bool(message.isFastFinish);
        /* optional uint32 make_id = 7; */
        if (message.makeId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.makeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeFurnitureMakeReq
 */
export const TakeFurnitureMakeReq = new TakeFurnitureMakeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TakeFurnitureMakeRsp$Type extends MessageType<TakeFurnitureMakeRsp> {
    constructor() {
        super("com.midnights.game.TakeFurnitureMakeRsp", [
            { no: 8, name: "furniture_make_slot", kind: "message", T: () => FurnitureMakeSlot },
            { no: 2, name: "return_item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam },
            { no: 6, name: "make_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "output_item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam }
        ]);
    }
    create(value?: PartialMessage<TakeFurnitureMakeRsp>): TakeFurnitureMakeRsp {
        const message = { returnItemList: [], outputItemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TakeFurnitureMakeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TakeFurnitureMakeRsp): TakeFurnitureMakeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot */ 8:
                    message.furnitureMakeSlot = FurnitureMakeSlot.internalBinaryRead(reader, reader.uint32(), options, message.furnitureMakeSlot);
                    break;
                case /* repeated com.midnights.game.ItemParam return_item_list */ 2:
                    message.returnItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 make_id */ 6:
                    message.makeId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.ItemParam output_item_list */ 14:
                    message.outputItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TakeFurnitureMakeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 8; */
        if (message.furnitureMakeSlot)
            FurnitureMakeSlot.internalBinaryWrite(message.furnitureMakeSlot, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.ItemParam return_item_list = 2; */
        for (let i = 0; i < message.returnItemList.length; i++)
            ItemParam.internalBinaryWrite(message.returnItemList[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 make_id = 6; */
        if (message.makeId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.makeId);
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.ItemParam output_item_list = 14; */
        for (let i = 0; i < message.outputItemList.length; i++)
            ItemParam.internalBinaryWrite(message.outputItemList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TakeFurnitureMakeRsp
 */
export const TakeFurnitureMakeRsp = new TakeFurnitureMakeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeFinishNotify$Type extends MessageType<FurnitureMakeFinishNotify> {
    constructor() {
        super("com.midnights.game.FurnitureMakeFinishNotify", []);
    }
    create(value?: PartialMessage<FurnitureMakeFinishNotify>): FurnitureMakeFinishNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeFinishNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeFinishNotify): FurnitureMakeFinishNotify {
        return target ?? this.create();
    }
    internalBinaryWrite(message: FurnitureMakeFinishNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeFinishNotify
 */
export const FurnitureMakeFinishNotify = new FurnitureMakeFinishNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeStartReq$Type extends MessageType<FurnitureMakeStartReq> {
    constructor() {
        super("com.midnights.game.FurnitureMakeStartReq", [
            { no: 9, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "make_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeStartReq>): FurnitureMakeStartReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeStartReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeStartReq): FurnitureMakeStartReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 avatar_id */ 9:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional uint32 make_id */ 1:
                    message.makeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeStartReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 avatar_id = 9; */
        if (message.avatarId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.avatarId);
        /* optional uint32 make_id = 1; */
        if (message.makeId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.makeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeStartReq
 */
export const FurnitureMakeStartReq = new FurnitureMakeStartReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeStartRsp$Type extends MessageType<FurnitureMakeStartRsp> {
    constructor() {
        super("com.midnights.game.FurnitureMakeStartRsp", [
            { no: 5, name: "furniture_make_slot", kind: "message", T: () => FurnitureMakeSlot },
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeStartRsp>): FurnitureMakeStartRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeStartRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeStartRsp): FurnitureMakeStartRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot */ 5:
                    message.furnitureMakeSlot = FurnitureMakeSlot.internalBinaryRead(reader, reader.uint32(), options, message.furnitureMakeSlot);
                    break;
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeStartRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 5; */
        if (message.furnitureMakeSlot)
            FurnitureMakeSlot.internalBinaryWrite(message.furnitureMakeSlot, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeStartRsp
 */
export const FurnitureMakeStartRsp = new FurnitureMakeStartRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeCancelReq$Type extends MessageType<FurnitureMakeCancelReq> {
    constructor() {
        super("com.midnights.game.FurnitureMakeCancelReq", [
            { no: 4, name: "index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "make_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeCancelReq>): FurnitureMakeCancelReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeCancelReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeCancelReq): FurnitureMakeCancelReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 index */ 4:
                    message.index = reader.uint32();
                    break;
                case /* optional uint32 make_id */ 15:
                    message.makeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeCancelReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 index = 4; */
        if (message.index !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.index);
        /* optional uint32 make_id = 15; */
        if (message.makeId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.makeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeCancelReq
 */
export const FurnitureMakeCancelReq = new FurnitureMakeCancelReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeCancelRsp$Type extends MessageType<FurnitureMakeCancelRsp> {
    constructor() {
        super("com.midnights.game.FurnitureMakeCancelRsp", [
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "make_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "furniture_make_slot", kind: "message", T: () => FurnitureMakeSlot }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeCancelRsp>): FurnitureMakeCancelRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeCancelRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeCancelRsp): FurnitureMakeCancelRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 make_id */ 2:
                    message.makeId = reader.uint32();
                    break;
                case /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot */ 15:
                    message.furnitureMakeSlot = FurnitureMakeSlot.internalBinaryRead(reader, reader.uint32(), options, message.furnitureMakeSlot);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeCancelRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        /* optional uint32 make_id = 2; */
        if (message.makeId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.makeId);
        /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 15; */
        if (message.furnitureMakeSlot)
            FurnitureMakeSlot.internalBinaryWrite(message.furnitureMakeSlot, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeCancelRsp
 */
export const FurnitureMakeCancelRsp = new FurnitureMakeCancelRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeBeHelpedNotify$Type extends MessageType<FurnitureMakeBeHelpedNotify> {
    constructor() {
        super("com.midnights.game.FurnitureMakeBeHelpedNotify", [
            { no: 7, name: "furniture_make_slot", kind: "message", T: () => FurnitureMakeSlot },
            { no: 2, name: "furniture_make_helped_data", kind: "message", T: () => FurnitureMakeBeHelpedData }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeBeHelpedNotify>): FurnitureMakeBeHelpedNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeBeHelpedNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeBeHelpedNotify): FurnitureMakeBeHelpedNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot */ 7:
                    message.furnitureMakeSlot = FurnitureMakeSlot.internalBinaryRead(reader, reader.uint32(), options, message.furnitureMakeSlot);
                    break;
                case /* optional com.midnights.game.FurnitureMakeBeHelpedData furniture_make_helped_data */ 2:
                    message.furnitureMakeHelpedData = FurnitureMakeBeHelpedData.internalBinaryRead(reader, reader.uint32(), options, message.furnitureMakeHelpedData);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeBeHelpedNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.FurnitureMakeSlot furniture_make_slot = 7; */
        if (message.furnitureMakeSlot)
            FurnitureMakeSlot.internalBinaryWrite(message.furnitureMakeSlot, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.FurnitureMakeBeHelpedData furniture_make_helped_data = 2; */
        if (message.furnitureMakeHelpedData)
            FurnitureMakeBeHelpedData.internalBinaryWrite(message.furnitureMakeHelpedData, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeBeHelpedNotify
 */
export const FurnitureMakeBeHelpedNotify = new FurnitureMakeBeHelpedNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeHelpReq$Type extends MessageType<FurnitureMakeHelpReq> {
    constructor() {
        super("com.midnights.game.FurnitureMakeHelpReq", []);
    }
    create(value?: PartialMessage<FurnitureMakeHelpReq>): FurnitureMakeHelpReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeHelpReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeHelpReq): FurnitureMakeHelpReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: FurnitureMakeHelpReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeHelpReq
 */
export const FurnitureMakeHelpReq = new FurnitureMakeHelpReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FurnitureMakeHelpRsp$Type extends MessageType<FurnitureMakeHelpRsp> {
    constructor() {
        super("com.midnights.game.FurnitureMakeHelpRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "help_data_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => FurnitureMakeHelpData }
        ]);
    }
    create(value?: PartialMessage<FurnitureMakeHelpRsp>): FurnitureMakeHelpRsp {
        const message = { helpDataList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FurnitureMakeHelpRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FurnitureMakeHelpRsp): FurnitureMakeHelpRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.FurnitureMakeHelpData help_data_list */ 6:
                    message.helpDataList.push(FurnitureMakeHelpData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FurnitureMakeHelpRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.FurnitureMakeHelpData help_data_list = 6; */
        for (let i = 0; i < message.helpDataList.length; i++)
            FurnitureMakeHelpData.internalBinaryWrite(message.helpDataList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FurnitureMakeHelpRsp
 */
export const FurnitureMakeHelpRsp = new FurnitureMakeHelpRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FunitureMakeMakeInfoChangeNotify$Type extends MessageType<FunitureMakeMakeInfoChangeNotify> {
    constructor() {
        super("com.midnights.game.FunitureMakeMakeInfoChangeNotify", [
            { no: 1, name: "make_info", kind: "message", T: () => FurnitureMakeMakeInfo }
        ]);
    }
    create(value?: PartialMessage<FunitureMakeMakeInfoChangeNotify>): FunitureMakeMakeInfoChangeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FunitureMakeMakeInfoChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FunitureMakeMakeInfoChangeNotify): FunitureMakeMakeInfoChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.FurnitureMakeMakeInfo make_info */ 1:
                    message.makeInfo = FurnitureMakeMakeInfo.internalBinaryRead(reader, reader.uint32(), options, message.makeInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FunitureMakeMakeInfoChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.FurnitureMakeMakeInfo make_info = 1; */
        if (message.makeInfo)
            FurnitureMakeMakeInfo.internalBinaryWrite(message.makeInfo, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FunitureMakeMakeInfoChangeNotify
 */
export const FunitureMakeMakeInfoChangeNotify = new FunitureMakeMakeInfoChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopInfo$Type extends MessageType<HomeLimitedShopInfo> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopInfo", [
            { no: 9, name: "next_close_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 11, name: "next_guest_open_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 7, name: "djinn_rot", kind: "message", T: () => Vector },
            { no: 4, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "next_open_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 2, name: "djinn_pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShopInfo>): HomeLimitedShopInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopInfo): HomeLimitedShopInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional fixed32 next_close_time */ 9:
                    message.nextCloseTime = reader.fixed32();
                    break;
                case /* optional fixed32 next_guest_open_time */ 11:
                    message.nextGuestOpenTime = reader.fixed32();
                    break;
                case /* optional com.midnights.game.Vector djinn_rot */ 7:
                    message.djinnRot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.djinnRot);
                    break;
                case /* optional uint32 uid */ 4:
                    message.uid = reader.uint32();
                    break;
                case /* optional fixed32 next_open_time */ 6:
                    message.nextOpenTime = reader.fixed32();
                    break;
                case /* optional com.midnights.game.Vector djinn_pos */ 2:
                    message.djinnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.djinnPos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShopInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional fixed32 next_close_time = 9; */
        if (message.nextCloseTime !== undefined)
            writer.tag(9, WireType.Bit32).fixed32(message.nextCloseTime);
        /* optional fixed32 next_guest_open_time = 11; */
        if (message.nextGuestOpenTime !== undefined)
            writer.tag(11, WireType.Bit32).fixed32(message.nextGuestOpenTime);
        /* optional com.midnights.game.Vector djinn_rot = 7; */
        if (message.djinnRot)
            Vector.internalBinaryWrite(message.djinnRot, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 uid = 4; */
        if (message.uid !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.uid);
        /* optional fixed32 next_open_time = 6; */
        if (message.nextOpenTime !== undefined)
            writer.tag(6, WireType.Bit32).fixed32(message.nextOpenTime);
        /* optional com.midnights.game.Vector djinn_pos = 2; */
        if (message.djinnPos)
            Vector.internalBinaryWrite(message.djinnPos, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopInfo
 */
export const HomeLimitedShopInfo = new HomeLimitedShopInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopInfoReq$Type extends MessageType<HomeLimitedShopInfoReq> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopInfoReq", []);
    }
    create(value?: PartialMessage<HomeLimitedShopInfoReq>): HomeLimitedShopInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopInfoReq): HomeLimitedShopInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeLimitedShopInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopInfoReq
 */
export const HomeLimitedShopInfoReq = new HomeLimitedShopInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopInfoRsp$Type extends MessageType<HomeLimitedShopInfoRsp> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopInfoRsp", [
            { no: 10, name: "shop_info", kind: "message", T: () => HomeLimitedShopInfo },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShopInfoRsp>): HomeLimitedShopInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopInfoRsp): HomeLimitedShopInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeLimitedShopInfo shop_info */ 10:
                    message.shopInfo = HomeLimitedShopInfo.internalBinaryRead(reader, reader.uint32(), options, message.shopInfo);
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShopInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeLimitedShopInfo shop_info = 10; */
        if (message.shopInfo)
            HomeLimitedShopInfo.internalBinaryWrite(message.shopInfo, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopInfoRsp
 */
export const HomeLimitedShopInfoRsp = new HomeLimitedShopInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopInfoNotify$Type extends MessageType<HomeLimitedShopInfoNotify> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopInfoNotify", [
            { no: 2, name: "shop_info", kind: "message", T: () => HomeLimitedShopInfo }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShopInfoNotify>): HomeLimitedShopInfoNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopInfoNotify): HomeLimitedShopInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeLimitedShopInfo shop_info */ 2:
                    message.shopInfo = HomeLimitedShopInfo.internalBinaryRead(reader, reader.uint32(), options, message.shopInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShopInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeLimitedShopInfo shop_info = 2; */
        if (message.shopInfo)
            HomeLimitedShopInfo.internalBinaryWrite(message.shopInfo, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopInfoNotify
 */
export const HomeLimitedShopInfoNotify = new HomeLimitedShopInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopGoods$Type extends MessageType<HomeLimitedShopGoods> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopGoods", [
            { no: 8, name: "buy_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "cost_item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam },
            { no: 1, name: "bought_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "goods_item", kind: "message", T: () => ItemParam },
            { no: 13, name: "goods_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "disable_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShopGoods>): HomeLimitedShopGoods {
        const message = { costItemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopGoods>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopGoods): HomeLimitedShopGoods {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 buy_limit */ 8:
                    message.buyLimit = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ItemParam cost_item_list */ 15:
                    message.costItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 bought_num */ 1:
                    message.boughtNum = reader.uint32();
                    break;
                case /* optional com.midnights.game.ItemParam goods_item */ 6:
                    message.goodsItem = ItemParam.internalBinaryRead(reader, reader.uint32(), options, message.goodsItem);
                    break;
                case /* optional uint32 goods_id */ 13:
                    message.goodsId = reader.uint32();
                    break;
                case /* optional uint32 disable_type */ 3:
                    message.disableType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShopGoods, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 buy_limit = 8; */
        if (message.buyLimit !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.buyLimit);
        /* repeated com.midnights.game.ItemParam cost_item_list = 15; */
        for (let i = 0; i < message.costItemList.length; i++)
            ItemParam.internalBinaryWrite(message.costItemList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 bought_num = 1; */
        if (message.boughtNum !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.boughtNum);
        /* optional com.midnights.game.ItemParam goods_item = 6; */
        if (message.goodsItem)
            ItemParam.internalBinaryWrite(message.goodsItem, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 goods_id = 13; */
        if (message.goodsId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.goodsId);
        /* optional uint32 disable_type = 3; */
        if (message.disableType !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.disableType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopGoods
 */
export const HomeLimitedShopGoods = new HomeLimitedShopGoods$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShop$Type extends MessageType<HomeLimitedShop> {
    constructor() {
        super("com.midnights.game.HomeLimitedShop", [
            { no: 8, name: "goods_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeLimitedShopGoods }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShop>): HomeLimitedShop {
        const message = { goodsList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShop>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShop): HomeLimitedShop {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeLimitedShopGoods goods_list */ 8:
                    message.goodsList.push(HomeLimitedShopGoods.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShop, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeLimitedShopGoods goods_list = 8; */
        for (let i = 0; i < message.goodsList.length; i++)
            HomeLimitedShopGoods.internalBinaryWrite(message.goodsList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShop
 */
export const HomeLimitedShop = new HomeLimitedShop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopGoodsListReq$Type extends MessageType<HomeLimitedShopGoodsListReq> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopGoodsListReq", []);
    }
    create(value?: PartialMessage<HomeLimitedShopGoodsListReq>): HomeLimitedShopGoodsListReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopGoodsListReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopGoodsListReq): HomeLimitedShopGoodsListReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeLimitedShopGoodsListReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopGoodsListReq
 */
export const HomeLimitedShopGoodsListReq = new HomeLimitedShopGoodsListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopGoodsListRsp$Type extends MessageType<HomeLimitedShopGoodsListRsp> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopGoodsListRsp", [
            { no: 6, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "shop", kind: "message", T: () => HomeLimitedShop }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShopGoodsListRsp>): HomeLimitedShopGoodsListRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopGoodsListRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopGoodsListRsp): HomeLimitedShopGoodsListRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 6:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.HomeLimitedShop shop */ 12:
                    message.shop = HomeLimitedShop.internalBinaryRead(reader, reader.uint32(), options, message.shop);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShopGoodsListRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 6; */
        if (message.retcode !== undefined)
            writer.tag(6, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.HomeLimitedShop shop = 12; */
        if (message.shop)
            HomeLimitedShop.internalBinaryWrite(message.shop, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopGoodsListRsp
 */
export const HomeLimitedShopGoodsListRsp = new HomeLimitedShopGoodsListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopBuyGoodsReq$Type extends MessageType<HomeLimitedShopBuyGoodsReq> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopBuyGoodsReq", [
            { no: 3, name: "goods", kind: "message", T: () => HomeLimitedShopGoods },
            { no: 10, name: "buy_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShopBuyGoodsReq>): HomeLimitedShopBuyGoodsReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopBuyGoodsReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopBuyGoodsReq): HomeLimitedShopBuyGoodsReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeLimitedShopGoods goods */ 3:
                    message.goods = HomeLimitedShopGoods.internalBinaryRead(reader, reader.uint32(), options, message.goods);
                    break;
                case /* optional uint32 buy_count */ 10:
                    message.buyCount = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShopBuyGoodsReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeLimitedShopGoods goods = 3; */
        if (message.goods)
            HomeLimitedShopGoods.internalBinaryWrite(message.goods, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 buy_count = 10; */
        if (message.buyCount !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.buyCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopBuyGoodsReq
 */
export const HomeLimitedShopBuyGoodsReq = new HomeLimitedShopBuyGoodsReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopBuyGoodsRsp$Type extends MessageType<HomeLimitedShopBuyGoodsRsp> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopBuyGoodsRsp", [
            { no: 13, name: "goods_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeLimitedShopGoods },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "goods", kind: "message", T: () => HomeLimitedShopGoods },
            { no: 8, name: "buy_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShopBuyGoodsRsp>): HomeLimitedShopBuyGoodsRsp {
        const message = { goodsList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopBuyGoodsRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopBuyGoodsRsp): HomeLimitedShopBuyGoodsRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeLimitedShopGoods goods_list */ 13:
                    message.goodsList.push(HomeLimitedShopGoods.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.HomeLimitedShopGoods goods */ 5:
                    message.goods = HomeLimitedShopGoods.internalBinaryRead(reader, reader.uint32(), options, message.goods);
                    break;
                case /* optional uint32 buy_count */ 8:
                    message.buyCount = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShopBuyGoodsRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeLimitedShopGoods goods_list = 13; */
        for (let i = 0; i < message.goodsList.length; i++)
            HomeLimitedShopGoods.internalBinaryWrite(message.goodsList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.HomeLimitedShopGoods goods = 5; */
        if (message.goods)
            HomeLimitedShopGoods.internalBinaryWrite(message.goods, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 buy_count = 8; */
        if (message.buyCount !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.buyCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopBuyGoodsRsp
 */
export const HomeLimitedShopBuyGoodsRsp = new HomeLimitedShopBuyGoodsRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeLimitedShopInfoChangeNotify$Type extends MessageType<HomeLimitedShopInfoChangeNotify> {
    constructor() {
        super("com.midnights.game.HomeLimitedShopInfoChangeNotify", [
            { no: 5, name: "goods_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeLimitedShopGoods }
        ]);
    }
    create(value?: PartialMessage<HomeLimitedShopInfoChangeNotify>): HomeLimitedShopInfoChangeNotify {
        const message = { goodsList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeLimitedShopInfoChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeLimitedShopInfoChangeNotify): HomeLimitedShopInfoChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeLimitedShopGoods goods_list */ 5:
                    message.goodsList.push(HomeLimitedShopGoods.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeLimitedShopInfoChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeLimitedShopGoods goods_list = 5; */
        for (let i = 0; i < message.goodsList.length; i++)
            HomeLimitedShopGoods.internalBinaryWrite(message.goodsList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeLimitedShopInfoChangeNotify
 */
export const HomeLimitedShopInfoChangeNotify = new HomeLimitedShopInfoChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeResource$Type extends MessageType<HomeResource> {
    constructor() {
        super("com.midnights.game.HomeResource", [
            { no: 15, name: "next_refresh_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 3, name: "store_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "store_value", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeResource>): HomeResource {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeResource>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeResource): HomeResource {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional fixed32 next_refresh_time */ 15:
                    message.nextRefreshTime = reader.fixed32();
                    break;
                case /* optional uint32 store_limit */ 3:
                    message.storeLimit = reader.uint32();
                    break;
                case /* optional uint32 store_value */ 12:
                    message.storeValue = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeResource, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional fixed32 next_refresh_time = 15; */
        if (message.nextRefreshTime !== undefined)
            writer.tag(15, WireType.Bit32).fixed32(message.nextRefreshTime);
        /* optional uint32 store_limit = 3; */
        if (message.storeLimit !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.storeLimit);
        /* optional uint32 store_value = 12; */
        if (message.storeValue !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.storeValue);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeResource
 */
export const HomeResource = new HomeResource$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeResourceNotify$Type extends MessageType<HomeResourceNotify> {
    constructor() {
        super("com.midnights.game.HomeResourceNotify", [
            { no: 9, name: "home_coin", kind: "message", T: () => HomeResource },
            { no: 8, name: "fetter_exp", kind: "message", T: () => HomeResource }
        ]);
    }
    create(value?: PartialMessage<HomeResourceNotify>): HomeResourceNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeResourceNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeResourceNotify): HomeResourceNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeResource home_coin */ 9:
                    message.homeCoin = HomeResource.internalBinaryRead(reader, reader.uint32(), options, message.homeCoin);
                    break;
                case /* optional com.midnights.game.HomeResource fetter_exp */ 8:
                    message.fetterExp = HomeResource.internalBinaryRead(reader, reader.uint32(), options, message.fetterExp);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeResourceNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeResource home_coin = 9; */
        if (message.homeCoin)
            HomeResource.internalBinaryWrite(message.homeCoin, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.HomeResource fetter_exp = 8; */
        if (message.fetterExp)
            HomeResource.internalBinaryWrite(message.fetterExp, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeResourceNotify
 */
export const HomeResourceNotify = new HomeResourceNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeResourceTakeHomeCoinReq$Type extends MessageType<HomeResourceTakeHomeCoinReq> {
    constructor() {
        super("com.midnights.game.HomeResourceTakeHomeCoinReq", []);
    }
    create(value?: PartialMessage<HomeResourceTakeHomeCoinReq>): HomeResourceTakeHomeCoinReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeResourceTakeHomeCoinReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeResourceTakeHomeCoinReq): HomeResourceTakeHomeCoinReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeResourceTakeHomeCoinReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeResourceTakeHomeCoinReq
 */
export const HomeResourceTakeHomeCoinReq = new HomeResourceTakeHomeCoinReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeResourceTakeHomeCoinRsp$Type extends MessageType<HomeResourceTakeHomeCoinRsp> {
    constructor() {
        super("com.midnights.game.HomeResourceTakeHomeCoinRsp", [
            { no: 7, name: "home_coin", kind: "message", T: () => HomeResource },
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeResourceTakeHomeCoinRsp>): HomeResourceTakeHomeCoinRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeResourceTakeHomeCoinRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeResourceTakeHomeCoinRsp): HomeResourceTakeHomeCoinRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeResource home_coin */ 7:
                    message.homeCoin = HomeResource.internalBinaryRead(reader, reader.uint32(), options, message.homeCoin);
                    break;
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeResourceTakeHomeCoinRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeResource home_coin = 7; */
        if (message.homeCoin)
            HomeResource.internalBinaryWrite(message.homeCoin, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeResourceTakeHomeCoinRsp
 */
export const HomeResourceTakeHomeCoinRsp = new HomeResourceTakeHomeCoinRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeResourceTakeFetterExpReq$Type extends MessageType<HomeResourceTakeFetterExpReq> {
    constructor() {
        super("com.midnights.game.HomeResourceTakeFetterExpReq", []);
    }
    create(value?: PartialMessage<HomeResourceTakeFetterExpReq>): HomeResourceTakeFetterExpReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeResourceTakeFetterExpReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeResourceTakeFetterExpReq): HomeResourceTakeFetterExpReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeResourceTakeFetterExpReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeResourceTakeFetterExpReq
 */
export const HomeResourceTakeFetterExpReq = new HomeResourceTakeFetterExpReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeResourceTakeFetterExpRsp$Type extends MessageType<HomeResourceTakeFetterExpRsp> {
    constructor() {
        super("com.midnights.game.HomeResourceTakeFetterExpRsp", [
            { no: 4, name: "fetter_exp", kind: "message", T: () => HomeResource },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeResourceTakeFetterExpRsp>): HomeResourceTakeFetterExpRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeResourceTakeFetterExpRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeResourceTakeFetterExpRsp): HomeResourceTakeFetterExpRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeResource fetter_exp */ 4:
                    message.fetterExp = HomeResource.internalBinaryRead(reader, reader.uint32(), options, message.fetterExp);
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeResourceTakeFetterExpRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeResource fetter_exp = 4; */
        if (message.fetterExp)
            HomeResource.internalBinaryWrite(message.fetterExp, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeResourceTakeFetterExpRsp
 */
export const HomeResourceTakeFetterExpRsp = new HomeResourceTakeFetterExpRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarTalkFinishInfo$Type extends MessageType<HomeAvatarTalkFinishInfo> {
    constructor() {
        super("com.midnights.game.HomeAvatarTalkFinishInfo", [
            { no: 9, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "finish_talk_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarTalkFinishInfo>): HomeAvatarTalkFinishInfo {
        const message = { finishTalkIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarTalkFinishInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarTalkFinishInfo): HomeAvatarTalkFinishInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 avatar_id */ 9:
                    message.avatarId = reader.uint32();
                    break;
                case /* repeated uint32 finish_talk_id_list */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.finishTalkIdList.push(reader.uint32());
                    else
                        message.finishTalkIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarTalkFinishInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 avatar_id = 9; */
        if (message.avatarId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.avatarId);
        /* repeated uint32 finish_talk_id_list = 3; */
        for (let i = 0; i < message.finishTalkIdList.length; i++)
            writer.tag(3, WireType.Varint).uint32(message.finishTalkIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarTalkFinishInfo
 */
export const HomeAvatarTalkFinishInfo = new HomeAvatarTalkFinishInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarTalkFinishInfoNotify$Type extends MessageType<HomeAvatarTalkFinishInfoNotify> {
    constructor() {
        super("com.midnights.game.HomeAvatarTalkFinishInfoNotify", [
            { no: 9, name: "avatar_talk_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeAvatarTalkFinishInfo }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarTalkFinishInfoNotify>): HomeAvatarTalkFinishInfoNotify {
        const message = { avatarTalkInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarTalkFinishInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarTalkFinishInfoNotify): HomeAvatarTalkFinishInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeAvatarTalkFinishInfo avatar_talk_info_list */ 9:
                    message.avatarTalkInfoList.push(HomeAvatarTalkFinishInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarTalkFinishInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeAvatarTalkFinishInfo avatar_talk_info_list = 9; */
        for (let i = 0; i < message.avatarTalkInfoList.length; i++)
            HomeAvatarTalkFinishInfo.internalBinaryWrite(message.avatarTalkInfoList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarTalkFinishInfoNotify
 */
export const HomeAvatarTalkFinishInfoNotify = new HomeAvatarTalkFinishInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarTalkReq$Type extends MessageType<HomeAvatarTalkReq> {
    constructor() {
        super("com.midnights.game.HomeAvatarTalkReq", [
            { no: 12, name: "talk_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarTalkReq>): HomeAvatarTalkReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarTalkReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarTalkReq): HomeAvatarTalkReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 talk_id */ 12:
                    message.talkId = reader.uint32();
                    break;
                case /* optional uint32 avatar_id */ 15:
                    message.avatarId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarTalkReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 talk_id = 12; */
        if (message.talkId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.talkId);
        /* optional uint32 avatar_id = 15; */
        if (message.avatarId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.avatarId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarTalkReq
 */
export const HomeAvatarTalkReq = new HomeAvatarTalkReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarTalkRsp$Type extends MessageType<HomeAvatarTalkRsp> {
    constructor() {
        super("com.midnights.game.HomeAvatarTalkRsp", [
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "avatar_talk_info", kind: "message", T: () => HomeAvatarTalkFinishInfo }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarTalkRsp>): HomeAvatarTalkRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarTalkRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarTalkRsp): HomeAvatarTalkRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.HomeAvatarTalkFinishInfo avatar_talk_info */ 3:
                    message.avatarTalkInfo = HomeAvatarTalkFinishInfo.internalBinaryRead(reader, reader.uint32(), options, message.avatarTalkInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarTalkRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.HomeAvatarTalkFinishInfo avatar_talk_info = 3; */
        if (message.avatarTalkInfo)
            HomeAvatarTalkFinishInfo.internalBinaryWrite(message.avatarTalkInfo, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarTalkRsp
 */
export const HomeAvatarTalkRsp = new HomeAvatarTalkRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarRewardEventInfo$Type extends MessageType<HomeAvatarRewardEventInfo> {
    constructor() {
        super("com.midnights.game.HomeAvatarRewardEventInfo", [
            { no: 1, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "event_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "suite_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "random_position", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarRewardEventInfo>): HomeAvatarRewardEventInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarRewardEventInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarRewardEventInfo): HomeAvatarRewardEventInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 avatar_id */ 1:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional uint32 guid */ 12:
                    message.guid = reader.uint32();
                    break;
                case /* optional uint32 event_id */ 2:
                    message.eventId = reader.uint32();
                    break;
                case /* optional uint32 suite_id */ 14:
                    message.suiteId = reader.uint32();
                    break;
                case /* optional uint32 random_position */ 9:
                    message.randomPosition = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarRewardEventInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 avatar_id = 1; */
        if (message.avatarId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.avatarId);
        /* optional uint32 guid = 12; */
        if (message.guid !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.guid);
        /* optional uint32 event_id = 2; */
        if (message.eventId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.eventId);
        /* optional uint32 suite_id = 14; */
        if (message.suiteId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.suiteId);
        /* optional uint32 random_position = 9; */
        if (message.randomPosition !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.randomPosition);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarRewardEventInfo
 */
export const HomeAvatarRewardEventInfo = new HomeAvatarRewardEventInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarRewardEventNotify$Type extends MessageType<HomeAvatarRewardEventNotify> {
    constructor() {
        super("com.midnights.game.HomeAvatarRewardEventNotify", [
            { no: 4, name: "is_event_trigger", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "reward_event", kind: "message", T: () => HomeAvatarRewardEventInfo },
            { no: 8, name: "pending_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeAvatarRewardEventInfo }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarRewardEventNotify>): HomeAvatarRewardEventNotify {
        const message = { pendingList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarRewardEventNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarRewardEventNotify): HomeAvatarRewardEventNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_event_trigger */ 4:
                    message.isEventTrigger = reader.bool();
                    break;
                case /* optional com.midnights.game.HomeAvatarRewardEventInfo reward_event */ 2:
                    message.rewardEvent = HomeAvatarRewardEventInfo.internalBinaryRead(reader, reader.uint32(), options, message.rewardEvent);
                    break;
                case /* repeated com.midnights.game.HomeAvatarRewardEventInfo pending_list */ 8:
                    message.pendingList.push(HomeAvatarRewardEventInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarRewardEventNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_event_trigger = 4; */
        if (message.isEventTrigger !== undefined)
            writer.tag(4, WireType.Varint).bool(message.isEventTrigger);
        /* optional com.midnights.game.HomeAvatarRewardEventInfo reward_event = 2; */
        if (message.rewardEvent)
            HomeAvatarRewardEventInfo.internalBinaryWrite(message.rewardEvent, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.HomeAvatarRewardEventInfo pending_list = 8; */
        for (let i = 0; i < message.pendingList.length; i++)
            HomeAvatarRewardEventInfo.internalBinaryWrite(message.pendingList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarRewardEventNotify
 */
export const HomeAvatarRewardEventNotify = new HomeAvatarRewardEventNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarRewardEventGetReq$Type extends MessageType<HomeAvatarRewardEventGetReq> {
    constructor() {
        super("com.midnights.game.HomeAvatarRewardEventGetReq", [
            { no: 9, name: "event_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarRewardEventGetReq>): HomeAvatarRewardEventGetReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarRewardEventGetReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarRewardEventGetReq): HomeAvatarRewardEventGetReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 event_id */ 9:
                    message.eventId = reader.uint32();
                    break;
                case /* optional uint32 avatar_id */ 7:
                    message.avatarId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarRewardEventGetReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 event_id = 9; */
        if (message.eventId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.eventId);
        /* optional uint32 avatar_id = 7; */
        if (message.avatarId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.avatarId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarRewardEventGetReq
 */
export const HomeAvatarRewardEventGetReq = new HomeAvatarRewardEventGetReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarRewardEventGetRsp$Type extends MessageType<HomeAvatarRewardEventGetRsp> {
    constructor() {
        super("com.midnights.game.HomeAvatarRewardEventGetRsp", [
            { no: 4, name: "item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "event_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarRewardEventGetRsp>): HomeAvatarRewardEventGetRsp {
        const message = { itemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarRewardEventGetRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarRewardEventGetRsp): HomeAvatarRewardEventGetRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ItemParam item_list */ 4:
                    message.itemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 event_id */ 8:
                    message.eventId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarRewardEventGetRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ItemParam item_list = 4; */
        for (let i = 0; i < message.itemList.length; i++)
            ItemParam.internalBinaryWrite(message.itemList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        /* optional uint32 event_id = 8; */
        if (message.eventId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.eventId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarRewardEventGetRsp
 */
export const HomeAvatarRewardEventGetRsp = new HomeAvatarRewardEventGetRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarSummonEventInfo$Type extends MessageType<HomeAvatarSummonEventInfo> {
    constructor() {
        super("com.midnights.game.HomeAvatarSummonEventInfo", [
            { no: 3, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "event_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "suit_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "event_over_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "random_position", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarSummonEventInfo>): HomeAvatarSummonEventInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarSummonEventInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarSummonEventInfo): HomeAvatarSummonEventInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 avatar_id */ 3:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional uint32 guid */ 8:
                    message.guid = reader.uint32();
                    break;
                case /* optional uint32 event_id */ 9:
                    message.eventId = reader.uint32();
                    break;
                case /* optional uint32 suit_id */ 12:
                    message.suitId = reader.uint32();
                    break;
                case /* optional uint32 event_over_time */ 2:
                    message.eventOverTime = reader.uint32();
                    break;
                case /* optional uint32 random_position */ 10:
                    message.randomPosition = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarSummonEventInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 avatar_id = 3; */
        if (message.avatarId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.avatarId);
        /* optional uint32 guid = 8; */
        if (message.guid !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.guid);
        /* optional uint32 event_id = 9; */
        if (message.eventId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.eventId);
        /* optional uint32 suit_id = 12; */
        if (message.suitId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.suitId);
        /* optional uint32 event_over_time = 2; */
        if (message.eventOverTime !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.eventOverTime);
        /* optional uint32 random_position = 10; */
        if (message.randomPosition !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.randomPosition);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarSummonEventInfo
 */
export const HomeAvatarSummonEventInfo = new HomeAvatarSummonEventInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarSummonAllEventNotify$Type extends MessageType<HomeAvatarSummonAllEventNotify> {
    constructor() {
        super("com.midnights.game.HomeAvatarSummonAllEventNotify", [
            { no: 1, name: "summon_event_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeAvatarSummonEventInfo }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarSummonAllEventNotify>): HomeAvatarSummonAllEventNotify {
        const message = { summonEventList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarSummonAllEventNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarSummonAllEventNotify): HomeAvatarSummonAllEventNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeAvatarSummonEventInfo summon_event_list */ 1:
                    message.summonEventList.push(HomeAvatarSummonEventInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarSummonAllEventNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeAvatarSummonEventInfo summon_event_list = 1; */
        for (let i = 0; i < message.summonEventList.length; i++)
            HomeAvatarSummonEventInfo.internalBinaryWrite(message.summonEventList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarSummonAllEventNotify
 */
export const HomeAvatarSummonAllEventNotify = new HomeAvatarSummonAllEventNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarSummonEventReq$Type extends MessageType<HomeAvatarSummonEventReq> {
    constructor() {
        super("com.midnights.game.HomeAvatarSummonEventReq", [
            { no: 7, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "suit_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarSummonEventReq>): HomeAvatarSummonEventReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarSummonEventReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarSummonEventReq): HomeAvatarSummonEventReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 avatar_id */ 7:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional uint32 suit_id */ 9:
                    message.suitId = reader.uint32();
                    break;
                case /* optional uint32 guid */ 12:
                    message.guid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarSummonEventReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 avatar_id = 7; */
        if (message.avatarId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.avatarId);
        /* optional uint32 suit_id = 9; */
        if (message.suitId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.suitId);
        /* optional uint32 guid = 12; */
        if (message.guid !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.guid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarSummonEventReq
 */
export const HomeAvatarSummonEventReq = new HomeAvatarSummonEventReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarSummonEventRsp$Type extends MessageType<HomeAvatarSummonEventRsp> {
    constructor() {
        super("com.midnights.game.HomeAvatarSummonEventRsp", [
            { no: 11, name: "event_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarSummonEventRsp>): HomeAvatarSummonEventRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarSummonEventRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarSummonEventRsp): HomeAvatarSummonEventRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 event_id */ 11:
                    message.eventId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarSummonEventRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 event_id = 11; */
        if (message.eventId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.eventId);
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarSummonEventRsp
 */
export const HomeAvatarSummonEventRsp = new HomeAvatarSummonEventRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarCostumeChangeNotify$Type extends MessageType<HomeAvatarCostumeChangeNotify> {
    constructor() {
        super("com.midnights.game.HomeAvatarCostumeChangeNotify", [
            { no: 4, name: "costume_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarCostumeChangeNotify>): HomeAvatarCostumeChangeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarCostumeChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarCostumeChangeNotify): HomeAvatarCostumeChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 costume_id */ 4:
                    message.costumeId = reader.uint32();
                    break;
                case /* optional uint32 avatar_id */ 10:
                    message.avatarId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarCostumeChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 costume_id = 4; */
        if (message.costumeId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.costumeId);
        /* optional uint32 avatar_id = 10; */
        if (message.avatarId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.avatarId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarCostumeChangeNotify
 */
export const HomeAvatarCostumeChangeNotify = new HomeAvatarCostumeChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarSummonFinishReq$Type extends MessageType<HomeAvatarSummonFinishReq> {
    constructor() {
        super("com.midnights.game.HomeAvatarSummonFinishReq", [
            { no: 12, name: "event_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarSummonFinishReq>): HomeAvatarSummonFinishReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarSummonFinishReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarSummonFinishReq): HomeAvatarSummonFinishReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 event_id */ 12:
                    message.eventId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarSummonFinishReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 event_id = 12; */
        if (message.eventId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.eventId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarSummonFinishReq
 */
export const HomeAvatarSummonFinishReq = new HomeAvatarSummonFinishReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarSummonFinishRsp$Type extends MessageType<HomeAvatarSummonFinishRsp> {
    constructor() {
        super("com.midnights.game.HomeAvatarSummonFinishRsp", [
            { no: 8, name: "event_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarSummonFinishRsp>): HomeAvatarSummonFinishRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarSummonFinishRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarSummonFinishRsp): HomeAvatarSummonFinishRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 event_id */ 8:
                    message.eventId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarSummonFinishRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 event_id = 8; */
        if (message.eventId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.eventId);
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarSummonFinishRsp
 */
export const HomeAvatarSummonFinishRsp = new HomeAvatarSummonFinishRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvtarAllFinishRewardNotify$Type extends MessageType<HomeAvtarAllFinishRewardNotify> {
    constructor() {
        super("com.midnights.game.HomeAvtarAllFinishRewardNotify", [
            { no: 13, name: "event_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvtarAllFinishRewardNotify>): HomeAvtarAllFinishRewardNotify {
        const message = { eventIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvtarAllFinishRewardNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvtarAllFinishRewardNotify): HomeAvtarAllFinishRewardNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 event_id_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.eventIdList.push(reader.uint32());
                    else
                        message.eventIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvtarAllFinishRewardNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 event_id_list = 13; */
        for (let i = 0; i < message.eventIdList.length; i++)
            writer.tag(13, WireType.Varint).uint32(message.eventIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvtarAllFinishRewardNotify
 */
export const HomeAvtarAllFinishRewardNotify = new HomeAvtarAllFinishRewardNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeAvatarAllFinishRewardNotify$Type extends MessageType<HomeAvatarAllFinishRewardNotify> {
    constructor() {
        super("com.midnights.game.HomeAvatarAllFinishRewardNotify", [
            { no: 7, name: "event_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeAvatarAllFinishRewardNotify>): HomeAvatarAllFinishRewardNotify {
        const message = { eventIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeAvatarAllFinishRewardNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeAvatarAllFinishRewardNotify): HomeAvatarAllFinishRewardNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 event_id_list */ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.eventIdList.push(reader.uint32());
                    else
                        message.eventIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeAvatarAllFinishRewardNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 event_id_list = 7; */
        for (let i = 0; i < message.eventIdList.length; i++)
            writer.tag(7, WireType.Varint).uint32(message.eventIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeAvatarAllFinishRewardNotify
 */
export const HomeAvatarAllFinishRewardNotify = new HomeAvatarAllFinishRewardNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSceneInitFinishReq$Type extends MessageType<HomeSceneInitFinishReq> {
    constructor() {
        super("com.midnights.game.HomeSceneInitFinishReq", []);
    }
    create(value?: PartialMessage<HomeSceneInitFinishReq>): HomeSceneInitFinishReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSceneInitFinishReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSceneInitFinishReq): HomeSceneInitFinishReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeSceneInitFinishReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSceneInitFinishReq
 */
export const HomeSceneInitFinishReq = new HomeSceneInitFinishReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSceneInitFinishRsp$Type extends MessageType<HomeSceneInitFinishRsp> {
    constructor() {
        super("com.midnights.game.HomeSceneInitFinishRsp", [
            { no: 6, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSceneInitFinishRsp>): HomeSceneInitFinishRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSceneInitFinishRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSceneInitFinishRsp): HomeSceneInitFinishRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 6:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSceneInitFinishRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 6; */
        if (message.retcode !== undefined)
            writer.tag(6, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSceneInitFinishRsp
 */
export const HomeSceneInitFinishRsp = new HomeSceneInitFinishRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantSeedReq$Type extends MessageType<HomePlantSeedReq> {
    constructor() {
        super("com.midnights.game.HomePlantSeedReq", [
            { no: 4, name: "index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "field_guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "seed_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomePlantSeedReq>): HomePlantSeedReq {
        const message = { seedIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantSeedReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantSeedReq): HomePlantSeedReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 index */ 4:
                    message.index = reader.uint32();
                    break;
                case /* optional uint32 field_guid */ 14:
                    message.fieldGuid = reader.uint32();
                    break;
                case /* repeated uint32 seed_id_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.seedIdList.push(reader.uint32());
                    else
                        message.seedIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantSeedReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 index = 4; */
        if (message.index !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.index);
        /* optional uint32 field_guid = 14; */
        if (message.fieldGuid !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.fieldGuid);
        /* repeated uint32 seed_id_list = 13; */
        for (let i = 0; i < message.seedIdList.length; i++)
            writer.tag(13, WireType.Varint).uint32(message.seedIdList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantSeedReq
 */
export const HomePlantSeedReq = new HomePlantSeedReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantSeedRsp$Type extends MessageType<HomePlantSeedRsp> {
    constructor() {
        super("com.midnights.game.HomePlantSeedRsp", [
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomePlantSeedRsp>): HomePlantSeedRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantSeedRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantSeedRsp): HomePlantSeedRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantSeedRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantSeedRsp
 */
export const HomePlantSeedRsp = new HomePlantSeedRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantWeedReq$Type extends MessageType<HomePlantWeedReq> {
    constructor() {
        super("com.midnights.game.HomePlantWeedReq", [
            { no: 9, name: "field_guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "index", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomePlantWeedReq>): HomePlantWeedReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantWeedReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantWeedReq): HomePlantWeedReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 field_guid */ 9:
                    message.fieldGuid = reader.uint32();
                    break;
                case /* optional uint32 index */ 3:
                    message.index = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantWeedReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 field_guid = 9; */
        if (message.fieldGuid !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.fieldGuid);
        /* optional uint32 index = 3; */
        if (message.index !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.index);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantWeedReq
 */
export const HomePlantWeedReq = new HomePlantWeedReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantWeedRsp$Type extends MessageType<HomePlantWeedRsp> {
    constructor() {
        super("com.midnights.game.HomePlantWeedRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomePlantWeedRsp>): HomePlantWeedRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantWeedRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantWeedRsp): HomePlantWeedRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantWeedRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantWeedRsp
 */
export const HomePlantWeedRsp = new HomePlantWeedRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantSubFieldData$Type extends MessageType<HomePlantSubFieldData> {
    constructor() {
        super("com.midnights.game.HomePlantSubFieldData", [
            { no: 15, name: "entity_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "field_status", kind: "enum", opt: true, T: () => ["com.midnights.game.HomePlantFieldStatus", HomePlantFieldStatus] },
            { no: 9, name: "home_gather_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "seed_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "end_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ }
        ]);
    }
    create(value?: PartialMessage<HomePlantSubFieldData>): HomePlantSubFieldData {
        const message = { entityIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantSubFieldData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantSubFieldData): HomePlantSubFieldData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 entity_id_list */ 15:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.entityIdList.push(reader.uint32());
                    else
                        message.entityIdList.push(reader.uint32());
                    break;
                case /* optional com.midnights.game.HomePlantFieldStatus field_status */ 14:
                    message.fieldStatus = reader.int32();
                    break;
                case /* optional uint32 home_gather_id */ 9:
                    message.homeGatherId = reader.uint32();
                    break;
                case /* optional uint32 seed_id */ 8:
                    message.seedId = reader.uint32();
                    break;
                case /* optional fixed32 end_time */ 4:
                    message.endTime = reader.fixed32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantSubFieldData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 entity_id_list = 15; */
        for (let i = 0; i < message.entityIdList.length; i++)
            writer.tag(15, WireType.Varint).uint32(message.entityIdList[i]);
        /* optional com.midnights.game.HomePlantFieldStatus field_status = 14; */
        if (message.fieldStatus !== undefined)
            writer.tag(14, WireType.Varint).int32(message.fieldStatus);
        /* optional uint32 home_gather_id = 9; */
        if (message.homeGatherId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.homeGatherId);
        /* optional uint32 seed_id = 8; */
        if (message.seedId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.seedId);
        /* optional fixed32 end_time = 4; */
        if (message.endTime !== undefined)
            writer.tag(4, WireType.Bit32).fixed32(message.endTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantSubFieldData
 */
export const HomePlantSubFieldData = new HomePlantSubFieldData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantFieldData$Type extends MessageType<HomePlantFieldData> {
    constructor() {
        super("com.midnights.game.HomePlantFieldData", [
            { no: 13, name: "sub_field_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomePlantSubFieldData },
            { no: 9, name: "furniture_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "field_guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "spawn_pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<HomePlantFieldData>): HomePlantFieldData {
        const message = { subFieldList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantFieldData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantFieldData): HomePlantFieldData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomePlantSubFieldData sub_field_list */ 13:
                    message.subFieldList.push(HomePlantSubFieldData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 furniture_id */ 9:
                    message.furnitureId = reader.uint32();
                    break;
                case /* optional uint32 scene_id */ 1:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 field_guid */ 10:
                    message.fieldGuid = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector spawn_pos */ 12:
                    message.spawnPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.spawnPos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantFieldData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomePlantSubFieldData sub_field_list = 13; */
        for (let i = 0; i < message.subFieldList.length; i++)
            HomePlantSubFieldData.internalBinaryWrite(message.subFieldList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 furniture_id = 9; */
        if (message.furnitureId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.furnitureId);
        /* optional uint32 scene_id = 1; */
        if (message.sceneId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 field_guid = 10; */
        if (message.fieldGuid !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.fieldGuid);
        /* optional com.midnights.game.Vector spawn_pos = 12; */
        if (message.spawnPos)
            Vector.internalBinaryWrite(message.spawnPos, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantFieldData
 */
export const HomePlantFieldData = new HomePlantFieldData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantInfoNotify$Type extends MessageType<HomePlantInfoNotify> {
    constructor() {
        super("com.midnights.game.HomePlantInfoNotify", [
            { no: 4, name: "field_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomePlantFieldData }
        ]);
    }
    create(value?: PartialMessage<HomePlantInfoNotify>): HomePlantInfoNotify {
        const message = { fieldList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantInfoNotify): HomePlantInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomePlantFieldData field_list */ 4:
                    message.fieldList.push(HomePlantFieldData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomePlantFieldData field_list = 4; */
        for (let i = 0; i < message.fieldList.length; i++)
            HomePlantFieldData.internalBinaryWrite(message.fieldList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantInfoNotify
 */
export const HomePlantInfoNotify = new HomePlantInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantFieldNotify$Type extends MessageType<HomePlantFieldNotify> {
    constructor() {
        super("com.midnights.game.HomePlantFieldNotify", [
            { no: 13, name: "field", kind: "message", T: () => HomePlantFieldData }
        ]);
    }
    create(value?: PartialMessage<HomePlantFieldNotify>): HomePlantFieldNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantFieldNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantFieldNotify): HomePlantFieldNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomePlantFieldData field */ 13:
                    message.field = HomePlantFieldData.internalBinaryRead(reader, reader.uint32(), options, message.field);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantFieldNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomePlantFieldData field = 13; */
        if (message.field)
            HomePlantFieldData.internalBinaryWrite(message.field, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantFieldNotify
 */
export const HomePlantFieldNotify = new HomePlantFieldNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantInfoReq$Type extends MessageType<HomePlantInfoReq> {
    constructor() {
        super("com.midnights.game.HomePlantInfoReq", []);
    }
    create(value?: PartialMessage<HomePlantInfoReq>): HomePlantInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantInfoReq): HomePlantInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomePlantInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantInfoReq
 */
export const HomePlantInfoReq = new HomePlantInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePlantInfoRsp$Type extends MessageType<HomePlantInfoRsp> {
    constructor() {
        super("com.midnights.game.HomePlantInfoRsp", [
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "field_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomePlantFieldData }
        ]);
    }
    create(value?: PartialMessage<HomePlantInfoRsp>): HomePlantInfoRsp {
        const message = { fieldList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePlantInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePlantInfoRsp): HomePlantInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.HomePlantFieldData field_list */ 15:
                    message.fieldList.push(HomePlantFieldData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePlantInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.HomePlantFieldData field_list = 15; */
        for (let i = 0; i < message.fieldList.length; i++)
            HomePlantFieldData.internalBinaryWrite(message.fieldList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePlantInfoRsp
 */
export const HomePlantInfoRsp = new HomePlantInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeTransferReq$Type extends MessageType<HomeTransferReq> {
    constructor() {
        super("com.midnights.game.HomeTransferReq", [
            { no: 1, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "is_transfer_to_safe_point", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeTransferReq>): HomeTransferReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeTransferReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeTransferReq): HomeTransferReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 guid */ 1:
                    message.guid = reader.uint32();
                    break;
                case /* optional bool is_transfer_to_safe_point */ 12:
                    message.isTransferToSafePoint = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeTransferReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 guid = 1; */
        if (message.guid !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.guid);
        /* optional bool is_transfer_to_safe_point = 12; */
        if (message.isTransferToSafePoint !== undefined)
            writer.tag(12, WireType.Varint).bool(message.isTransferToSafePoint);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeTransferReq
 */
export const HomeTransferReq = new HomeTransferReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeTransferRsp$Type extends MessageType<HomeTransferRsp> {
    constructor() {
        super("com.midnights.game.HomeTransferRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeTransferRsp>): HomeTransferRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeTransferRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeTransferRsp): HomeTransferRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeTransferRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeTransferRsp
 */
export const HomeTransferRsp = new HomeTransferRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeFishFarmingInfo$Type extends MessageType<HomeFishFarmingInfo> {
    constructor() {
        super("com.midnights.game.HomeFishFarmingInfo", [
            { no: 11, name: "fish_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "fishpond_guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeFishFarmingInfo>): HomeFishFarmingInfo {
        const message = { fishIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeFishFarmingInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeFishFarmingInfo): HomeFishFarmingInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 fish_id_list */ 11:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.fishIdList.push(reader.uint32());
                    else
                        message.fishIdList.push(reader.uint32());
                    break;
                case /* optional uint32 fishpond_guid */ 14:
                    message.fishpondGuid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeFishFarmingInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 fish_id_list = 11; */
        for (let i = 0; i < message.fishIdList.length; i++)
            writer.tag(11, WireType.Varint).uint32(message.fishIdList[i]);
        /* optional uint32 fishpond_guid = 14; */
        if (message.fishpondGuid !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.fishpondGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeFishFarmingInfo
 */
export const HomeFishFarmingInfo = new HomeFishFarmingInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetFishFarmingInfoReq$Type extends MessageType<HomeGetFishFarmingInfoReq> {
    constructor() {
        super("com.midnights.game.HomeGetFishFarmingInfoReq", []);
    }
    create(value?: PartialMessage<HomeGetFishFarmingInfoReq>): HomeGetFishFarmingInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetFishFarmingInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetFishFarmingInfoReq): HomeGetFishFarmingInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeGetFishFarmingInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetFishFarmingInfoReq
 */
export const HomeGetFishFarmingInfoReq = new HomeGetFishFarmingInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetFishFarmingInfoRsp$Type extends MessageType<HomeGetFishFarmingInfoRsp> {
    constructor() {
        super("com.midnights.game.HomeGetFishFarmingInfoRsp", [
            { no: 7, name: "fish_farming_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFishFarmingInfo },
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeGetFishFarmingInfoRsp>): HomeGetFishFarmingInfoRsp {
        const message = { fishFarmingInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetFishFarmingInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetFishFarmingInfoRsp): HomeGetFishFarmingInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeFishFarmingInfo fish_farming_info_list */ 7:
                    message.fishFarmingInfoList.push(HomeFishFarmingInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGetFishFarmingInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeFishFarmingInfo fish_farming_info_list = 7; */
        for (let i = 0; i < message.fishFarmingInfoList.length; i++)
            HomeFishFarmingInfo.internalBinaryWrite(message.fishFarmingInfoList[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetFishFarmingInfoRsp
 */
export const HomeGetFishFarmingInfoRsp = new HomeGetFishFarmingInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeFishFarmingInfoNotify$Type extends MessageType<HomeFishFarmingInfoNotify> {
    constructor() {
        super("com.midnights.game.HomeFishFarmingInfoNotify", [
            { no: 15, name: "fish_farming_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeFishFarmingInfo }
        ]);
    }
    create(value?: PartialMessage<HomeFishFarmingInfoNotify>): HomeFishFarmingInfoNotify {
        const message = { fishFarmingInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeFishFarmingInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeFishFarmingInfoNotify): HomeFishFarmingInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeFishFarmingInfo fish_farming_info_list */ 15:
                    message.fishFarmingInfoList.push(HomeFishFarmingInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeFishFarmingInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeFishFarmingInfo fish_farming_info_list = 15; */
        for (let i = 0; i < message.fishFarmingInfoList.length; i++)
            HomeFishFarmingInfo.internalBinaryWrite(message.fishFarmingInfoList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeFishFarmingInfoNotify
 */
export const HomeFishFarmingInfoNotify = new HomeFishFarmingInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeUpdateFishFarmingInfoReq$Type extends MessageType<HomeUpdateFishFarmingInfoReq> {
    constructor() {
        super("com.midnights.game.HomeUpdateFishFarmingInfoReq", [
            { no: 5, name: "fish_farming_info", kind: "message", T: () => HomeFishFarmingInfo }
        ]);
    }
    create(value?: PartialMessage<HomeUpdateFishFarmingInfoReq>): HomeUpdateFishFarmingInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeUpdateFishFarmingInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeUpdateFishFarmingInfoReq): HomeUpdateFishFarmingInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeFishFarmingInfo fish_farming_info */ 5:
                    message.fishFarmingInfo = HomeFishFarmingInfo.internalBinaryRead(reader, reader.uint32(), options, message.fishFarmingInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeUpdateFishFarmingInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeFishFarmingInfo fish_farming_info = 5; */
        if (message.fishFarmingInfo)
            HomeFishFarmingInfo.internalBinaryWrite(message.fishFarmingInfo, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeUpdateFishFarmingInfoReq
 */
export const HomeUpdateFishFarmingInfoReq = new HomeUpdateFishFarmingInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeUpdateFishFarmingInfoRsp$Type extends MessageType<HomeUpdateFishFarmingInfoRsp> {
    constructor() {
        super("com.midnights.game.HomeUpdateFishFarmingInfoRsp", [
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeUpdateFishFarmingInfoRsp>): HomeUpdateFishFarmingInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeUpdateFishFarmingInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeUpdateFishFarmingInfoRsp): HomeUpdateFishFarmingInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeUpdateFishFarmingInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeUpdateFishFarmingInfoRsp
 */
export const HomeUpdateFishFarmingInfoRsp = new HomeUpdateFishFarmingInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeScenePointFishFarmingInfo$Type extends MessageType<HomeScenePointFishFarmingInfo> {
    constructor() {
        super("com.midnights.game.HomeScenePointFishFarmingInfo", [
            { no: 13, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "fish_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "local_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeScenePointFishFarmingInfo>): HomeScenePointFishFarmingInfo {
        const message = { fishIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeScenePointFishFarmingInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeScenePointFishFarmingInfo): HomeScenePointFishFarmingInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 scene_id */ 13:
                    message.sceneId = reader.uint32();
                    break;
                case /* repeated uint32 fish_id_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.fishIdList.push(reader.uint32());
                    else
                        message.fishIdList.push(reader.uint32());
                    break;
                case /* optional uint32 local_entity_id */ 3:
                    message.localEntityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeScenePointFishFarmingInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 scene_id = 13; */
        if (message.sceneId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.sceneId);
        /* repeated uint32 fish_id_list = 1; */
        for (let i = 0; i < message.fishIdList.length; i++)
            writer.tag(1, WireType.Varint).uint32(message.fishIdList[i]);
        /* optional uint32 local_entity_id = 3; */
        if (message.localEntityId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.localEntityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeScenePointFishFarmingInfo
 */
export const HomeScenePointFishFarmingInfo = new HomeScenePointFishFarmingInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeUpdateScenePointFishFarmingInfoReq$Type extends MessageType<HomeUpdateScenePointFishFarmingInfoReq> {
    constructor() {
        super("com.midnights.game.HomeUpdateScenePointFishFarmingInfoReq", [
            { no: 7, name: "fish_farming_info", kind: "message", T: () => HomeScenePointFishFarmingInfo }
        ]);
    }
    create(value?: PartialMessage<HomeUpdateScenePointFishFarmingInfoReq>): HomeUpdateScenePointFishFarmingInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeUpdateScenePointFishFarmingInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeUpdateScenePointFishFarmingInfoReq): HomeUpdateScenePointFishFarmingInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeScenePointFishFarmingInfo fish_farming_info */ 7:
                    message.fishFarmingInfo = HomeScenePointFishFarmingInfo.internalBinaryRead(reader, reader.uint32(), options, message.fishFarmingInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeUpdateScenePointFishFarmingInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeScenePointFishFarmingInfo fish_farming_info = 7; */
        if (message.fishFarmingInfo)
            HomeScenePointFishFarmingInfo.internalBinaryWrite(message.fishFarmingInfo, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeUpdateScenePointFishFarmingInfoReq
 */
export const HomeUpdateScenePointFishFarmingInfoReq = new HomeUpdateScenePointFishFarmingInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeUpdateScenePointFishFarmingInfoRsp$Type extends MessageType<HomeUpdateScenePointFishFarmingInfoRsp> {
    constructor() {
        super("com.midnights.game.HomeUpdateScenePointFishFarmingInfoRsp", [
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeUpdateScenePointFishFarmingInfoRsp>): HomeUpdateScenePointFishFarmingInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeUpdateScenePointFishFarmingInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeUpdateScenePointFishFarmingInfoRsp): HomeUpdateScenePointFishFarmingInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeUpdateScenePointFishFarmingInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeUpdateScenePointFishFarmingInfoRsp
 */
export const HomeUpdateScenePointFishFarmingInfoRsp = new HomeUpdateScenePointFishFarmingInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeScenePointFishFarmingInfoNotify$Type extends MessageType<HomeScenePointFishFarmingInfoNotify> {
    constructor() {
        super("com.midnights.game.HomeScenePointFishFarmingInfoNotify", [
            { no: 7, name: "fish_farming_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeScenePointFishFarmingInfo }
        ]);
    }
    create(value?: PartialMessage<HomeScenePointFishFarmingInfoNotify>): HomeScenePointFishFarmingInfoNotify {
        const message = { fishFarmingInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeScenePointFishFarmingInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeScenePointFishFarmingInfoNotify): HomeScenePointFishFarmingInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeScenePointFishFarmingInfo fish_farming_info_list */ 7:
                    message.fishFarmingInfoList.push(HomeScenePointFishFarmingInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeScenePointFishFarmingInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeScenePointFishFarmingInfo fish_farming_info_list = 7; */
        for (let i = 0; i < message.fishFarmingInfoList.length; i++)
            HomeScenePointFishFarmingInfo.internalBinaryWrite(message.fishFarmingInfoList[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeScenePointFishFarmingInfoNotify
 */
export const HomeScenePointFishFarmingInfoNotify = new HomeScenePointFishFarmingInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeCustomFurnitureInfo$Type extends MessageType<HomeCustomFurnitureInfo> {
    constructor() {
        super("com.midnights.game.HomeCustomFurnitureInfo", [
            { no: 12, name: "sub_furniture_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CustomCommonNodeInfo },
            { no: 6, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeCustomFurnitureInfo>): HomeCustomFurnitureInfo {
        const message = { subFurnitureList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeCustomFurnitureInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeCustomFurnitureInfo): HomeCustomFurnitureInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.CustomCommonNodeInfo sub_furniture_list */ 12:
                    message.subFurnitureList.push(CustomCommonNodeInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 guid */ 6:
                    message.guid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeCustomFurnitureInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.CustomCommonNodeInfo sub_furniture_list = 12; */
        for (let i = 0; i < message.subFurnitureList.length; i++)
            CustomCommonNodeInfo.internalBinaryWrite(message.subFurnitureList[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 guid = 6; */
        if (message.guid !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.guid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeCustomFurnitureInfo
 */
export const HomeCustomFurnitureInfo = new HomeCustomFurnitureInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeCustomFurnitureInfoNotify$Type extends MessageType<HomeCustomFurnitureInfoNotify> {
    constructor() {
        super("com.midnights.game.HomeCustomFurnitureInfoNotify", [
            { no: 4, name: "delete_custom_furniture_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "used_sub_furniture_count_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 11, name: "custom_furniture_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeCustomFurnitureInfo }
        ]);
    }
    create(value?: PartialMessage<HomeCustomFurnitureInfoNotify>): HomeCustomFurnitureInfoNotify {
        const message = { deleteCustomFurnitureList: [], usedSubFurnitureCountMap: {}, customFurnitureInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeCustomFurnitureInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeCustomFurnitureInfoNotify): HomeCustomFurnitureInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 delete_custom_furniture_list */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.deleteCustomFurnitureList.push(reader.uint32());
                    else
                        message.deleteCustomFurnitureList.push(reader.uint32());
                    break;
                case /* map<uint32, uint32> used_sub_furniture_count_map */ 15:
                    this.binaryReadMap15(message.usedSubFurnitureCountMap, reader, options);
                    break;
                case /* repeated com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info_list */ 11:
                    message.customFurnitureInfoList.push(HomeCustomFurnitureInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap15(map: HomeCustomFurnitureInfoNotify["usedSubFurnitureCountMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof HomeCustomFurnitureInfoNotify["usedSubFurnitureCountMap"] | undefined, val: HomeCustomFurnitureInfoNotify["usedSubFurnitureCountMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.HomeCustomFurnitureInfoNotify.used_sub_furniture_count_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: HomeCustomFurnitureInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 delete_custom_furniture_list = 4; */
        for (let i = 0; i < message.deleteCustomFurnitureList.length; i++)
            writer.tag(4, WireType.Varint).uint32(message.deleteCustomFurnitureList[i]);
        /* map<uint32, uint32> used_sub_furniture_count_map = 15; */
        for (let k of Object.keys(message.usedSubFurnitureCountMap))
            writer.tag(15, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.usedSubFurnitureCountMap[k as any]).join();
        /* repeated com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info_list = 11; */
        for (let i = 0; i < message.customFurnitureInfoList.length; i++)
            HomeCustomFurnitureInfo.internalBinaryWrite(message.customFurnitureInfoList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeCustomFurnitureInfoNotify
 */
export const HomeCustomFurnitureInfoNotify = new HomeCustomFurnitureInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeEditCustomFurnitureReq$Type extends MessageType<HomeEditCustomFurnitureReq> {
    constructor() {
        super("com.midnights.game.HomeEditCustomFurnitureReq", [
            { no: 15, name: "custom_furniture_info", kind: "message", T: () => HomeCustomFurnitureInfo }
        ]);
    }
    create(value?: PartialMessage<HomeEditCustomFurnitureReq>): HomeEditCustomFurnitureReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeEditCustomFurnitureReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeEditCustomFurnitureReq): HomeEditCustomFurnitureReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info */ 15:
                    message.customFurnitureInfo = HomeCustomFurnitureInfo.internalBinaryRead(reader, reader.uint32(), options, message.customFurnitureInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeEditCustomFurnitureReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info = 15; */
        if (message.customFurnitureInfo)
            HomeCustomFurnitureInfo.internalBinaryWrite(message.customFurnitureInfo, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeEditCustomFurnitureReq
 */
export const HomeEditCustomFurnitureReq = new HomeEditCustomFurnitureReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeEditCustomFurnitureRsp$Type extends MessageType<HomeEditCustomFurnitureRsp> {
    constructor() {
        super("com.midnights.game.HomeEditCustomFurnitureRsp", [
            { no: 11, name: "custom_furniture_info", kind: "message", T: () => HomeCustomFurnitureInfo },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeEditCustomFurnitureRsp>): HomeEditCustomFurnitureRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeEditCustomFurnitureRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeEditCustomFurnitureRsp): HomeEditCustomFurnitureRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info */ 11:
                    message.customFurnitureInfo = HomeCustomFurnitureInfo.internalBinaryRead(reader, reader.uint32(), options, message.customFurnitureInfo);
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeEditCustomFurnitureRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeCustomFurnitureInfo custom_furniture_info = 11; */
        if (message.customFurnitureInfo)
            HomeCustomFurnitureInfo.internalBinaryWrite(message.customFurnitureInfo, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeEditCustomFurnitureRsp
 */
export const HomeEditCustomFurnitureRsp = new HomeEditCustomFurnitureRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePictureFrameInfo$Type extends MessageType<HomePictureFrameInfo> {
    constructor() {
        super("com.midnights.game.HomePictureFrameInfo", [
            { no: 11, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "picture_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomePictureFrameInfo>): HomePictureFrameInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePictureFrameInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePictureFrameInfo): HomePictureFrameInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 guid */ 11:
                    message.guid = reader.uint32();
                    break;
                case /* optional uint32 picture_id */ 6:
                    message.pictureId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePictureFrameInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 guid = 11; */
        if (message.guid !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.guid);
        /* optional uint32 picture_id = 6; */
        if (message.pictureId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.pictureId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePictureFrameInfo
 */
export const HomePictureFrameInfo = new HomePictureFrameInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePictureFrameInfoNotify$Type extends MessageType<HomePictureFrameInfoNotify> {
    constructor() {
        super("com.midnights.game.HomePictureFrameInfoNotify", [
            { no: 12, name: "picture_frame_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomePictureFrameInfo }
        ]);
    }
    create(value?: PartialMessage<HomePictureFrameInfoNotify>): HomePictureFrameInfoNotify {
        const message = { pictureFrameInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePictureFrameInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePictureFrameInfoNotify): HomePictureFrameInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomePictureFrameInfo picture_frame_info_list */ 12:
                    message.pictureFrameInfoList.push(HomePictureFrameInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePictureFrameInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomePictureFrameInfo picture_frame_info_list = 12; */
        for (let i = 0; i < message.pictureFrameInfoList.length; i++)
            HomePictureFrameInfo.internalBinaryWrite(message.pictureFrameInfoList[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePictureFrameInfoNotify
 */
export const HomePictureFrameInfoNotify = new HomePictureFrameInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeUpdatePictureFrameInfoReq$Type extends MessageType<HomeUpdatePictureFrameInfoReq> {
    constructor() {
        super("com.midnights.game.HomeUpdatePictureFrameInfoReq", [
            { no: 1, name: "picture_frame_info", kind: "message", T: () => HomePictureFrameInfo }
        ]);
    }
    create(value?: PartialMessage<HomeUpdatePictureFrameInfoReq>): HomeUpdatePictureFrameInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeUpdatePictureFrameInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeUpdatePictureFrameInfoReq): HomeUpdatePictureFrameInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomePictureFrameInfo picture_frame_info */ 1:
                    message.pictureFrameInfo = HomePictureFrameInfo.internalBinaryRead(reader, reader.uint32(), options, message.pictureFrameInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeUpdatePictureFrameInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomePictureFrameInfo picture_frame_info = 1; */
        if (message.pictureFrameInfo)
            HomePictureFrameInfo.internalBinaryWrite(message.pictureFrameInfo, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeUpdatePictureFrameInfoReq
 */
export const HomeUpdatePictureFrameInfoReq = new HomeUpdatePictureFrameInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeUpdatePictureFrameInfoRsp$Type extends MessageType<HomeUpdatePictureFrameInfoRsp> {
    constructor() {
        super("com.midnights.game.HomeUpdatePictureFrameInfoRsp", [
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "picture_frame_info", kind: "message", T: () => HomePictureFrameInfo }
        ]);
    }
    create(value?: PartialMessage<HomeUpdatePictureFrameInfoRsp>): HomeUpdatePictureFrameInfoRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeUpdatePictureFrameInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeUpdatePictureFrameInfoRsp): HomeUpdatePictureFrameInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.HomePictureFrameInfo picture_frame_info */ 14:
                    message.pictureFrameInfo = HomePictureFrameInfo.internalBinaryRead(reader, reader.uint32(), options, message.pictureFrameInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeUpdatePictureFrameInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.HomePictureFrameInfo picture_frame_info = 14; */
        if (message.pictureFrameInfo)
            HomePictureFrameInfo.internalBinaryWrite(message.pictureFrameInfo, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeUpdatePictureFrameInfoRsp
 */
export const HomeUpdatePictureFrameInfoRsp = new HomeUpdatePictureFrameInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeRacingGallerySettleNotify$Type extends MessageType<HomeRacingGallerySettleNotify> {
    constructor() {
        super("com.midnights.game.HomeRacingGallerySettleNotify", [
            { no: 11, name: "gallery_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "settle_info", kind: "message", T: () => RacingGallerySettleInfo },
            { no: 7, name: "rank", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "is_new_record", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeRacingGallerySettleNotify>): HomeRacingGallerySettleNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeRacingGallerySettleNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeRacingGallerySettleNotify): HomeRacingGallerySettleNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 gallery_id */ 11:
                    message.galleryId = reader.uint32();
                    break;
                case /* optional com.midnights.game.RacingGallerySettleInfo settle_info */ 12:
                    message.settleInfo = RacingGallerySettleInfo.internalBinaryRead(reader, reader.uint32(), options, message.settleInfo);
                    break;
                case /* optional uint32 rank */ 7:
                    message.rank = reader.uint32();
                    break;
                case /* optional bool is_new_record */ 2:
                    message.isNewRecord = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeRacingGallerySettleNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 gallery_id = 11; */
        if (message.galleryId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.galleryId);
        /* optional com.midnights.game.RacingGallerySettleInfo settle_info = 12; */
        if (message.settleInfo)
            RacingGallerySettleInfo.internalBinaryWrite(message.settleInfo, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 rank = 7; */
        if (message.rank !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.rank);
        /* optional bool is_new_record = 2; */
        if (message.isNewRecord !== undefined)
            writer.tag(2, WireType.Varint).bool(message.isNewRecord);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeRacingGallerySettleNotify
 */
export const HomeRacingGallerySettleNotify = new HomeRacingGallerySettleNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGroupPlayerInfo$Type extends MessageType<HomeGroupPlayerInfo> {
    constructor() {
        super("com.midnights.game.HomeGroupPlayerInfo", [
            { no: 14, name: "online_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "psn_id", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "nickname", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "player_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "profile_picture", kind: "message", T: () => ProfilePicture }
        ]);
    }
    create(value?: PartialMessage<HomeGroupPlayerInfo>): HomeGroupPlayerInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGroupPlayerInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGroupPlayerInfo): HomeGroupPlayerInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string online_id */ 14:
                    message.onlineId = reader.string();
                    break;
                case /* optional string psn_id */ 6:
                    message.psnId = reader.string();
                    break;
                case /* optional string nickname */ 15:
                    message.nickname = reader.string();
                    break;
                case /* optional uint32 player_level */ 4:
                    message.playerLevel = reader.uint32();
                    break;
                case /* optional uint32 uid */ 2:
                    message.uid = reader.uint32();
                    break;
                case /* optional com.midnights.game.ProfilePicture profile_picture */ 5:
                    message.profilePicture = ProfilePicture.internalBinaryRead(reader, reader.uint32(), options, message.profilePicture);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGroupPlayerInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string online_id = 14; */
        if (message.onlineId !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.onlineId);
        /* optional string psn_id = 6; */
        if (message.psnId !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.psnId);
        /* optional string nickname = 15; */
        if (message.nickname !== undefined)
            writer.tag(15, WireType.LengthDelimited).string(message.nickname);
        /* optional uint32 player_level = 4; */
        if (message.playerLevel !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.playerLevel);
        /* optional uint32 uid = 2; */
        if (message.uid !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.uid);
        /* optional com.midnights.game.ProfilePicture profile_picture = 5; */
        if (message.profilePicture)
            ProfilePicture.internalBinaryWrite(message.profilePicture, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGroupPlayerInfo
 */
export const HomeGroupPlayerInfo = new HomeGroupPlayerInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeRacingGalleryRecord$Type extends MessageType<HomeRacingGalleryRecord> {
    constructor() {
        super("com.midnights.game.HomeRacingGalleryRecord", [
            { no: 1, name: "use_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "timestamp", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "player_info", kind: "message", T: () => HomeGroupPlayerInfo }
        ]);
    }
    create(value?: PartialMessage<HomeRacingGalleryRecord>): HomeRacingGalleryRecord {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeRacingGalleryRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeRacingGalleryRecord): HomeRacingGalleryRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 use_time */ 1:
                    message.useTime = reader.uint32();
                    break;
                case /* optional uint32 timestamp */ 8:
                    message.timestamp = reader.uint32();
                    break;
                case /* optional com.midnights.game.HomeGroupPlayerInfo player_info */ 12:
                    message.playerInfo = HomeGroupPlayerInfo.internalBinaryRead(reader, reader.uint32(), options, message.playerInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeRacingGalleryRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 use_time = 1; */
        if (message.useTime !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.useTime);
        /* optional uint32 timestamp = 8; */
        if (message.timestamp !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.timestamp);
        /* optional com.midnights.game.HomeGroupPlayerInfo player_info = 12; */
        if (message.playerInfo)
            HomeGroupPlayerInfo.internalBinaryWrite(message.playerInfo, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeRacingGalleryRecord
 */
export const HomeRacingGalleryRecord = new HomeRacingGalleryRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeRacingRecord$Type extends MessageType<HomeRacingRecord> {
    constructor() {
        super("com.midnights.game.HomeRacingRecord", [
            { no: 7, name: "record_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeRacingGalleryRecord }
        ]);
    }
    create(value?: PartialMessage<HomeRacingRecord>): HomeRacingRecord {
        const message = { recordList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeRacingRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeRacingRecord): HomeRacingRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeRacingGalleryRecord record_list */ 7:
                    message.recordList.push(HomeRacingGalleryRecord.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeRacingRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeRacingGalleryRecord record_list = 7; */
        for (let i = 0; i < message.recordList.length; i++)
            HomeRacingGalleryRecord.internalBinaryWrite(message.recordList[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeRacingRecord
 */
export const HomeRacingRecord = new HomeRacingRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBalloonGalleryRecord$Type extends MessageType<HomeBalloonGalleryRecord> {
    constructor() {
        super("com.midnights.game.HomeBalloonGalleryRecord", [
            { no: 12, name: "hit_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "score", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "player_info", kind: "message", T: () => HomeGroupPlayerInfo },
            { no: 2, name: "timestamp", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBalloonGalleryRecord>): HomeBalloonGalleryRecord {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBalloonGalleryRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBalloonGalleryRecord): HomeBalloonGalleryRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 hit_count */ 12:
                    message.hitCount = reader.uint32();
                    break;
                case /* optional uint32 score */ 11:
                    message.score = reader.uint32();
                    break;
                case /* optional com.midnights.game.HomeGroupPlayerInfo player_info */ 5:
                    message.playerInfo = HomeGroupPlayerInfo.internalBinaryRead(reader, reader.uint32(), options, message.playerInfo);
                    break;
                case /* optional uint32 timestamp */ 2:
                    message.timestamp = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBalloonGalleryRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 hit_count = 12; */
        if (message.hitCount !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.hitCount);
        /* optional uint32 score = 11; */
        if (message.score !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.score);
        /* optional com.midnights.game.HomeGroupPlayerInfo player_info = 5; */
        if (message.playerInfo)
            HomeGroupPlayerInfo.internalBinaryWrite(message.playerInfo, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 timestamp = 2; */
        if (message.timestamp !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.timestamp);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBalloonGalleryRecord
 */
export const HomeBalloonGalleryRecord = new HomeBalloonGalleryRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBalloonRecord$Type extends MessageType<HomeBalloonRecord> {
    constructor() {
        super("com.midnights.game.HomeBalloonRecord", [
            { no: 15, name: "record_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeBalloonGalleryRecord }
        ]);
    }
    create(value?: PartialMessage<HomeBalloonRecord>): HomeBalloonRecord {
        const message = { recordList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBalloonRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBalloonRecord): HomeBalloonRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeBalloonGalleryRecord record_list */ 15:
                    message.recordList.push(HomeBalloonGalleryRecord.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBalloonRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeBalloonGalleryRecord record_list = 15; */
        for (let i = 0; i < message.recordList.length; i++)
            HomeBalloonGalleryRecord.internalBinaryWrite(message.recordList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBalloonRecord
 */
export const HomeBalloonRecord = new HomeBalloonRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeStakePlayRecord$Type extends MessageType<HomeStakePlayRecord> {
    constructor() {
        super("com.midnights.game.HomeStakePlayRecord", [
            { no: 14, name: "engaged_player_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeGroupPlayerInfo },
            { no: 9, name: "timestamp", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeStakePlayRecord>): HomeStakePlayRecord {
        const message = { engagedPlayerInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeStakePlayRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeStakePlayRecord): HomeStakePlayRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeGroupPlayerInfo engaged_player_info_list */ 14:
                    message.engagedPlayerInfoList.push(HomeGroupPlayerInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 timestamp */ 9:
                    message.timestamp = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeStakePlayRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeGroupPlayerInfo engaged_player_info_list = 14; */
        for (let i = 0; i < message.engagedPlayerInfoList.length; i++)
            HomeGroupPlayerInfo.internalBinaryWrite(message.engagedPlayerInfoList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 timestamp = 9; */
        if (message.timestamp !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.timestamp);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeStakePlayRecord
 */
export const HomeStakePlayRecord = new HomeStakePlayRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeStakeRecord$Type extends MessageType<HomeStakeRecord> {
    constructor() {
        super("com.midnights.game.HomeStakeRecord", [
            { no: 13, name: "record_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeStakePlayRecord }
        ]);
    }
    create(value?: PartialMessage<HomeStakeRecord>): HomeStakeRecord {
        const message = { recordList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeStakeRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeStakeRecord): HomeStakeRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeStakePlayRecord record_list */ 13:
                    message.recordList.push(HomeStakePlayRecord.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeStakeRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeStakePlayRecord record_list = 13; */
        for (let i = 0; i < message.recordList.length; i++)
            HomeStakePlayRecord.internalBinaryWrite(message.recordList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeStakeRecord
 */
export const HomeStakeRecord = new HomeStakeRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSeekFurniturePlayerScore$Type extends MessageType<HomeSeekFurniturePlayerScore> {
    constructor() {
        super("com.midnights.game.HomeSeekFurniturePlayerScore", [
            { no: 12, name: "score", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "player_info", kind: "message", T: () => HomeGroupPlayerInfo }
        ]);
    }
    create(value?: PartialMessage<HomeSeekFurniturePlayerScore>): HomeSeekFurniturePlayerScore {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSeekFurniturePlayerScore>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSeekFurniturePlayerScore): HomeSeekFurniturePlayerScore {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 score */ 12:
                    message.score = reader.uint32();
                    break;
                case /* optional com.midnights.game.HomeGroupPlayerInfo player_info */ 10:
                    message.playerInfo = HomeGroupPlayerInfo.internalBinaryRead(reader, reader.uint32(), options, message.playerInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSeekFurniturePlayerScore, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 score = 12; */
        if (message.score !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.score);
        /* optional com.midnights.game.HomeGroupPlayerInfo player_info = 10; */
        if (message.playerInfo)
            HomeGroupPlayerInfo.internalBinaryWrite(message.playerInfo, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSeekFurniturePlayerScore
 */
export const HomeSeekFurniturePlayerScore = new HomeSeekFurniturePlayerScore$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSeekFurnitureOneRecord$Type extends MessageType<HomeSeekFurnitureOneRecord> {
    constructor() {
        super("com.midnights.game.HomeSeekFurnitureOneRecord", [
            { no: 8, name: "engaged_player_score_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeSeekFurniturePlayerScore },
            { no: 3, name: "timestamp", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSeekFurnitureOneRecord>): HomeSeekFurnitureOneRecord {
        const message = { engagedPlayerScoreList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSeekFurnitureOneRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSeekFurnitureOneRecord): HomeSeekFurnitureOneRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeSeekFurniturePlayerScore engaged_player_score_list */ 8:
                    message.engagedPlayerScoreList.push(HomeSeekFurniturePlayerScore.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 timestamp */ 3:
                    message.timestamp = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSeekFurnitureOneRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeSeekFurniturePlayerScore engaged_player_score_list = 8; */
        for (let i = 0; i < message.engagedPlayerScoreList.length; i++)
            HomeSeekFurniturePlayerScore.internalBinaryWrite(message.engagedPlayerScoreList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 timestamp = 3; */
        if (message.timestamp !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.timestamp);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSeekFurnitureOneRecord
 */
export const HomeSeekFurnitureOneRecord = new HomeSeekFurnitureOneRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSeekFurnitureAllRecord$Type extends MessageType<HomeSeekFurnitureAllRecord> {
    constructor() {
        super("com.midnights.game.HomeSeekFurnitureAllRecord", [
            { no: 5, name: "record_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeSeekFurnitureOneRecord }
        ]);
    }
    create(value?: PartialMessage<HomeSeekFurnitureAllRecord>): HomeSeekFurnitureAllRecord {
        const message = { recordList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSeekFurnitureAllRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSeekFurnitureAllRecord): HomeSeekFurnitureAllRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.HomeSeekFurnitureOneRecord record_list */ 5:
                    message.recordList.push(HomeSeekFurnitureOneRecord.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSeekFurnitureAllRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.HomeSeekFurnitureOneRecord record_list = 5; */
        for (let i = 0; i < message.recordList.length; i++)
            HomeSeekFurnitureOneRecord.internalBinaryWrite(message.recordList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSeekFurnitureAllRecord
 */
export const HomeSeekFurnitureAllRecord = new HomeSeekFurnitureAllRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGroupRecord$Type extends MessageType<HomeGroupRecord> {
    constructor() {
        super("com.midnights.game.HomeGroupRecord", [
            { no: 5, name: "group_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 467, name: "racing_gallery_info", kind: "message", oneof: "detail", T: () => HomeRacingRecord },
            { no: 1410, name: "balloon_gallery_info", kind: "message", oneof: "detail", T: () => HomeBalloonRecord },
            { no: 347, name: "stake_play_info", kind: "message", oneof: "detail", T: () => HomeStakeRecord },
            { no: 1822, name: "seek_furniture_gallery_info", kind: "message", oneof: "detail", T: () => HomeSeekFurnitureAllRecord }
        ]);
    }
    create(value?: PartialMessage<HomeGroupRecord>): HomeGroupRecord {
        const message = { detail: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGroupRecord>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGroupRecord): HomeGroupRecord {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 group_id */ 5:
                    message.groupId = reader.uint32();
                    break;
                case /* com.midnights.game.HomeRacingRecord racing_gallery_info */ 467:
                    message.detail = {
                        oneofKind: "racingGalleryInfo",
                        racingGalleryInfo: HomeRacingRecord.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).racingGalleryInfo)
                    };
                    break;
                case /* com.midnights.game.HomeBalloonRecord balloon_gallery_info */ 1410:
                    message.detail = {
                        oneofKind: "balloonGalleryInfo",
                        balloonGalleryInfo: HomeBalloonRecord.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).balloonGalleryInfo)
                    };
                    break;
                case /* com.midnights.game.HomeStakeRecord stake_play_info */ 347:
                    message.detail = {
                        oneofKind: "stakePlayInfo",
                        stakePlayInfo: HomeStakeRecord.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).stakePlayInfo)
                    };
                    break;
                case /* com.midnights.game.HomeSeekFurnitureAllRecord seek_furniture_gallery_info */ 1822:
                    message.detail = {
                        oneofKind: "seekFurnitureGalleryInfo",
                        seekFurnitureGalleryInfo: HomeSeekFurnitureAllRecord.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).seekFurnitureGalleryInfo)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGroupRecord, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 group_id = 5; */
        if (message.groupId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.groupId);
        /* com.midnights.game.HomeRacingRecord racing_gallery_info = 467; */
        if (message.detail.oneofKind === "racingGalleryInfo")
            HomeRacingRecord.internalBinaryWrite(message.detail.racingGalleryInfo, writer.tag(467, WireType.LengthDelimited).fork(), options).join();
        /* com.midnights.game.HomeBalloonRecord balloon_gallery_info = 1410; */
        if (message.detail.oneofKind === "balloonGalleryInfo")
            HomeBalloonRecord.internalBinaryWrite(message.detail.balloonGalleryInfo, writer.tag(1410, WireType.LengthDelimited).fork(), options).join();
        /* com.midnights.game.HomeStakeRecord stake_play_info = 347; */
        if (message.detail.oneofKind === "stakePlayInfo")
            HomeStakeRecord.internalBinaryWrite(message.detail.stakePlayInfo, writer.tag(347, WireType.LengthDelimited).fork(), options).join();
        /* com.midnights.game.HomeSeekFurnitureAllRecord seek_furniture_gallery_info = 1822; */
        if (message.detail.oneofKind === "seekFurnitureGalleryInfo")
            HomeSeekFurnitureAllRecord.internalBinaryWrite(message.detail.seekFurnitureGalleryInfo, writer.tag(1822, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGroupRecord
 */
export const HomeGroupRecord = new HomeGroupRecord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetGroupRecordReq$Type extends MessageType<HomeGetGroupRecordReq> {
    constructor() {
        super("com.midnights.game.HomeGetGroupRecordReq", [
            { no: 14, name: "group_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeGetGroupRecordReq>): HomeGetGroupRecordReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetGroupRecordReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetGroupRecordReq): HomeGetGroupRecordReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 group_id */ 14:
                    message.groupId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGetGroupRecordReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 group_id = 14; */
        if (message.groupId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.groupId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetGroupRecordReq
 */
export const HomeGetGroupRecordReq = new HomeGetGroupRecordReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetGroupRecordRsp$Type extends MessageType<HomeGetGroupRecordRsp> {
    constructor() {
        super("com.midnights.game.HomeGetGroupRecordRsp", [
            { no: 7, name: "group_record", kind: "message", T: () => HomeGroupRecord },
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 1, name: "record_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeGetGroupRecordRsp>): HomeGetGroupRecordRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetGroupRecordRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetGroupRecordRsp): HomeGetGroupRecordRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeGroupRecord group_record */ 7:
                    message.groupRecord = HomeGroupRecord.internalBinaryRead(reader, reader.uint32(), options, message.groupRecord);
                    break;
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 record_type */ 1:
                    message.recordType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGetGroupRecordRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeGroupRecord group_record = 7; */
        if (message.groupRecord)
            HomeGroupRecord.internalBinaryWrite(message.groupRecord, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        /* optional uint32 record_type = 1; */
        if (message.recordType !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.recordType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetGroupRecordRsp
 */
export const HomeGetGroupRecordRsp = new HomeGetGroupRecordRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeClearGroupRecordReq$Type extends MessageType<HomeClearGroupRecordReq> {
    constructor() {
        super("com.midnights.game.HomeClearGroupRecordReq", [
            { no: 2, name: "group_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeClearGroupRecordReq>): HomeClearGroupRecordReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeClearGroupRecordReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeClearGroupRecordReq): HomeClearGroupRecordReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 group_id */ 2:
                    message.groupId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeClearGroupRecordReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 group_id = 2; */
        if (message.groupId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.groupId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeClearGroupRecordReq
 */
export const HomeClearGroupRecordReq = new HomeClearGroupRecordReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeClearGroupRecordRsp$Type extends MessageType<HomeClearGroupRecordRsp> {
    constructor() {
        super("com.midnights.game.HomeClearGroupRecordRsp", [
            { no: 4, name: "group_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeClearGroupRecordRsp>): HomeClearGroupRecordRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeClearGroupRecordRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeClearGroupRecordRsp): HomeClearGroupRecordRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 group_id */ 4:
                    message.groupId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeClearGroupRecordRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 group_id = 4; */
        if (message.groupId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.groupId);
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeClearGroupRecordRsp
 */
export const HomeClearGroupRecordRsp = new HomeClearGroupRecordRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBalloonGallerySettleNotify$Type extends MessageType<HomeBalloonGallerySettleNotify> {
    constructor() {
        super("com.midnights.game.HomeBalloonGallerySettleNotify", [
            { no: 1, name: "gallery_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "settle_info", kind: "message", T: () => BalloonGallerySettleInfo },
            { no: 6, name: "rank", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "is_new_record", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBalloonGallerySettleNotify>): HomeBalloonGallerySettleNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBalloonGallerySettleNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBalloonGallerySettleNotify): HomeBalloonGallerySettleNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 gallery_id */ 1:
                    message.galleryId = reader.uint32();
                    break;
                case /* optional com.midnights.game.BalloonGallerySettleInfo settle_info */ 5:
                    message.settleInfo = BalloonGallerySettleInfo.internalBinaryRead(reader, reader.uint32(), options, message.settleInfo);
                    break;
                case /* optional uint32 rank */ 6:
                    message.rank = reader.uint32();
                    break;
                case /* optional bool is_new_record */ 4:
                    message.isNewRecord = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBalloonGallerySettleNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 gallery_id = 1; */
        if (message.galleryId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.galleryId);
        /* optional com.midnights.game.BalloonGallerySettleInfo settle_info = 5; */
        if (message.settleInfo)
            BalloonGallerySettleInfo.internalBinaryWrite(message.settleInfo, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 rank = 6; */
        if (message.rank !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.rank);
        /* optional bool is_new_record = 4; */
        if (message.isNewRecord !== undefined)
            writer.tag(4, WireType.Varint).bool(message.isNewRecord);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBalloonGallerySettleNotify
 */
export const HomeBalloonGallerySettleNotify = new HomeBalloonGallerySettleNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBalloonGalleryScoreNotify$Type extends MessageType<HomeBalloonGalleryScoreNotify> {
    constructor() {
        super("com.midnights.game.HomeBalloonGalleryScoreNotify", [
            { no: 10, name: "trigger_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "cur_score", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "add_score", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "gallery_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBalloonGalleryScoreNotify>): HomeBalloonGalleryScoreNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBalloonGalleryScoreNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBalloonGalleryScoreNotify): HomeBalloonGalleryScoreNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 trigger_entity_id */ 10:
                    message.triggerEntityId = reader.uint32();
                    break;
                case /* optional uint32 cur_score */ 9:
                    message.curScore = reader.uint32();
                    break;
                case /* optional uint32 add_score */ 7:
                    message.addScore = reader.uint32();
                    break;
                case /* optional uint32 gallery_id */ 5:
                    message.galleryId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBalloonGalleryScoreNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 trigger_entity_id = 10; */
        if (message.triggerEntityId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.triggerEntityId);
        /* optional uint32 cur_score = 9; */
        if (message.curScore !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.curScore);
        /* optional uint32 add_score = 7; */
        if (message.addScore !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.addScore);
        /* optional uint32 gallery_id = 5; */
        if (message.galleryId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.galleryId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBalloonGalleryScoreNotify
 */
export const HomeBalloonGalleryScoreNotify = new HomeBalloonGalleryScoreNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSeekFurnitureGalleryScoreNotify$Type extends MessageType<HomeSeekFurnitureGalleryScoreNotify> {
    constructor() {
        super("com.midnights.game.HomeSeekFurnitureGalleryScoreNotify", [
            { no: 15, name: "gallery_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "record", kind: "message", T: () => HomeSeekFurnitureOneRecord },
            { no: 4, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.GalleryStopReason", GalleryStopReason] }
        ]);
    }
    create(value?: PartialMessage<HomeSeekFurnitureGalleryScoreNotify>): HomeSeekFurnitureGalleryScoreNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSeekFurnitureGalleryScoreNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSeekFurnitureGalleryScoreNotify): HomeSeekFurnitureGalleryScoreNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 gallery_id */ 15:
                    message.galleryId = reader.uint32();
                    break;
                case /* optional com.midnights.game.HomeSeekFurnitureOneRecord record */ 5:
                    message.record = HomeSeekFurnitureOneRecord.internalBinaryRead(reader, reader.uint32(), options, message.record);
                    break;
                case /* optional com.midnights.game.GalleryStopReason reason */ 4:
                    message.reason = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSeekFurnitureGalleryScoreNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 gallery_id = 15; */
        if (message.galleryId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.galleryId);
        /* optional com.midnights.game.HomeSeekFurnitureOneRecord record = 5; */
        if (message.record)
            HomeSeekFurnitureOneRecord.internalBinaryWrite(message.record, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.GalleryStopReason reason = 4; */
        if (message.reason !== undefined)
            writer.tag(4, WireType.Varint).int32(message.reason);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSeekFurnitureGalleryScoreNotify
 */
export const HomeSeekFurnitureGalleryScoreNotify = new HomeSeekFurnitureGalleryScoreNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetHomeExchangeWoodInfoReq$Type extends MessageType<GetHomeExchangeWoodInfoReq> {
    constructor() {
        super("com.midnights.game.GetHomeExchangeWoodInfoReq", []);
    }
    create(value?: PartialMessage<GetHomeExchangeWoodInfoReq>): GetHomeExchangeWoodInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetHomeExchangeWoodInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetHomeExchangeWoodInfoReq): GetHomeExchangeWoodInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetHomeExchangeWoodInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetHomeExchangeWoodInfoReq
 */
export const GetHomeExchangeWoodInfoReq = new GetHomeExchangeWoodInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetHomeExchangeWoodInfoRsp$Type extends MessageType<GetHomeExchangeWoodInfoRsp> {
    constructor() {
        super("com.midnights.game.GetHomeExchangeWoodInfoRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "wood_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo }
        ]);
    }
    create(value?: PartialMessage<GetHomeExchangeWoodInfoRsp>): GetHomeExchangeWoodInfoRsp {
        const message = { woodInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetHomeExchangeWoodInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetHomeExchangeWoodInfoRsp): GetHomeExchangeWoodInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.GetHomeExchangeWoodInfoRsp.HomeExchangeWoodInfo wood_info_list */ 5:
                    message.woodInfoList.push(GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetHomeExchangeWoodInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.GetHomeExchangeWoodInfoRsp.HomeExchangeWoodInfo wood_info_list = 5; */
        for (let i = 0; i < message.woodInfoList.length; i++)
            GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo.internalBinaryWrite(message.woodInfoList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetHomeExchangeWoodInfoRsp
 */
export const GetHomeExchangeWoodInfoRsp = new GetHomeExchangeWoodInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo$Type extends MessageType<GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo> {
    constructor() {
        super("com.midnights.game.GetHomeExchangeWoodInfoRsp.HomeExchangeWoodInfo", [
            { no: 7, name: "exchange_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "exchanged_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "next_refresh_time", kind: "scalar", opt: true, T: 7 /*ScalarType.FIXED32*/ },
            { no: 2, name: "wood_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo>): GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo): GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 exchange_limit */ 7:
                    message.exchangeLimit = reader.uint32();
                    break;
                case /* optional uint32 exchanged_count */ 12:
                    message.exchangedCount = reader.uint32();
                    break;
                case /* optional fixed32 next_refresh_time */ 14:
                    message.nextRefreshTime = reader.fixed32();
                    break;
                case /* optional uint32 wood_id */ 2:
                    message.woodId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 exchange_limit = 7; */
        if (message.exchangeLimit !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.exchangeLimit);
        /* optional uint32 exchanged_count = 12; */
        if (message.exchangedCount !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.exchangedCount);
        /* optional fixed32 next_refresh_time = 14; */
        if (message.nextRefreshTime !== undefined)
            writer.tag(14, WireType.Bit32).fixed32(message.nextRefreshTime);
        /* optional uint32 wood_id = 2; */
        if (message.woodId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.woodId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetHomeExchangeWoodInfoRsp.HomeExchangeWoodInfo
 */
export const GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo = new GetHomeExchangeWoodInfoRsp_HomeExchangeWoodInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeExchangeWoodReq$Type extends MessageType<HomeExchangeWoodReq> {
    constructor() {
        super("com.midnights.game.HomeExchangeWoodReq", [
            { no: 3, name: "material_count_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 12, name: "wood_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeExchangeWoodReq>): HomeExchangeWoodReq {
        const message = { materialCountMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeExchangeWoodReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeExchangeWoodReq): HomeExchangeWoodReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, uint32> material_count_map */ 3:
                    this.binaryReadMap3(message.materialCountMap, reader, options);
                    break;
                case /* optional uint32 wood_id */ 12:
                    message.woodId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap3(map: HomeExchangeWoodReq["materialCountMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof HomeExchangeWoodReq["materialCountMap"] | undefined, val: HomeExchangeWoodReq["materialCountMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.HomeExchangeWoodReq.material_count_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: HomeExchangeWoodReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, uint32> material_count_map = 3; */
        for (let k of Object.keys(message.materialCountMap))
            writer.tag(3, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.materialCountMap[k as any]).join();
        /* optional uint32 wood_id = 12; */
        if (message.woodId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.woodId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeExchangeWoodReq
 */
export const HomeExchangeWoodReq = new HomeExchangeWoodReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeExchangeWoodRsp$Type extends MessageType<HomeExchangeWoodRsp> {
    constructor() {
        super("com.midnights.game.HomeExchangeWoodRsp", [
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 1, name: "wood_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "wood_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "exchanged_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeExchangeWoodRsp>): HomeExchangeWoodRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeExchangeWoodRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeExchangeWoodRsp): HomeExchangeWoodRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 wood_id */ 1:
                    message.woodId = reader.uint32();
                    break;
                case /* optional uint32 wood_count */ 3:
                    message.woodCount = reader.uint32();
                    break;
                case /* optional uint32 exchanged_count */ 2:
                    message.exchangedCount = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeExchangeWoodRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        /* optional uint32 wood_id = 1; */
        if (message.woodId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.woodId);
        /* optional uint32 wood_count = 3; */
        if (message.woodCount !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.woodCount);
        /* optional uint32 exchanged_count = 2; */
        if (message.exchangedCount !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.exchangedCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeExchangeWoodRsp
 */
export const HomeExchangeWoodRsp = new HomeExchangeWoodRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBlueprintSlotInfo$Type extends MessageType<HomeBlueprintSlotInfo> {
    constructor() {
        super("com.midnights.game.HomeBlueprintSlotInfo", [
            { no: 12, name: "module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "block_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "slot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "share_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_allow_copy", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "create_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBlueprintSlotInfo>): HomeBlueprintSlotInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBlueprintSlotInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBlueprintSlotInfo): HomeBlueprintSlotInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 module_id */ 12:
                    message.moduleId = reader.uint32();
                    break;
                case /* optional uint32 block_id */ 14:
                    message.blockId = reader.uint32();
                    break;
                case /* optional uint32 scene_id */ 4:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 slot_id */ 5:
                    message.slotId = reader.uint32();
                    break;
                case /* optional string share_code */ 11:
                    message.shareCode = reader.string();
                    break;
                case /* optional bool is_allow_copy */ 3:
                    message.isAllowCopy = reader.bool();
                    break;
                case /* optional uint32 create_time */ 6:
                    message.createTime = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBlueprintSlotInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 module_id = 12; */
        if (message.moduleId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.moduleId);
        /* optional uint32 block_id = 14; */
        if (message.blockId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.blockId);
        /* optional uint32 scene_id = 4; */
        if (message.sceneId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 slot_id = 5; */
        if (message.slotId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.slotId);
        /* optional string share_code = 11; */
        if (message.shareCode !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.shareCode);
        /* optional bool is_allow_copy = 3; */
        if (message.isAllowCopy !== undefined)
            writer.tag(3, WireType.Varint).bool(message.isAllowCopy);
        /* optional uint32 create_time = 6; */
        if (message.createTime !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.createTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBlueprintSlotInfo
 */
export const HomeBlueprintSlotInfo = new HomeBlueprintSlotInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetBlueprintSlotInfoReq$Type extends MessageType<HomeGetBlueprintSlotInfoReq> {
    constructor() {
        super("com.midnights.game.HomeGetBlueprintSlotInfoReq", []);
    }
    create(value?: PartialMessage<HomeGetBlueprintSlotInfoReq>): HomeGetBlueprintSlotInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetBlueprintSlotInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetBlueprintSlotInfoReq): HomeGetBlueprintSlotInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: HomeGetBlueprintSlotInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetBlueprintSlotInfoReq
 */
export const HomeGetBlueprintSlotInfoReq = new HomeGetBlueprintSlotInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeGetBlueprintSlotInfoRsp$Type extends MessageType<HomeGetBlueprintSlotInfoRsp> {
    constructor() {
        super("com.midnights.game.HomeGetBlueprintSlotInfoRsp", [
            { no: 6, name: "delete_slot_id_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "slot_info_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => HomeBlueprintSlotInfo },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeGetBlueprintSlotInfoRsp>): HomeGetBlueprintSlotInfoRsp {
        const message = { deleteSlotIdList: [], slotInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeGetBlueprintSlotInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeGetBlueprintSlotInfoRsp): HomeGetBlueprintSlotInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 delete_slot_id_list */ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.deleteSlotIdList.push(reader.uint32());
                    else
                        message.deleteSlotIdList.push(reader.uint32());
                    break;
                case /* repeated com.midnights.game.HomeBlueprintSlotInfo slot_info_list */ 3:
                    message.slotInfoList.push(HomeBlueprintSlotInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeGetBlueprintSlotInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 delete_slot_id_list = 6; */
        for (let i = 0; i < message.deleteSlotIdList.length; i++)
            writer.tag(6, WireType.Varint).uint32(message.deleteSlotIdList[i]);
        /* repeated com.midnights.game.HomeBlueprintSlotInfo slot_info_list = 3; */
        for (let i = 0; i < message.slotInfoList.length; i++)
            HomeBlueprintSlotInfo.internalBinaryWrite(message.slotInfoList[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeGetBlueprintSlotInfoRsp
 */
export const HomeGetBlueprintSlotInfoRsp = new HomeGetBlueprintSlotInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSetBlueprintSlotOptionReq$Type extends MessageType<HomeSetBlueprintSlotOptionReq> {
    constructor() {
        super("com.midnights.game.HomeSetBlueprintSlotOptionReq", [
            { no: 1, name: "slot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "is_allow_copy", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSetBlueprintSlotOptionReq>): HomeSetBlueprintSlotOptionReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSetBlueprintSlotOptionReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSetBlueprintSlotOptionReq): HomeSetBlueprintSlotOptionReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 slot_id */ 1:
                    message.slotId = reader.uint32();
                    break;
                case /* optional bool is_allow_copy */ 8:
                    message.isAllowCopy = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSetBlueprintSlotOptionReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 slot_id = 1; */
        if (message.slotId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.slotId);
        /* optional bool is_allow_copy = 8; */
        if (message.isAllowCopy !== undefined)
            writer.tag(8, WireType.Varint).bool(message.isAllowCopy);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSetBlueprintSlotOptionReq
 */
export const HomeSetBlueprintSlotOptionReq = new HomeSetBlueprintSlotOptionReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSetBlueprintSlotOptionRsp$Type extends MessageType<HomeSetBlueprintSlotOptionRsp> {
    constructor() {
        super("com.midnights.game.HomeSetBlueprintSlotOptionRsp", [
            { no: 13, name: "slot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "is_allow_copy", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSetBlueprintSlotOptionRsp>): HomeSetBlueprintSlotOptionRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSetBlueprintSlotOptionRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSetBlueprintSlotOptionRsp): HomeSetBlueprintSlotOptionRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 slot_id */ 13:
                    message.slotId = reader.uint32();
                    break;
                case /* optional bool is_allow_copy */ 7:
                    message.isAllowCopy = reader.bool();
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSetBlueprintSlotOptionRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 slot_id = 13; */
        if (message.slotId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.slotId);
        /* optional bool is_allow_copy = 7; */
        if (message.isAllowCopy !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isAllowCopy);
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSetBlueprintSlotOptionRsp
 */
export const HomeSetBlueprintSlotOptionRsp = new HomeSetBlueprintSlotOptionRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSetBlueprintFriendOptionReq$Type extends MessageType<HomeSetBlueprintFriendOptionReq> {
    constructor() {
        super("com.midnights.game.HomeSetBlueprintFriendOptionReq", [
            { no: 9, name: "is_allow_friend_copy", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSetBlueprintFriendOptionReq>): HomeSetBlueprintFriendOptionReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSetBlueprintFriendOptionReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSetBlueprintFriendOptionReq): HomeSetBlueprintFriendOptionReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_allow_friend_copy */ 9:
                    message.isAllowFriendCopy = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSetBlueprintFriendOptionReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_allow_friend_copy = 9; */
        if (message.isAllowFriendCopy !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isAllowFriendCopy);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSetBlueprintFriendOptionReq
 */
export const HomeSetBlueprintFriendOptionReq = new HomeSetBlueprintFriendOptionReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSetBlueprintFriendOptionRsp$Type extends MessageType<HomeSetBlueprintFriendOptionRsp> {
    constructor() {
        super("com.midnights.game.HomeSetBlueprintFriendOptionRsp", [
            { no: 2, name: "is_allow_friend_copy", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSetBlueprintFriendOptionRsp>): HomeSetBlueprintFriendOptionRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSetBlueprintFriendOptionRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSetBlueprintFriendOptionRsp): HomeSetBlueprintFriendOptionRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_allow_friend_copy */ 2:
                    message.isAllowFriendCopy = reader.bool();
                    break;
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSetBlueprintFriendOptionRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_allow_friend_copy = 2; */
        if (message.isAllowFriendCopy !== undefined)
            writer.tag(2, WireType.Varint).bool(message.isAllowFriendCopy);
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSetBlueprintFriendOptionRsp
 */
export const HomeSetBlueprintFriendOptionRsp = new HomeSetBlueprintFriendOptionRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBlueprintInfoNotify$Type extends MessageType<HomeBlueprintInfoNotify> {
    constructor() {
        super("com.midnights.game.HomeBlueprintInfoNotify", [
            { no: 15, name: "is_allow_friend_copy", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBlueprintInfoNotify>): HomeBlueprintInfoNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBlueprintInfoNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBlueprintInfoNotify): HomeBlueprintInfoNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_allow_friend_copy */ 15:
                    message.isAllowFriendCopy = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBlueprintInfoNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_allow_friend_copy = 15; */
        if (message.isAllowFriendCopy !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isAllowFriendCopy);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBlueprintInfoNotify
 */
export const HomeBlueprintInfoNotify = new HomeBlueprintInfoNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePreviewBlueprintReq$Type extends MessageType<HomePreviewBlueprintReq> {
    constructor() {
        super("com.midnights.game.HomePreviewBlueprintReq", [
            { no: 7, name: "share_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<HomePreviewBlueprintReq>): HomePreviewBlueprintReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePreviewBlueprintReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePreviewBlueprintReq): HomePreviewBlueprintReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string share_code */ 7:
                    message.shareCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePreviewBlueprintReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string share_code = 7; */
        if (message.shareCode !== undefined)
            writer.tag(7, WireType.LengthDelimited).string(message.shareCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePreviewBlueprintReq
 */
export const HomePreviewBlueprintReq = new HomePreviewBlueprintReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomePreviewBlueprintRsp$Type extends MessageType<HomePreviewBlueprintRsp> {
    constructor() {
        super("com.midnights.game.HomePreviewBlueprintRsp", [
            { no: 12, name: "scene_arrangement_info", kind: "message", T: () => HomeSceneArrangementInfo },
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "share_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<HomePreviewBlueprintRsp>): HomePreviewBlueprintRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomePreviewBlueprintRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomePreviewBlueprintRsp): HomePreviewBlueprintRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info */ 12:
                    message.sceneArrangementInfo = HomeSceneArrangementInfo.internalBinaryRead(reader, reader.uint32(), options, message.sceneArrangementInfo);
                    break;
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* optional string share_code */ 14:
                    message.shareCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomePreviewBlueprintRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info = 12; */
        if (message.sceneArrangementInfo)
            HomeSceneArrangementInfo.internalBinaryWrite(message.sceneArrangementInfo, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        /* optional string share_code = 14; */
        if (message.shareCode !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.shareCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomePreviewBlueprintRsp
 */
export const HomePreviewBlueprintRsp = new HomePreviewBlueprintRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeCreateBlueprintReq$Type extends MessageType<HomeCreateBlueprintReq> {
    constructor() {
        super("com.midnights.game.HomeCreateBlueprintReq", [
            { no: 2, name: "scene_arrangement_info", kind: "message", T: () => HomeSceneArrangementInfo },
            { no: 13, name: "slot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "server_share_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "gen_share_code_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeCreateBlueprintReq>): HomeCreateBlueprintReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeCreateBlueprintReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeCreateBlueprintReq): HomeCreateBlueprintReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info */ 2:
                    message.sceneArrangementInfo = HomeSceneArrangementInfo.internalBinaryRead(reader, reader.uint32(), options, message.sceneArrangementInfo);
                    break;
                case /* optional uint32 slot_id */ 13:
                    message.slotId = reader.uint32();
                    break;
                case /* optional string server_share_code */ 6:
                    message.serverShareCode = reader.string();
                    break;
                case /* optional uint32 gen_share_code_count */ 4:
                    message.genShareCodeCount = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeCreateBlueprintReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeSceneArrangementInfo scene_arrangement_info = 2; */
        if (message.sceneArrangementInfo)
            HomeSceneArrangementInfo.internalBinaryWrite(message.sceneArrangementInfo, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 slot_id = 13; */
        if (message.slotId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.slotId);
        /* optional string server_share_code = 6; */
        if (message.serverShareCode !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.serverShareCode);
        /* optional uint32 gen_share_code_count = 4; */
        if (message.genShareCodeCount !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.genShareCodeCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeCreateBlueprintReq
 */
export const HomeCreateBlueprintReq = new HomeCreateBlueprintReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeCreateBlueprintRsp$Type extends MessageType<HomeCreateBlueprintRsp> {
    constructor() {
        super("com.midnights.game.HomeCreateBlueprintRsp", [
            { no: 1, name: "slot_info", kind: "message", T: () => HomeBlueprintSlotInfo },
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeCreateBlueprintRsp>): HomeCreateBlueprintRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeCreateBlueprintRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeCreateBlueprintRsp): HomeCreateBlueprintRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.HomeBlueprintSlotInfo slot_info */ 1:
                    message.slotInfo = HomeBlueprintSlotInfo.internalBinaryRead(reader, reader.uint32(), options, message.slotInfo);
                    break;
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeCreateBlueprintRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.HomeBlueprintSlotInfo slot_info = 1; */
        if (message.slotInfo)
            HomeBlueprintSlotInfo.internalBinaryWrite(message.slotInfo, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeCreateBlueprintRsp
 */
export const HomeCreateBlueprintRsp = new HomeCreateBlueprintRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeDeleteBlueprintReq$Type extends MessageType<HomeDeleteBlueprintReq> {
    constructor() {
        super("com.midnights.game.HomeDeleteBlueprintReq", [
            { no: 2, name: "slot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeDeleteBlueprintReq>): HomeDeleteBlueprintReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeDeleteBlueprintReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeDeleteBlueprintReq): HomeDeleteBlueprintReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 slot_id */ 2:
                    message.slotId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeDeleteBlueprintReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 slot_id = 2; */
        if (message.slotId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.slotId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeDeleteBlueprintReq
 */
export const HomeDeleteBlueprintReq = new HomeDeleteBlueprintReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeDeleteBlueprintRsp$Type extends MessageType<HomeDeleteBlueprintRsp> {
    constructor() {
        super("com.midnights.game.HomeDeleteBlueprintRsp", [
            { no: 5, name: "slot_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeDeleteBlueprintRsp>): HomeDeleteBlueprintRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeDeleteBlueprintRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeDeleteBlueprintRsp): HomeDeleteBlueprintRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 slot_id */ 5:
                    message.slotId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeDeleteBlueprintRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 slot_id = 5; */
        if (message.slotId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.slotId);
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeDeleteBlueprintRsp
 */
export const HomeDeleteBlueprintRsp = new HomeDeleteBlueprintRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeBlueprintSearchInfo$Type extends MessageType<HomeBlueprintSearchInfo> {
    constructor() {
        super("com.midnights.game.HomeBlueprintSearchInfo", [
            { no: 5, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "module_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "share_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "block_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeBlueprintSearchInfo>): HomeBlueprintSearchInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeBlueprintSearchInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeBlueprintSearchInfo): HomeBlueprintSearchInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 scene_id */ 5:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 module_id */ 9:
                    message.moduleId = reader.uint32();
                    break;
                case /* optional string share_code */ 8:
                    message.shareCode = reader.string();
                    break;
                case /* optional uint32 block_id */ 12:
                    message.blockId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeBlueprintSearchInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 scene_id = 5; */
        if (message.sceneId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 module_id = 9; */
        if (message.moduleId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.moduleId);
        /* optional string share_code = 8; */
        if (message.shareCode !== undefined)
            writer.tag(8, WireType.LengthDelimited).string(message.shareCode);
        /* optional uint32 block_id = 12; */
        if (message.blockId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.blockId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeBlueprintSearchInfo
 */
export const HomeBlueprintSearchInfo = new HomeBlueprintSearchInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSearchBlueprintReq$Type extends MessageType<HomeSearchBlueprintReq> {
    constructor() {
        super("com.midnights.game.HomeSearchBlueprintReq", [
            { no: 13, name: "share_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSearchBlueprintReq>): HomeSearchBlueprintReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSearchBlueprintReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSearchBlueprintReq): HomeSearchBlueprintReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string share_code */ 13:
                    message.shareCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSearchBlueprintReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string share_code = 13; */
        if (message.shareCode !== undefined)
            writer.tag(13, WireType.LengthDelimited).string(message.shareCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSearchBlueprintReq
 */
export const HomeSearchBlueprintReq = new HomeSearchBlueprintReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSearchBlueprintRsp$Type extends MessageType<HomeSearchBlueprintRsp> {
    constructor() {
        super("com.midnights.game.HomeSearchBlueprintRsp", [
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "search_info", kind: "message", T: () => HomeBlueprintSearchInfo }
        ]);
    }
    create(value?: PartialMessage<HomeSearchBlueprintRsp>): HomeSearchBlueprintRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSearchBlueprintRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSearchBlueprintRsp): HomeSearchBlueprintRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.HomeBlueprintSearchInfo search_info */ 8:
                    message.searchInfo = HomeBlueprintSearchInfo.internalBinaryRead(reader, reader.uint32(), options, message.searchInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSearchBlueprintRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.HomeBlueprintSearchInfo search_info = 8; */
        if (message.searchInfo)
            HomeBlueprintSearchInfo.internalBinaryWrite(message.searchInfo, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSearchBlueprintRsp
 */
export const HomeSearchBlueprintRsp = new HomeSearchBlueprintRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSaveArrangementNoChangeReq$Type extends MessageType<HomeSaveArrangementNoChangeReq> {
    constructor() {
        super("com.midnights.game.HomeSaveArrangementNoChangeReq", [
            { no: 4, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSaveArrangementNoChangeReq>): HomeSaveArrangementNoChangeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSaveArrangementNoChangeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSaveArrangementNoChangeReq): HomeSaveArrangementNoChangeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 scene_id */ 4:
                    message.sceneId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSaveArrangementNoChangeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 scene_id = 4; */
        if (message.sceneId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.sceneId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSaveArrangementNoChangeReq
 */
export const HomeSaveArrangementNoChangeReq = new HomeSaveArrangementNoChangeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HomeSaveArrangementNoChangeRsp$Type extends MessageType<HomeSaveArrangementNoChangeRsp> {
    constructor() {
        super("com.midnights.game.HomeSaveArrangementNoChangeRsp", [
            { no: 4, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<HomeSaveArrangementNoChangeRsp>): HomeSaveArrangementNoChangeRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<HomeSaveArrangementNoChangeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: HomeSaveArrangementNoChangeRsp): HomeSaveArrangementNoChangeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 scene_id */ 4:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: HomeSaveArrangementNoChangeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 scene_id = 4; */
        if (message.sceneId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.sceneId);
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.HomeSaveArrangementNoChangeRsp
 */
export const HomeSaveArrangementNoChangeRsp = new HomeSaveArrangementNoChangeRsp$Type();
