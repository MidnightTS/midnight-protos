"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ShopCardProduct_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShopCardProduct = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ShopCardProduct.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./ItemParam");
const pb_1 = require("google-protobuf");
class ShopCardProduct extends pb_1.Message {
    constructor(data) {
        super();
        _ShopCardProduct_one_of_decls.set(this, [[101]]);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _ShopCardProduct_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("product_id" in data && data.product_id != undefined) {
                this.product_id = data.product_id;
            }
            if ("price_tier" in data && data.price_tier != undefined) {
                this.price_tier = data.price_tier;
            }
            if ("mcoin_base" in data && data.mcoin_base != undefined) {
                this.mcoin_base = data.mcoin_base;
            }
            if ("hcoin_per_day" in data && data.hcoin_per_day != undefined) {
                this.hcoin_per_day = data.hcoin_per_day;
            }
            if ("days" in data && data.days != undefined) {
                this.days = data.days;
            }
            if ("remain_reward_days" in data && data.remain_reward_days != undefined) {
                this.remain_reward_days = data.remain_reward_days;
            }
            if ("card_product_type" in data && data.card_product_type != undefined) {
                this.card_product_type = data.card_product_type;
            }
            if ("resin_card" in data && data.resin_card != undefined) {
                this.resin_card = data.resin_card;
            }
        }
    }
    get product_id() {
        return pb_1.Message.getFieldWithDefault(this, 1, "");
    }
    set product_id(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get price_tier() {
        return pb_1.Message.getFieldWithDefault(this, 2, "");
    }
    set price_tier(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get mcoin_base() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set mcoin_base(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get hcoin_per_day() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set hcoin_per_day(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get days() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0);
    }
    set days(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get remain_reward_days() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set remain_reward_days(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get card_product_type() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set card_product_type(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get resin_card() {
        return pb_1.Message.getWrapperField(this, ShopCardProduct.ResinCard, 101);
    }
    set resin_card(value) {
        pb_1.Message.setOneofWrapperField(this, 101, __classPrivateFieldGet(this, _ShopCardProduct_one_of_decls, "f")[0], value);
    }
    get has_resin_card() {
        return pb_1.Message.getField(this, 101) != null;
    }
    get extra_card_data() {
        const cases = {
            0: "none",
            101: "resin_card"
        };
        return cases[pb_1.Message.computeOneofCase(this, [101])];
    }
    static fromObject(data) {
        const message = new ShopCardProduct({});
        if (data.product_id != null) {
            message.product_id = data.product_id;
        }
        if (data.price_tier != null) {
            message.price_tier = data.price_tier;
        }
        if (data.mcoin_base != null) {
            message.mcoin_base = data.mcoin_base;
        }
        if (data.hcoin_per_day != null) {
            message.hcoin_per_day = data.hcoin_per_day;
        }
        if (data.days != null) {
            message.days = data.days;
        }
        if (data.remain_reward_days != null) {
            message.remain_reward_days = data.remain_reward_days;
        }
        if (data.card_product_type != null) {
            message.card_product_type = data.card_product_type;
        }
        if (data.resin_card != null) {
            message.resin_card = ShopCardProduct.ResinCard.fromObject(data.resin_card);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.product_id != null) {
            data.product_id = this.product_id;
        }
        if (this.price_tier != null) {
            data.price_tier = this.price_tier;
        }
        if (this.mcoin_base != null) {
            data.mcoin_base = this.mcoin_base;
        }
        if (this.hcoin_per_day != null) {
            data.hcoin_per_day = this.hcoin_per_day;
        }
        if (this.days != null) {
            data.days = this.days;
        }
        if (this.remain_reward_days != null) {
            data.remain_reward_days = this.remain_reward_days;
        }
        if (this.card_product_type != null) {
            data.card_product_type = this.card_product_type;
        }
        if (this.resin_card != null) {
            data.resin_card = this.resin_card.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.product_id.length)
            writer.writeString(1, this.product_id);
        if (this.price_tier.length)
            writer.writeString(2, this.price_tier);
        if (this.mcoin_base != 0)
            writer.writeUint32(3, this.mcoin_base);
        if (this.hcoin_per_day != 0)
            writer.writeUint32(4, this.hcoin_per_day);
        if (this.days != 0)
            writer.writeUint32(5, this.days);
        if (this.remain_reward_days != 0)
            writer.writeUint32(6, this.remain_reward_days);
        if (this.card_product_type != 0)
            writer.writeUint32(7, this.card_product_type);
        if (this.has_resin_card)
            writer.writeMessage(101, this.resin_card, () => this.resin_card.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ShopCardProduct();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.product_id = reader.readString();
                    break;
                case 2:
                    message.price_tier = reader.readString();
                    break;
                case 3:
                    message.mcoin_base = reader.readUint32();
                    break;
                case 4:
                    message.hcoin_per_day = reader.readUint32();
                    break;
                case 5:
                    message.days = reader.readUint32();
                    break;
                case 6:
                    message.remain_reward_days = reader.readUint32();
                    break;
                case 7:
                    message.card_product_type = reader.readUint32();
                    break;
                case 101:
                    reader.readMessage(message.resin_card, () => message.resin_card = ShopCardProduct.ResinCard.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return ShopCardProduct.deserialize(bytes);
    }
}
exports.ShopCardProduct = ShopCardProduct;
_ShopCardProduct_one_of_decls = new WeakMap();
(function (ShopCardProduct) {
    var _ResinCard_one_of_decls;
    class ResinCard extends pb_1.Message {
        constructor(data) {
            super();
            _ResinCard_one_of_decls.set(this, []);
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 2], __classPrivateFieldGet(this, _ResinCard_one_of_decls, "f"));
            if (!Array.isArray(data) && typeof data == "object") {
                if ("base_item_list" in data && data.base_item_list != undefined) {
                    this.base_item_list = data.base_item_list;
                }
                if ("per_day_item_list" in data && data.per_day_item_list != undefined) {
                    this.per_day_item_list = data.per_day_item_list;
                }
            }
        }
        get base_item_list() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 1);
        }
        set base_item_list(value) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get per_day_item_list() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ItemParam, 2);
        }
        set per_day_item_list(value) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        static fromObject(data) {
            const message = new ResinCard({});
            if (data.base_item_list != null) {
                message.base_item_list = data.base_item_list.map(item => dependency_1.ItemParam.fromObject(item));
            }
            if (data.per_day_item_list != null) {
                message.per_day_item_list = data.per_day_item_list.map(item => dependency_1.ItemParam.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data = {};
            if (this.base_item_list != null) {
                data.base_item_list = this.base_item_list.map((item) => item.toObject());
            }
            if (this.per_day_item_list != null) {
                data.per_day_item_list = this.per_day_item_list.map((item) => item.toObject());
            }
            return data;
        }
        serialize(w) {
            const writer = w || new pb_1.BinaryWriter();
            if (this.base_item_list.length)
                writer.writeRepeatedMessage(1, this.base_item_list, (item) => item.serialize(writer));
            if (this.per_day_item_list.length)
                writer.writeRepeatedMessage(2, this.per_day_item_list, (item) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes) {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ResinCard();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.base_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                        break;
                    case 2:
                        reader.readMessage(message.per_day_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.ItemParam.deserialize(reader), dependency_1.ItemParam));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary() {
            return this.serialize();
        }
        static deserializeBinary(bytes) {
            return ResinCard.deserialize(bytes);
        }
    }
    _ResinCard_one_of_decls = new WeakMap();
    ShopCardProduct.ResinCard = ResinCard;
})(ShopCardProduct = exports.ShopCardProduct || (exports.ShopCardProduct = {}));
