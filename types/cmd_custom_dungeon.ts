// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_custom_dungeon.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { SocialDetail } from "./cmd_social";
import { Vector } from "./define";
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonBlock
 */
export interface CustomDungeonBlock {
    /**
     * @generated from protobuf field: optional uint32 block_id = 8;
     */
    blockId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector rot = 12;
     */
    rot?: Vector;
    /**
     * @generated from protobuf field: optional uint32 guid = 4;
     */
    guid?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 1;
     */
    pos?: Vector;
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonRoom
 */
export interface CustomDungeonRoom {
    /**
     * @generated from protobuf field: optional uint32 room_id = 15;
     */
    roomId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.CustomDungeonBlock block_list = 4;
     */
    blockList: CustomDungeonBlock[];
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonSetting
 */
export interface CustomDungeonSetting {
    /**
     * @generated from protobuf field: repeated uint32 open_room_list = 1;
     */
    openRoomList: number[];
    /**
     * @generated from protobuf field: optional bool is_arrive_finish = 14;
     */
    isArriveFinish?: boolean;
    /**
     * @generated from protobuf field: optional uint32 life_num = 6;
     */
    lifeNum?: number;
    /**
     * @generated from protobuf field: optional uint32 start_room_id = 4;
     */
    startRoomId?: number;
    /**
     * @generated from protobuf field: optional bool is_forbid_skill = 3;
     */
    isForbidSkill?: boolean;
    /**
     * @generated from protobuf field: optional uint32 coin_limit = 10;
     */
    coinLimit?: number;
    /**
     * @generated from protobuf field: optional uint32 time_limit = 9;
     */
    timeLimit?: number;
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeon
 */
export interface CustomDungeon {
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonSetting setting = 1;
     */
    setting?: CustomDungeonSetting;
    /**
     * @generated from protobuf field: repeated com.midnights.game.CustomDungeonRoom room_list = 15;
     */
    roomList: CustomDungeonRoom[];
    /**
     * @generated from protobuf field: optional uint32 dungeon_id = 3;
     */
    dungeonId?: number;
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 10;
     */
    dungeonGuid?: bigint;
}
/**
 * @generated from protobuf message com.midnights.game.EnterCustomDungeonReq
 */
export interface EnterCustomDungeonReq {
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 11;
     */
    dungeonGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 dungeon_id = 12;
     */
    dungeonId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.EnterCustomDungeonType enter_type = 10;
     */
    enterType?: EnterCustomDungeonType;
}
/**
 * @generated from protobuf enum com.midnights.game.EnterCustomDungeonReq.CmdId
 */
export enum EnterCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6226;
     */
    CMD_ID = 6226,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.EnterCustomDungeonRsp
 */
export interface EnterCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeon custom_dungeon = 14;
     */
    customDungeon?: CustomDungeon;
    /**
     * @generated from protobuf field: optional com.midnights.game.EnterCustomDungeonType enter_type = 2;
     */
    enterType?: EnterCustomDungeonType;
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: map<uint32, uint32> room_cost_map = 6;
     */
    roomCostMap: {
        [key: number]: number;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.EnterCustomDungeonRsp.CmdId
 */
export enum EnterCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6218;
     */
    CMD_ID = 6218,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SaveCustomDungeonRoomReq
 */
export interface SaveCustomDungeonRoomReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonRoom custom_dungeon_room = 5;
     */
    customDungeonRoom?: CustomDungeonRoom;
    /**
     * @generated from protobuf field: optional bool is_update_setting = 7;
     */
    isUpdateSetting?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonSetting setting = 13;
     */
    setting?: CustomDungeonSetting;
}
/**
 * @generated from protobuf enum com.midnights.game.SaveCustomDungeonRoomReq.CmdId
 */
export enum SaveCustomDungeonRoomReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6225;
     */
    CMD_ID = 6225,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SaveCustomDungeonRoomRsp
 */
export interface SaveCustomDungeonRoomRsp {
    /**
     * @generated from protobuf field: optional uint32 room_id = 14;
     */
    roomId?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.CustomDungeonBlock error_block_list = 9;
     */
    errorBlockList: CustomDungeonBlock[];
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SaveCustomDungeonRoomRsp.CmdId
 */
export enum SaveCustomDungeonRoomRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6207;
     */
    CMD_ID = 6207,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonAbstract
 */
export interface CustomDungeonAbstract {
    /**
     * @generated from protobuf field: map<uint32, uint32> brick_statistics_map = 12;
     */
    brickStatisticsMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint32 first_publish_time = 3;
     */
    firstPublishTime?: number;
    /**
     * @generated from protobuf field: optional uint32 total_coin_num = 15;
     */
    totalCoinNum?: number;
    /**
     * @generated from protobuf field: optional uint32 last_publish_time = 6;
     */
    lastPublishTime?: number;
    /**
     * @generated from protobuf field: optional uint32 finish_room_id = 7;
     */
    finishRoomId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonSocial
 */
export interface CustomDungeonSocial {
    /**
     * @generated from protobuf field: optional uint32 win_num = 4;
     */
    winNum?: number;
    /**
     * @generated from protobuf field: optional uint32 like_num = 12;
     */
    likeNum?: number;
    /**
     * @generated from protobuf field: optional uint32 play_num = 7;
     */
    playNum?: number;
    /**
     * @generated from protobuf field: optional uint32 store_num = 2;
     */
    storeNum?: number;
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonBrief
 */
export interface CustomDungeonBrief {
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonSetting setting = 2;
     */
    setting?: CustomDungeonSetting;
    /**
     * @generated from protobuf field: optional bool is_psn_platform = 13;
     */
    isPsnPlatform?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonSocial social = 7;
     */
    social?: CustomDungeonSocial;
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 10;
     */
    dungeonGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 last_save_time = 14;
     */
    lastSaveTime?: number;
    /**
     * @generated from protobuf field: repeated uint32 tag_list = 15;
     */
    tagList: number[];
    /**
     * @generated from protobuf field: optional uint32 dungeon_id = 5;
     */
    dungeonId?: number;
    /**
     * @generated from protobuf field: optional uint32 battle_min_cost_time = 12;
     */
    battleMinCostTime?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonState state = 1;
     */
    state?: CustomDungeonState;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonAbstract abstract = 4;
     */
    abstract?: CustomDungeonAbstract;
}
/**
 * @generated from protobuf message com.midnights.game.OtherCustomDungeonBrief
 */
export interface OtherCustomDungeonBrief {
    /**
     * @generated from protobuf field: optional com.midnights.game.SocialDetail creator_detail = 4;
     */
    creatorDetail?: SocialDetail;
    /**
     * @generated from protobuf field: optional uint32 battle_min_cost_time = 15;
     */
    battleMinCostTime?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonAbstract abstract = 2;
     */
    abstract?: CustomDungeonAbstract;
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 14;
     */
    dungeonGuid?: bigint;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonSetting setting = 10;
     */
    setting?: CustomDungeonSetting;
    /**
     * @generated from protobuf field: optional uint32 dungeon_id = 6;
     */
    dungeonId?: number;
    /**
     * @generated from protobuf field: repeated uint32 tag_list = 1;
     */
    tagList: number[];
    /**
     * @generated from protobuf field: optional bool is_adventure_dungeon = 11;
     */
    isAdventureDungeon?: boolean;
    /**
     * @generated from protobuf field: optional bool is_psn_platform = 9;
     */
    isPsnPlatform?: boolean;
    /**
     * @generated from protobuf field: optional bool is_stored = 3;
     */
    isStored?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonSocial social = 12;
     */
    social?: CustomDungeonSocial;
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonBanInfo
 */
export interface CustomDungeonBanInfo {
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonBanType ban_type = 11;
     */
    banType?: CustomDungeonBanType;
    /**
     * @generated from protobuf field: optional uint32 expire_time = 6;
     */
    expireTime?: number;
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 5;
     */
    dungeonGuid?: bigint;
}
/**
 * @generated from protobuf message com.midnights.game.ChangeCustomDungeonRoomReq
 */
export interface ChangeCustomDungeonRoomReq {
    /**
     * @generated from protobuf field: optional uint32 room_id = 4;
     */
    roomId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeCustomDungeonRoomReq.CmdId
 */
export enum ChangeCustomDungeonRoomReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6222;
     */
    CMD_ID = 6222,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChangeCustomDungeonRoomRsp
 */
export interface ChangeCustomDungeonRoomRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 room_id = 13;
     */
    roomId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeCustomDungeonRoomRsp.CmdId
 */
export enum ChangeCustomDungeonRoomRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6244;
     */
    CMD_ID = 6244,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.RemoveCustomDungeonReq
 */
export interface RemoveCustomDungeonReq {
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 14;
     */
    dungeonGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.RemoveCustomDungeonReq.CmdId
 */
export enum RemoveCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6249;
     */
    CMD_ID = 6249,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.RemoveCustomDungeonRsp
 */
export interface RemoveCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 11;
     */
    dungeonGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.RemoveCustomDungeonRsp.CmdId
 */
export enum RemoveCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6220;
     */
    CMD_ID = 6220,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.TryCustomDungeonReq
 */
export interface TryCustomDungeonReq {
    /**
     * @generated from protobuf field: optional uint32 room_id = 13;
     */
    roomId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TryCustomDungeonReq.CmdId
 */
export enum TryCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6245;
     */
    CMD_ID = 6245,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.TryCustomDungeonRsp
 */
export interface TryCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional uint32 room_id = 4;
     */
    roomId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.TryCustomDungeonRsp.CmdId
 */
export enum TryCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6241;
     */
    CMD_ID = 6241,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PublishCustomDungeonReq
 */
export interface PublishCustomDungeonReq {
    /**
     * @generated from protobuf field: repeated uint32 tag_list = 1;
     */
    tagList: number[];
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 5;
     */
    dungeonGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.PublishCustomDungeonReq.CmdId
 */
export enum PublishCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6242;
     */
    CMD_ID = 6242,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PublishCustomDungeonRsp
 */
export interface PublishCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PublishCustomDungeonRsp.CmdId
 */
export enum PublishCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6214;
     */
    CMD_ID = 6214,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ExitCustomDungeonTryReq
 */
export interface ExitCustomDungeonTryReq {
}
/**
 * @generated from protobuf enum com.midnights.game.ExitCustomDungeonTryReq.CmdId
 */
export enum ExitCustomDungeonTryReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6247;
     */
    CMD_ID = 6247,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ExitCustomDungeonTryRsp
 */
export interface ExitCustomDungeonTryRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ExitCustomDungeonTryRsp.CmdId
 */
export enum ExitCustomDungeonTryRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6237;
     */
    CMD_ID = 6237,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonUpdateNotify
 */
export interface CustomDungeonUpdateNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonBrief dungeon_brief = 12;
     */
    dungeonBrief?: CustomDungeonBrief;
}
/**
 * @generated from protobuf enum com.midnights.game.CustomDungeonUpdateNotify.CmdId
 */
export enum CustomDungeonUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6223;
     */
    CMD_ID = 6223,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetRecommendCustomDungeonReq
 */
export interface GetRecommendCustomDungeonReq {
    /**
     * @generated from protobuf field: optional bool is_refresh = 13;
     */
    isRefresh?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.GetRecommendCustomDungeonReq.CmdId
 */
export enum GetRecommendCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6235;
     */
    CMD_ID = 6235,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetRecommendCustomDungeonRsp
 */
export interface GetRecommendCustomDungeonRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.OtherCustomDungeonBrief custom_dungeon_list = 8;
     */
    customDungeonList: OtherCustomDungeonBrief[];
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetRecommendCustomDungeonRsp.CmdId
 */
export enum GetRecommendCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6248;
     */
    CMD_ID = 6248,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetStoreCustomDungeonReq
 */
export interface GetStoreCustomDungeonReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetStoreCustomDungeonReq.CmdId
 */
export enum GetStoreCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6250;
     */
    CMD_ID = 6250,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetStoreCustomDungeonRsp
 */
export interface GetStoreCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.OtherCustomDungeonBrief custom_dungeon_list = 7;
     */
    customDungeonList: OtherCustomDungeonBrief[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetStoreCustomDungeonRsp.CmdId
 */
export enum GetStoreCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6212;
     */
    CMD_ID = 6212,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SearchCustomDungeonReq
 */
export interface SearchCustomDungeonReq {
    /**
     * @generated from protobuf field: optional string dungeon_code = 6;
     */
    dungeonCode?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.SearchCustomDungeonReq.CmdId
 */
export enum SearchCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6233;
     */
    CMD_ID = 6233,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SearchCustomDungeonRsp
 */
export interface SearchCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.OtherCustomDungeonBrief custom_dungeon_brief = 14;
     */
    customDungeonBrief?: OtherCustomDungeonBrief;
}
/**
 * @generated from protobuf enum com.midnights.game.SearchCustomDungeonRsp.CmdId
 */
export enum SearchCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6215;
     */
    CMD_ID = 6215,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.StoreCustomDungeonReq
 */
export interface StoreCustomDungeonReq {
    /**
     * @generated from protobuf field: optional bool is_cancel_store = 9;
     */
    isCancelStore?: boolean;
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 11;
     */
    dungeonGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.StoreCustomDungeonReq.CmdId
 */
export enum StoreCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6213;
     */
    CMD_ID = 6213,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.StoreCustomDungeonRsp
 */
export interface StoreCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.StoreCustomDungeonRsp.CmdId
 */
export enum StoreCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6201;
     */
    CMD_ID = 6201,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.LikeCustomDungeonReq
 */
export interface LikeCustomDungeonReq {
    /**
     * @generated from protobuf field: optional bool is_cancel_like = 5;
     */
    isCancelLike?: boolean;
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 10;
     */
    dungeonGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.LikeCustomDungeonReq.CmdId
 */
export enum LikeCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6210;
     */
    CMD_ID = 6210,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.LikeCustomDungeonRsp
 */
export interface LikeCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.LikeCustomDungeonRsp.CmdId
 */
export enum LikeCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6219;
     */
    CMD_ID = 6219,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetCustomDungeonReq
 */
export interface GetCustomDungeonReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetCustomDungeonReq.CmdId
 */
export enum GetCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6209;
     */
    CMD_ID = 6209,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetCustomDungeonRsp
 */
export interface GetCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeonBanInfo ban_info = 14;
     */
    banInfo?: CustomDungeonBanInfo;
    /**
     * @generated from protobuf field: repeated com.midnights.game.CustomDungeonBrief brief_list = 5;
     */
    briefList: CustomDungeonBrief[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetCustomDungeonRsp.CmdId
 */
export enum GetCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6227;
     */
    CMD_ID = 6227,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonRecoverNotify
 */
export interface CustomDungeonRecoverNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.EnterCustomDungeonType enter_type = 14;
     */
    enterType?: EnterCustomDungeonType;
    /**
     * @generated from protobuf field: optional com.midnights.game.TryCustomDungeonType try_type = 3;
     */
    tryType?: TryCustomDungeonType;
    /**
     * @generated from protobuf field: optional com.midnights.game.CustomDungeon custom_dungeon = 10;
     */
    customDungeon?: CustomDungeon;
    /**
     * @generated from protobuf field: repeated uint32 official_black_coin_list = 12;
     */
    officialBlackCoinList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.CustomDungeonRecoverNotify.CmdId
 */
export enum CustomDungeonRecoverNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6217;
     */
    CMD_ID = 6217,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.BackPlayCustomDungeonOfficialReq
 */
export interface BackPlayCustomDungeonOfficialReq {
    /**
     * @generated from protobuf field: optional uint32 room_id = 2;
     */
    roomId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.BackPlayCustomDungeonOfficialReq.CmdId
 */
export enum BackPlayCustomDungeonOfficialReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6203;
     */
    CMD_ID = 6203,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.BackPlayCustomDungeonOfficialRsp
 */
export interface BackPlayCustomDungeonOfficialRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.BackPlayCustomDungeonOfficialRsp.CmdId
 */
export enum BackPlayCustomDungeonOfficialRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6204;
     */
    CMD_ID = 6204,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonOfficialNotify
 */
export interface CustomDungeonOfficialNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.TryCustomDungeonType try_type = 9;
     */
    tryType?: TryCustomDungeonType;
    /**
     * @generated from protobuf field: repeated uint32 official_black_coin_list = 14;
     */
    officialBlackCoinList: number[];
    /**
     * @generated from protobuf field: optional com.midnights.game.EnterCustomDungeonType enter_type = 15;
     */
    enterType?: EnterCustomDungeonType;
}
/**
 * @generated from protobuf enum com.midnights.game.CustomDungeonOfficialNotify.CmdId
 */
export enum CustomDungeonOfficialNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6221;
     */
    CMD_ID = 6221,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonVerify
 */
export interface CustomDungeonVerify {
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 3;
     */
    dungeonGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 uid = 15;
     */
    uid?: number;
    /**
     * @generated from protobuf field: optional uint32 timestamp = 4;
     */
    timestamp?: number;
    /**
     * @generated from protobuf field: optional string region = 11;
     */
    region?: string;
    /**
     * @generated from protobuf field: optional uint32 lang = 13;
     */
    lang?: number;
}
/**
 * @generated from protobuf message com.midnights.game.ReplayCustomDungeonReq
 */
export interface ReplayCustomDungeonReq {
}
/**
 * @generated from protobuf enum com.midnights.game.ReplayCustomDungeonReq.CmdId
 */
export enum ReplayCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6243;
     */
    CMD_ID = 6243,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ReplayCustomDungeonRsp
 */
export interface ReplayCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ReplayCustomDungeonRsp.CmdId
 */
export enum ReplayCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6240;
     */
    CMD_ID = 6240,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.CustomDungeonBattleRecordNotify
 */
export interface CustomDungeonBattleRecordNotify {
    /**
     * @generated from protobuf field: optional uint32 min_cost_time = 13;
     */
    minCostTime?: number;
    /**
     * @generated from protobuf field: optional uint64 dungeon_guid = 12;
     */
    dungeonGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.CustomDungeonBattleRecordNotify.CmdId
 */
export enum CustomDungeonBattleRecordNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6236;
     */
    CMD_ID = 6236,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.OutStuckCustomDungeonReq
 */
export interface OutStuckCustomDungeonReq {
}
/**
 * @generated from protobuf enum com.midnights.game.OutStuckCustomDungeonReq.CmdId
 */
export enum OutStuckCustomDungeonReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6211;
     */
    CMD_ID = 6211,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.OutStuckCustomDungeonRsp
 */
export interface OutStuckCustomDungeonRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.OutStuckCustomDungeonRsp.CmdId
 */
export enum OutStuckCustomDungeonRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 6234;
     */
    CMD_ID = 6234,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf enum com.midnights.game.EnterCustomDungeonType
 */
export enum EnterCustomDungeonType {
    /**
     * @generated from protobuf enum value: ENTER_CUSTOM_DUNGEON_NONE = 0;
     */
    ENTER_CUSTOM_DUNGEON_NONE = 0,
    /**
     * @generated from protobuf enum value: ENTER_CUSTOM_DUNGEON_EDIT = 1;
     */
    ENTER_CUSTOM_DUNGEON_EDIT = 1,
    /**
     * @generated from protobuf enum value: ENTER_CUSTOM_DUNGEON_PLAY = 2;
     */
    ENTER_CUSTOM_DUNGEON_PLAY = 2,
    /**
     * @generated from protobuf enum value: ENTER_CUSTOM_DUNGEON_OFFICIAL = 3;
     */
    ENTER_CUSTOM_DUNGEON_OFFICIAL = 3
}
/**
 * @generated from protobuf enum com.midnights.game.CustomDungeonState
 */
export enum CustomDungeonState {
    /**
     * @generated from protobuf enum value: CUSTOM_DUNGEON_STATE_EDIT = 0;
     */
    EDIT = 0,
    /**
     * @generated from protobuf enum value: CUSTOM_DUNGEON_STATE_SELF_PASS = 1;
     */
    SELF_PASS = 1,
    /**
     * @generated from protobuf enum value: CUSTOM_DUNGEON_STATE_PUBLISHED = 2;
     */
    PUBLISHED = 2
}
/**
 * @generated from protobuf enum com.midnights.game.CustomDungeonBanType
 */
export enum CustomDungeonBanType {
    /**
     * @generated from protobuf enum value: CUSTOM_DUNGEON_BAN_TYPE_NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CUSTOM_DUNGEON_BAN_TYPE_LAYOUT = 1;
     */
    LAYOUT = 1
}
/**
 * @generated from protobuf enum com.midnights.game.TryCustomDungeonType
 */
export enum TryCustomDungeonType {
    /**
     * @generated from protobuf enum value: TRY_CUSTOM_DUNGEON_NONE = 0;
     */
    TRY_CUSTOM_DUNGEON_NONE = 0,
    /**
     * @generated from protobuf enum value: TRY_CUSTOM_DUNGEON_ROOM = 1;
     */
    TRY_CUSTOM_DUNGEON_ROOM = 1,
    /**
     * @generated from protobuf enum value: TRY_CUSTOM_DUNGEON_ALL = 2;
     */
    TRY_CUSTOM_DUNGEON_ALL = 2,
    /**
     * @generated from protobuf enum value: TRY_CUSTOM_DUNGEON_OFFICIAL_PLAY = 3;
     */
    TRY_CUSTOM_DUNGEON_OFFICIAL_PLAY = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonBlock$Type extends MessageType<CustomDungeonBlock> {
    constructor() {
        super("com.midnights.game.CustomDungeonBlock", [
            { no: 8, name: "block_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "rot", kind: "message", T: () => Vector },
            { no: 4, name: "guid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonBlock>): CustomDungeonBlock {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonBlock>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonBlock): CustomDungeonBlock {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 block_id */ 8:
                    message.blockId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector rot */ 12:
                    message.rot = Vector.internalBinaryRead(reader, reader.uint32(), options, message.rot);
                    break;
                case /* optional uint32 guid */ 4:
                    message.guid = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector pos */ 1:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonBlock, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 block_id = 8; */
        if (message.blockId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.blockId);
        /* optional com.midnights.game.Vector rot = 12; */
        if (message.rot)
            Vector.internalBinaryWrite(message.rot, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 guid = 4; */
        if (message.guid !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.guid);
        /* optional com.midnights.game.Vector pos = 1; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonBlock
 */
export const CustomDungeonBlock = new CustomDungeonBlock$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonRoom$Type extends MessageType<CustomDungeonRoom> {
    constructor() {
        super("com.midnights.game.CustomDungeonRoom", [
            { no: 15, name: "room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "block_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CustomDungeonBlock }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonRoom>): CustomDungeonRoom {
        const message = { blockList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonRoom>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonRoom): CustomDungeonRoom {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 room_id */ 15:
                    message.roomId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.CustomDungeonBlock block_list */ 4:
                    message.blockList.push(CustomDungeonBlock.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonRoom, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 room_id = 15; */
        if (message.roomId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.roomId);
        /* repeated com.midnights.game.CustomDungeonBlock block_list = 4; */
        for (let i = 0; i < message.blockList.length; i++)
            CustomDungeonBlock.internalBinaryWrite(message.blockList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonRoom
 */
export const CustomDungeonRoom = new CustomDungeonRoom$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonSetting$Type extends MessageType<CustomDungeonSetting> {
    constructor() {
        super("com.midnights.game.CustomDungeonSetting", [
            { no: 1, name: "open_room_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "is_arrive_finish", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "life_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "start_room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "is_forbid_skill", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "coin_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "time_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonSetting>): CustomDungeonSetting {
        const message = { openRoomList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonSetting>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonSetting): CustomDungeonSetting {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 open_room_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.openRoomList.push(reader.uint32());
                    else
                        message.openRoomList.push(reader.uint32());
                    break;
                case /* optional bool is_arrive_finish */ 14:
                    message.isArriveFinish = reader.bool();
                    break;
                case /* optional uint32 life_num */ 6:
                    message.lifeNum = reader.uint32();
                    break;
                case /* optional uint32 start_room_id */ 4:
                    message.startRoomId = reader.uint32();
                    break;
                case /* optional bool is_forbid_skill */ 3:
                    message.isForbidSkill = reader.bool();
                    break;
                case /* optional uint32 coin_limit */ 10:
                    message.coinLimit = reader.uint32();
                    break;
                case /* optional uint32 time_limit */ 9:
                    message.timeLimit = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonSetting, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 open_room_list = 1; */
        for (let i = 0; i < message.openRoomList.length; i++)
            writer.tag(1, WireType.Varint).uint32(message.openRoomList[i]);
        /* optional bool is_arrive_finish = 14; */
        if (message.isArriveFinish !== undefined)
            writer.tag(14, WireType.Varint).bool(message.isArriveFinish);
        /* optional uint32 life_num = 6; */
        if (message.lifeNum !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.lifeNum);
        /* optional uint32 start_room_id = 4; */
        if (message.startRoomId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.startRoomId);
        /* optional bool is_forbid_skill = 3; */
        if (message.isForbidSkill !== undefined)
            writer.tag(3, WireType.Varint).bool(message.isForbidSkill);
        /* optional uint32 coin_limit = 10; */
        if (message.coinLimit !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.coinLimit);
        /* optional uint32 time_limit = 9; */
        if (message.timeLimit !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.timeLimit);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonSetting
 */
export const CustomDungeonSetting = new CustomDungeonSetting$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeon$Type extends MessageType<CustomDungeon> {
    constructor() {
        super("com.midnights.game.CustomDungeon", [
            { no: 1, name: "setting", kind: "message", T: () => CustomDungeonSetting },
            { no: 15, name: "room_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CustomDungeonRoom },
            { no: 3, name: "dungeon_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<CustomDungeon>): CustomDungeon {
        const message = { roomList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeon>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeon): CustomDungeon {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.CustomDungeonSetting setting */ 1:
                    message.setting = CustomDungeonSetting.internalBinaryRead(reader, reader.uint32(), options, message.setting);
                    break;
                case /* repeated com.midnights.game.CustomDungeonRoom room_list */ 15:
                    message.roomList.push(CustomDungeonRoom.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 dungeon_id */ 3:
                    message.dungeonId = reader.uint32();
                    break;
                case /* optional uint64 dungeon_guid */ 10:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeon, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.CustomDungeonSetting setting = 1; */
        if (message.setting)
            CustomDungeonSetting.internalBinaryWrite(message.setting, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.CustomDungeonRoom room_list = 15; */
        for (let i = 0; i < message.roomList.length; i++)
            CustomDungeonRoom.internalBinaryWrite(message.roomList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 dungeon_id = 3; */
        if (message.dungeonId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.dungeonId);
        /* optional uint64 dungeon_guid = 10; */
        if (message.dungeonGuid !== undefined)
            writer.tag(10, WireType.Varint).uint64(message.dungeonGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeon
 */
export const CustomDungeon = new CustomDungeon$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnterCustomDungeonReq$Type extends MessageType<EnterCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.EnterCustomDungeonReq", [
            { no: 11, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "dungeon_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "enter_type", kind: "enum", opt: true, T: () => ["com.midnights.game.EnterCustomDungeonType", EnterCustomDungeonType] }
        ]);
    }
    create(value?: PartialMessage<EnterCustomDungeonReq>): EnterCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EnterCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnterCustomDungeonReq): EnterCustomDungeonReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 dungeon_guid */ 11:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 dungeon_id */ 12:
                    message.dungeonId = reader.uint32();
                    break;
                case /* optional com.midnights.game.EnterCustomDungeonType enter_type */ 10:
                    message.enterType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EnterCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 dungeon_guid = 11; */
        if (message.dungeonGuid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.dungeonGuid);
        /* optional uint32 dungeon_id = 12; */
        if (message.dungeonId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.dungeonId);
        /* optional com.midnights.game.EnterCustomDungeonType enter_type = 10; */
        if (message.enterType !== undefined)
            writer.tag(10, WireType.Varint).int32(message.enterType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EnterCustomDungeonReq
 */
export const EnterCustomDungeonReq = new EnterCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnterCustomDungeonRsp$Type extends MessageType<EnterCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.EnterCustomDungeonRsp", [
            { no: 14, name: "custom_dungeon", kind: "message", T: () => CustomDungeon },
            { no: 2, name: "enter_type", kind: "enum", opt: true, T: () => ["com.midnights.game.EnterCustomDungeonType", EnterCustomDungeonType] },
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "room_cost_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } }
        ]);
    }
    create(value?: PartialMessage<EnterCustomDungeonRsp>): EnterCustomDungeonRsp {
        const message = { roomCostMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EnterCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnterCustomDungeonRsp): EnterCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.CustomDungeon custom_dungeon */ 14:
                    message.customDungeon = CustomDungeon.internalBinaryRead(reader, reader.uint32(), options, message.customDungeon);
                    break;
                case /* optional com.midnights.game.EnterCustomDungeonType enter_type */ 2:
                    message.enterType = reader.int32();
                    break;
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* map<uint32, uint32> room_cost_map */ 6:
                    this.binaryReadMap6(message.roomCostMap, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap6(map: EnterCustomDungeonRsp["roomCostMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof EnterCustomDungeonRsp["roomCostMap"] | undefined, val: EnterCustomDungeonRsp["roomCostMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.EnterCustomDungeonRsp.room_cost_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: EnterCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.CustomDungeon custom_dungeon = 14; */
        if (message.customDungeon)
            CustomDungeon.internalBinaryWrite(message.customDungeon, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.EnterCustomDungeonType enter_type = 2; */
        if (message.enterType !== undefined)
            writer.tag(2, WireType.Varint).int32(message.enterType);
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* map<uint32, uint32> room_cost_map = 6; */
        for (let k of Object.keys(message.roomCostMap))
            writer.tag(6, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.roomCostMap[k as any]).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EnterCustomDungeonRsp
 */
export const EnterCustomDungeonRsp = new EnterCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SaveCustomDungeonRoomReq$Type extends MessageType<SaveCustomDungeonRoomReq> {
    constructor() {
        super("com.midnights.game.SaveCustomDungeonRoomReq", [
            { no: 5, name: "custom_dungeon_room", kind: "message", T: () => CustomDungeonRoom },
            { no: 7, name: "is_update_setting", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "setting", kind: "message", T: () => CustomDungeonSetting }
        ]);
    }
    create(value?: PartialMessage<SaveCustomDungeonRoomReq>): SaveCustomDungeonRoomReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SaveCustomDungeonRoomReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SaveCustomDungeonRoomReq): SaveCustomDungeonRoomReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.CustomDungeonRoom custom_dungeon_room */ 5:
                    message.customDungeonRoom = CustomDungeonRoom.internalBinaryRead(reader, reader.uint32(), options, message.customDungeonRoom);
                    break;
                case /* optional bool is_update_setting */ 7:
                    message.isUpdateSetting = reader.bool();
                    break;
                case /* optional com.midnights.game.CustomDungeonSetting setting */ 13:
                    message.setting = CustomDungeonSetting.internalBinaryRead(reader, reader.uint32(), options, message.setting);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SaveCustomDungeonRoomReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.CustomDungeonRoom custom_dungeon_room = 5; */
        if (message.customDungeonRoom)
            CustomDungeonRoom.internalBinaryWrite(message.customDungeonRoom, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_update_setting = 7; */
        if (message.isUpdateSetting !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isUpdateSetting);
        /* optional com.midnights.game.CustomDungeonSetting setting = 13; */
        if (message.setting)
            CustomDungeonSetting.internalBinaryWrite(message.setting, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SaveCustomDungeonRoomReq
 */
export const SaveCustomDungeonRoomReq = new SaveCustomDungeonRoomReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SaveCustomDungeonRoomRsp$Type extends MessageType<SaveCustomDungeonRoomRsp> {
    constructor() {
        super("com.midnights.game.SaveCustomDungeonRoomRsp", [
            { no: 14, name: "room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "error_block_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CustomDungeonBlock },
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SaveCustomDungeonRoomRsp>): SaveCustomDungeonRoomRsp {
        const message = { errorBlockList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SaveCustomDungeonRoomRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SaveCustomDungeonRoomRsp): SaveCustomDungeonRoomRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 room_id */ 14:
                    message.roomId = reader.uint32();
                    break;
                case /* repeated com.midnights.game.CustomDungeonBlock error_block_list */ 9:
                    message.errorBlockList.push(CustomDungeonBlock.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SaveCustomDungeonRoomRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 room_id = 14; */
        if (message.roomId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.roomId);
        /* repeated com.midnights.game.CustomDungeonBlock error_block_list = 9; */
        for (let i = 0; i < message.errorBlockList.length; i++)
            CustomDungeonBlock.internalBinaryWrite(message.errorBlockList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SaveCustomDungeonRoomRsp
 */
export const SaveCustomDungeonRoomRsp = new SaveCustomDungeonRoomRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonAbstract$Type extends MessageType<CustomDungeonAbstract> {
    constructor() {
        super("com.midnights.game.CustomDungeonAbstract", [
            { no: 12, name: "brick_statistics_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 3, name: "first_publish_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "total_coin_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "last_publish_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "finish_room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonAbstract>): CustomDungeonAbstract {
        const message = { brickStatisticsMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonAbstract>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonAbstract): CustomDungeonAbstract {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, uint32> brick_statistics_map */ 12:
                    this.binaryReadMap12(message.brickStatisticsMap, reader, options);
                    break;
                case /* optional uint32 first_publish_time */ 3:
                    message.firstPublishTime = reader.uint32();
                    break;
                case /* optional uint32 total_coin_num */ 15:
                    message.totalCoinNum = reader.uint32();
                    break;
                case /* optional uint32 last_publish_time */ 6:
                    message.lastPublishTime = reader.uint32();
                    break;
                case /* optional uint32 finish_room_id */ 7:
                    message.finishRoomId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap12(map: CustomDungeonAbstract["brickStatisticsMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof CustomDungeonAbstract["brickStatisticsMap"] | undefined, val: CustomDungeonAbstract["brickStatisticsMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.CustomDungeonAbstract.brick_statistics_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: CustomDungeonAbstract, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, uint32> brick_statistics_map = 12; */
        for (let k of Object.keys(message.brickStatisticsMap))
            writer.tag(12, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.brickStatisticsMap[k as any]).join();
        /* optional uint32 first_publish_time = 3; */
        if (message.firstPublishTime !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.firstPublishTime);
        /* optional uint32 total_coin_num = 15; */
        if (message.totalCoinNum !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.totalCoinNum);
        /* optional uint32 last_publish_time = 6; */
        if (message.lastPublishTime !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.lastPublishTime);
        /* optional uint32 finish_room_id = 7; */
        if (message.finishRoomId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.finishRoomId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonAbstract
 */
export const CustomDungeonAbstract = new CustomDungeonAbstract$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonSocial$Type extends MessageType<CustomDungeonSocial> {
    constructor() {
        super("com.midnights.game.CustomDungeonSocial", [
            { no: 4, name: "win_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "like_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "play_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "store_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonSocial>): CustomDungeonSocial {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonSocial>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonSocial): CustomDungeonSocial {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 win_num */ 4:
                    message.winNum = reader.uint32();
                    break;
                case /* optional uint32 like_num */ 12:
                    message.likeNum = reader.uint32();
                    break;
                case /* optional uint32 play_num */ 7:
                    message.playNum = reader.uint32();
                    break;
                case /* optional uint32 store_num */ 2:
                    message.storeNum = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonSocial, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 win_num = 4; */
        if (message.winNum !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.winNum);
        /* optional uint32 like_num = 12; */
        if (message.likeNum !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.likeNum);
        /* optional uint32 play_num = 7; */
        if (message.playNum !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.playNum);
        /* optional uint32 store_num = 2; */
        if (message.storeNum !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.storeNum);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonSocial
 */
export const CustomDungeonSocial = new CustomDungeonSocial$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonBrief$Type extends MessageType<CustomDungeonBrief> {
    constructor() {
        super("com.midnights.game.CustomDungeonBrief", [
            { no: 2, name: "setting", kind: "message", T: () => CustomDungeonSetting },
            { no: 13, name: "is_psn_platform", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "social", kind: "message", T: () => CustomDungeonSocial },
            { no: 10, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "last_save_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "tag_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "dungeon_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "battle_min_cost_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "state", kind: "enum", opt: true, T: () => ["com.midnights.game.CustomDungeonState", CustomDungeonState, "CUSTOM_DUNGEON_STATE_"] },
            { no: 4, name: "abstract", kind: "message", T: () => CustomDungeonAbstract }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonBrief>): CustomDungeonBrief {
        const message = { tagList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonBrief>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonBrief): CustomDungeonBrief {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.CustomDungeonSetting setting */ 2:
                    message.setting = CustomDungeonSetting.internalBinaryRead(reader, reader.uint32(), options, message.setting);
                    break;
                case /* optional bool is_psn_platform */ 13:
                    message.isPsnPlatform = reader.bool();
                    break;
                case /* optional com.midnights.game.CustomDungeonSocial social */ 7:
                    message.social = CustomDungeonSocial.internalBinaryRead(reader, reader.uint32(), options, message.social);
                    break;
                case /* optional uint64 dungeon_guid */ 10:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 last_save_time */ 14:
                    message.lastSaveTime = reader.uint32();
                    break;
                case /* repeated uint32 tag_list */ 15:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.tagList.push(reader.uint32());
                    else
                        message.tagList.push(reader.uint32());
                    break;
                case /* optional uint32 dungeon_id */ 5:
                    message.dungeonId = reader.uint32();
                    break;
                case /* optional uint32 battle_min_cost_time */ 12:
                    message.battleMinCostTime = reader.uint32();
                    break;
                case /* optional com.midnights.game.CustomDungeonState state */ 1:
                    message.state = reader.int32();
                    break;
                case /* optional com.midnights.game.CustomDungeonAbstract abstract */ 4:
                    message.abstract = CustomDungeonAbstract.internalBinaryRead(reader, reader.uint32(), options, message.abstract);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonBrief, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.CustomDungeonSetting setting = 2; */
        if (message.setting)
            CustomDungeonSetting.internalBinaryWrite(message.setting, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_psn_platform = 13; */
        if (message.isPsnPlatform !== undefined)
            writer.tag(13, WireType.Varint).bool(message.isPsnPlatform);
        /* optional com.midnights.game.CustomDungeonSocial social = 7; */
        if (message.social)
            CustomDungeonSocial.internalBinaryWrite(message.social, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 dungeon_guid = 10; */
        if (message.dungeonGuid !== undefined)
            writer.tag(10, WireType.Varint).uint64(message.dungeonGuid);
        /* optional uint32 last_save_time = 14; */
        if (message.lastSaveTime !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.lastSaveTime);
        /* repeated uint32 tag_list = 15; */
        for (let i = 0; i < message.tagList.length; i++)
            writer.tag(15, WireType.Varint).uint32(message.tagList[i]);
        /* optional uint32 dungeon_id = 5; */
        if (message.dungeonId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.dungeonId);
        /* optional uint32 battle_min_cost_time = 12; */
        if (message.battleMinCostTime !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.battleMinCostTime);
        /* optional com.midnights.game.CustomDungeonState state = 1; */
        if (message.state !== undefined)
            writer.tag(1, WireType.Varint).int32(message.state);
        /* optional com.midnights.game.CustomDungeonAbstract abstract = 4; */
        if (message.abstract)
            CustomDungeonAbstract.internalBinaryWrite(message.abstract, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonBrief
 */
export const CustomDungeonBrief = new CustomDungeonBrief$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OtherCustomDungeonBrief$Type extends MessageType<OtherCustomDungeonBrief> {
    constructor() {
        super("com.midnights.game.OtherCustomDungeonBrief", [
            { no: 4, name: "creator_detail", kind: "message", T: () => SocialDetail },
            { no: 15, name: "battle_min_cost_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "abstract", kind: "message", T: () => CustomDungeonAbstract },
            { no: 14, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "setting", kind: "message", T: () => CustomDungeonSetting },
            { no: 6, name: "dungeon_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "tag_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "is_adventure_dungeon", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "is_psn_platform", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "is_stored", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "social", kind: "message", T: () => CustomDungeonSocial }
        ]);
    }
    create(value?: PartialMessage<OtherCustomDungeonBrief>): OtherCustomDungeonBrief {
        const message = { tagList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OtherCustomDungeonBrief>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OtherCustomDungeonBrief): OtherCustomDungeonBrief {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.SocialDetail creator_detail */ 4:
                    message.creatorDetail = SocialDetail.internalBinaryRead(reader, reader.uint32(), options, message.creatorDetail);
                    break;
                case /* optional uint32 battle_min_cost_time */ 15:
                    message.battleMinCostTime = reader.uint32();
                    break;
                case /* optional com.midnights.game.CustomDungeonAbstract abstract */ 2:
                    message.abstract = CustomDungeonAbstract.internalBinaryRead(reader, reader.uint32(), options, message.abstract);
                    break;
                case /* optional uint64 dungeon_guid */ 14:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                case /* optional com.midnights.game.CustomDungeonSetting setting */ 10:
                    message.setting = CustomDungeonSetting.internalBinaryRead(reader, reader.uint32(), options, message.setting);
                    break;
                case /* optional uint32 dungeon_id */ 6:
                    message.dungeonId = reader.uint32();
                    break;
                case /* repeated uint32 tag_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.tagList.push(reader.uint32());
                    else
                        message.tagList.push(reader.uint32());
                    break;
                case /* optional bool is_adventure_dungeon */ 11:
                    message.isAdventureDungeon = reader.bool();
                    break;
                case /* optional bool is_psn_platform */ 9:
                    message.isPsnPlatform = reader.bool();
                    break;
                case /* optional bool is_stored */ 3:
                    message.isStored = reader.bool();
                    break;
                case /* optional com.midnights.game.CustomDungeonSocial social */ 12:
                    message.social = CustomDungeonSocial.internalBinaryRead(reader, reader.uint32(), options, message.social);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OtherCustomDungeonBrief, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.SocialDetail creator_detail = 4; */
        if (message.creatorDetail)
            SocialDetail.internalBinaryWrite(message.creatorDetail, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 battle_min_cost_time = 15; */
        if (message.battleMinCostTime !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.battleMinCostTime);
        /* optional com.midnights.game.CustomDungeonAbstract abstract = 2; */
        if (message.abstract)
            CustomDungeonAbstract.internalBinaryWrite(message.abstract, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 dungeon_guid = 14; */
        if (message.dungeonGuid !== undefined)
            writer.tag(14, WireType.Varint).uint64(message.dungeonGuid);
        /* optional com.midnights.game.CustomDungeonSetting setting = 10; */
        if (message.setting)
            CustomDungeonSetting.internalBinaryWrite(message.setting, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 dungeon_id = 6; */
        if (message.dungeonId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.dungeonId);
        /* repeated uint32 tag_list = 1; */
        for (let i = 0; i < message.tagList.length; i++)
            writer.tag(1, WireType.Varint).uint32(message.tagList[i]);
        /* optional bool is_adventure_dungeon = 11; */
        if (message.isAdventureDungeon !== undefined)
            writer.tag(11, WireType.Varint).bool(message.isAdventureDungeon);
        /* optional bool is_psn_platform = 9; */
        if (message.isPsnPlatform !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isPsnPlatform);
        /* optional bool is_stored = 3; */
        if (message.isStored !== undefined)
            writer.tag(3, WireType.Varint).bool(message.isStored);
        /* optional com.midnights.game.CustomDungeonSocial social = 12; */
        if (message.social)
            CustomDungeonSocial.internalBinaryWrite(message.social, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OtherCustomDungeonBrief
 */
export const OtherCustomDungeonBrief = new OtherCustomDungeonBrief$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonBanInfo$Type extends MessageType<CustomDungeonBanInfo> {
    constructor() {
        super("com.midnights.game.CustomDungeonBanInfo", [
            { no: 11, name: "ban_type", kind: "enum", opt: true, T: () => ["com.midnights.game.CustomDungeonBanType", CustomDungeonBanType, "CUSTOM_DUNGEON_BAN_TYPE_"] },
            { no: 6, name: "expire_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonBanInfo>): CustomDungeonBanInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonBanInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonBanInfo): CustomDungeonBanInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.CustomDungeonBanType ban_type */ 11:
                    message.banType = reader.int32();
                    break;
                case /* optional uint32 expire_time */ 6:
                    message.expireTime = reader.uint32();
                    break;
                case /* optional uint64 dungeon_guid */ 5:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonBanInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.CustomDungeonBanType ban_type = 11; */
        if (message.banType !== undefined)
            writer.tag(11, WireType.Varint).int32(message.banType);
        /* optional uint32 expire_time = 6; */
        if (message.expireTime !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.expireTime);
        /* optional uint64 dungeon_guid = 5; */
        if (message.dungeonGuid !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.dungeonGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonBanInfo
 */
export const CustomDungeonBanInfo = new CustomDungeonBanInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeCustomDungeonRoomReq$Type extends MessageType<ChangeCustomDungeonRoomReq> {
    constructor() {
        super("com.midnights.game.ChangeCustomDungeonRoomReq", [
            { no: 4, name: "room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeCustomDungeonRoomReq>): ChangeCustomDungeonRoomReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeCustomDungeonRoomReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeCustomDungeonRoomReq): ChangeCustomDungeonRoomReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 room_id */ 4:
                    message.roomId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeCustomDungeonRoomReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 room_id = 4; */
        if (message.roomId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.roomId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeCustomDungeonRoomReq
 */
export const ChangeCustomDungeonRoomReq = new ChangeCustomDungeonRoomReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeCustomDungeonRoomRsp$Type extends MessageType<ChangeCustomDungeonRoomRsp> {
    constructor() {
        super("com.midnights.game.ChangeCustomDungeonRoomRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeCustomDungeonRoomRsp>): ChangeCustomDungeonRoomRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeCustomDungeonRoomRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeCustomDungeonRoomRsp): ChangeCustomDungeonRoomRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 room_id */ 13:
                    message.roomId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeCustomDungeonRoomRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* optional uint32 room_id = 13; */
        if (message.roomId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.roomId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeCustomDungeonRoomRsp
 */
export const ChangeCustomDungeonRoomRsp = new ChangeCustomDungeonRoomRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveCustomDungeonReq$Type extends MessageType<RemoveCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.RemoveCustomDungeonReq", [
            { no: 14, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<RemoveCustomDungeonReq>): RemoveCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RemoveCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RemoveCustomDungeonReq): RemoveCustomDungeonReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 dungeon_guid */ 14:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RemoveCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 dungeon_guid = 14; */
        if (message.dungeonGuid !== undefined)
            writer.tag(14, WireType.Varint).uint64(message.dungeonGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RemoveCustomDungeonReq
 */
export const RemoveCustomDungeonReq = new RemoveCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RemoveCustomDungeonRsp$Type extends MessageType<RemoveCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.RemoveCustomDungeonRsp", [
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<RemoveCustomDungeonRsp>): RemoveCustomDungeonRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RemoveCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RemoveCustomDungeonRsp): RemoveCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 dungeon_guid */ 11:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: RemoveCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        /* optional uint64 dungeon_guid = 11; */
        if (message.dungeonGuid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.dungeonGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RemoveCustomDungeonRsp
 */
export const RemoveCustomDungeonRsp = new RemoveCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TryCustomDungeonReq$Type extends MessageType<TryCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.TryCustomDungeonReq", [
            { no: 13, name: "room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<TryCustomDungeonReq>): TryCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TryCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TryCustomDungeonReq): TryCustomDungeonReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 room_id */ 13:
                    message.roomId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TryCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 room_id = 13; */
        if (message.roomId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.roomId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TryCustomDungeonReq
 */
export const TryCustomDungeonReq = new TryCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TryCustomDungeonRsp$Type extends MessageType<TryCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.TryCustomDungeonRsp", [
            { no: 4, name: "room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<TryCustomDungeonRsp>): TryCustomDungeonRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<TryCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: TryCustomDungeonRsp): TryCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 room_id */ 4:
                    message.roomId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: TryCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 room_id = 4; */
        if (message.roomId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.roomId);
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.TryCustomDungeonRsp
 */
export const TryCustomDungeonRsp = new TryCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PublishCustomDungeonReq$Type extends MessageType<PublishCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.PublishCustomDungeonReq", [
            { no: 1, name: "tag_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<PublishCustomDungeonReq>): PublishCustomDungeonReq {
        const message = { tagList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PublishCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PublishCustomDungeonReq): PublishCustomDungeonReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 tag_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.tagList.push(reader.uint32());
                    else
                        message.tagList.push(reader.uint32());
                    break;
                case /* optional uint64 dungeon_guid */ 5:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PublishCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 tag_list = 1; */
        for (let i = 0; i < message.tagList.length; i++)
            writer.tag(1, WireType.Varint).uint32(message.tagList[i]);
        /* optional uint64 dungeon_guid = 5; */
        if (message.dungeonGuid !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.dungeonGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PublishCustomDungeonReq
 */
export const PublishCustomDungeonReq = new PublishCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PublishCustomDungeonRsp$Type extends MessageType<PublishCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.PublishCustomDungeonRsp", [
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PublishCustomDungeonRsp>): PublishCustomDungeonRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PublishCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PublishCustomDungeonRsp): PublishCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PublishCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PublishCustomDungeonRsp
 */
export const PublishCustomDungeonRsp = new PublishCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExitCustomDungeonTryReq$Type extends MessageType<ExitCustomDungeonTryReq> {
    constructor() {
        super("com.midnights.game.ExitCustomDungeonTryReq", []);
    }
    create(value?: PartialMessage<ExitCustomDungeonTryReq>): ExitCustomDungeonTryReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ExitCustomDungeonTryReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExitCustomDungeonTryReq): ExitCustomDungeonTryReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ExitCustomDungeonTryReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ExitCustomDungeonTryReq
 */
export const ExitCustomDungeonTryReq = new ExitCustomDungeonTryReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExitCustomDungeonTryRsp$Type extends MessageType<ExitCustomDungeonTryRsp> {
    constructor() {
        super("com.midnights.game.ExitCustomDungeonTryRsp", [
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ExitCustomDungeonTryRsp>): ExitCustomDungeonTryRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ExitCustomDungeonTryRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExitCustomDungeonTryRsp): ExitCustomDungeonTryRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ExitCustomDungeonTryRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ExitCustomDungeonTryRsp
 */
export const ExitCustomDungeonTryRsp = new ExitCustomDungeonTryRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonUpdateNotify$Type extends MessageType<CustomDungeonUpdateNotify> {
    constructor() {
        super("com.midnights.game.CustomDungeonUpdateNotify", [
            { no: 12, name: "dungeon_brief", kind: "message", T: () => CustomDungeonBrief }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonUpdateNotify>): CustomDungeonUpdateNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonUpdateNotify): CustomDungeonUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.CustomDungeonBrief dungeon_brief */ 12:
                    message.dungeonBrief = CustomDungeonBrief.internalBinaryRead(reader, reader.uint32(), options, message.dungeonBrief);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.CustomDungeonBrief dungeon_brief = 12; */
        if (message.dungeonBrief)
            CustomDungeonBrief.internalBinaryWrite(message.dungeonBrief, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonUpdateNotify
 */
export const CustomDungeonUpdateNotify = new CustomDungeonUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRecommendCustomDungeonReq$Type extends MessageType<GetRecommendCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.GetRecommendCustomDungeonReq", [
            { no: 13, name: "is_refresh", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<GetRecommendCustomDungeonReq>): GetRecommendCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetRecommendCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetRecommendCustomDungeonReq): GetRecommendCustomDungeonReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_refresh */ 13:
                    message.isRefresh = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetRecommendCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_refresh = 13; */
        if (message.isRefresh !== undefined)
            writer.tag(13, WireType.Varint).bool(message.isRefresh);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetRecommendCustomDungeonReq
 */
export const GetRecommendCustomDungeonReq = new GetRecommendCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetRecommendCustomDungeonRsp$Type extends MessageType<GetRecommendCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.GetRecommendCustomDungeonRsp", [
            { no: 8, name: "custom_dungeon_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => OtherCustomDungeonBrief },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetRecommendCustomDungeonRsp>): GetRecommendCustomDungeonRsp {
        const message = { customDungeonList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetRecommendCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetRecommendCustomDungeonRsp): GetRecommendCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.OtherCustomDungeonBrief custom_dungeon_list */ 8:
                    message.customDungeonList.push(OtherCustomDungeonBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetRecommendCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.OtherCustomDungeonBrief custom_dungeon_list = 8; */
        for (let i = 0; i < message.customDungeonList.length; i++)
            OtherCustomDungeonBrief.internalBinaryWrite(message.customDungeonList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetRecommendCustomDungeonRsp
 */
export const GetRecommendCustomDungeonRsp = new GetRecommendCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStoreCustomDungeonReq$Type extends MessageType<GetStoreCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.GetStoreCustomDungeonReq", []);
    }
    create(value?: PartialMessage<GetStoreCustomDungeonReq>): GetStoreCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetStoreCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStoreCustomDungeonReq): GetStoreCustomDungeonReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetStoreCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetStoreCustomDungeonReq
 */
export const GetStoreCustomDungeonReq = new GetStoreCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetStoreCustomDungeonRsp$Type extends MessageType<GetStoreCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.GetStoreCustomDungeonRsp", [
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "custom_dungeon_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => OtherCustomDungeonBrief }
        ]);
    }
    create(value?: PartialMessage<GetStoreCustomDungeonRsp>): GetStoreCustomDungeonRsp {
        const message = { customDungeonList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetStoreCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetStoreCustomDungeonRsp): GetStoreCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.OtherCustomDungeonBrief custom_dungeon_list */ 7:
                    message.customDungeonList.push(OtherCustomDungeonBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetStoreCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.OtherCustomDungeonBrief custom_dungeon_list = 7; */
        for (let i = 0; i < message.customDungeonList.length; i++)
            OtherCustomDungeonBrief.internalBinaryWrite(message.customDungeonList[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetStoreCustomDungeonRsp
 */
export const GetStoreCustomDungeonRsp = new GetStoreCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchCustomDungeonReq$Type extends MessageType<SearchCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.SearchCustomDungeonReq", [
            { no: 6, name: "dungeon_code", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<SearchCustomDungeonReq>): SearchCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchCustomDungeonReq): SearchCustomDungeonReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional string dungeon_code */ 6:
                    message.dungeonCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SearchCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional string dungeon_code = 6; */
        if (message.dungeonCode !== undefined)
            writer.tag(6, WireType.LengthDelimited).string(message.dungeonCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SearchCustomDungeonReq
 */
export const SearchCustomDungeonReq = new SearchCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchCustomDungeonRsp$Type extends MessageType<SearchCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.SearchCustomDungeonRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "custom_dungeon_brief", kind: "message", T: () => OtherCustomDungeonBrief }
        ]);
    }
    create(value?: PartialMessage<SearchCustomDungeonRsp>): SearchCustomDungeonRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SearchCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SearchCustomDungeonRsp): SearchCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.OtherCustomDungeonBrief custom_dungeon_brief */ 14:
                    message.customDungeonBrief = OtherCustomDungeonBrief.internalBinaryRead(reader, reader.uint32(), options, message.customDungeonBrief);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SearchCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.OtherCustomDungeonBrief custom_dungeon_brief = 14; */
        if (message.customDungeonBrief)
            OtherCustomDungeonBrief.internalBinaryWrite(message.customDungeonBrief, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SearchCustomDungeonRsp
 */
export const SearchCustomDungeonRsp = new SearchCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StoreCustomDungeonReq$Type extends MessageType<StoreCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.StoreCustomDungeonReq", [
            { no: 9, name: "is_cancel_store", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<StoreCustomDungeonReq>): StoreCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StoreCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoreCustomDungeonReq): StoreCustomDungeonReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_cancel_store */ 9:
                    message.isCancelStore = reader.bool();
                    break;
                case /* optional uint64 dungeon_guid */ 11:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StoreCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_cancel_store = 9; */
        if (message.isCancelStore !== undefined)
            writer.tag(9, WireType.Varint).bool(message.isCancelStore);
        /* optional uint64 dungeon_guid = 11; */
        if (message.dungeonGuid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.dungeonGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.StoreCustomDungeonReq
 */
export const StoreCustomDungeonReq = new StoreCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StoreCustomDungeonRsp$Type extends MessageType<StoreCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.StoreCustomDungeonRsp", [
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<StoreCustomDungeonRsp>): StoreCustomDungeonRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StoreCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StoreCustomDungeonRsp): StoreCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StoreCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.StoreCustomDungeonRsp
 */
export const StoreCustomDungeonRsp = new StoreCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeCustomDungeonReq$Type extends MessageType<LikeCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.LikeCustomDungeonReq", [
            { no: 5, name: "is_cancel_like", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<LikeCustomDungeonReq>): LikeCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LikeCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LikeCustomDungeonReq): LikeCustomDungeonReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_cancel_like */ 5:
                    message.isCancelLike = reader.bool();
                    break;
                case /* optional uint64 dungeon_guid */ 10:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LikeCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_cancel_like = 5; */
        if (message.isCancelLike !== undefined)
            writer.tag(5, WireType.Varint).bool(message.isCancelLike);
        /* optional uint64 dungeon_guid = 10; */
        if (message.dungeonGuid !== undefined)
            writer.tag(10, WireType.Varint).uint64(message.dungeonGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.LikeCustomDungeonReq
 */
export const LikeCustomDungeonReq = new LikeCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeCustomDungeonRsp$Type extends MessageType<LikeCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.LikeCustomDungeonRsp", [
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<LikeCustomDungeonRsp>): LikeCustomDungeonRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<LikeCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: LikeCustomDungeonRsp): LikeCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: LikeCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.LikeCustomDungeonRsp
 */
export const LikeCustomDungeonRsp = new LikeCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCustomDungeonReq$Type extends MessageType<GetCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.GetCustomDungeonReq", []);
    }
    create(value?: PartialMessage<GetCustomDungeonReq>): GetCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetCustomDungeonReq): GetCustomDungeonReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetCustomDungeonReq
 */
export const GetCustomDungeonReq = new GetCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetCustomDungeonRsp$Type extends MessageType<GetCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.GetCustomDungeonRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "ban_info", kind: "message", T: () => CustomDungeonBanInfo },
            { no: 5, name: "brief_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => CustomDungeonBrief }
        ]);
    }
    create(value?: PartialMessage<GetCustomDungeonRsp>): GetCustomDungeonRsp {
        const message = { briefList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetCustomDungeonRsp): GetCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.CustomDungeonBanInfo ban_info */ 14:
                    message.banInfo = CustomDungeonBanInfo.internalBinaryRead(reader, reader.uint32(), options, message.banInfo);
                    break;
                case /* repeated com.midnights.game.CustomDungeonBrief brief_list */ 5:
                    message.briefList.push(CustomDungeonBrief.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.CustomDungeonBanInfo ban_info = 14; */
        if (message.banInfo)
            CustomDungeonBanInfo.internalBinaryWrite(message.banInfo, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.CustomDungeonBrief brief_list = 5; */
        for (let i = 0; i < message.briefList.length; i++)
            CustomDungeonBrief.internalBinaryWrite(message.briefList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetCustomDungeonRsp
 */
export const GetCustomDungeonRsp = new GetCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonRecoverNotify$Type extends MessageType<CustomDungeonRecoverNotify> {
    constructor() {
        super("com.midnights.game.CustomDungeonRecoverNotify", [
            { no: 14, name: "enter_type", kind: "enum", opt: true, T: () => ["com.midnights.game.EnterCustomDungeonType", EnterCustomDungeonType] },
            { no: 3, name: "try_type", kind: "enum", opt: true, T: () => ["com.midnights.game.TryCustomDungeonType", TryCustomDungeonType] },
            { no: 10, name: "custom_dungeon", kind: "message", T: () => CustomDungeon },
            { no: 12, name: "official_black_coin_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonRecoverNotify>): CustomDungeonRecoverNotify {
        const message = { officialBlackCoinList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonRecoverNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonRecoverNotify): CustomDungeonRecoverNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.EnterCustomDungeonType enter_type */ 14:
                    message.enterType = reader.int32();
                    break;
                case /* optional com.midnights.game.TryCustomDungeonType try_type */ 3:
                    message.tryType = reader.int32();
                    break;
                case /* optional com.midnights.game.CustomDungeon custom_dungeon */ 10:
                    message.customDungeon = CustomDungeon.internalBinaryRead(reader, reader.uint32(), options, message.customDungeon);
                    break;
                case /* repeated uint32 official_black_coin_list */ 12:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.officialBlackCoinList.push(reader.uint32());
                    else
                        message.officialBlackCoinList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonRecoverNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.EnterCustomDungeonType enter_type = 14; */
        if (message.enterType !== undefined)
            writer.tag(14, WireType.Varint).int32(message.enterType);
        /* optional com.midnights.game.TryCustomDungeonType try_type = 3; */
        if (message.tryType !== undefined)
            writer.tag(3, WireType.Varint).int32(message.tryType);
        /* optional com.midnights.game.CustomDungeon custom_dungeon = 10; */
        if (message.customDungeon)
            CustomDungeon.internalBinaryWrite(message.customDungeon, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* repeated uint32 official_black_coin_list = 12; */
        for (let i = 0; i < message.officialBlackCoinList.length; i++)
            writer.tag(12, WireType.Varint).uint32(message.officialBlackCoinList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonRecoverNotify
 */
export const CustomDungeonRecoverNotify = new CustomDungeonRecoverNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BackPlayCustomDungeonOfficialReq$Type extends MessageType<BackPlayCustomDungeonOfficialReq> {
    constructor() {
        super("com.midnights.game.BackPlayCustomDungeonOfficialReq", [
            { no: 2, name: "room_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BackPlayCustomDungeonOfficialReq>): BackPlayCustomDungeonOfficialReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BackPlayCustomDungeonOfficialReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BackPlayCustomDungeonOfficialReq): BackPlayCustomDungeonOfficialReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 room_id */ 2:
                    message.roomId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BackPlayCustomDungeonOfficialReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 room_id = 2; */
        if (message.roomId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.roomId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BackPlayCustomDungeonOfficialReq
 */
export const BackPlayCustomDungeonOfficialReq = new BackPlayCustomDungeonOfficialReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BackPlayCustomDungeonOfficialRsp$Type extends MessageType<BackPlayCustomDungeonOfficialRsp> {
    constructor() {
        super("com.midnights.game.BackPlayCustomDungeonOfficialRsp", [
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<BackPlayCustomDungeonOfficialRsp>): BackPlayCustomDungeonOfficialRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BackPlayCustomDungeonOfficialRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BackPlayCustomDungeonOfficialRsp): BackPlayCustomDungeonOfficialRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BackPlayCustomDungeonOfficialRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BackPlayCustomDungeonOfficialRsp
 */
export const BackPlayCustomDungeonOfficialRsp = new BackPlayCustomDungeonOfficialRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonOfficialNotify$Type extends MessageType<CustomDungeonOfficialNotify> {
    constructor() {
        super("com.midnights.game.CustomDungeonOfficialNotify", [
            { no: 9, name: "try_type", kind: "enum", opt: true, T: () => ["com.midnights.game.TryCustomDungeonType", TryCustomDungeonType] },
            { no: 14, name: "official_black_coin_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "enter_type", kind: "enum", opt: true, T: () => ["com.midnights.game.EnterCustomDungeonType", EnterCustomDungeonType] }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonOfficialNotify>): CustomDungeonOfficialNotify {
        const message = { officialBlackCoinList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonOfficialNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonOfficialNotify): CustomDungeonOfficialNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.TryCustomDungeonType try_type */ 9:
                    message.tryType = reader.int32();
                    break;
                case /* repeated uint32 official_black_coin_list */ 14:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.officialBlackCoinList.push(reader.uint32());
                    else
                        message.officialBlackCoinList.push(reader.uint32());
                    break;
                case /* optional com.midnights.game.EnterCustomDungeonType enter_type */ 15:
                    message.enterType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonOfficialNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.TryCustomDungeonType try_type = 9; */
        if (message.tryType !== undefined)
            writer.tag(9, WireType.Varint).int32(message.tryType);
        /* repeated uint32 official_black_coin_list = 14; */
        for (let i = 0; i < message.officialBlackCoinList.length; i++)
            writer.tag(14, WireType.Varint).uint32(message.officialBlackCoinList[i]);
        /* optional com.midnights.game.EnterCustomDungeonType enter_type = 15; */
        if (message.enterType !== undefined)
            writer.tag(15, WireType.Varint).int32(message.enterType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonOfficialNotify
 */
export const CustomDungeonOfficialNotify = new CustomDungeonOfficialNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonVerify$Type extends MessageType<CustomDungeonVerify> {
    constructor() {
        super("com.midnights.game.CustomDungeonVerify", [
            { no: 3, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "timestamp", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "region", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "lang", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonVerify>): CustomDungeonVerify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonVerify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonVerify): CustomDungeonVerify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 dungeon_guid */ 3:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 uid */ 15:
                    message.uid = reader.uint32();
                    break;
                case /* optional uint32 timestamp */ 4:
                    message.timestamp = reader.uint32();
                    break;
                case /* optional string region */ 11:
                    message.region = reader.string();
                    break;
                case /* optional uint32 lang */ 13:
                    message.lang = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonVerify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 dungeon_guid = 3; */
        if (message.dungeonGuid !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.dungeonGuid);
        /* optional uint32 uid = 15; */
        if (message.uid !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.uid);
        /* optional uint32 timestamp = 4; */
        if (message.timestamp !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.timestamp);
        /* optional string region = 11; */
        if (message.region !== undefined)
            writer.tag(11, WireType.LengthDelimited).string(message.region);
        /* optional uint32 lang = 13; */
        if (message.lang !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.lang);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonVerify
 */
export const CustomDungeonVerify = new CustomDungeonVerify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReplayCustomDungeonReq$Type extends MessageType<ReplayCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.ReplayCustomDungeonReq", []);
    }
    create(value?: PartialMessage<ReplayCustomDungeonReq>): ReplayCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReplayCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReplayCustomDungeonReq): ReplayCustomDungeonReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ReplayCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReplayCustomDungeonReq
 */
export const ReplayCustomDungeonReq = new ReplayCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReplayCustomDungeonRsp$Type extends MessageType<ReplayCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.ReplayCustomDungeonRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ReplayCustomDungeonRsp>): ReplayCustomDungeonRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ReplayCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ReplayCustomDungeonRsp): ReplayCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ReplayCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ReplayCustomDungeonRsp
 */
export const ReplayCustomDungeonRsp = new ReplayCustomDungeonRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonBattleRecordNotify$Type extends MessageType<CustomDungeonBattleRecordNotify> {
    constructor() {
        super("com.midnights.game.CustomDungeonBattleRecordNotify", [
            { no: 13, name: "min_cost_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "dungeon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonBattleRecordNotify>): CustomDungeonBattleRecordNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonBattleRecordNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonBattleRecordNotify): CustomDungeonBattleRecordNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 min_cost_time */ 13:
                    message.minCostTime = reader.uint32();
                    break;
                case /* optional uint64 dungeon_guid */ 12:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonBattleRecordNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 min_cost_time = 13; */
        if (message.minCostTime !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.minCostTime);
        /* optional uint64 dungeon_guid = 12; */
        if (message.dungeonGuid !== undefined)
            writer.tag(12, WireType.Varint).uint64(message.dungeonGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.CustomDungeonBattleRecordNotify
 */
export const CustomDungeonBattleRecordNotify = new CustomDungeonBattleRecordNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OutStuckCustomDungeonReq$Type extends MessageType<OutStuckCustomDungeonReq> {
    constructor() {
        super("com.midnights.game.OutStuckCustomDungeonReq", []);
    }
    create(value?: PartialMessage<OutStuckCustomDungeonReq>): OutStuckCustomDungeonReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OutStuckCustomDungeonReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OutStuckCustomDungeonReq): OutStuckCustomDungeonReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: OutStuckCustomDungeonReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OutStuckCustomDungeonReq
 */
export const OutStuckCustomDungeonReq = new OutStuckCustomDungeonReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OutStuckCustomDungeonRsp$Type extends MessageType<OutStuckCustomDungeonRsp> {
    constructor() {
        super("com.midnights.game.OutStuckCustomDungeonRsp", [
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<OutStuckCustomDungeonRsp>): OutStuckCustomDungeonRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OutStuckCustomDungeonRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OutStuckCustomDungeonRsp): OutStuckCustomDungeonRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OutStuckCustomDungeonRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OutStuckCustomDungeonRsp
 */
export const OutStuckCustomDungeonRsp = new OutStuckCustomDungeonRsp$Type();
