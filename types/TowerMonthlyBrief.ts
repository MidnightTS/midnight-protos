/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: TowerMonthlyBrief.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class TowerMonthlyBrief extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        tower_schedule_id?: number;
        best_floor_index?: number;
        best_level_index?: number;
        total_star_count?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("tower_schedule_id" in data && data.tower_schedule_id != undefined) {
                this.tower_schedule_id = data.tower_schedule_id;
            }
            if ("best_floor_index" in data && data.best_floor_index != undefined) {
                this.best_floor_index = data.best_floor_index;
            }
            if ("best_level_index" in data && data.best_level_index != undefined) {
                this.best_level_index = data.best_level_index;
            }
            if ("total_star_count" in data && data.total_star_count != undefined) {
                this.total_star_count = data.total_star_count;
            }
        }
    }
    get tower_schedule_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set tower_schedule_id(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    get best_floor_index() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set best_floor_index(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get best_level_index() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set best_level_index(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get total_star_count() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set total_star_count(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    static fromObject(data: {
        tower_schedule_id?: number;
        best_floor_index?: number;
        best_level_index?: number;
        total_star_count?: number;
    }): TowerMonthlyBrief {
        const message = new TowerMonthlyBrief({});
        if (data.tower_schedule_id != null) {
            message.tower_schedule_id = data.tower_schedule_id;
        }
        if (data.best_floor_index != null) {
            message.best_floor_index = data.best_floor_index;
        }
        if (data.best_level_index != null) {
            message.best_level_index = data.best_level_index;
        }
        if (data.total_star_count != null) {
            message.total_star_count = data.total_star_count;
        }
        return message;
    }
    toObject() {
        const data: {
            tower_schedule_id?: number;
            best_floor_index?: number;
            best_level_index?: number;
            total_star_count?: number;
        } = {};
        if (this.tower_schedule_id != null) {
            data.tower_schedule_id = this.tower_schedule_id;
        }
        if (this.best_floor_index != null) {
            data.best_floor_index = this.best_floor_index;
        }
        if (this.best_level_index != null) {
            data.best_level_index = this.best_level_index;
        }
        if (this.total_star_count != null) {
            data.total_star_count = this.total_star_count;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.tower_schedule_id != 0)
            writer.writeUint32(15, this.tower_schedule_id);
        if (this.best_floor_index != 0)
            writer.writeUint32(6, this.best_floor_index);
        if (this.best_level_index != 0)
            writer.writeUint32(3, this.best_level_index);
        if (this.total_star_count != 0)
            writer.writeUint32(12, this.total_star_count);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TowerMonthlyBrief {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TowerMonthlyBrief();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 15:
                    message.tower_schedule_id = reader.readUint32();
                    break;
                case 6:
                    message.best_floor_index = reader.readUint32();
                    break;
                case 3:
                    message.best_level_index = reader.readUint32();
                    break;
                case 12:
                    message.total_star_count = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): TowerMonthlyBrief {
        return TowerMonthlyBrief.deserialize(bytes);
    }
}
