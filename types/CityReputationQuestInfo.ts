/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CityReputationQuestInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class CityReputationQuestInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        is_open?: boolean;
        taken_parent_quest_reward_list?: number[];
        finished_parent_quest_list?: number[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [12, 7], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_open" in data && data.is_open != undefined) {
                this.is_open = data.is_open;
            }
            if ("taken_parent_quest_reward_list" in data && data.taken_parent_quest_reward_list != undefined) {
                this.taken_parent_quest_reward_list = data.taken_parent_quest_reward_list;
            }
            if ("finished_parent_quest_list" in data && data.finished_parent_quest_list != undefined) {
                this.finished_parent_quest_list = data.finished_parent_quest_list;
            }
        }
    }
    get is_open() {
        return pb_1.Message.getFieldWithDefault(this, 2, false) as boolean;
    }
    set is_open(value: boolean) {
        pb_1.Message.setField(this, 2, value);
    }
    get taken_parent_quest_reward_list() {
        return pb_1.Message.getFieldWithDefault(this, 12, []) as number[];
    }
    set taken_parent_quest_reward_list(value: number[]) {
        pb_1.Message.setField(this, 12, value);
    }
    get finished_parent_quest_list() {
        return pb_1.Message.getFieldWithDefault(this, 7, []) as number[];
    }
    set finished_parent_quest_list(value: number[]) {
        pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data: {
        is_open?: boolean;
        taken_parent_quest_reward_list?: number[];
        finished_parent_quest_list?: number[];
    }): CityReputationQuestInfo {
        const message = new CityReputationQuestInfo({});
        if (data.is_open != null) {
            message.is_open = data.is_open;
        }
        if (data.taken_parent_quest_reward_list != null) {
            message.taken_parent_quest_reward_list = data.taken_parent_quest_reward_list;
        }
        if (data.finished_parent_quest_list != null) {
            message.finished_parent_quest_list = data.finished_parent_quest_list;
        }
        return message;
    }
    toObject() {
        const data: {
            is_open?: boolean;
            taken_parent_quest_reward_list?: number[];
            finished_parent_quest_list?: number[];
        } = {};
        if (this.is_open != null) {
            data.is_open = this.is_open;
        }
        if (this.taken_parent_quest_reward_list != null) {
            data.taken_parent_quest_reward_list = this.taken_parent_quest_reward_list;
        }
        if (this.finished_parent_quest_list != null) {
            data.finished_parent_quest_list = this.finished_parent_quest_list;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_open != false)
            writer.writeBool(2, this.is_open);
        if (this.taken_parent_quest_reward_list.length)
            writer.writePackedUint32(12, this.taken_parent_quest_reward_list);
        if (this.finished_parent_quest_list.length)
            writer.writePackedUint32(7, this.finished_parent_quest_list);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CityReputationQuestInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CityReputationQuestInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 2:
                    message.is_open = reader.readBool();
                    break;
                case 12:
                    message.taken_parent_quest_reward_list = reader.readPackedUint32();
                    break;
                case 7:
                    message.finished_parent_quest_list = reader.readPackedUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): CityReputationQuestInfo {
        return CityReputationQuestInfo.deserialize(bytes);
    }
}
