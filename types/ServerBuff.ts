/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ServerBuff.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class ServerBuff extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        server_buff_uid?: number;
        server_buff_id?: number;
        server_buff_type?: number;
        instanced_modifier_id?: number;
        is_modifier_added?: boolean;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("server_buff_uid" in data && data.server_buff_uid != undefined) {
                this.server_buff_uid = data.server_buff_uid;
            }
            if ("server_buff_id" in data && data.server_buff_id != undefined) {
                this.server_buff_id = data.server_buff_id;
            }
            if ("server_buff_type" in data && data.server_buff_type != undefined) {
                this.server_buff_type = data.server_buff_type;
            }
            if ("instanced_modifier_id" in data && data.instanced_modifier_id != undefined) {
                this.instanced_modifier_id = data.instanced_modifier_id;
            }
            if ("is_modifier_added" in data && data.is_modifier_added != undefined) {
                this.is_modifier_added = data.is_modifier_added;
            }
        }
    }
    get server_buff_uid() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set server_buff_uid(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get server_buff_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set server_buff_id(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get server_buff_type() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set server_buff_type(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get instanced_modifier_id() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set instanced_modifier_id(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get is_modifier_added() {
        return pb_1.Message.getFieldWithDefault(this, 5, false) as boolean;
    }
    set is_modifier_added(value: boolean) {
        pb_1.Message.setField(this, 5, value);
    }
    static fromObject(data: {
        server_buff_uid?: number;
        server_buff_id?: number;
        server_buff_type?: number;
        instanced_modifier_id?: number;
        is_modifier_added?: boolean;
    }): ServerBuff {
        const message = new ServerBuff({});
        if (data.server_buff_uid != null) {
            message.server_buff_uid = data.server_buff_uid;
        }
        if (data.server_buff_id != null) {
            message.server_buff_id = data.server_buff_id;
        }
        if (data.server_buff_type != null) {
            message.server_buff_type = data.server_buff_type;
        }
        if (data.instanced_modifier_id != null) {
            message.instanced_modifier_id = data.instanced_modifier_id;
        }
        if (data.is_modifier_added != null) {
            message.is_modifier_added = data.is_modifier_added;
        }
        return message;
    }
    toObject() {
        const data: {
            server_buff_uid?: number;
            server_buff_id?: number;
            server_buff_type?: number;
            instanced_modifier_id?: number;
            is_modifier_added?: boolean;
        } = {};
        if (this.server_buff_uid != null) {
            data.server_buff_uid = this.server_buff_uid;
        }
        if (this.server_buff_id != null) {
            data.server_buff_id = this.server_buff_id;
        }
        if (this.server_buff_type != null) {
            data.server_buff_type = this.server_buff_type;
        }
        if (this.instanced_modifier_id != null) {
            data.instanced_modifier_id = this.instanced_modifier_id;
        }
        if (this.is_modifier_added != null) {
            data.is_modifier_added = this.is_modifier_added;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.server_buff_uid != 0)
            writer.writeUint32(1, this.server_buff_uid);
        if (this.server_buff_id != 0)
            writer.writeUint32(2, this.server_buff_id);
        if (this.server_buff_type != 0)
            writer.writeUint32(3, this.server_buff_type);
        if (this.instanced_modifier_id != 0)
            writer.writeUint32(4, this.instanced_modifier_id);
        if (this.is_modifier_added != false)
            writer.writeBool(5, this.is_modifier_added);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ServerBuff {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ServerBuff();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.server_buff_uid = reader.readUint32();
                    break;
                case 2:
                    message.server_buff_id = reader.readUint32();
                    break;
                case 3:
                    message.server_buff_type = reader.readUint32();
                    break;
                case 4:
                    message.instanced_modifier_id = reader.readUint32();
                    break;
                case 5:
                    message.is_modifier_added = reader.readBool();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ServerBuff {
        return ServerBuff.deserialize(bytes);
    }
}
