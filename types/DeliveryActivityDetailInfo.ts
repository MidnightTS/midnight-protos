/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: DeliveryActivityDetailInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class DeliveryActivityDetailInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        day_index?: number;
        is_taken_reward?: boolean;
        finished_delivery_quest_index?: number[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("day_index" in data && data.day_index != undefined) {
                this.day_index = data.day_index;
            }
            if ("is_taken_reward" in data && data.is_taken_reward != undefined) {
                this.is_taken_reward = data.is_taken_reward;
            }
            if ("finished_delivery_quest_index" in data && data.finished_delivery_quest_index != undefined) {
                this.finished_delivery_quest_index = data.finished_delivery_quest_index;
            }
        }
    }
    get day_index() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0) as number;
    }
    set day_index(value: number) {
        pb_1.Message.setField(this, 14, value);
    }
    get is_taken_reward() {
        return pb_1.Message.getFieldWithDefault(this, 13, false) as boolean;
    }
    set is_taken_reward(value: boolean) {
        pb_1.Message.setField(this, 13, value);
    }
    get finished_delivery_quest_index() {
        return pb_1.Message.getFieldWithDefault(this, 4, []) as number[];
    }
    set finished_delivery_quest_index(value: number[]) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        day_index?: number;
        is_taken_reward?: boolean;
        finished_delivery_quest_index?: number[];
    }): DeliveryActivityDetailInfo {
        const message = new DeliveryActivityDetailInfo({});
        if (data.day_index != null) {
            message.day_index = data.day_index;
        }
        if (data.is_taken_reward != null) {
            message.is_taken_reward = data.is_taken_reward;
        }
        if (data.finished_delivery_quest_index != null) {
            message.finished_delivery_quest_index = data.finished_delivery_quest_index;
        }
        return message;
    }
    toObject() {
        const data: {
            day_index?: number;
            is_taken_reward?: boolean;
            finished_delivery_quest_index?: number[];
        } = {};
        if (this.day_index != null) {
            data.day_index = this.day_index;
        }
        if (this.is_taken_reward != null) {
            data.is_taken_reward = this.is_taken_reward;
        }
        if (this.finished_delivery_quest_index != null) {
            data.finished_delivery_quest_index = this.finished_delivery_quest_index;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.day_index != 0)
            writer.writeUint32(14, this.day_index);
        if (this.is_taken_reward != false)
            writer.writeBool(13, this.is_taken_reward);
        if (this.finished_delivery_quest_index.length)
            writer.writePackedUint32(4, this.finished_delivery_quest_index);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DeliveryActivityDetailInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DeliveryActivityDetailInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 14:
                    message.day_index = reader.readUint32();
                    break;
                case 13:
                    message.is_taken_reward = reader.readBool();
                    break;
                case 4:
                    message.finished_delivery_quest_index = reader.readPackedUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): DeliveryActivityDetailInfo {
        return DeliveryActivityDetailInfo.deserialize(bytes);
    }
}
