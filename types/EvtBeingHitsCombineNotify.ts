/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EvtBeingHitsCombineNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./EvtBeingHitInfo";
import * as dependency_2 from "./ForwardType";
import * as pb_1 from "google-protobuf";
export class EvtBeingHitsCombineNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        forward_type?: dependency_2.ForwardType;
        evt_being_hit_info_list?: dependency_1.EvtBeingHitInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [7], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("forward_type" in data && data.forward_type != undefined) {
                this.forward_type = data.forward_type;
            }
            if ("evt_being_hit_info_list" in data && data.evt_being_hit_info_list != undefined) {
                this.evt_being_hit_info_list = data.evt_being_hit_info_list;
            }
        }
    }
    get forward_type() {
        return pb_1.Message.getFieldWithDefault(this, 11, dependency_2.ForwardType.FORWARD_TYPE_LOCAL) as dependency_2.ForwardType;
    }
    set forward_type(value: dependency_2.ForwardType) {
        pb_1.Message.setField(this, 11, value);
    }
    get evt_being_hit_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.EvtBeingHitInfo, 7) as dependency_1.EvtBeingHitInfo[];
    }
    set evt_being_hit_info_list(value: dependency_1.EvtBeingHitInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 7, value);
    }
    static fromObject(data: {
        forward_type?: dependency_2.ForwardType;
        evt_being_hit_info_list?: ReturnType<typeof dependency_1.EvtBeingHitInfo.prototype.toObject>[];
    }): EvtBeingHitsCombineNotify {
        const message = new EvtBeingHitsCombineNotify({});
        if (data.forward_type != null) {
            message.forward_type = data.forward_type;
        }
        if (data.evt_being_hit_info_list != null) {
            message.evt_being_hit_info_list = data.evt_being_hit_info_list.map(item => dependency_1.EvtBeingHitInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            forward_type?: dependency_2.ForwardType;
            evt_being_hit_info_list?: ReturnType<typeof dependency_1.EvtBeingHitInfo.prototype.toObject>[];
        } = {};
        if (this.forward_type != null) {
            data.forward_type = this.forward_type;
        }
        if (this.evt_being_hit_info_list != null) {
            data.evt_being_hit_info_list = this.evt_being_hit_info_list.map((item: dependency_1.EvtBeingHitInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.forward_type != dependency_2.ForwardType.FORWARD_TYPE_LOCAL)
            writer.writeEnum(11, this.forward_type);
        if (this.evt_being_hit_info_list.length)
            writer.writeRepeatedMessage(7, this.evt_being_hit_info_list, (item: dependency_1.EvtBeingHitInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EvtBeingHitsCombineNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EvtBeingHitsCombineNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 11:
                    message.forward_type = reader.readEnum();
                    break;
                case 7:
                    reader.readMessage(message.evt_being_hit_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_1.EvtBeingHitInfo.deserialize(reader), dependency_1.EvtBeingHitInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): EvtBeingHitsCombineNotify {
        return EvtBeingHitsCombineNotify.deserialize(bytes);
    }
}
