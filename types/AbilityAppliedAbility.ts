/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: AbilityAppliedAbility.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./AbilityScalarValueEntry";
import * as dependency_2 from "./AbilityString";
import * as pb_1 from "google-protobuf";
export class AbilityAppliedAbility extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        ability_name?: dependency_2.AbilityString;
        ability_override?: dependency_2.AbilityString;
        override_map?: dependency_1.AbilityScalarValueEntry[];
        instanced_ability_id?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("ability_name" in data && data.ability_name != undefined) {
                this.ability_name = data.ability_name;
            }
            if ("ability_override" in data && data.ability_override != undefined) {
                this.ability_override = data.ability_override;
            }
            if ("override_map" in data && data.override_map != undefined) {
                this.override_map = data.override_map;
            }
            if ("instanced_ability_id" in data && data.instanced_ability_id != undefined) {
                this.instanced_ability_id = data.instanced_ability_id;
            }
        }
    }
    get ability_name() {
        return pb_1.Message.getWrapperField(this, dependency_2.AbilityString, 1) as dependency_2.AbilityString;
    }
    set ability_name(value: dependency_2.AbilityString) {
        pb_1.Message.setWrapperField(this, 1, value);
    }
    get has_ability_name() {
        return pb_1.Message.getField(this, 1) != null;
    }
    get ability_override() {
        return pb_1.Message.getWrapperField(this, dependency_2.AbilityString, 2) as dependency_2.AbilityString;
    }
    set ability_override(value: dependency_2.AbilityString) {
        pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_ability_override() {
        return pb_1.Message.getField(this, 2) != null;
    }
    get override_map() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.AbilityScalarValueEntry, 3) as dependency_1.AbilityScalarValueEntry[];
    }
    set override_map(value: dependency_1.AbilityScalarValueEntry[]) {
        pb_1.Message.setRepeatedWrapperField(this, 3, value);
    }
    get instanced_ability_id() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set instanced_ability_id(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        ability_name?: ReturnType<typeof dependency_2.AbilityString.prototype.toObject>;
        ability_override?: ReturnType<typeof dependency_2.AbilityString.prototype.toObject>;
        override_map?: ReturnType<typeof dependency_1.AbilityScalarValueEntry.prototype.toObject>[];
        instanced_ability_id?: number;
    }): AbilityAppliedAbility {
        const message = new AbilityAppliedAbility({});
        if (data.ability_name != null) {
            message.ability_name = dependency_2.AbilityString.fromObject(data.ability_name);
        }
        if (data.ability_override != null) {
            message.ability_override = dependency_2.AbilityString.fromObject(data.ability_override);
        }
        if (data.override_map != null) {
            message.override_map = data.override_map.map(item => dependency_1.AbilityScalarValueEntry.fromObject(item));
        }
        if (data.instanced_ability_id != null) {
            message.instanced_ability_id = data.instanced_ability_id;
        }
        return message;
    }
    toObject() {
        const data: {
            ability_name?: ReturnType<typeof dependency_2.AbilityString.prototype.toObject>;
            ability_override?: ReturnType<typeof dependency_2.AbilityString.prototype.toObject>;
            override_map?: ReturnType<typeof dependency_1.AbilityScalarValueEntry.prototype.toObject>[];
            instanced_ability_id?: number;
        } = {};
        if (this.ability_name != null) {
            data.ability_name = this.ability_name.toObject();
        }
        if (this.ability_override != null) {
            data.ability_override = this.ability_override.toObject();
        }
        if (this.override_map != null) {
            data.override_map = this.override_map.map((item: dependency_1.AbilityScalarValueEntry) => item.toObject());
        }
        if (this.instanced_ability_id != null) {
            data.instanced_ability_id = this.instanced_ability_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_ability_name)
            writer.writeMessage(1, this.ability_name, () => this.ability_name.serialize(writer));
        if (this.has_ability_override)
            writer.writeMessage(2, this.ability_override, () => this.ability_override.serialize(writer));
        if (this.override_map.length)
            writer.writeRepeatedMessage(3, this.override_map, (item: dependency_1.AbilityScalarValueEntry) => item.serialize(writer));
        if (this.instanced_ability_id != 0)
            writer.writeUint32(4, this.instanced_ability_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AbilityAppliedAbility {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AbilityAppliedAbility();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.ability_name, () => message.ability_name = dependency_2.AbilityString.deserialize(reader));
                    break;
                case 2:
                    reader.readMessage(message.ability_override, () => message.ability_override = dependency_2.AbilityString.deserialize(reader));
                    break;
                case 3:
                    reader.readMessage(message.override_map, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_1.AbilityScalarValueEntry.deserialize(reader), dependency_1.AbilityScalarValueEntry));
                    break;
                case 4:
                    message.instanced_ability_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): AbilityAppliedAbility {
        return AbilityAppliedAbility.deserialize(bytes);
    }
}
