"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _CoopChapter_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoopChapter = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CoopChapter.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./CoopCg");
const dependency_2 = require("./CoopPoint");
const dependency_3 = require("./CoopReward");
const pb_1 = require("google-protobuf");
class CoopChapter extends pb_1.Message {
    constructor(data) {
        super();
        _CoopChapter_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1, 11, 10, 5, 12], __classPrivateFieldGet(this, _CoopChapter_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("coop_cg_list" in data && data.coop_cg_list != undefined) {
                this.coop_cg_list = data.coop_cg_list;
            }
            if ("id" in data && data.id != undefined) {
                this.id = data.id;
            }
            if ("coop_point_list" in data && data.coop_point_list != undefined) {
                this.coop_point_list = data.coop_point_list;
            }
            if ("finish_dialog_list" in data && data.finish_dialog_list != undefined) {
                this.finish_dialog_list = data.finish_dialog_list;
            }
            if ("finished_end_count" in data && data.finished_end_count != undefined) {
                this.finished_end_count = data.finished_end_count;
            }
            if ("total_end_count" in data && data.total_end_count != undefined) {
                this.total_end_count = data.total_end_count;
            }
            if ("coop_reward_list" in data && data.coop_reward_list != undefined) {
                this.coop_reward_list = data.coop_reward_list;
            }
            if ("lock_reason_list" in data && data.lock_reason_list != undefined) {
                this.lock_reason_list = data.lock_reason_list;
            }
            if ("state" in data && data.state != undefined) {
                this.state = data.state;
            }
            if ("seen_ending_map" in data && data.seen_ending_map != undefined) {
                this.seen_ending_map = data.seen_ending_map;
            }
        }
        if (!this.seen_ending_map)
            this.seen_ending_map = new Map();
    }
    get coop_cg_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.CoopCg, 1);
    }
    set coop_cg_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    get id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set id(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get coop_point_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.CoopPoint, 11);
    }
    set coop_point_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 11, value);
    }
    get finish_dialog_list() {
        return pb_1.Message.getFieldWithDefault(this, 10, []);
    }
    set finish_dialog_list(value) {
        pb_1.Message.setField(this, 10, value);
    }
    get finished_end_count() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0);
    }
    set finished_end_count(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get total_end_count() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set total_end_count(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get coop_reward_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_3.CoopReward, 5);
    }
    set coop_reward_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 5, value);
    }
    get lock_reason_list() {
        return pb_1.Message.getFieldWithDefault(this, 12, []);
    }
    set lock_reason_list(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get state() {
        return pb_1.Message.getFieldWithDefault(this, 4, CoopChapter.State.STATE_CLOSE);
    }
    set state(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get seen_ending_map() {
        return pb_1.Message.getField(this, 9);
    }
    set seen_ending_map(value) {
        pb_1.Message.setField(this, 9, value);
    }
    static fromObject(data) {
        const message = new CoopChapter({});
        if (data.coop_cg_list != null) {
            message.coop_cg_list = data.coop_cg_list.map(item => dependency_1.CoopCg.fromObject(item));
        }
        if (data.id != null) {
            message.id = data.id;
        }
        if (data.coop_point_list != null) {
            message.coop_point_list = data.coop_point_list.map(item => dependency_2.CoopPoint.fromObject(item));
        }
        if (data.finish_dialog_list != null) {
            message.finish_dialog_list = data.finish_dialog_list;
        }
        if (data.finished_end_count != null) {
            message.finished_end_count = data.finished_end_count;
        }
        if (data.total_end_count != null) {
            message.total_end_count = data.total_end_count;
        }
        if (data.coop_reward_list != null) {
            message.coop_reward_list = data.coop_reward_list.map(item => dependency_3.CoopReward.fromObject(item));
        }
        if (data.lock_reason_list != null) {
            message.lock_reason_list = data.lock_reason_list;
        }
        if (data.state != null) {
            message.state = data.state;
        }
        if (typeof data.seen_ending_map == "object") {
            message.seen_ending_map = new Map(Object.entries(data.seen_ending_map).map(([key, value]) => [Number(key), value]));
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.coop_cg_list != null) {
            data.coop_cg_list = this.coop_cg_list.map((item) => item.toObject());
        }
        if (this.id != null) {
            data.id = this.id;
        }
        if (this.coop_point_list != null) {
            data.coop_point_list = this.coop_point_list.map((item) => item.toObject());
        }
        if (this.finish_dialog_list != null) {
            data.finish_dialog_list = this.finish_dialog_list;
        }
        if (this.finished_end_count != null) {
            data.finished_end_count = this.finished_end_count;
        }
        if (this.total_end_count != null) {
            data.total_end_count = this.total_end_count;
        }
        if (this.coop_reward_list != null) {
            data.coop_reward_list = this.coop_reward_list.map((item) => item.toObject());
        }
        if (this.lock_reason_list != null) {
            data.lock_reason_list = this.lock_reason_list;
        }
        if (this.state != null) {
            data.state = this.state;
        }
        if (this.seen_ending_map.size > 0) {
            data.seen_ending_map = (Object.fromEntries)(this.seen_ending_map);
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.coop_cg_list.length)
            writer.writeRepeatedMessage(1, this.coop_cg_list, (item) => item.serialize(writer));
        if (this.id != 0)
            writer.writeUint32(2, this.id);
        if (this.coop_point_list.length)
            writer.writeRepeatedMessage(11, this.coop_point_list, (item) => item.serialize(writer));
        if (this.finish_dialog_list.length)
            writer.writePackedUint32(10, this.finish_dialog_list);
        if (this.finished_end_count != 0)
            writer.writeUint32(14, this.finished_end_count);
        if (this.total_end_count != 0)
            writer.writeUint32(7, this.total_end_count);
        if (this.coop_reward_list.length)
            writer.writeRepeatedMessage(5, this.coop_reward_list, (item) => item.serialize(writer));
        if (this.lock_reason_list.length)
            writer.writePackedUint32(12, this.lock_reason_list);
        if (this.state != CoopChapter.State.STATE_CLOSE)
            writer.writeEnum(4, this.state);
        for (const [key, value] of this.seen_ending_map) {
            writer.writeMessage(9, this.seen_ending_map, () => {
                writer.writeUint32(1, key);
                writer.writeUint32(2, value);
            });
        }
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CoopChapter();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.coop_cg_list, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.CoopCg.deserialize(reader), dependency_1.CoopCg));
                    break;
                case 2:
                    message.id = reader.readUint32();
                    break;
                case 11:
                    reader.readMessage(message.coop_point_list, () => pb_1.Message.addToRepeatedWrapperField(message, 11, dependency_2.CoopPoint.deserialize(reader), dependency_2.CoopPoint));
                    break;
                case 10:
                    message.finish_dialog_list = reader.readPackedUint32();
                    break;
                case 14:
                    message.finished_end_count = reader.readUint32();
                    break;
                case 7:
                    message.total_end_count = reader.readUint32();
                    break;
                case 5:
                    reader.readMessage(message.coop_reward_list, () => pb_1.Message.addToRepeatedWrapperField(message, 5, dependency_3.CoopReward.deserialize(reader), dependency_3.CoopReward));
                    break;
                case 12:
                    message.lock_reason_list = reader.readPackedUint32();
                    break;
                case 4:
                    message.state = reader.readEnum();
                    break;
                case 9:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.seen_ending_map, reader, reader.readUint32, reader.readUint32));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return CoopChapter.deserialize(bytes);
    }
}
exports.CoopChapter = CoopChapter;
_CoopChapter_one_of_decls = new WeakMap();
(function (CoopChapter) {
    let State;
    (function (State) {
        State[State["STATE_CLOSE"] = 0] = "STATE_CLOSE";
        State[State["STATE_COND_NOT_MEET"] = 1] = "STATE_COND_NOT_MEET";
        State[State["STATE_COND_MEET"] = 2] = "STATE_COND_MEET";
        State[State["STATE_ACCEPT"] = 3] = "STATE_ACCEPT";
    })(State = CoopChapter.State || (CoopChapter.State = {}));
})(CoopChapter = exports.CoopChapter || (exports.CoopChapter = {}));
