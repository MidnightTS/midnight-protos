// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_sign_in.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ItemParam } from "./define";
/**
 * @generated from protobuf message com.midnights.game.OpActivityTagBriefInfo
 */
export interface OpActivityTagBriefInfo {
    /**
     * @generated from protobuf field: optional uint32 config_id = 2;
     */
    configId?: number;
    /**
     * @generated from protobuf field: optional bool has_reward = 3;
     */
    hasReward?: boolean;
    /**
     * @generated from protobuf field: optional uint32 op_activity_type = 11;
     */
    opActivityType?: number;
}
/**
 * @generated from protobuf message com.midnights.game.OpActivityStateNotify
 */
export interface OpActivityStateNotify {
    /**
     * @generated from protobuf field: repeated uint32 finished_bonus_activity_id_list = 14;
     */
    finishedBonusActivityIdList: number[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.OpActivityTagBriefInfo opened_op_activity_info_list = 13;
     */
    openedOpActivityInfoList: OpActivityTagBriefInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.OpActivityStateNotify.CmdId
 */
export enum OpActivityStateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2572;
     */
    CMD_ID = 2572,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SignInData
 */
export interface SignInData {
    /**
     * @generated from protobuf field: optional uint32 day_count = 14;
     */
    dayCount?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam reward_item_list = 5;
     */
    rewardItemList: ItemParam[];
}
/**
 * @generated from protobuf message com.midnights.game.SignInInfo
 */
export interface SignInInfo {
    /**
     * @generated from protobuf field: optional bool is_cond_satisfied = 7;
     */
    isCondSatisfied?: boolean;
    /**
     * @generated from protobuf field: repeated uint32 reward_day_list = 15;
     */
    rewardDayList: number[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.SignInData signin_data_list = 12;
     */
    signinDataList: SignInData[];
    /**
     * @generated from protobuf field: optional uint32 config_id = 8;
     */
    configId?: number;
    /**
     * @generated from protobuf field: optional uint32 sign_in_count = 2;
     */
    signInCount?: number;
    /**
     * @generated from protobuf field: optional uint32 schedule_id = 3;
     */
    scheduleId?: number;
    /**
     * @generated from protobuf field: optional uint32 end_time = 13;
     */
    endTime?: number;
    /**
     * @generated from protobuf field: optional uint32 last_sign_in_time = 6;
     */
    lastSignInTime?: number;
    /**
     * @generated from protobuf field: optional uint32 begin_time = 5;
     */
    beginTime?: number;
}
/**
 * @generated from protobuf message com.midnights.game.SignInInfoReq
 */
export interface SignInInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.SignInInfoReq.CmdId
 */
export enum SignInInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2512;
     */
    CMD_ID = 2512,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SignInInfoRsp
 */
export interface SignInInfoRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.SignInInfo sign_in_info_list = 1;
     */
    signInInfoList: SignInInfo[];
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SignInInfoRsp.CmdId
 */
export enum SignInInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2535;
     */
    CMD_ID = 2535,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetSignInRewardReq
 */
export interface GetSignInRewardReq {
    /**
     * @generated from protobuf field: optional uint32 schedule_id = 10;
     */
    scheduleId?: number;
    /**
     * @generated from protobuf field: optional uint32 reward_day = 3;
     */
    rewardDay?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetSignInRewardReq.CmdId
 */
export enum GetSignInRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2507;
     */
    CMD_ID = 2507,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetSignInRewardRsp
 */
export interface GetSignInRewardRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.SignInInfo sign_in_info = 14;
     */
    signInInfo?: SignInInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.GetSignInRewardRsp.CmdId
 */
export enum GetSignInRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2521;
     */
    CMD_ID = 2521,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.BonusActivityInfo
 */
export interface BonusActivityInfo {
    /**
     * @generated from protobuf field: optional uint32 bonus_activity_id = 6;
     */
    bonusActivityId?: number;
    /**
     * @generated from protobuf field: optional uint32 state = 3;
     */
    state?: number;
}
/**
 * @generated from protobuf message com.midnights.game.BonusActivityUpdateNotify
 */
export interface BonusActivityUpdateNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.BonusActivityInfo bonus_activity_info_list = 8;
     */
    bonusActivityInfoList: BonusActivityInfo[];
}
/**
 * @generated from protobuf enum com.midnights.game.BonusActivityUpdateNotify.CmdId
 */
export enum BonusActivityUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2575;
     */
    CMD_ID = 2575,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.BonusActivityInfoReq
 */
export interface BonusActivityInfoReq {
}
/**
 * @generated from protobuf enum com.midnights.game.BonusActivityInfoReq.CmdId
 */
export enum BonusActivityInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2548;
     */
    CMD_ID = 2548,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.BonusActivityInfoRsp
 */
export interface BonusActivityInfoRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.BonusActivityInfo bonus_activity_info_list = 2;
     */
    bonusActivityInfoList: BonusActivityInfo[];
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.BonusActivityInfoRsp.CmdId
 */
export enum BonusActivityInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2597;
     */
    CMD_ID = 2597,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetBonusActivityRewardReq
 */
export interface GetBonusActivityRewardReq {
    /**
     * @generated from protobuf field: optional uint32 bonus_activity_id = 14;
     */
    bonusActivityId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetBonusActivityRewardReq.CmdId
 */
export enum GetBonusActivityRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2581;
     */
    CMD_ID = 2581,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetBonusActivityRewardRsp
 */
export interface GetBonusActivityRewardRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.BonusActivityInfo bonus_activity_info_list = 4;
     */
    bonusActivityInfoList?: BonusActivityInfo;
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetBonusActivityRewardRsp.CmdId
 */
export enum GetBonusActivityRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2505;
     */
    CMD_ID = 2505,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class OpActivityTagBriefInfo$Type extends MessageType<OpActivityTagBriefInfo> {
    constructor() {
        super("com.midnights.game.OpActivityTagBriefInfo", [
            { no: 2, name: "config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "has_reward", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "op_activity_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<OpActivityTagBriefInfo>): OpActivityTagBriefInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OpActivityTagBriefInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OpActivityTagBriefInfo): OpActivityTagBriefInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 config_id */ 2:
                    message.configId = reader.uint32();
                    break;
                case /* optional bool has_reward */ 3:
                    message.hasReward = reader.bool();
                    break;
                case /* optional uint32 op_activity_type */ 11:
                    message.opActivityType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OpActivityTagBriefInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 config_id = 2; */
        if (message.configId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.configId);
        /* optional bool has_reward = 3; */
        if (message.hasReward !== undefined)
            writer.tag(3, WireType.Varint).bool(message.hasReward);
        /* optional uint32 op_activity_type = 11; */
        if (message.opActivityType !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.opActivityType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OpActivityTagBriefInfo
 */
export const OpActivityTagBriefInfo = new OpActivityTagBriefInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OpActivityStateNotify$Type extends MessageType<OpActivityStateNotify> {
    constructor() {
        super("com.midnights.game.OpActivityStateNotify", [
            { no: 14, name: "finished_bonus_activity_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "opened_op_activity_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OpActivityTagBriefInfo }
        ]);
    }
    create(value?: PartialMessage<OpActivityStateNotify>): OpActivityStateNotify {
        const message = { finishedBonusActivityIdList: [], openedOpActivityInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<OpActivityStateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: OpActivityStateNotify): OpActivityStateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 finished_bonus_activity_id_list */ 14:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.finishedBonusActivityIdList.push(reader.uint32());
                    else
                        message.finishedBonusActivityIdList.push(reader.uint32());
                    break;
                case /* repeated com.midnights.game.OpActivityTagBriefInfo opened_op_activity_info_list */ 13:
                    message.openedOpActivityInfoList.push(OpActivityTagBriefInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: OpActivityStateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 finished_bonus_activity_id_list = 14; */
        if (message.finishedBonusActivityIdList.length) {
            writer.tag(14, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.finishedBonusActivityIdList.length; i++)
                writer.uint32(message.finishedBonusActivityIdList[i]);
            writer.join();
        }
        /* repeated com.midnights.game.OpActivityTagBriefInfo opened_op_activity_info_list = 13; */
        for (let i = 0; i < message.openedOpActivityInfoList.length; i++)
            OpActivityTagBriefInfo.internalBinaryWrite(message.openedOpActivityInfoList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.OpActivityStateNotify
 */
export const OpActivityStateNotify = new OpActivityStateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignInData$Type extends MessageType<SignInData> {
    constructor() {
        super("com.midnights.game.SignInData", [
            { no: 14, name: "day_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "reward_item_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ItemParam }
        ]);
    }
    create(value?: PartialMessage<SignInData>): SignInData {
        const message = { rewardItemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SignInData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SignInData): SignInData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 day_count */ 14:
                    message.dayCount = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ItemParam reward_item_list */ 5:
                    message.rewardItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SignInData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 day_count = 14; */
        if (message.dayCount !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.dayCount);
        /* repeated com.midnights.game.ItemParam reward_item_list = 5; */
        for (let i = 0; i < message.rewardItemList.length; i++)
            ItemParam.internalBinaryWrite(message.rewardItemList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SignInData
 */
export const SignInData = new SignInData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignInInfo$Type extends MessageType<SignInInfo> {
    constructor() {
        super("com.midnights.game.SignInInfo", [
            { no: 7, name: "is_cond_satisfied", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "reward_day_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "signin_data_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SignInData },
            { no: 8, name: "config_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "sign_in_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "schedule_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "end_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "last_sign_in_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "begin_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<SignInInfo>): SignInInfo {
        const message = { rewardDayList: [], signinDataList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SignInInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SignInInfo): SignInInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_cond_satisfied */ 7:
                    message.isCondSatisfied = reader.bool();
                    break;
                case /* repeated uint32 reward_day_list */ 15:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.rewardDayList.push(reader.uint32());
                    else
                        message.rewardDayList.push(reader.uint32());
                    break;
                case /* repeated com.midnights.game.SignInData signin_data_list */ 12:
                    message.signinDataList.push(SignInData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 config_id */ 8:
                    message.configId = reader.uint32();
                    break;
                case /* optional uint32 sign_in_count */ 2:
                    message.signInCount = reader.uint32();
                    break;
                case /* optional uint32 schedule_id */ 3:
                    message.scheduleId = reader.uint32();
                    break;
                case /* optional uint32 end_time */ 13:
                    message.endTime = reader.uint32();
                    break;
                case /* optional uint32 last_sign_in_time */ 6:
                    message.lastSignInTime = reader.uint32();
                    break;
                case /* optional uint32 begin_time */ 5:
                    message.beginTime = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SignInInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_cond_satisfied = 7; */
        if (message.isCondSatisfied !== undefined)
            writer.tag(7, WireType.Varint).bool(message.isCondSatisfied);
        /* repeated uint32 reward_day_list = 15; */
        if (message.rewardDayList.length) {
            writer.tag(15, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.rewardDayList.length; i++)
                writer.uint32(message.rewardDayList[i]);
            writer.join();
        }
        /* repeated com.midnights.game.SignInData signin_data_list = 12; */
        for (let i = 0; i < message.signinDataList.length; i++)
            SignInData.internalBinaryWrite(message.signinDataList[i], writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 config_id = 8; */
        if (message.configId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.configId);
        /* optional uint32 sign_in_count = 2; */
        if (message.signInCount !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.signInCount);
        /* optional uint32 schedule_id = 3; */
        if (message.scheduleId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.scheduleId);
        /* optional uint32 end_time = 13; */
        if (message.endTime !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.endTime);
        /* optional uint32 last_sign_in_time = 6; */
        if (message.lastSignInTime !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.lastSignInTime);
        /* optional uint32 begin_time = 5; */
        if (message.beginTime !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.beginTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SignInInfo
 */
export const SignInInfo = new SignInInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignInInfoReq$Type extends MessageType<SignInInfoReq> {
    constructor() {
        super("com.midnights.game.SignInInfoReq", []);
    }
    create(value?: PartialMessage<SignInInfoReq>): SignInInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SignInInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SignInInfoReq): SignInInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: SignInInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SignInInfoReq
 */
export const SignInInfoReq = new SignInInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SignInInfoRsp$Type extends MessageType<SignInInfoRsp> {
    constructor() {
        super("com.midnights.game.SignInInfoRsp", [
            { no: 1, name: "sign_in_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SignInInfo },
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SignInInfoRsp>): SignInInfoRsp {
        const message = { signInInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SignInInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SignInInfoRsp): SignInInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.SignInInfo sign_in_info_list */ 1:
                    message.signInInfoList.push(SignInInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SignInInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.SignInInfo sign_in_info_list = 1; */
        for (let i = 0; i < message.signInInfoList.length; i++)
            SignInInfo.internalBinaryWrite(message.signInInfoList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SignInInfoRsp
 */
export const SignInInfoRsp = new SignInInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSignInRewardReq$Type extends MessageType<GetSignInRewardReq> {
    constructor() {
        super("com.midnights.game.GetSignInRewardReq", [
            { no: 10, name: "schedule_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "reward_day", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetSignInRewardReq>): GetSignInRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetSignInRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetSignInRewardReq): GetSignInRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 schedule_id */ 10:
                    message.scheduleId = reader.uint32();
                    break;
                case /* optional uint32 reward_day */ 3:
                    message.rewardDay = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetSignInRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 schedule_id = 10; */
        if (message.scheduleId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.scheduleId);
        /* optional uint32 reward_day = 3; */
        if (message.rewardDay !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.rewardDay);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetSignInRewardReq
 */
export const GetSignInRewardReq = new GetSignInRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetSignInRewardRsp$Type extends MessageType<GetSignInRewardRsp> {
    constructor() {
        super("com.midnights.game.GetSignInRewardRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "sign_in_info", kind: "message", T: () => SignInInfo }
        ]);
    }
    create(value?: PartialMessage<GetSignInRewardRsp>): GetSignInRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetSignInRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetSignInRewardRsp): GetSignInRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.SignInInfo sign_in_info */ 14:
                    message.signInInfo = SignInInfo.internalBinaryRead(reader, reader.uint32(), options, message.signInInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetSignInRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.SignInInfo sign_in_info = 14; */
        if (message.signInInfo)
            SignInInfo.internalBinaryWrite(message.signInInfo, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetSignInRewardRsp
 */
export const GetSignInRewardRsp = new GetSignInRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BonusActivityInfo$Type extends MessageType<BonusActivityInfo> {
    constructor() {
        super("com.midnights.game.BonusActivityInfo", [
            { no: 6, name: "bonus_activity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "state", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BonusActivityInfo>): BonusActivityInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BonusActivityInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BonusActivityInfo): BonusActivityInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bonus_activity_id */ 6:
                    message.bonusActivityId = reader.uint32();
                    break;
                case /* optional uint32 state */ 3:
                    message.state = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BonusActivityInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bonus_activity_id = 6; */
        if (message.bonusActivityId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.bonusActivityId);
        /* optional uint32 state = 3; */
        if (message.state !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.state);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BonusActivityInfo
 */
export const BonusActivityInfo = new BonusActivityInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BonusActivityUpdateNotify$Type extends MessageType<BonusActivityUpdateNotify> {
    constructor() {
        super("com.midnights.game.BonusActivityUpdateNotify", [
            { no: 8, name: "bonus_activity_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BonusActivityInfo }
        ]);
    }
    create(value?: PartialMessage<BonusActivityUpdateNotify>): BonusActivityUpdateNotify {
        const message = { bonusActivityInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BonusActivityUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BonusActivityUpdateNotify): BonusActivityUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.BonusActivityInfo bonus_activity_info_list */ 8:
                    message.bonusActivityInfoList.push(BonusActivityInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BonusActivityUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.BonusActivityInfo bonus_activity_info_list = 8; */
        for (let i = 0; i < message.bonusActivityInfoList.length; i++)
            BonusActivityInfo.internalBinaryWrite(message.bonusActivityInfoList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BonusActivityUpdateNotify
 */
export const BonusActivityUpdateNotify = new BonusActivityUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BonusActivityInfoReq$Type extends MessageType<BonusActivityInfoReq> {
    constructor() {
        super("com.midnights.game.BonusActivityInfoReq", []);
    }
    create(value?: PartialMessage<BonusActivityInfoReq>): BonusActivityInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BonusActivityInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BonusActivityInfoReq): BonusActivityInfoReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: BonusActivityInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BonusActivityInfoReq
 */
export const BonusActivityInfoReq = new BonusActivityInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BonusActivityInfoRsp$Type extends MessageType<BonusActivityInfoRsp> {
    constructor() {
        super("com.midnights.game.BonusActivityInfoRsp", [
            { no: 2, name: "bonus_activity_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => BonusActivityInfo },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<BonusActivityInfoRsp>): BonusActivityInfoRsp {
        const message = { bonusActivityInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BonusActivityInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BonusActivityInfoRsp): BonusActivityInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.BonusActivityInfo bonus_activity_info_list */ 2:
                    message.bonusActivityInfoList.push(BonusActivityInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BonusActivityInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.BonusActivityInfo bonus_activity_info_list = 2; */
        for (let i = 0; i < message.bonusActivityInfoList.length; i++)
            BonusActivityInfo.internalBinaryWrite(message.bonusActivityInfoList[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BonusActivityInfoRsp
 */
export const BonusActivityInfoRsp = new BonusActivityInfoRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBonusActivityRewardReq$Type extends MessageType<GetBonusActivityRewardReq> {
    constructor() {
        super("com.midnights.game.GetBonusActivityRewardReq", [
            { no: 14, name: "bonus_activity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetBonusActivityRewardReq>): GetBonusActivityRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetBonusActivityRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetBonusActivityRewardReq): GetBonusActivityRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bonus_activity_id */ 14:
                    message.bonusActivityId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetBonusActivityRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bonus_activity_id = 14; */
        if (message.bonusActivityId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.bonusActivityId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetBonusActivityRewardReq
 */
export const GetBonusActivityRewardReq = new GetBonusActivityRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetBonusActivityRewardRsp$Type extends MessageType<GetBonusActivityRewardRsp> {
    constructor() {
        super("com.midnights.game.GetBonusActivityRewardRsp", [
            { no: 4, name: "bonus_activity_info_list", kind: "message", T: () => BonusActivityInfo },
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetBonusActivityRewardRsp>): GetBonusActivityRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetBonusActivityRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetBonusActivityRewardRsp): GetBonusActivityRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.BonusActivityInfo bonus_activity_info_list */ 4:
                    message.bonusActivityInfoList = BonusActivityInfo.internalBinaryRead(reader, reader.uint32(), options, message.bonusActivityInfoList);
                    break;
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetBonusActivityRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.BonusActivityInfo bonus_activity_info_list = 4; */
        if (message.bonusActivityInfoList)
            BonusActivityInfo.internalBinaryWrite(message.bonusActivityInfoList, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetBonusActivityRewardRsp
 */
export const GetBonusActivityRewardRsp = new GetBonusActivityRewardRsp$Type();
