/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EvtEntityRenderersChangedNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./EntityRendererChangedInfo";
import * as dependency_2 from "./ForwardType";
import * as pb_1 from "google-protobuf";
export class EvtEntityRenderersChangedNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        forward_type?: dependency_2.ForwardType;
        is_server_cache?: boolean;
        renderer_changed_info?: dependency_1.EntityRendererChangedInfo;
        entity_id?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("forward_type" in data && data.forward_type != undefined) {
                this.forward_type = data.forward_type;
            }
            if ("is_server_cache" in data && data.is_server_cache != undefined) {
                this.is_server_cache = data.is_server_cache;
            }
            if ("renderer_changed_info" in data && data.renderer_changed_info != undefined) {
                this.renderer_changed_info = data.renderer_changed_info;
            }
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
        }
    }
    get forward_type() {
        return pb_1.Message.getFieldWithDefault(this, 8, dependency_2.ForwardType.FORWARD_TYPE_LOCAL) as dependency_2.ForwardType;
    }
    set forward_type(value: dependency_2.ForwardType) {
        pb_1.Message.setField(this, 8, value);
    }
    get is_server_cache() {
        return pb_1.Message.getFieldWithDefault(this, 3, false) as boolean;
    }
    set is_server_cache(value: boolean) {
        pb_1.Message.setField(this, 3, value);
    }
    get renderer_changed_info() {
        return pb_1.Message.getWrapperField(this, dependency_1.EntityRendererChangedInfo, 5) as dependency_1.EntityRendererChangedInfo;
    }
    set renderer_changed_info(value: dependency_1.EntityRendererChangedInfo) {
        pb_1.Message.setWrapperField(this, 5, value);
    }
    get has_renderer_changed_info() {
        return pb_1.Message.getField(this, 5) != null;
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set entity_id(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data: {
        forward_type?: dependency_2.ForwardType;
        is_server_cache?: boolean;
        renderer_changed_info?: ReturnType<typeof dependency_1.EntityRendererChangedInfo.prototype.toObject>;
        entity_id?: number;
    }): EvtEntityRenderersChangedNotify {
        const message = new EvtEntityRenderersChangedNotify({});
        if (data.forward_type != null) {
            message.forward_type = data.forward_type;
        }
        if (data.is_server_cache != null) {
            message.is_server_cache = data.is_server_cache;
        }
        if (data.renderer_changed_info != null) {
            message.renderer_changed_info = dependency_1.EntityRendererChangedInfo.fromObject(data.renderer_changed_info);
        }
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        return message;
    }
    toObject() {
        const data: {
            forward_type?: dependency_2.ForwardType;
            is_server_cache?: boolean;
            renderer_changed_info?: ReturnType<typeof dependency_1.EntityRendererChangedInfo.prototype.toObject>;
            entity_id?: number;
        } = {};
        if (this.forward_type != null) {
            data.forward_type = this.forward_type;
        }
        if (this.is_server_cache != null) {
            data.is_server_cache = this.is_server_cache;
        }
        if (this.renderer_changed_info != null) {
            data.renderer_changed_info = this.renderer_changed_info.toObject();
        }
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.forward_type != dependency_2.ForwardType.FORWARD_TYPE_LOCAL)
            writer.writeEnum(8, this.forward_type);
        if (this.is_server_cache != false)
            writer.writeBool(3, this.is_server_cache);
        if (this.has_renderer_changed_info)
            writer.writeMessage(5, this.renderer_changed_info, () => this.renderer_changed_info.serialize(writer));
        if (this.entity_id != 0)
            writer.writeUint32(15, this.entity_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EvtEntityRenderersChangedNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EvtEntityRenderersChangedNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.forward_type = reader.readEnum();
                    break;
                case 3:
                    message.is_server_cache = reader.readBool();
                    break;
                case 5:
                    reader.readMessage(message.renderer_changed_info, () => message.renderer_changed_info = dependency_1.EntityRendererChangedInfo.deserialize(reader));
                    break;
                case 15:
                    message.entity_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): EvtEntityRenderersChangedNotify {
        return EvtEntityRenderersChangedNotify.deserialize(bytes);
    }
}
