/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: DropItemReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./StoreType";
import * as dependency_2 from "./Vector";
import * as pb_1 from "google-protobuf";
export class DropItemReq extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        pos?: dependency_2.Vector;
        store_type?: dependency_1.StoreType;
        count?: number;
        guid?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("pos" in data && data.pos != undefined) {
                this.pos = data.pos;
            }
            if ("store_type" in data && data.store_type != undefined) {
                this.store_type = data.store_type;
            }
            if ("count" in data && data.count != undefined) {
                this.count = data.count;
            }
            if ("guid" in data && data.guid != undefined) {
                this.guid = data.guid;
            }
        }
    }
    get pos() {
        return pb_1.Message.getWrapperField(this, dependency_2.Vector, 11) as dependency_2.Vector;
    }
    set pos(value: dependency_2.Vector) {
        pb_1.Message.setWrapperField(this, 11, value);
    }
    get has_pos() {
        return pb_1.Message.getField(this, 11) != null;
    }
    get store_type() {
        return pb_1.Message.getFieldWithDefault(this, 1, dependency_1.StoreType.STORE_TYPE_NONE) as dependency_1.StoreType;
    }
    set store_type(value: dependency_1.StoreType) {
        pb_1.Message.setField(this, 1, value);
    }
    get count() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set count(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get guid() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0) as number;
    }
    set guid(value: number) {
        pb_1.Message.setField(this, 13, value);
    }
    static fromObject(data: {
        pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
        store_type?: dependency_1.StoreType;
        count?: number;
        guid?: number;
    }): DropItemReq {
        const message = new DropItemReq({});
        if (data.pos != null) {
            message.pos = dependency_2.Vector.fromObject(data.pos);
        }
        if (data.store_type != null) {
            message.store_type = data.store_type;
        }
        if (data.count != null) {
            message.count = data.count;
        }
        if (data.guid != null) {
            message.guid = data.guid;
        }
        return message;
    }
    toObject() {
        const data: {
            pos?: ReturnType<typeof dependency_2.Vector.prototype.toObject>;
            store_type?: dependency_1.StoreType;
            count?: number;
            guid?: number;
        } = {};
        if (this.pos != null) {
            data.pos = this.pos.toObject();
        }
        if (this.store_type != null) {
            data.store_type = this.store_type;
        }
        if (this.count != null) {
            data.count = this.count;
        }
        if (this.guid != null) {
            data.guid = this.guid;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_pos)
            writer.writeMessage(11, this.pos, () => this.pos.serialize(writer));
        if (this.store_type != dependency_1.StoreType.STORE_TYPE_NONE)
            writer.writeEnum(1, this.store_type);
        if (this.count != 0)
            writer.writeUint32(2, this.count);
        if (this.guid != 0)
            writer.writeUint64(13, this.guid);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DropItemReq {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DropItemReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 11:
                    reader.readMessage(message.pos, () => message.pos = dependency_2.Vector.deserialize(reader));
                    break;
                case 1:
                    message.store_type = reader.readEnum();
                    break;
                case 2:
                    message.count = reader.readUint32();
                    break;
                case 13:
                    message.guid = reader.readUint64();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): DropItemReq {
        return DropItemReq.deserialize(bytes);
    }
}
