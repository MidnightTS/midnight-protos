// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "DropItemReq.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { StoreType } from "./StoreType";
import { Vector } from "./Vector";
/**
 * enum CmdId {
 *   option allow_alias = true;
 *   NONE = 0;
 *   CMD_ID = 657;
 *   ENET_CHANNEL_ID = 0;
 *   ENET_IS_RELIABLE = 1;
 *   IS_ALLOW_CLIENT = 1;
 * }
 *
 * @generated from protobuf message DropItemReq
 */
export interface DropItemReq {
    /**
     * @generated from protobuf field: Vector pos = 12;
     */
    pos?: Vector;
    /**
     * @generated from protobuf field: StoreType store_type = 13;
     */
    storeType: StoreType;
    /**
     * @generated from protobuf field: uint32 count = 4;
     */
    count: number;
    /**
     * @generated from protobuf field: uint64 guid = 9;
     */
    guid: bigint;
}
// @generated message type with reflection information, may provide speed optimized methods
class DropItemReq$Type extends MessageType<DropItemReq> {
    constructor() {
        super("DropItemReq", [
            { no: 12, name: "pos", kind: "message", T: () => Vector },
            { no: 13, name: "store_type", kind: "enum", T: () => ["StoreType", StoreType, "STORE_TYPE_"] },
            { no: 4, name: "count", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "guid", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<DropItemReq>): DropItemReq {
        const message = { storeType: 0, count: 0, guid: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DropItemReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DropItemReq): DropItemReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* Vector pos */ 12:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                case /* StoreType store_type */ 13:
                    message.storeType = reader.int32();
                    break;
                case /* uint32 count */ 4:
                    message.count = reader.uint32();
                    break;
                case /* uint64 guid */ 9:
                    message.guid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DropItemReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* Vector pos = 12; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* StoreType store_type = 13; */
        if (message.storeType !== 0)
            writer.tag(13, WireType.Varint).int32(message.storeType);
        /* uint32 count = 4; */
        if (message.count !== 0)
            writer.tag(4, WireType.Varint).uint32(message.count);
        /* uint64 guid = 9; */
        if (message.guid !== 0n)
            writer.tag(9, WireType.Varint).uint64(message.guid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message DropItemReq
 */
export const DropItemReq = new DropItemReq$Type();
