/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: CoopDataNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./CoopChapter";
import * as pb_1 from "google-protobuf";
export class CoopDataNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        chapter_list?: dependency_1.CoopChapter[];
        viewed_chapter_list?: number[];
        is_have_progress?: boolean;
        cur_coop_point?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [15, 7], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("chapter_list" in data && data.chapter_list != undefined) {
                this.chapter_list = data.chapter_list;
            }
            if ("viewed_chapter_list" in data && data.viewed_chapter_list != undefined) {
                this.viewed_chapter_list = data.viewed_chapter_list;
            }
            if ("is_have_progress" in data && data.is_have_progress != undefined) {
                this.is_have_progress = data.is_have_progress;
            }
            if ("cur_coop_point" in data && data.cur_coop_point != undefined) {
                this.cur_coop_point = data.cur_coop_point;
            }
        }
    }
    get chapter_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.CoopChapter, 15) as dependency_1.CoopChapter[];
    }
    set chapter_list(value: dependency_1.CoopChapter[]) {
        pb_1.Message.setRepeatedWrapperField(this, 15, value);
    }
    get viewed_chapter_list() {
        return pb_1.Message.getFieldWithDefault(this, 7, []) as number[];
    }
    set viewed_chapter_list(value: number[]) {
        pb_1.Message.setField(this, 7, value);
    }
    get is_have_progress() {
        return pb_1.Message.getFieldWithDefault(this, 10, false) as boolean;
    }
    set is_have_progress(value: boolean) {
        pb_1.Message.setField(this, 10, value);
    }
    get cur_coop_point() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set cur_coop_point(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    static fromObject(data: {
        chapter_list?: ReturnType<typeof dependency_1.CoopChapter.prototype.toObject>[];
        viewed_chapter_list?: number[];
        is_have_progress?: boolean;
        cur_coop_point?: number;
    }): CoopDataNotify {
        const message = new CoopDataNotify({});
        if (data.chapter_list != null) {
            message.chapter_list = data.chapter_list.map(item => dependency_1.CoopChapter.fromObject(item));
        }
        if (data.viewed_chapter_list != null) {
            message.viewed_chapter_list = data.viewed_chapter_list;
        }
        if (data.is_have_progress != null) {
            message.is_have_progress = data.is_have_progress;
        }
        if (data.cur_coop_point != null) {
            message.cur_coop_point = data.cur_coop_point;
        }
        return message;
    }
    toObject() {
        const data: {
            chapter_list?: ReturnType<typeof dependency_1.CoopChapter.prototype.toObject>[];
            viewed_chapter_list?: number[];
            is_have_progress?: boolean;
            cur_coop_point?: number;
        } = {};
        if (this.chapter_list != null) {
            data.chapter_list = this.chapter_list.map((item: dependency_1.CoopChapter) => item.toObject());
        }
        if (this.viewed_chapter_list != null) {
            data.viewed_chapter_list = this.viewed_chapter_list;
        }
        if (this.is_have_progress != null) {
            data.is_have_progress = this.is_have_progress;
        }
        if (this.cur_coop_point != null) {
            data.cur_coop_point = this.cur_coop_point;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.chapter_list.length)
            writer.writeRepeatedMessage(15, this.chapter_list, (item: dependency_1.CoopChapter) => item.serialize(writer));
        if (this.viewed_chapter_list.length)
            writer.writePackedUint32(7, this.viewed_chapter_list);
        if (this.is_have_progress != false)
            writer.writeBool(10, this.is_have_progress);
        if (this.cur_coop_point != 0)
            writer.writeUint32(5, this.cur_coop_point);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CoopDataNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CoopDataNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 15:
                    reader.readMessage(message.chapter_list, () => pb_1.Message.addToRepeatedWrapperField(message, 15, dependency_1.CoopChapter.deserialize(reader), dependency_1.CoopChapter));
                    break;
                case 7:
                    message.viewed_chapter_list = reader.readPackedUint32();
                    break;
                case 10:
                    message.is_have_progress = reader.readBool();
                    break;
                case 5:
                    message.cur_coop_point = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): CoopDataNotify {
        return CoopDataNotify.deserialize(bytes);
    }
}
