"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PlayerQuitFromMpNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerQuitFromMpNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PlayerQuitFromMpNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class PlayerQuitFromMpNotify extends pb_1.Message {
    constructor(data) {
        super();
        _PlayerQuitFromMpNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _PlayerQuitFromMpNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("reason" in data && data.reason != undefined) {
                this.reason = data.reason;
            }
        }
    }
    get reason() {
        return pb_1.Message.getFieldWithDefault(this, 11, PlayerQuitFromMpNotify.QuitReason.QUIT_REASON_INVALID);
    }
    set reason(value) {
        pb_1.Message.setField(this, 11, value);
    }
    static fromObject(data) {
        const message = new PlayerQuitFromMpNotify({});
        if (data.reason != null) {
            message.reason = data.reason;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.reason != null) {
            data.reason = this.reason;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.reason != PlayerQuitFromMpNotify.QuitReason.QUIT_REASON_INVALID)
            writer.writeEnum(11, this.reason);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PlayerQuitFromMpNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 11:
                    message.reason = reader.readEnum();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return PlayerQuitFromMpNotify.deserialize(bytes);
    }
}
exports.PlayerQuitFromMpNotify = PlayerQuitFromMpNotify;
_PlayerQuitFromMpNotify_one_of_decls = new WeakMap();
(function (PlayerQuitFromMpNotify) {
    let QuitReason;
    (function (QuitReason) {
        QuitReason[QuitReason["QUIT_REASON_INVALID"] = 0] = "QUIT_REASON_INVALID";
        QuitReason[QuitReason["QUIT_REASON_HOST_NO_OTHER_PLAYER"] = 1] = "QUIT_REASON_HOST_NO_OTHER_PLAYER";
        QuitReason[QuitReason["QUIT_REASON_KICK_BY_HOST"] = 2] = "QUIT_REASON_KICK_BY_HOST";
        QuitReason[QuitReason["QUIT_REASON_BACK_TO_MY_WORLD"] = 3] = "QUIT_REASON_BACK_TO_MY_WORLD";
        QuitReason[QuitReason["QUIT_REASON_KICK_BY_HOST_LOGOUT"] = 4] = "QUIT_REASON_KICK_BY_HOST_LOGOUT";
        QuitReason[QuitReason["QUIT_REASON_KICK_BY_HOST_BLOCK"] = 5] = "QUIT_REASON_KICK_BY_HOST_BLOCK";
        QuitReason[QuitReason["QUIT_REASON_BE_BLOCKED"] = 6] = "QUIT_REASON_BE_BLOCKED";
        QuitReason[QuitReason["QUIT_REASON_KICK_BY_HOST_ENTER_HOME"] = 7] = "QUIT_REASON_KICK_BY_HOST_ENTER_HOME";
        QuitReason[QuitReason["QUIT_REASON_HOST_SCENE_INVALID"] = 8] = "QUIT_REASON_HOST_SCENE_INVALID";
        QuitReason[QuitReason["QUIT_REASON_KICK_BY_PLAY"] = 9] = "QUIT_REASON_KICK_BY_PLAY";
        QuitReason[QuitReason["QUIT_REASON_Unk2800_FDECHAHJFDA"] = 10] = "QUIT_REASON_Unk2800_FDECHAHJFDA";
    })(QuitReason = PlayerQuitFromMpNotify.QuitReason || (PlayerQuitFromMpNotify.QuitReason = {}));
})(PlayerQuitFromMpNotify = exports.PlayerQuitFromMpNotify || (exports.PlayerQuitFromMpNotify = {}));
