"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ScenePlayBattleResultNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScenePlayBattleResultNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ScenePlayBattleResultNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./ScenePlayBattleSettlePlayerInfo");
const dependency_2 = require("./Unk2700_OHOKEEGPPBG");
const pb_1 = require("google-protobuf");
class ScenePlayBattleResultNotify extends pb_1.Message {
    constructor(data) {
        super();
        _ScenePlayBattleResultNotify_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4, 14], __classPrivateFieldGet(this, _ScenePlayBattleResultNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_win" in data && data.is_win != undefined) {
                this.is_win = data.is_win;
            }
            if ("cost_time" in data && data.cost_time != undefined) {
                this.cost_time = data.cost_time;
            }
            if ("play_type" in data && data.play_type != undefined) {
                this.play_type = data.play_type;
            }
            if ("play_id" in data && data.play_id != undefined) {
                this.play_id = data.play_id;
            }
            if ("settle_player_info_list" in data && data.settle_player_info_list != undefined) {
                this.settle_player_info_list = data.settle_player_info_list;
            }
            if ("Unk2700_HMENAAMGMBB" in data && data.Unk2700_HMENAAMGMBB != undefined) {
                this.Unk2700_HMENAAMGMBB = data.Unk2700_HMENAAMGMBB;
            }
        }
    }
    get is_win() {
        return pb_1.Message.getFieldWithDefault(this, 1, false);
    }
    set is_win(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get cost_time() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set cost_time(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get play_type() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set play_type(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get play_id() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set play_id(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get settle_player_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ScenePlayBattleSettlePlayerInfo, 4);
    }
    set settle_player_info_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 4, value);
    }
    get Unk2700_HMENAAMGMBB() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Unk2700_OHOKEEGPPBG, 14);
    }
    set Unk2700_HMENAAMGMBB(value) {
        pb_1.Message.setRepeatedWrapperField(this, 14, value);
    }
    static fromObject(data) {
        const message = new ScenePlayBattleResultNotify({});
        if (data.is_win != null) {
            message.is_win = data.is_win;
        }
        if (data.cost_time != null) {
            message.cost_time = data.cost_time;
        }
        if (data.play_type != null) {
            message.play_type = data.play_type;
        }
        if (data.play_id != null) {
            message.play_id = data.play_id;
        }
        if (data.settle_player_info_list != null) {
            message.settle_player_info_list = data.settle_player_info_list.map(item => dependency_1.ScenePlayBattleSettlePlayerInfo.fromObject(item));
        }
        if (data.Unk2700_HMENAAMGMBB != null) {
            message.Unk2700_HMENAAMGMBB = data.Unk2700_HMENAAMGMBB.map(item => dependency_2.Unk2700_OHOKEEGPPBG.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.is_win != null) {
            data.is_win = this.is_win;
        }
        if (this.cost_time != null) {
            data.cost_time = this.cost_time;
        }
        if (this.play_type != null) {
            data.play_type = this.play_type;
        }
        if (this.play_id != null) {
            data.play_id = this.play_id;
        }
        if (this.settle_player_info_list != null) {
            data.settle_player_info_list = this.settle_player_info_list.map((item) => item.toObject());
        }
        if (this.Unk2700_HMENAAMGMBB != null) {
            data.Unk2700_HMENAAMGMBB = this.Unk2700_HMENAAMGMBB.map((item) => item.toObject());
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_win != false)
            writer.writeBool(1, this.is_win);
        if (this.cost_time != 0)
            writer.writeUint32(7, this.cost_time);
        if (this.play_type != 0)
            writer.writeUint32(15, this.play_type);
        if (this.play_id != 0)
            writer.writeUint32(11, this.play_id);
        if (this.settle_player_info_list.length)
            writer.writeRepeatedMessage(4, this.settle_player_info_list, (item) => item.serialize(writer));
        if (this.Unk2700_HMENAAMGMBB.length)
            writer.writeRepeatedMessage(14, this.Unk2700_HMENAAMGMBB, (item) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ScenePlayBattleResultNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.is_win = reader.readBool();
                    break;
                case 7:
                    message.cost_time = reader.readUint32();
                    break;
                case 15:
                    message.play_type = reader.readUint32();
                    break;
                case 11:
                    message.play_id = reader.readUint32();
                    break;
                case 4:
                    reader.readMessage(message.settle_player_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_1.ScenePlayBattleSettlePlayerInfo.deserialize(reader), dependency_1.ScenePlayBattleSettlePlayerInfo));
                    break;
                case 14:
                    reader.readMessage(message.Unk2700_HMENAAMGMBB, () => pb_1.Message.addToRepeatedWrapperField(message, 14, dependency_2.Unk2700_OHOKEEGPPBG.deserialize(reader), dependency_2.Unk2700_OHOKEEGPPBG));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return ScenePlayBattleResultNotify.deserialize(bytes);
    }
}
exports.ScenePlayBattleResultNotify = ScenePlayBattleResultNotify;
_ScenePlayBattleResultNotify_one_of_decls = new WeakMap();
