"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _FurnitureMakeData_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.FurnitureMakeData = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: FurnitureMakeData.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class FurnitureMakeData extends pb_1.Message {
    constructor(data) {
        super();
        _FurnitureMakeData_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _FurnitureMakeData_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("index" in data && data.index != undefined) {
                this.index = data.index;
            }
            if ("dur_time" in data && data.dur_time != undefined) {
                this.dur_time = data.dur_time;
            }
            if ("begin_time" in data && data.begin_time != undefined) {
                this.begin_time = data.begin_time;
            }
            if ("accelerate_time" in data && data.accelerate_time != undefined) {
                this.accelerate_time = data.accelerate_time;
            }
            if ("avatar_id" in data && data.avatar_id != undefined) {
                this.avatar_id = data.avatar_id;
            }
            if ("make_id" in data && data.make_id != undefined) {
                this.make_id = data.make_id;
            }
        }
    }
    get index() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set index(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get dur_time() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0);
    }
    set dur_time(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get begin_time() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set begin_time(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get accelerate_time() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set accelerate_time(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get avatar_id() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set avatar_id(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get make_id() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0);
    }
    set make_id(value) {
        pb_1.Message.setField(this, 5, value);
    }
    static fromObject(data) {
        const message = new FurnitureMakeData({});
        if (data.index != null) {
            message.index = data.index;
        }
        if (data.dur_time != null) {
            message.dur_time = data.dur_time;
        }
        if (data.begin_time != null) {
            message.begin_time = data.begin_time;
        }
        if (data.accelerate_time != null) {
            message.accelerate_time = data.accelerate_time;
        }
        if (data.avatar_id != null) {
            message.avatar_id = data.avatar_id;
        }
        if (data.make_id != null) {
            message.make_id = data.make_id;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.index != null) {
            data.index = this.index;
        }
        if (this.dur_time != null) {
            data.dur_time = this.dur_time;
        }
        if (this.begin_time != null) {
            data.begin_time = this.begin_time;
        }
        if (this.accelerate_time != null) {
            data.accelerate_time = this.accelerate_time;
        }
        if (this.avatar_id != null) {
            data.avatar_id = this.avatar_id;
        }
        if (this.make_id != null) {
            data.make_id = this.make_id;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.index != 0)
            writer.writeUint32(15, this.index);
        if (this.dur_time != 0)
            writer.writeUint32(1, this.dur_time);
        if (this.begin_time != 0)
            writer.writeFixed32(11, this.begin_time);
        if (this.accelerate_time != 0)
            writer.writeFixed32(6, this.accelerate_time);
        if (this.avatar_id != 0)
            writer.writeUint32(2, this.avatar_id);
        if (this.make_id != 0)
            writer.writeUint32(5, this.make_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new FurnitureMakeData();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 15:
                    message.index = reader.readUint32();
                    break;
                case 1:
                    message.dur_time = reader.readUint32();
                    break;
                case 11:
                    message.begin_time = reader.readFixed32();
                    break;
                case 6:
                    message.accelerate_time = reader.readFixed32();
                    break;
                case 2:
                    message.avatar_id = reader.readUint32();
                    break;
                case 5:
                    message.make_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return FurnitureMakeData.deserialize(bytes);
    }
}
exports.FurnitureMakeData = FurnitureMakeData;
_FurnitureMakeData_one_of_decls = new WeakMap();
