"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _GachaItem_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.GachaItem = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: GachaItem.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./GachaTransferItem");
const dependency_2 = require("./ItemParam");
const pb_1 = require("google-protobuf");
class GachaItem extends pb_1.Message {
    constructor(data) {
        super();
        _GachaItem_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [9, 12], __classPrivateFieldGet(this, _GachaItem_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("gacha_item_" in data && data.gacha_item_ != undefined) {
                this.gacha_item_ = data.gacha_item_;
            }
            if ("is_gacha_item_new" in data && data.is_gacha_item_new != undefined) {
                this.is_gacha_item_new = data.is_gacha_item_new;
            }
            if ("is_flash_card" in data && data.is_flash_card != undefined) {
                this.is_flash_card = data.is_flash_card;
            }
            if ("token_item_list" in data && data.token_item_list != undefined) {
                this.token_item_list = data.token_item_list;
            }
            if ("transfer_items" in data && data.transfer_items != undefined) {
                this.transfer_items = data.transfer_items;
            }
        }
    }
    get gacha_item_() {
        return pb_1.Message.getWrapperField(this, dependency_2.ItemParam, 7);
    }
    set gacha_item_(value) {
        pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_gacha_item_() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get is_gacha_item_new() {
        return pb_1.Message.getFieldWithDefault(this, 6, false);
    }
    set is_gacha_item_new(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get is_flash_card() {
        return pb_1.Message.getFieldWithDefault(this, 8, false);
    }
    set is_flash_card(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get token_item_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.ItemParam, 9);
    }
    set token_item_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 9, value);
    }
    get transfer_items() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.GachaTransferItem, 12);
    }
    set transfer_items(value) {
        pb_1.Message.setRepeatedWrapperField(this, 12, value);
    }
    static fromObject(data) {
        const message = new GachaItem({});
        if (data.gacha_item_ != null) {
            message.gacha_item_ = dependency_2.ItemParam.fromObject(data.gacha_item_);
        }
        if (data.is_gacha_item_new != null) {
            message.is_gacha_item_new = data.is_gacha_item_new;
        }
        if (data.is_flash_card != null) {
            message.is_flash_card = data.is_flash_card;
        }
        if (data.token_item_list != null) {
            message.token_item_list = data.token_item_list.map(item => dependency_2.ItemParam.fromObject(item));
        }
        if (data.transfer_items != null) {
            message.transfer_items = data.transfer_items.map(item => dependency_1.GachaTransferItem.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.gacha_item_ != null) {
            data.gacha_item_ = this.gacha_item_.toObject();
        }
        if (this.is_gacha_item_new != null) {
            data.is_gacha_item_new = this.is_gacha_item_new;
        }
        if (this.is_flash_card != null) {
            data.is_flash_card = this.is_flash_card;
        }
        if (this.token_item_list != null) {
            data.token_item_list = this.token_item_list.map((item) => item.toObject());
        }
        if (this.transfer_items != null) {
            data.transfer_items = this.transfer_items.map((item) => item.toObject());
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_gacha_item_)
            writer.writeMessage(7, this.gacha_item_, () => this.gacha_item_.serialize(writer));
        if (this.is_gacha_item_new != false)
            writer.writeBool(6, this.is_gacha_item_new);
        if (this.is_flash_card != false)
            writer.writeBool(8, this.is_flash_card);
        if (this.token_item_list.length)
            writer.writeRepeatedMessage(9, this.token_item_list, (item) => item.serialize(writer));
        if (this.transfer_items.length)
            writer.writeRepeatedMessage(12, this.transfer_items, (item) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new GachaItem();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 7:
                    reader.readMessage(message.gacha_item_, () => message.gacha_item_ = dependency_2.ItemParam.deserialize(reader));
                    break;
                case 6:
                    message.is_gacha_item_new = reader.readBool();
                    break;
                case 8:
                    message.is_flash_card = reader.readBool();
                    break;
                case 9:
                    reader.readMessage(message.token_item_list, () => pb_1.Message.addToRepeatedWrapperField(message, 9, dependency_2.ItemParam.deserialize(reader), dependency_2.ItemParam));
                    break;
                case 12:
                    reader.readMessage(message.transfer_items, () => pb_1.Message.addToRepeatedWrapperField(message, 12, dependency_1.GachaTransferItem.deserialize(reader), dependency_1.GachaTransferItem));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return GachaItem.deserialize(bytes);
    }
}
exports.GachaItem = GachaItem;
_GachaItem_one_of_decls = new WeakMap();
