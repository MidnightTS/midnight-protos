/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: DropItemRsp.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./StoreType";
import * as pb_1 from "google-protobuf";
export class DropItemRsp extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        retcode?: number;
        guid?: number;
        store_type?: dependency_1.StoreType;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("retcode" in data && data.retcode != undefined) {
                this.retcode = data.retcode;
            }
            if ("guid" in data && data.guid != undefined) {
                this.guid = data.guid;
            }
            if ("store_type" in data && data.store_type != undefined) {
                this.store_type = data.store_type;
            }
        }
    }
    get retcode() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set retcode(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get guid() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
    }
    set guid(value: number) {
        pb_1.Message.setField(this, 1, value);
    }
    get store_type() {
        return pb_1.Message.getFieldWithDefault(this, 15, dependency_1.StoreType.STORE_TYPE_NONE) as dependency_1.StoreType;
    }
    set store_type(value: dependency_1.StoreType) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data: {
        retcode?: number;
        guid?: number;
        store_type?: dependency_1.StoreType;
    }): DropItemRsp {
        const message = new DropItemRsp({});
        if (data.retcode != null) {
            message.retcode = data.retcode;
        }
        if (data.guid != null) {
            message.guid = data.guid;
        }
        if (data.store_type != null) {
            message.store_type = data.store_type;
        }
        return message;
    }
    toObject() {
        const data: {
            retcode?: number;
            guid?: number;
            store_type?: dependency_1.StoreType;
        } = {};
        if (this.retcode != null) {
            data.retcode = this.retcode;
        }
        if (this.guid != null) {
            data.guid = this.guid;
        }
        if (this.store_type != null) {
            data.store_type = this.store_type;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.retcode != 0)
            writer.writeInt32(9, this.retcode);
        if (this.guid != 0)
            writer.writeUint64(1, this.guid);
        if (this.store_type != dependency_1.StoreType.STORE_TYPE_NONE)
            writer.writeEnum(15, this.store_type);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DropItemRsp {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DropItemRsp();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 9:
                    message.retcode = reader.readInt32();
                    break;
                case 1:
                    message.guid = reader.readUint64();
                    break;
                case 15:
                    message.store_type = reader.readEnum();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): DropItemRsp {
        return DropItemRsp.deserialize(bytes);
    }
}
