// @generated by protobuf-ts 2.8.1 with parameter generate_dependencies,output_typescript
// @generated from protobuf file "cmd_avatar.proto" (package "com.midnights.game", syntax proto2)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { AvatarEquipAffixInfo } from "./define";
import { ServerBuff } from "./define";
import { AbilityControlBlock } from "./define";
import { SceneEntityInfo } from "./define";
import { SceneAvatarInfo } from "./define";
import { AbilitySyncStateInfo } from "./define";
import { ItemParam } from "./define";
import { AvatarExpeditionInfo } from "./define";
import { AvatarFetterInfo } from "./define";
import { Vector } from "./define";
import { AvatarInfo } from "./define";
/**
 * @generated from protobuf message com.midnights.game.AvatarAddNotify
 */
export interface AvatarAddNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.AvatarInfo avatar = 13;
     */
    avatar?: AvatarInfo;
    /**
     * @generated from protobuf field: optional bool is_in_team = 12;
     */
    isInTeam?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarAddNotify.CmdId
 */
export enum AvatarAddNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1769;
     */
    CMD_ID = 1769,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarDelNotify
 */
export interface AvatarDelNotify {
    /**
     * @generated from protobuf field: repeated uint64 avatar_guid_list = 13;
     */
    avatarGuidList: bigint[];
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarDelNotify.CmdId
 */
export enum AvatarDelNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1773;
     */
    CMD_ID = 1773,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarTeam
 */
export interface AvatarTeam {
    /**
     * @generated from protobuf field: repeated uint64 avatar_guid_list = 7;
     */
    avatarGuidList: bigint[];
    /**
     * @generated from protobuf field: optional string team_name = 14;
     */
    teamName?: string;
}
/**
 * @generated from protobuf message com.midnights.game.SetUpAvatarTeamReq
 */
export interface SetUpAvatarTeamReq {
    /**
     * @generated from protobuf field: optional uint32 team_id = 3;
     */
    teamId?: number;
    /**
     * @generated from protobuf field: repeated uint64 avatar_team_guid_list = 7;
     */
    avatarTeamGuidList: bigint[];
    /**
     * @generated from protobuf field: optional uint64 cur_avatar_guid = 5;
     */
    curAvatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.SetUpAvatarTeamReq.CmdId
 */
export enum SetUpAvatarTeamReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1690;
     */
    CMD_ID = 1690,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SetUpAvatarTeamRsp
 */
export interface SetUpAvatarTeamRsp {
    /**
     * @generated from protobuf field: repeated uint64 avatar_team_guid_list = 1;
     */
    avatarTeamGuidList: bigint[];
    /**
     * @generated from protobuf field: optional uint32 team_id = 6;
     */
    teamId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 cur_avatar_guid = 13;
     */
    curAvatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.SetUpAvatarTeamRsp.CmdId
 */
export enum SetUpAvatarTeamRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1646;
     */
    CMD_ID = 1646,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChooseCurAvatarTeamReq
 */
export interface ChooseCurAvatarTeamReq {
    /**
     * @generated from protobuf field: optional uint32 team_id = 9;
     */
    teamId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ChooseCurAvatarTeamReq.CmdId
 */
export enum ChooseCurAvatarTeamReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1796;
     */
    CMD_ID = 1796,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChooseCurAvatarTeamRsp
 */
export interface ChooseCurAvatarTeamRsp {
    /**
     * @generated from protobuf field: optional uint32 cur_team_id = 1;
     */
    curTeamId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ChooseCurAvatarTeamRsp.CmdId
 */
export enum ChooseCurAvatarTeamRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1661;
     */
    CMD_ID = 1661,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChangeAvatarReq
 */
export interface ChangeAvatarReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector move_pos = 15;
     */
    movePos?: Vector;
    /**
     * @generated from protobuf field: optional uint32 skill_id = 2;
     */
    skillId?: number;
    /**
     * @generated from protobuf field: optional uint64 guid = 7;
     */
    guid?: bigint;
    /**
     * @generated from protobuf field: optional bool is_move = 10;
     */
    isMove?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeAvatarReq.CmdId
 */
export enum ChangeAvatarReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1640;
     */
    CMD_ID = 1640,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChangeAvatarRsp
 */
export interface ChangeAvatarRsp {
    /**
     * @generated from protobuf field: optional uint32 skill_id = 3;
     */
    skillId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 cur_guid = 4;
     */
    curGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeAvatarRsp.CmdId
 */
export enum ChangeAvatarRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1607;
     */
    CMD_ID = 1607,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarPromoteReq
 */
export interface AvatarPromoteReq {
    /**
     * @generated from protobuf field: optional uint64 guid = 5;
     */
    guid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarPromoteReq.CmdId
 */
export enum AvatarPromoteReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1664;
     */
    CMD_ID = 1664,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarPromoteRsp
 */
export interface AvatarPromoteRsp {
    /**
     * @generated from protobuf field: optional uint64 guid = 11;
     */
    guid?: bigint;
    /**
     * @generated from protobuf field: optional int32 retcode = 8;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarPromoteRsp.CmdId
 */
export enum AvatarPromoteRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1639;
     */
    CMD_ID = 1639,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SpringUseReq
 */
export interface SpringUseReq {
    /**
     * @generated from protobuf field: optional uint64 guid = 11;
     */
    guid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.SpringUseReq.CmdId
 */
export enum SpringUseReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1748;
     */
    CMD_ID = 1748,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.SpringUseRsp
 */
export interface SpringUseRsp {
    /**
     * @generated from protobuf field: optional uint64 guid = 3;
     */
    guid?: bigint;
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.SpringUseRsp.CmdId
 */
export enum SpringUseRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1642;
     */
    CMD_ID = 1642,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.RefreshBackgroundAvatarReq
 */
export interface RefreshBackgroundAvatarReq {
}
/**
 * @generated from protobuf enum com.midnights.game.RefreshBackgroundAvatarReq.CmdId
 */
export enum RefreshBackgroundAvatarReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1743;
     */
    CMD_ID = 1743,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.RefreshBackgroundAvatarRsp
 */
export interface RefreshBackgroundAvatarRsp {
    /**
     * @generated from protobuf field: map<uint64, uint32> hp_full_time_map = 15;
     */
    hpFullTimeMap: {
        [key: string]: number;
    };
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.RefreshBackgroundAvatarRsp.CmdId
 */
export enum RefreshBackgroundAvatarRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1800;
     */
    CMD_ID = 1800,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarTeamUpdateNotify
 */
export interface AvatarTeamUpdateNotify {
    /**
     * @generated from protobuf field: map<uint32, com.midnights.game.AvatarTeam> avatar_team_map = 2;
     */
    avatarTeamMap: {
        [key: number]: AvatarTeam;
    };
    /**
     * @generated from protobuf field: repeated uint64 temp_avatar_guid_list = 13;
     */
    tempAvatarGuidList: bigint[];
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarTeamUpdateNotify.CmdId
 */
export enum AvatarTeamUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1706;
     */
    CMD_ID = 1706,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarDataNotify
 */
export interface AvatarDataNotify {
    /**
     * @generated from protobuf field: repeated uint32 owned_costume_list = 11;
     */
    ownedCostumeList: number[];
    /**
     * @generated from protobuf field: optional uint64 choose_avatar_guid = 8;
     */
    chooseAvatarGuid?: bigint;
    /**
     * @generated from protobuf field: map<uint32, com.midnights.game.AvatarTeam> avatar_team_map = 7;
     */
    avatarTeamMap: {
        [key: number]: AvatarTeam;
    };
    /**
     * @generated from protobuf field: repeated uint32 backup_avatar_team_order_list = 9;
     */
    backupAvatarTeamOrderList: number[];
    /**
     * @generated from protobuf field: repeated uint64 temp_avatar_guid_list = 12;
     */
    tempAvatarGuidList: bigint[];
    /**
     * @generated from protobuf field: repeated uint32 owned_flycloak_list = 1;
     */
    ownedFlycloakList: number[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.AvatarInfo avatar_list = 6;
     */
    avatarList: AvatarInfo[];
    /**
     * @generated from protobuf field: optional uint32 cur_avatar_team_id = 2;
     */
    curAvatarTeamId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarDataNotify.CmdId
 */
export enum AvatarDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1633;
     */
    CMD_ID = 1633,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarUpgradeReq
 */
export interface AvatarUpgradeReq {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 6;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 count = 2;
     */
    count?: number;
    /**
     * @generated from protobuf field: optional uint32 item_id = 5;
     */
    itemId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarUpgradeReq.CmdId
 */
export enum AvatarUpgradeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1770;
     */
    CMD_ID = 1770,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarUpgradeRsp
 */
export interface AvatarUpgradeRsp {
    /**
     * @generated from protobuf field: optional uint32 cur_level = 6;
     */
    curLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 old_level = 13;
     */
    oldLevel?: number;
    /**
     * @generated from protobuf field: map<uint32, float> old_fight_prop_map = 10;
     */
    oldFightPropMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: map<uint32, float> cur_fight_prop_map = 4;
     */
    curFightPropMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 15;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarUpgradeRsp.CmdId
 */
export enum AvatarUpgradeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1701;
     */
    CMD_ID = 1701,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarDieAnimationEndReq
 */
export interface AvatarDieAnimationEndReq {
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector reborn_pos = 3;
     */
    rebornPos?: Vector;
    /**
     * @generated from protobuf field: optional uint64 die_guid = 7;
     */
    dieGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 skill_id = 8;
     */
    skillId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarDieAnimationEndReq.CmdId
 */
export enum AvatarDieAnimationEndReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1610;
     */
    CMD_ID = 1610,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarDieAnimationEndRsp
 */
export interface AvatarDieAnimationEndRsp {
    /**
     * @generated from protobuf field: optional uint32 skill_id = 13;
     */
    skillId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 14;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 die_guid = 15;
     */
    dieGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarDieAnimationEndRsp.CmdId
 */
export enum AvatarDieAnimationEndRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1694;
     */
    CMD_ID = 1694,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarChangeElementTypeReq
 */
export interface AvatarChangeElementTypeReq {
    /**
     * @generated from protobuf field: optional uint32 scene_id = 7;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 area_id = 3;
     */
    areaId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarChangeElementTypeReq.CmdId
 */
export enum AvatarChangeElementTypeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1785;
     */
    CMD_ID = 1785,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarChangeElementTypeRsp
 */
export interface AvatarChangeElementTypeRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarChangeElementTypeRsp.CmdId
 */
export enum AvatarChangeElementTypeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1651;
     */
    CMD_ID = 1651,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarFetterDataNotify
 */
export interface AvatarFetterDataNotify {
    /**
     * @generated from protobuf field: map<uint64, com.midnights.game.AvatarFetterInfo> fetter_info_map = 15;
     */
    fetterInfoMap: {
        [key: string]: AvatarFetterInfo;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarFetterDataNotify.CmdId
 */
export enum AvatarFetterDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1782;
     */
    CMD_ID = 1782,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionDataNotify
 */
export interface AvatarExpeditionDataNotify {
    /**
     * @generated from protobuf field: map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 6;
     */
    expeditionInfoMap: {
        [key: string]: AvatarExpeditionInfo;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionDataNotify.CmdId
 */
export enum AvatarExpeditionDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1771;
     */
    CMD_ID = 1771,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionAllDataReq
 */
export interface AvatarExpeditionAllDataReq {
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionAllDataReq.CmdId
 */
export enum AvatarExpeditionAllDataReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1722;
     */
    CMD_ID = 1722,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionAllDataRsp
 */
export interface AvatarExpeditionAllDataRsp {
    /**
     * @generated from protobuf field: repeated uint32 open_expedition_list = 3;
     */
    openExpeditionList: number[];
    /**
     * @generated from protobuf field: optional int32 retcode = 15;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 expedition_count_limit = 12;
     */
    expeditionCountLimit?: number;
    /**
     * @generated from protobuf field: map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 4;
     */
    expeditionInfoMap: {
        [key: string]: AvatarExpeditionInfo;
    };
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionAllDataRsp.CmdId
 */
export enum AvatarExpeditionAllDataRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1648;
     */
    CMD_ID = 1648,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionStartReq
 */
export interface AvatarExpeditionStartReq {
    /**
     * @generated from protobuf field: optional uint32 exp_id = 9;
     */
    expId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 10;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 hour_time = 2;
     */
    hourTime?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionStartReq.CmdId
 */
export enum AvatarExpeditionStartReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1715;
     */
    CMD_ID = 1715,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionStartRsp
 */
export interface AvatarExpeditionStartRsp {
    /**
     * @generated from protobuf field: map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 2;
     */
    expeditionInfoMap: {
        [key: string]: AvatarExpeditionInfo;
    };
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionStartRsp.CmdId
 */
export enum AvatarExpeditionStartRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1719;
     */
    CMD_ID = 1719,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionCallBackReq
 */
export interface AvatarExpeditionCallBackReq {
    /**
     * @generated from protobuf field: repeated uint64 avatar_guid = 13;
     */
    avatarGuid: bigint[];
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionCallBackReq.CmdId
 */
export enum AvatarExpeditionCallBackReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1752;
     */
    CMD_ID = 1752,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionCallBackRsp
 */
export interface AvatarExpeditionCallBackRsp {
    /**
     * @generated from protobuf field: map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 9;
     */
    expeditionInfoMap: {
        [key: string]: AvatarExpeditionInfo;
    };
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionCallBackRsp.CmdId
 */
export enum AvatarExpeditionCallBackRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1726;
     */
    CMD_ID = 1726,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionGetRewardReq
 */
export interface AvatarExpeditionGetRewardReq {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 14;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionGetRewardReq.CmdId
 */
export enum AvatarExpeditionGetRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1623;
     */
    CMD_ID = 1623,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarExpeditionGetRewardRsp
 */
export interface AvatarExpeditionGetRewardRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam extra_item_list = 9;
     */
    extraItemList: ItemParam[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam item_list = 8;
     */
    itemList: ItemParam[];
    /**
     * @generated from protobuf field: map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 12;
     */
    expeditionInfoMap: {
        [key: string]: AvatarExpeditionInfo;
    };
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarExpeditionGetRewardRsp.CmdId
 */
export enum AvatarExpeditionGetRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1784;
     */
    CMD_ID = 1784,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChangeMpTeamAvatarReq
 */
export interface ChangeMpTeamAvatarReq {
    /**
     * @generated from protobuf field: optional uint64 cur_avatar_guid = 4;
     */
    curAvatarGuid?: bigint;
    /**
     * @generated from protobuf field: repeated uint64 avatar_guid_list = 8;
     */
    avatarGuidList: bigint[];
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeMpTeamAvatarReq.CmdId
 */
export enum ChangeMpTeamAvatarReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1708;
     */
    CMD_ID = 1708,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChangeMpTeamAvatarRsp
 */
export interface ChangeMpTeamAvatarRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint64 avatar_guid_list = 3;
     */
    avatarGuidList: bigint[];
    /**
     * @generated from protobuf field: optional uint64 cur_avatar_guid = 13;
     */
    curAvatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeMpTeamAvatarRsp.CmdId
 */
export enum ChangeMpTeamAvatarRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1753;
     */
    CMD_ID = 1753,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChangeTeamNameReq
 */
export interface ChangeTeamNameReq {
    /**
     * @generated from protobuf field: optional int32 team_id = 8;
     */
    teamId?: number;
    /**
     * @generated from protobuf field: optional string team_name = 9;
     */
    teamName?: string;
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeTeamNameReq.CmdId
 */
export enum ChangeTeamNameReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1603;
     */
    CMD_ID = 1603,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ChangeTeamNameRsp
 */
export interface ChangeTeamNameRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 11;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional string team_name = 2;
     */
    teamName?: string;
    /**
     * @generated from protobuf field: optional int32 team_id = 4;
     */
    teamId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ChangeTeamNameRsp.CmdId
 */
export enum ChangeTeamNameRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1666;
     */
    CMD_ID = 1666,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.SceneTeamAvatar
 */
export interface SceneTeamAvatar {
    /**
     * @generated from protobuf field: optional com.midnights.game.AbilitySyncStateInfo avatar_ability_info = 5;
     */
    avatarAbilityInfo?: AbilitySyncStateInfo;
    /**
     * @generated from protobuf field: optional com.midnights.game.AvatarInfo avatar_info = 8;
     */
    avatarInfo?: AvatarInfo;
    /**
     * @generated from protobuf field: optional bool is_on_scene = 152;
     */
    isOnScene?: boolean;
    /**
     * @generated from protobuf field: optional uint32 entity_id = 9;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 15;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 scene_id = 1;
     */
    sceneId?: number;
    /**
     * @generated from protobuf field: optional uint32 weapon_entity_id = 7;
     */
    weaponEntityId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.SceneAvatarInfo scene_avatar_info = 3;
     */
    sceneAvatarInfo?: SceneAvatarInfo;
    /**
     * @generated from protobuf field: optional uint64 weapon_guid = 4;
     */
    weaponGuid?: bigint;
    /**
     * @generated from protobuf field: optional com.midnights.game.AbilitySyncStateInfo weapon_ability_info = 11;
     */
    weaponAbilityInfo?: AbilitySyncStateInfo;
    /**
     * @generated from protobuf field: optional com.midnights.game.SceneEntityInfo scene_entity_info = 12;
     */
    sceneEntityInfo?: SceneEntityInfo;
    /**
     * @generated from protobuf field: optional uint32 player_uid = 14;
     */
    playerUid?: number;
    /**
     * @generated from protobuf field: optional bool is_reconnect = 6;
     */
    isReconnect?: boolean;
    /**
     * @generated from protobuf field: optional com.midnights.game.AbilityControlBlock ability_control_block = 2;
     */
    abilityControlBlock?: AbilityControlBlock;
    /**
     * @generated from protobuf field: optional bool is_player_cur_avatar = 13;
     */
    isPlayerCurAvatar?: boolean;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ServerBuff server_buff_list = 10;
     */
    serverBuffList: ServerBuff[];
}
/**
 * @generated from protobuf message com.midnights.game.SceneTeamUpdateNotify
 */
export interface SceneTeamUpdateNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.SceneTeamAvatar scene_team_avatar_list = 11;
     */
    sceneTeamAvatarList: SceneTeamAvatar[];
    /**
     * @generated from protobuf field: optional bool is_in_mp = 15;
     */
    isInMp?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.SceneTeamUpdateNotify.CmdId
 */
export enum SceneTeamUpdateNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1775;
     */
    CMD_ID = 1775,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FocusAvatarReq
 */
export interface FocusAvatarReq {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 1;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional bool is_focus = 8;
     */
    isFocus?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.FocusAvatarReq.CmdId
 */
export enum FocusAvatarReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1654;
     */
    CMD_ID = 1654,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FocusAvatarRsp
 */
export interface FocusAvatarRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional bool is_focus = 11;
     */
    isFocus?: boolean;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 4;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.FocusAvatarRsp.CmdId
 */
export enum FocusAvatarRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1681;
     */
    CMD_ID = 1681,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarSatiationData
 */
export interface AvatarSatiationData {
    /**
     * @generated from protobuf field: optional float finish_time = 14;
     */
    finishTime?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 13;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional float penalty_finish_time = 12;
     */
    penaltyFinishTime?: number;
}
/**
 * @generated from protobuf message com.midnights.game.AvatarSatiationDataNotify
 */
export interface AvatarSatiationDataNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.AvatarSatiationData satiation_data_list = 6;
     */
    satiationDataList: AvatarSatiationData[];
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarSatiationDataNotify.CmdId
 */
export enum AvatarSatiationDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1693;
     */
    CMD_ID = 1693,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarWearFlycloakReq
 */
export interface AvatarWearFlycloakReq {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 11;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 flycloak_id = 13;
     */
    flycloakId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarWearFlycloakReq.CmdId
 */
export enum AvatarWearFlycloakReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1737;
     */
    CMD_ID = 1737,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarWearFlycloakRsp
 */
export interface AvatarWearFlycloakRsp {
    /**
     * @generated from protobuf field: optional uint32 flycloak_id = 13;
     */
    flycloakId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 7;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional int32 retcode = 6;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarWearFlycloakRsp.CmdId
 */
export enum AvatarWearFlycloakRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1698;
     */
    CMD_ID = 1698,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarFlycloakChangeNotify
 */
export interface AvatarFlycloakChangeNotify {
    /**
     * @generated from protobuf field: optional uint32 flycloak_id = 8;
     */
    flycloakId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 2;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarFlycloakChangeNotify.CmdId
 */
export enum AvatarFlycloakChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1643;
     */
    CMD_ID = 1643,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarGainFlycloakNotify
 */
export interface AvatarGainFlycloakNotify {
    /**
     * @generated from protobuf field: optional uint32 flycloak_id = 3;
     */
    flycloakId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarGainFlycloakNotify.CmdId
 */
export enum AvatarGainFlycloakNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1656;
     */
    CMD_ID = 1656,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarEquipAffixStartNotify
 */
export interface AvatarEquipAffixStartNotify {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 4;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional com.midnights.game.AvatarEquipAffixInfo equip_affix_info = 12;
     */
    equipAffixInfo?: AvatarEquipAffixInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarEquipAffixStartNotify.CmdId
 */
export enum AvatarEquipAffixStartNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1662;
     */
    CMD_ID = 1662,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarFetterLevelRewardReq
 */
export interface AvatarFetterLevelRewardReq {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 1;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 fetter_level = 6;
     */
    fetterLevel?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarFetterLevelRewardReq.CmdId
 */
export enum AvatarFetterLevelRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1653;
     */
    CMD_ID = 1653,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarFetterLevelRewardRsp
 */
export interface AvatarFetterLevelRewardRsp {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 4;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 reward_id = 1;
     */
    rewardId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 fetter_level = 14;
     */
    fetterLevel?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarFetterLevelRewardRsp.CmdId
 */
export enum AvatarFetterLevelRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1606;
     */
    CMD_ID = 1606,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AddNoGachaAvatarCardTransferItem
 */
export interface AddNoGachaAvatarCardTransferItem {
    /**
     * @generated from protobuf field: optional uint32 count = 9;
     */
    count?: number;
    /**
     * @generated from protobuf field: optional uint32 item_id = 6;
     */
    itemId?: number;
    /**
     * @generated from protobuf field: optional bool is_new = 15;
     */
    isNew?: boolean;
}
/**
 * @generated from protobuf message com.midnights.game.AddNoGachaAvatarCardNotify
 */
export interface AddNoGachaAvatarCardNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.AddNoGachaAvatarCardTransferItem transfer_item_list = 4;
     */
    transferItemList: AddNoGachaAvatarCardTransferItem[];
    /**
     * @generated from protobuf field: optional uint32 initial_promote_level = 2;
     */
    initialPromoteLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 avatar_id = 8;
     */
    avatarId?: number;
    /**
     * @generated from protobuf field: optional bool is_transfer_to_item = 6;
     */
    isTransferToItem?: boolean;
    /**
     * @generated from protobuf field: optional uint32 reason = 9;
     */
    reason?: number;
    /**
     * @generated from protobuf field: optional uint32 initial_level = 10;
     */
    initialLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 item_id = 14;
     */
    itemId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AddNoGachaAvatarCardNotify.CmdId
 */
export enum AddNoGachaAvatarCardNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1655;
     */
    CMD_ID = 1655,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarPromoteGetRewardReq
 */
export interface AvatarPromoteGetRewardReq {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 7;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 promote_level = 12;
     */
    promoteLevel?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarPromoteGetRewardReq.CmdId
 */
export enum AvatarPromoteGetRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1696;
     */
    CMD_ID = 1696,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarPromoteGetRewardRsp
 */
export interface AvatarPromoteGetRewardRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 reward_id = 15;
     */
    rewardId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 11;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional uint32 promote_level = 12;
     */
    promoteLevel?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarPromoteGetRewardRsp.CmdId
 */
export enum AvatarPromoteGetRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1683;
     */
    CMD_ID = 1683,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarChangeCostumeReq
 */
export interface AvatarChangeCostumeReq {
    /**
     * @generated from protobuf field: optional uint32 costume_id = 4;
     */
    costumeId?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 2;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarChangeCostumeReq.CmdId
 */
export enum AvatarChangeCostumeReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1778;
     */
    CMD_ID = 1778,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarChangeCostumeRsp
 */
export interface AvatarChangeCostumeRsp {
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 12;
     */
    avatarGuid?: bigint;
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 costume_id = 13;
     */
    costumeId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarChangeCostumeRsp.CmdId
 */
export enum AvatarChangeCostumeRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1645;
     */
    CMD_ID = 1645,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarChangeCostumeNotify
 */
export interface AvatarChangeCostumeNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.SceneEntityInfo entity_info = 7;
     */
    entityInfo?: SceneEntityInfo;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarChangeCostumeNotify.CmdId
 */
export enum AvatarChangeCostumeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1644;
     */
    CMD_ID = 1644,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarGainCostumeNotify
 */
export interface AvatarGainCostumeNotify {
    /**
     * @generated from protobuf field: optional uint32 costume_id = 15;
     */
    costumeId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarGainCostumeNotify.CmdId
 */
export enum AvatarGainCostumeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1677;
     */
    CMD_ID = 1677,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarChangeAnimHashReq
 */
export interface AvatarChangeAnimHashReq {
    /**
     * @generated from protobuf field: optional uint32 anim_hash = 6;
     */
    animHash?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 3;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarChangeAnimHashReq.CmdId
 */
export enum AvatarChangeAnimHashReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1711;
     */
    CMD_ID = 1711,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarChangeAnimHashRsp
 */
export interface AvatarChangeAnimHashRsp {
    /**
     * @generated from protobuf field: optional uint32 anim_hash = 13;
     */
    animHash?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 5;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 avatar_guid = 10;
     */
    avatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarChangeAnimHashRsp.CmdId
 */
export enum AvatarChangeAnimHashRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1647;
     */
    CMD_ID = 1647,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PersistentDungeonSwitchAvatarReq
 */
export interface PersistentDungeonSwitchAvatarReq {
    /**
     * @generated from protobuf field: optional uint64 cur_avatar_guid = 8;
     */
    curAvatarGuid?: bigint;
    /**
     * @generated from protobuf field: repeated uint64 avatar_team_guid_list = 3;
     */
    avatarTeamGuidList: bigint[];
}
/**
 * @generated from protobuf enum com.midnights.game.PersistentDungeonSwitchAvatarReq.CmdId
 */
export enum PersistentDungeonSwitchAvatarReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1684;
     */
    CMD_ID = 1684,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PersistentDungeonSwitchAvatarRsp
 */
export interface PersistentDungeonSwitchAvatarRsp {
    /**
     * @generated from protobuf field: repeated uint64 avatar_team_guid_list = 14;
     */
    avatarTeamGuidList: bigint[];
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint64 cur_avatar_guid = 15;
     */
    curAvatarGuid?: bigint;
}
/**
 * @generated from protobuf enum com.midnights.game.PersistentDungeonSwitchAvatarRsp.CmdId
 */
export enum PersistentDungeonSwitchAvatarRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1768;
     */
    CMD_ID = 1768,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AddBackupAvatarTeamReq
 */
export interface AddBackupAvatarTeamReq {
}
/**
 * @generated from protobuf enum com.midnights.game.AddBackupAvatarTeamReq.CmdId
 */
export enum AddBackupAvatarTeamReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1687;
     */
    CMD_ID = 1687,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.AddBackupAvatarTeamRsp
 */
export interface AddBackupAvatarTeamRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.AddBackupAvatarTeamRsp.CmdId
 */
export enum AddBackupAvatarTeamRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1735;
     */
    CMD_ID = 1735,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.DelBackupAvatarTeamReq
 */
export interface DelBackupAvatarTeamReq {
    /**
     * @generated from protobuf field: optional uint32 backup_avatar_team_id = 4;
     */
    backupAvatarTeamId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DelBackupAvatarTeamReq.CmdId
 */
export enum DelBackupAvatarTeamReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1731;
     */
    CMD_ID = 1731,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.DelBackupAvatarTeamRsp
 */
export interface DelBackupAvatarTeamRsp {
    /**
     * @generated from protobuf field: optional uint32 backup_avatar_team_id = 15;
     */
    backupAvatarTeamId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 4;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.DelBackupAvatarTeamRsp.CmdId
 */
export enum DelBackupAvatarTeamRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1729;
     */
    CMD_ID = 1729,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.AvatarTeamAllDataNotify
 */
export interface AvatarTeamAllDataNotify {
    /**
     * @generated from protobuf field: repeated uint64 temp_avatar_guid_list = 6;
     */
    tempAvatarGuidList: bigint[];
    /**
     * @generated from protobuf field: map<uint32, com.midnights.game.AvatarTeam> avatar_team_map = 3;
     */
    avatarTeamMap: {
        [key: number]: AvatarTeam;
    };
    /**
     * @generated from protobuf field: repeated uint32 backup_avatar_team_order_list = 1;
     */
    backupAvatarTeamOrderList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.AvatarTeamAllDataNotify.CmdId
 */
export enum AvatarTeamAllDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 1749;
     */
    CMD_ID = 1749,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
// @generated message type with reflection information, may provide speed optimized methods
class AvatarAddNotify$Type extends MessageType<AvatarAddNotify> {
    constructor() {
        super("com.midnights.game.AvatarAddNotify", [
            { no: 13, name: "avatar", kind: "message", T: () => AvatarInfo },
            { no: 12, name: "is_in_team", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarAddNotify>): AvatarAddNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarAddNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarAddNotify): AvatarAddNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.AvatarInfo avatar */ 13:
                    message.avatar = AvatarInfo.internalBinaryRead(reader, reader.uint32(), options, message.avatar);
                    break;
                case /* optional bool is_in_team */ 12:
                    message.isInTeam = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarAddNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.AvatarInfo avatar = 13; */
        if (message.avatar)
            AvatarInfo.internalBinaryWrite(message.avatar, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_in_team = 12; */
        if (message.isInTeam !== undefined)
            writer.tag(12, WireType.Varint).bool(message.isInTeam);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarAddNotify
 */
export const AvatarAddNotify = new AvatarAddNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarDelNotify$Type extends MessageType<AvatarDelNotify> {
    constructor() {
        super("com.midnights.game.AvatarDelNotify", [
            { no: 13, name: "avatar_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarDelNotify>): AvatarDelNotify {
        const message = { avatarGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarDelNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarDelNotify): AvatarDelNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint64 avatar_guid_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarGuidList.push(reader.uint64().toBigInt());
                    else
                        message.avatarGuidList.push(reader.uint64().toBigInt());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarDelNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint64 avatar_guid_list = 13; */
        for (let i = 0; i < message.avatarGuidList.length; i++)
            writer.tag(13, WireType.Varint).uint64(message.avatarGuidList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarDelNotify
 */
export const AvatarDelNotify = new AvatarDelNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarTeam$Type extends MessageType<AvatarTeam> {
    constructor() {
        super("com.midnights.game.AvatarTeam", [
            { no: 7, name: "avatar_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "team_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarTeam>): AvatarTeam {
        const message = { avatarGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarTeam>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarTeam): AvatarTeam {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint64 avatar_guid_list */ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarGuidList.push(reader.uint64().toBigInt());
                    else
                        message.avatarGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* optional string team_name */ 14:
                    message.teamName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarTeam, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint64 avatar_guid_list = 7; */
        for (let i = 0; i < message.avatarGuidList.length; i++)
            writer.tag(7, WireType.Varint).uint64(message.avatarGuidList[i]);
        /* optional string team_name = 14; */
        if (message.teamName !== undefined)
            writer.tag(14, WireType.LengthDelimited).string(message.teamName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarTeam
 */
export const AvatarTeam = new AvatarTeam$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetUpAvatarTeamReq$Type extends MessageType<SetUpAvatarTeamReq> {
    constructor() {
        super("com.midnights.game.SetUpAvatarTeamReq", [
            { no: 3, name: "team_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "avatar_team_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "cur_avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<SetUpAvatarTeamReq>): SetUpAvatarTeamReq {
        const message = { avatarTeamGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetUpAvatarTeamReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetUpAvatarTeamReq): SetUpAvatarTeamReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 team_id */ 3:
                    message.teamId = reader.uint32();
                    break;
                case /* repeated uint64 avatar_team_guid_list */ 7:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarTeamGuidList.push(reader.uint64().toBigInt());
                    else
                        message.avatarTeamGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* optional uint64 cur_avatar_guid */ 5:
                    message.curAvatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetUpAvatarTeamReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 team_id = 3; */
        if (message.teamId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.teamId);
        /* repeated uint64 avatar_team_guid_list = 7; */
        for (let i = 0; i < message.avatarTeamGuidList.length; i++)
            writer.tag(7, WireType.Varint).uint64(message.avatarTeamGuidList[i]);
        /* optional uint64 cur_avatar_guid = 5; */
        if (message.curAvatarGuid !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.curAvatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetUpAvatarTeamReq
 */
export const SetUpAvatarTeamReq = new SetUpAvatarTeamReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetUpAvatarTeamRsp$Type extends MessageType<SetUpAvatarTeamRsp> {
    constructor() {
        super("com.midnights.game.SetUpAvatarTeamRsp", [
            { no: 1, name: "avatar_team_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "team_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "cur_avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<SetUpAvatarTeamRsp>): SetUpAvatarTeamRsp {
        const message = { avatarTeamGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SetUpAvatarTeamRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SetUpAvatarTeamRsp): SetUpAvatarTeamRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint64 avatar_team_guid_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarTeamGuidList.push(reader.uint64().toBigInt());
                    else
                        message.avatarTeamGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* optional uint32 team_id */ 6:
                    message.teamId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 cur_avatar_guid */ 13:
                    message.curAvatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SetUpAvatarTeamRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint64 avatar_team_guid_list = 1; */
        for (let i = 0; i < message.avatarTeamGuidList.length; i++)
            writer.tag(1, WireType.Varint).uint64(message.avatarTeamGuidList[i]);
        /* optional uint32 team_id = 6; */
        if (message.teamId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.teamId);
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        /* optional uint64 cur_avatar_guid = 13; */
        if (message.curAvatarGuid !== undefined)
            writer.tag(13, WireType.Varint).uint64(message.curAvatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SetUpAvatarTeamRsp
 */
export const SetUpAvatarTeamRsp = new SetUpAvatarTeamRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChooseCurAvatarTeamReq$Type extends MessageType<ChooseCurAvatarTeamReq> {
    constructor() {
        super("com.midnights.game.ChooseCurAvatarTeamReq", [
            { no: 9, name: "team_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChooseCurAvatarTeamReq>): ChooseCurAvatarTeamReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChooseCurAvatarTeamReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChooseCurAvatarTeamReq): ChooseCurAvatarTeamReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 team_id */ 9:
                    message.teamId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChooseCurAvatarTeamReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 team_id = 9; */
        if (message.teamId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.teamId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChooseCurAvatarTeamReq
 */
export const ChooseCurAvatarTeamReq = new ChooseCurAvatarTeamReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChooseCurAvatarTeamRsp$Type extends MessageType<ChooseCurAvatarTeamRsp> {
    constructor() {
        super("com.midnights.game.ChooseCurAvatarTeamRsp", [
            { no: 1, name: "cur_team_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChooseCurAvatarTeamRsp>): ChooseCurAvatarTeamRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChooseCurAvatarTeamRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChooseCurAvatarTeamRsp): ChooseCurAvatarTeamRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 cur_team_id */ 1:
                    message.curTeamId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChooseCurAvatarTeamRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 cur_team_id = 1; */
        if (message.curTeamId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.curTeamId);
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChooseCurAvatarTeamRsp
 */
export const ChooseCurAvatarTeamRsp = new ChooseCurAvatarTeamRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeAvatarReq$Type extends MessageType<ChangeAvatarReq> {
    constructor() {
        super("com.midnights.game.ChangeAvatarReq", [
            { no: 15, name: "move_pos", kind: "message", T: () => Vector },
            { no: 2, name: "skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "is_move", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeAvatarReq>): ChangeAvatarReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeAvatarReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeAvatarReq): ChangeAvatarReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Vector move_pos */ 15:
                    message.movePos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.movePos);
                    break;
                case /* optional uint32 skill_id */ 2:
                    message.skillId = reader.uint32();
                    break;
                case /* optional uint64 guid */ 7:
                    message.guid = reader.uint64().toBigInt();
                    break;
                case /* optional bool is_move */ 10:
                    message.isMove = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeAvatarReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Vector move_pos = 15; */
        if (message.movePos)
            Vector.internalBinaryWrite(message.movePos, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 skill_id = 2; */
        if (message.skillId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.skillId);
        /* optional uint64 guid = 7; */
        if (message.guid !== undefined)
            writer.tag(7, WireType.Varint).uint64(message.guid);
        /* optional bool is_move = 10; */
        if (message.isMove !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isMove);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeAvatarReq
 */
export const ChangeAvatarReq = new ChangeAvatarReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeAvatarRsp$Type extends MessageType<ChangeAvatarRsp> {
    constructor() {
        super("com.midnights.game.ChangeAvatarRsp", [
            { no: 3, name: "skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "cur_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeAvatarRsp>): ChangeAvatarRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeAvatarRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeAvatarRsp): ChangeAvatarRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 skill_id */ 3:
                    message.skillId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 cur_guid */ 4:
                    message.curGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeAvatarRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 skill_id = 3; */
        if (message.skillId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.skillId);
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* optional uint64 cur_guid = 4; */
        if (message.curGuid !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.curGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeAvatarRsp
 */
export const ChangeAvatarRsp = new ChangeAvatarRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarPromoteReq$Type extends MessageType<AvatarPromoteReq> {
    constructor() {
        super("com.midnights.game.AvatarPromoteReq", [
            { no: 5, name: "guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarPromoteReq>): AvatarPromoteReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarPromoteReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarPromoteReq): AvatarPromoteReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 guid */ 5:
                    message.guid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarPromoteReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 guid = 5; */
        if (message.guid !== undefined)
            writer.tag(5, WireType.Varint).uint64(message.guid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarPromoteReq
 */
export const AvatarPromoteReq = new AvatarPromoteReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarPromoteRsp$Type extends MessageType<AvatarPromoteRsp> {
    constructor() {
        super("com.midnights.game.AvatarPromoteRsp", [
            { no: 11, name: "guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarPromoteRsp>): AvatarPromoteRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarPromoteRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarPromoteRsp): AvatarPromoteRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 guid */ 11:
                    message.guid = reader.uint64().toBigInt();
                    break;
                case /* optional int32 retcode */ 8:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarPromoteRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 guid = 11; */
        if (message.guid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.guid);
        /* optional int32 retcode = 8; */
        if (message.retcode !== undefined)
            writer.tag(8, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarPromoteRsp
 */
export const AvatarPromoteRsp = new AvatarPromoteRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SpringUseReq$Type extends MessageType<SpringUseReq> {
    constructor() {
        super("com.midnights.game.SpringUseReq", [
            { no: 11, name: "guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<SpringUseReq>): SpringUseReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SpringUseReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SpringUseReq): SpringUseReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 guid */ 11:
                    message.guid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SpringUseReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 guid = 11; */
        if (message.guid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.guid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SpringUseReq
 */
export const SpringUseReq = new SpringUseReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SpringUseRsp$Type extends MessageType<SpringUseRsp> {
    constructor() {
        super("com.midnights.game.SpringUseRsp", [
            { no: 3, name: "guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<SpringUseRsp>): SpringUseRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SpringUseRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SpringUseRsp): SpringUseRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 guid */ 3:
                    message.guid = reader.uint64().toBigInt();
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SpringUseRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 guid = 3; */
        if (message.guid !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.guid);
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SpringUseRsp
 */
export const SpringUseRsp = new SpringUseRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RefreshBackgroundAvatarReq$Type extends MessageType<RefreshBackgroundAvatarReq> {
    constructor() {
        super("com.midnights.game.RefreshBackgroundAvatarReq", []);
    }
    create(value?: PartialMessage<RefreshBackgroundAvatarReq>): RefreshBackgroundAvatarReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RefreshBackgroundAvatarReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RefreshBackgroundAvatarReq): RefreshBackgroundAvatarReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: RefreshBackgroundAvatarReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RefreshBackgroundAvatarReq
 */
export const RefreshBackgroundAvatarReq = new RefreshBackgroundAvatarReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RefreshBackgroundAvatarRsp$Type extends MessageType<RefreshBackgroundAvatarRsp> {
    constructor() {
        super("com.midnights.game.RefreshBackgroundAvatarRsp", [
            { no: 15, name: "hp_full_time_map", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<RefreshBackgroundAvatarRsp>): RefreshBackgroundAvatarRsp {
        const message = { hpFullTimeMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<RefreshBackgroundAvatarRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: RefreshBackgroundAvatarRsp): RefreshBackgroundAvatarRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint64, uint32> hp_full_time_map */ 15:
                    this.binaryReadMap15(message.hpFullTimeMap, reader, options);
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap15(map: RefreshBackgroundAvatarRsp["hpFullTimeMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof RefreshBackgroundAvatarRsp["hpFullTimeMap"] | undefined, val: RefreshBackgroundAvatarRsp["hpFullTimeMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint64().toString();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.RefreshBackgroundAvatarRsp.hp_full_time_map");
            }
        }
        map[key ?? "0"] = val ?? 0;
    }
    internalBinaryWrite(message: RefreshBackgroundAvatarRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint64, uint32> hp_full_time_map = 15; */
        for (let k of Object.keys(message.hpFullTimeMap))
            writer.tag(15, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint64(k).tag(2, WireType.Varint).uint32(message.hpFullTimeMap[k]).join();
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.RefreshBackgroundAvatarRsp
 */
export const RefreshBackgroundAvatarRsp = new RefreshBackgroundAvatarRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarTeamUpdateNotify$Type extends MessageType<AvatarTeamUpdateNotify> {
    constructor() {
        super("com.midnights.game.AvatarTeamUpdateNotify", [
            { no: 2, name: "avatar_team_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => AvatarTeam } },
            { no: 13, name: "temp_avatar_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarTeamUpdateNotify>): AvatarTeamUpdateNotify {
        const message = { avatarTeamMap: {}, tempAvatarGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarTeamUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarTeamUpdateNotify): AvatarTeamUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint32, com.midnights.game.AvatarTeam> avatar_team_map */ 2:
                    this.binaryReadMap2(message.avatarTeamMap, reader, options);
                    break;
                case /* repeated uint64 temp_avatar_guid_list */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.tempAvatarGuidList.push(reader.uint64().toBigInt());
                    else
                        message.tempAvatarGuidList.push(reader.uint64().toBigInt());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap2(map: AvatarTeamUpdateNotify["avatarTeamMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarTeamUpdateNotify["avatarTeamMap"] | undefined, val: AvatarTeamUpdateNotify["avatarTeamMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = AvatarTeam.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarTeamUpdateNotify.avatar_team_map");
            }
        }
        map[key ?? 0] = val ?? AvatarTeam.create();
    }
    internalBinaryWrite(message: AvatarTeamUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint32, com.midnights.game.AvatarTeam> avatar_team_map = 2; */
        for (let k of Object.keys(message.avatarTeamMap)) {
            writer.tag(2, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k));
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarTeam.internalBinaryWrite(message.avatarTeamMap[k as any], writer, options);
            writer.join().join();
        }
        /* repeated uint64 temp_avatar_guid_list = 13; */
        for (let i = 0; i < message.tempAvatarGuidList.length; i++)
            writer.tag(13, WireType.Varint).uint64(message.tempAvatarGuidList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarTeamUpdateNotify
 */
export const AvatarTeamUpdateNotify = new AvatarTeamUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarDataNotify$Type extends MessageType<AvatarDataNotify> {
    constructor() {
        super("com.midnights.game.AvatarDataNotify", [
            { no: 11, name: "owned_costume_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "choose_avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "avatar_team_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => AvatarTeam } },
            { no: 9, name: "backup_avatar_team_order_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "temp_avatar_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 1, name: "owned_flycloak_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "avatar_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => AvatarInfo },
            { no: 2, name: "cur_avatar_team_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarDataNotify>): AvatarDataNotify {
        const message = { ownedCostumeList: [], avatarTeamMap: {}, backupAvatarTeamOrderList: [], tempAvatarGuidList: [], ownedFlycloakList: [], avatarList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarDataNotify): AvatarDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 owned_costume_list */ 11:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.ownedCostumeList.push(reader.uint32());
                    else
                        message.ownedCostumeList.push(reader.uint32());
                    break;
                case /* optional uint64 choose_avatar_guid */ 8:
                    message.chooseAvatarGuid = reader.uint64().toBigInt();
                    break;
                case /* map<uint32, com.midnights.game.AvatarTeam> avatar_team_map */ 7:
                    this.binaryReadMap7(message.avatarTeamMap, reader, options);
                    break;
                case /* repeated uint32 backup_avatar_team_order_list */ 9:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.backupAvatarTeamOrderList.push(reader.uint32());
                    else
                        message.backupAvatarTeamOrderList.push(reader.uint32());
                    break;
                case /* repeated uint64 temp_avatar_guid_list */ 12:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.tempAvatarGuidList.push(reader.uint64().toBigInt());
                    else
                        message.tempAvatarGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* repeated uint32 owned_flycloak_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.ownedFlycloakList.push(reader.uint32());
                    else
                        message.ownedFlycloakList.push(reader.uint32());
                    break;
                case /* repeated com.midnights.game.AvatarInfo avatar_list */ 6:
                    message.avatarList.push(AvatarInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 cur_avatar_team_id */ 2:
                    message.curAvatarTeamId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap7(map: AvatarDataNotify["avatarTeamMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarDataNotify["avatarTeamMap"] | undefined, val: AvatarDataNotify["avatarTeamMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = AvatarTeam.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarDataNotify.avatar_team_map");
            }
        }
        map[key ?? 0] = val ?? AvatarTeam.create();
    }
    internalBinaryWrite(message: AvatarDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 owned_costume_list = 11; */
        for (let i = 0; i < message.ownedCostumeList.length; i++)
            writer.tag(11, WireType.Varint).uint32(message.ownedCostumeList[i]);
        /* optional uint64 choose_avatar_guid = 8; */
        if (message.chooseAvatarGuid !== undefined)
            writer.tag(8, WireType.Varint).uint64(message.chooseAvatarGuid);
        /* map<uint32, com.midnights.game.AvatarTeam> avatar_team_map = 7; */
        for (let k of Object.keys(message.avatarTeamMap)) {
            writer.tag(7, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k));
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarTeam.internalBinaryWrite(message.avatarTeamMap[k as any], writer, options);
            writer.join().join();
        }
        /* repeated uint32 backup_avatar_team_order_list = 9; */
        for (let i = 0; i < message.backupAvatarTeamOrderList.length; i++)
            writer.tag(9, WireType.Varint).uint32(message.backupAvatarTeamOrderList[i]);
        /* repeated uint64 temp_avatar_guid_list = 12; */
        for (let i = 0; i < message.tempAvatarGuidList.length; i++)
            writer.tag(12, WireType.Varint).uint64(message.tempAvatarGuidList[i]);
        /* repeated uint32 owned_flycloak_list = 1; */
        for (let i = 0; i < message.ownedFlycloakList.length; i++)
            writer.tag(1, WireType.Varint).uint32(message.ownedFlycloakList[i]);
        /* repeated com.midnights.game.AvatarInfo avatar_list = 6; */
        for (let i = 0; i < message.avatarList.length; i++)
            AvatarInfo.internalBinaryWrite(message.avatarList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 cur_avatar_team_id = 2; */
        if (message.curAvatarTeamId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.curAvatarTeamId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarDataNotify
 */
export const AvatarDataNotify = new AvatarDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarUpgradeReq$Type extends MessageType<AvatarUpgradeReq> {
    constructor() {
        super("com.midnights.game.AvatarUpgradeReq", [
            { no: 6, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "item_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarUpgradeReq>): AvatarUpgradeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarUpgradeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarUpgradeReq): AvatarUpgradeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 6:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 count */ 2:
                    message.count = reader.uint32();
                    break;
                case /* optional uint32 item_id */ 5:
                    message.itemId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarUpgradeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 6; */
        if (message.avatarGuid !== undefined)
            writer.tag(6, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 count = 2; */
        if (message.count !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.count);
        /* optional uint32 item_id = 5; */
        if (message.itemId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.itemId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarUpgradeReq
 */
export const AvatarUpgradeReq = new AvatarUpgradeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarUpgradeRsp$Type extends MessageType<AvatarUpgradeRsp> {
    constructor() {
        super("com.midnights.game.AvatarUpgradeRsp", [
            { no: 6, name: "cur_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "old_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "old_fight_prop_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 2 /*ScalarType.FLOAT*/ } },
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "cur_fight_prop_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 2 /*ScalarType.FLOAT*/ } },
            { no: 15, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarUpgradeRsp>): AvatarUpgradeRsp {
        const message = { oldFightPropMap: {}, curFightPropMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarUpgradeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarUpgradeRsp): AvatarUpgradeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 cur_level */ 6:
                    message.curLevel = reader.uint32();
                    break;
                case /* optional uint32 old_level */ 13:
                    message.oldLevel = reader.uint32();
                    break;
                case /* map<uint32, float> old_fight_prop_map */ 10:
                    this.binaryReadMap10(message.oldFightPropMap, reader, options);
                    break;
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* map<uint32, float> cur_fight_prop_map */ 4:
                    this.binaryReadMap4(message.curFightPropMap, reader, options);
                    break;
                case /* optional uint64 avatar_guid */ 15:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap10(map: AvatarUpgradeRsp["oldFightPropMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarUpgradeRsp["oldFightPropMap"] | undefined, val: AvatarUpgradeRsp["oldFightPropMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.float();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarUpgradeRsp.old_fight_prop_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    private binaryReadMap4(map: AvatarUpgradeRsp["curFightPropMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarUpgradeRsp["curFightPropMap"] | undefined, val: AvatarUpgradeRsp["curFightPropMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.float();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarUpgradeRsp.cur_fight_prop_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: AvatarUpgradeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 cur_level = 6; */
        if (message.curLevel !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.curLevel);
        /* optional uint32 old_level = 13; */
        if (message.oldLevel !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.oldLevel);
        /* map<uint32, float> old_fight_prop_map = 10; */
        for (let k of Object.keys(message.oldFightPropMap))
            writer.tag(10, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Bit32).float(message.oldFightPropMap[k as any]).join();
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* map<uint32, float> cur_fight_prop_map = 4; */
        for (let k of Object.keys(message.curFightPropMap))
            writer.tag(4, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Bit32).float(message.curFightPropMap[k as any]).join();
        /* optional uint64 avatar_guid = 15; */
        if (message.avatarGuid !== undefined)
            writer.tag(15, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarUpgradeRsp
 */
export const AvatarUpgradeRsp = new AvatarUpgradeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarDieAnimationEndReq$Type extends MessageType<AvatarDieAnimationEndReq> {
    constructor() {
        super("com.midnights.game.AvatarDieAnimationEndReq", [
            { no: 3, name: "reborn_pos", kind: "message", T: () => Vector },
            { no: 7, name: "die_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarDieAnimationEndReq>): AvatarDieAnimationEndReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarDieAnimationEndReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarDieAnimationEndReq): AvatarDieAnimationEndReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Vector reborn_pos */ 3:
                    message.rebornPos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.rebornPos);
                    break;
                case /* optional uint64 die_guid */ 7:
                    message.dieGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 skill_id */ 8:
                    message.skillId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarDieAnimationEndReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Vector reborn_pos = 3; */
        if (message.rebornPos)
            Vector.internalBinaryWrite(message.rebornPos, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 die_guid = 7; */
        if (message.dieGuid !== undefined)
            writer.tag(7, WireType.Varint).uint64(message.dieGuid);
        /* optional uint32 skill_id = 8; */
        if (message.skillId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.skillId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarDieAnimationEndReq
 */
export const AvatarDieAnimationEndReq = new AvatarDieAnimationEndReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarDieAnimationEndRsp$Type extends MessageType<AvatarDieAnimationEndRsp> {
    constructor() {
        super("com.midnights.game.AvatarDieAnimationEndRsp", [
            { no: 13, name: "skill_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "die_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarDieAnimationEndRsp>): AvatarDieAnimationEndRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarDieAnimationEndRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarDieAnimationEndRsp): AvatarDieAnimationEndRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 skill_id */ 13:
                    message.skillId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 14:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 die_guid */ 15:
                    message.dieGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarDieAnimationEndRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 skill_id = 13; */
        if (message.skillId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.skillId);
        /* optional int32 retcode = 14; */
        if (message.retcode !== undefined)
            writer.tag(14, WireType.Varint).int32(message.retcode);
        /* optional uint64 die_guid = 15; */
        if (message.dieGuid !== undefined)
            writer.tag(15, WireType.Varint).uint64(message.dieGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarDieAnimationEndRsp
 */
export const AvatarDieAnimationEndRsp = new AvatarDieAnimationEndRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarChangeElementTypeReq$Type extends MessageType<AvatarChangeElementTypeReq> {
    constructor() {
        super("com.midnights.game.AvatarChangeElementTypeReq", [
            { no: 7, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "area_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarChangeElementTypeReq>): AvatarChangeElementTypeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarChangeElementTypeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarChangeElementTypeReq): AvatarChangeElementTypeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 scene_id */ 7:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 area_id */ 3:
                    message.areaId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarChangeElementTypeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 scene_id = 7; */
        if (message.sceneId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 area_id = 3; */
        if (message.areaId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.areaId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarChangeElementTypeReq
 */
export const AvatarChangeElementTypeReq = new AvatarChangeElementTypeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarChangeElementTypeRsp$Type extends MessageType<AvatarChangeElementTypeRsp> {
    constructor() {
        super("com.midnights.game.AvatarChangeElementTypeRsp", [
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarChangeElementTypeRsp>): AvatarChangeElementTypeRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarChangeElementTypeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarChangeElementTypeRsp): AvatarChangeElementTypeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarChangeElementTypeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarChangeElementTypeRsp
 */
export const AvatarChangeElementTypeRsp = new AvatarChangeElementTypeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarFetterDataNotify$Type extends MessageType<AvatarFetterDataNotify> {
    constructor() {
        super("com.midnights.game.AvatarFetterDataNotify", [
            { no: 15, name: "fetter_info_map", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => AvatarFetterInfo } }
        ]);
    }
    create(value?: PartialMessage<AvatarFetterDataNotify>): AvatarFetterDataNotify {
        const message = { fetterInfoMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarFetterDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarFetterDataNotify): AvatarFetterDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint64, com.midnights.game.AvatarFetterInfo> fetter_info_map */ 15:
                    this.binaryReadMap15(message.fetterInfoMap, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap15(map: AvatarFetterDataNotify["fetterInfoMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarFetterDataNotify["fetterInfoMap"] | undefined, val: AvatarFetterDataNotify["fetterInfoMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint64().toString();
                    break;
                case 2:
                    val = AvatarFetterInfo.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarFetterDataNotify.fetter_info_map");
            }
        }
        map[key ?? "0"] = val ?? AvatarFetterInfo.create();
    }
    internalBinaryWrite(message: AvatarFetterDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint64, com.midnights.game.AvatarFetterInfo> fetter_info_map = 15; */
        for (let k of Object.keys(message.fetterInfoMap)) {
            writer.tag(15, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint64(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarFetterInfo.internalBinaryWrite(message.fetterInfoMap[k], writer, options);
            writer.join().join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarFetterDataNotify
 */
export const AvatarFetterDataNotify = new AvatarFetterDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionDataNotify$Type extends MessageType<AvatarExpeditionDataNotify> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionDataNotify", [
            { no: 6, name: "expedition_info_map", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => AvatarExpeditionInfo } }
        ]);
    }
    create(value?: PartialMessage<AvatarExpeditionDataNotify>): AvatarExpeditionDataNotify {
        const message = { expeditionInfoMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionDataNotify): AvatarExpeditionDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map */ 6:
                    this.binaryReadMap6(message.expeditionInfoMap, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap6(map: AvatarExpeditionDataNotify["expeditionInfoMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarExpeditionDataNotify["expeditionInfoMap"] | undefined, val: AvatarExpeditionDataNotify["expeditionInfoMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint64().toString();
                    break;
                case 2:
                    val = AvatarExpeditionInfo.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarExpeditionDataNotify.expedition_info_map");
            }
        }
        map[key ?? "0"] = val ?? AvatarExpeditionInfo.create();
    }
    internalBinaryWrite(message: AvatarExpeditionDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 6; */
        for (let k of Object.keys(message.expeditionInfoMap)) {
            writer.tag(6, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint64(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarExpeditionInfo.internalBinaryWrite(message.expeditionInfoMap[k], writer, options);
            writer.join().join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionDataNotify
 */
export const AvatarExpeditionDataNotify = new AvatarExpeditionDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionAllDataReq$Type extends MessageType<AvatarExpeditionAllDataReq> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionAllDataReq", []);
    }
    create(value?: PartialMessage<AvatarExpeditionAllDataReq>): AvatarExpeditionAllDataReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionAllDataReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionAllDataReq): AvatarExpeditionAllDataReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: AvatarExpeditionAllDataReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionAllDataReq
 */
export const AvatarExpeditionAllDataReq = new AvatarExpeditionAllDataReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionAllDataRsp$Type extends MessageType<AvatarExpeditionAllDataRsp> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionAllDataRsp", [
            { no: 3, name: "open_expedition_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "expedition_count_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "expedition_info_map", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => AvatarExpeditionInfo } }
        ]);
    }
    create(value?: PartialMessage<AvatarExpeditionAllDataRsp>): AvatarExpeditionAllDataRsp {
        const message = { openExpeditionList: [], expeditionInfoMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionAllDataRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionAllDataRsp): AvatarExpeditionAllDataRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 open_expedition_list */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.openExpeditionList.push(reader.uint32());
                    else
                        message.openExpeditionList.push(reader.uint32());
                    break;
                case /* optional int32 retcode */ 15:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 expedition_count_limit */ 12:
                    message.expeditionCountLimit = reader.uint32();
                    break;
                case /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map */ 4:
                    this.binaryReadMap4(message.expeditionInfoMap, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap4(map: AvatarExpeditionAllDataRsp["expeditionInfoMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarExpeditionAllDataRsp["expeditionInfoMap"] | undefined, val: AvatarExpeditionAllDataRsp["expeditionInfoMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint64().toString();
                    break;
                case 2:
                    val = AvatarExpeditionInfo.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarExpeditionAllDataRsp.expedition_info_map");
            }
        }
        map[key ?? "0"] = val ?? AvatarExpeditionInfo.create();
    }
    internalBinaryWrite(message: AvatarExpeditionAllDataRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 open_expedition_list = 3; */
        for (let i = 0; i < message.openExpeditionList.length; i++)
            writer.tag(3, WireType.Varint).uint32(message.openExpeditionList[i]);
        /* optional int32 retcode = 15; */
        if (message.retcode !== undefined)
            writer.tag(15, WireType.Varint).int32(message.retcode);
        /* optional uint32 expedition_count_limit = 12; */
        if (message.expeditionCountLimit !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.expeditionCountLimit);
        /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 4; */
        for (let k of Object.keys(message.expeditionInfoMap)) {
            writer.tag(4, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint64(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarExpeditionInfo.internalBinaryWrite(message.expeditionInfoMap[k], writer, options);
            writer.join().join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionAllDataRsp
 */
export const AvatarExpeditionAllDataRsp = new AvatarExpeditionAllDataRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionStartReq$Type extends MessageType<AvatarExpeditionStartReq> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionStartReq", [
            { no: 9, name: "exp_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "hour_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarExpeditionStartReq>): AvatarExpeditionStartReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionStartReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionStartReq): AvatarExpeditionStartReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 exp_id */ 9:
                    message.expId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 10:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 hour_time */ 2:
                    message.hourTime = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarExpeditionStartReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 exp_id = 9; */
        if (message.expId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.expId);
        /* optional uint64 avatar_guid = 10; */
        if (message.avatarGuid !== undefined)
            writer.tag(10, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 hour_time = 2; */
        if (message.hourTime !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.hourTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionStartReq
 */
export const AvatarExpeditionStartReq = new AvatarExpeditionStartReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionStartRsp$Type extends MessageType<AvatarExpeditionStartRsp> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionStartRsp", [
            { no: 2, name: "expedition_info_map", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => AvatarExpeditionInfo } },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarExpeditionStartRsp>): AvatarExpeditionStartRsp {
        const message = { expeditionInfoMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionStartRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionStartRsp): AvatarExpeditionStartRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map */ 2:
                    this.binaryReadMap2(message.expeditionInfoMap, reader, options);
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap2(map: AvatarExpeditionStartRsp["expeditionInfoMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarExpeditionStartRsp["expeditionInfoMap"] | undefined, val: AvatarExpeditionStartRsp["expeditionInfoMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint64().toString();
                    break;
                case 2:
                    val = AvatarExpeditionInfo.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarExpeditionStartRsp.expedition_info_map");
            }
        }
        map[key ?? "0"] = val ?? AvatarExpeditionInfo.create();
    }
    internalBinaryWrite(message: AvatarExpeditionStartRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 2; */
        for (let k of Object.keys(message.expeditionInfoMap)) {
            writer.tag(2, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint64(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarExpeditionInfo.internalBinaryWrite(message.expeditionInfoMap[k], writer, options);
            writer.join().join();
        }
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionStartRsp
 */
export const AvatarExpeditionStartRsp = new AvatarExpeditionStartRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionCallBackReq$Type extends MessageType<AvatarExpeditionCallBackReq> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionCallBackReq", [
            { no: 13, name: "avatar_guid", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarExpeditionCallBackReq>): AvatarExpeditionCallBackReq {
        const message = { avatarGuid: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionCallBackReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionCallBackReq): AvatarExpeditionCallBackReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint64 avatar_guid */ 13:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarGuid.push(reader.uint64().toBigInt());
                    else
                        message.avatarGuid.push(reader.uint64().toBigInt());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarExpeditionCallBackReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint64 avatar_guid = 13; */
        for (let i = 0; i < message.avatarGuid.length; i++)
            writer.tag(13, WireType.Varint).uint64(message.avatarGuid[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionCallBackReq
 */
export const AvatarExpeditionCallBackReq = new AvatarExpeditionCallBackReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionCallBackRsp$Type extends MessageType<AvatarExpeditionCallBackRsp> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionCallBackRsp", [
            { no: 9, name: "expedition_info_map", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => AvatarExpeditionInfo } },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarExpeditionCallBackRsp>): AvatarExpeditionCallBackRsp {
        const message = { expeditionInfoMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionCallBackRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionCallBackRsp): AvatarExpeditionCallBackRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map */ 9:
                    this.binaryReadMap9(message.expeditionInfoMap, reader, options);
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap9(map: AvatarExpeditionCallBackRsp["expeditionInfoMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarExpeditionCallBackRsp["expeditionInfoMap"] | undefined, val: AvatarExpeditionCallBackRsp["expeditionInfoMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint64().toString();
                    break;
                case 2:
                    val = AvatarExpeditionInfo.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarExpeditionCallBackRsp.expedition_info_map");
            }
        }
        map[key ?? "0"] = val ?? AvatarExpeditionInfo.create();
    }
    internalBinaryWrite(message: AvatarExpeditionCallBackRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 9; */
        for (let k of Object.keys(message.expeditionInfoMap)) {
            writer.tag(9, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint64(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarExpeditionInfo.internalBinaryWrite(message.expeditionInfoMap[k], writer, options);
            writer.join().join();
        }
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionCallBackRsp
 */
export const AvatarExpeditionCallBackRsp = new AvatarExpeditionCallBackRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionGetRewardReq$Type extends MessageType<AvatarExpeditionGetRewardReq> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionGetRewardReq", [
            { no: 14, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarExpeditionGetRewardReq>): AvatarExpeditionGetRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionGetRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionGetRewardReq): AvatarExpeditionGetRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 14:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarExpeditionGetRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 14; */
        if (message.avatarGuid !== undefined)
            writer.tag(14, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionGetRewardReq
 */
export const AvatarExpeditionGetRewardReq = new AvatarExpeditionGetRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarExpeditionGetRewardRsp$Type extends MessageType<AvatarExpeditionGetRewardRsp> {
    constructor() {
        super("com.midnights.game.AvatarExpeditionGetRewardRsp", [
            { no: 9, name: "extra_item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam },
            { no: 8, name: "item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ItemParam },
            { no: 12, name: "expedition_info_map", kind: "map", K: 4 /*ScalarType.UINT64*/, V: { kind: "message", T: () => AvatarExpeditionInfo } },
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarExpeditionGetRewardRsp>): AvatarExpeditionGetRewardRsp {
        const message = { extraItemList: [], itemList: [], expeditionInfoMap: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarExpeditionGetRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarExpeditionGetRewardRsp): AvatarExpeditionGetRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ItemParam extra_item_list */ 9:
                    message.extraItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.ItemParam item_list */ 8:
                    message.itemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map */ 12:
                    this.binaryReadMap12(message.expeditionInfoMap, reader, options);
                    break;
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap12(map: AvatarExpeditionGetRewardRsp["expeditionInfoMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarExpeditionGetRewardRsp["expeditionInfoMap"] | undefined, val: AvatarExpeditionGetRewardRsp["expeditionInfoMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint64().toString();
                    break;
                case 2:
                    val = AvatarExpeditionInfo.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarExpeditionGetRewardRsp.expedition_info_map");
            }
        }
        map[key ?? "0"] = val ?? AvatarExpeditionInfo.create();
    }
    internalBinaryWrite(message: AvatarExpeditionGetRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ItemParam extra_item_list = 9; */
        for (let i = 0; i < message.extraItemList.length; i++)
            ItemParam.internalBinaryWrite(message.extraItemList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.ItemParam item_list = 8; */
        for (let i = 0; i < message.itemList.length; i++)
            ItemParam.internalBinaryWrite(message.itemList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* map<uint64, com.midnights.game.AvatarExpeditionInfo> expedition_info_map = 12; */
        for (let k of Object.keys(message.expeditionInfoMap)) {
            writer.tag(12, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint64(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarExpeditionInfo.internalBinaryWrite(message.expeditionInfoMap[k], writer, options);
            writer.join().join();
        }
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarExpeditionGetRewardRsp
 */
export const AvatarExpeditionGetRewardRsp = new AvatarExpeditionGetRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeMpTeamAvatarReq$Type extends MessageType<ChangeMpTeamAvatarReq> {
    constructor() {
        super("com.midnights.game.ChangeMpTeamAvatarReq", [
            { no: 4, name: "cur_avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "avatar_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeMpTeamAvatarReq>): ChangeMpTeamAvatarReq {
        const message = { avatarGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeMpTeamAvatarReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeMpTeamAvatarReq): ChangeMpTeamAvatarReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 cur_avatar_guid */ 4:
                    message.curAvatarGuid = reader.uint64().toBigInt();
                    break;
                case /* repeated uint64 avatar_guid_list */ 8:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarGuidList.push(reader.uint64().toBigInt());
                    else
                        message.avatarGuidList.push(reader.uint64().toBigInt());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeMpTeamAvatarReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 cur_avatar_guid = 4; */
        if (message.curAvatarGuid !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.curAvatarGuid);
        /* repeated uint64 avatar_guid_list = 8; */
        for (let i = 0; i < message.avatarGuidList.length; i++)
            writer.tag(8, WireType.Varint).uint64(message.avatarGuidList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeMpTeamAvatarReq
 */
export const ChangeMpTeamAvatarReq = new ChangeMpTeamAvatarReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeMpTeamAvatarRsp$Type extends MessageType<ChangeMpTeamAvatarRsp> {
    constructor() {
        super("com.midnights.game.ChangeMpTeamAvatarRsp", [
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "avatar_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "cur_avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeMpTeamAvatarRsp>): ChangeMpTeamAvatarRsp {
        const message = { avatarGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeMpTeamAvatarRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeMpTeamAvatarRsp): ChangeMpTeamAvatarRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint64 avatar_guid_list */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarGuidList.push(reader.uint64().toBigInt());
                    else
                        message.avatarGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* optional uint64 cur_avatar_guid */ 13:
                    message.curAvatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeMpTeamAvatarRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        /* repeated uint64 avatar_guid_list = 3; */
        for (let i = 0; i < message.avatarGuidList.length; i++)
            writer.tag(3, WireType.Varint).uint64(message.avatarGuidList[i]);
        /* optional uint64 cur_avatar_guid = 13; */
        if (message.curAvatarGuid !== undefined)
            writer.tag(13, WireType.Varint).uint64(message.curAvatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeMpTeamAvatarRsp
 */
export const ChangeMpTeamAvatarRsp = new ChangeMpTeamAvatarRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeTeamNameReq$Type extends MessageType<ChangeTeamNameReq> {
    constructor() {
        super("com.midnights.game.ChangeTeamNameReq", [
            { no: 8, name: "team_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "team_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeTeamNameReq>): ChangeTeamNameReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeTeamNameReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeTeamNameReq): ChangeTeamNameReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 team_id */ 8:
                    message.teamId = reader.int32();
                    break;
                case /* optional string team_name */ 9:
                    message.teamName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeTeamNameReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 team_id = 8; */
        if (message.teamId !== undefined)
            writer.tag(8, WireType.Varint).int32(message.teamId);
        /* optional string team_name = 9; */
        if (message.teamName !== undefined)
            writer.tag(9, WireType.LengthDelimited).string(message.teamName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeTeamNameReq
 */
export const ChangeTeamNameReq = new ChangeTeamNameReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChangeTeamNameRsp$Type extends MessageType<ChangeTeamNameRsp> {
    constructor() {
        super("com.midnights.game.ChangeTeamNameRsp", [
            { no: 11, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "team_name", kind: "scalar", opt: true, T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "team_id", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ChangeTeamNameRsp>): ChangeTeamNameRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ChangeTeamNameRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ChangeTeamNameRsp): ChangeTeamNameRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 11:
                    message.retcode = reader.int32();
                    break;
                case /* optional string team_name */ 2:
                    message.teamName = reader.string();
                    break;
                case /* optional int32 team_id */ 4:
                    message.teamId = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ChangeTeamNameRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 11; */
        if (message.retcode !== undefined)
            writer.tag(11, WireType.Varint).int32(message.retcode);
        /* optional string team_name = 2; */
        if (message.teamName !== undefined)
            writer.tag(2, WireType.LengthDelimited).string(message.teamName);
        /* optional int32 team_id = 4; */
        if (message.teamId !== undefined)
            writer.tag(4, WireType.Varint).int32(message.teamId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ChangeTeamNameRsp
 */
export const ChangeTeamNameRsp = new ChangeTeamNameRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SceneTeamAvatar$Type extends MessageType<SceneTeamAvatar> {
    constructor() {
        super("com.midnights.game.SceneTeamAvatar", [
            { no: 5, name: "avatar_ability_info", kind: "message", T: () => AbilitySyncStateInfo },
            { no: 8, name: "avatar_info", kind: "message", T: () => AvatarInfo },
            { no: 152, name: "is_on_scene", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 1, name: "scene_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "weapon_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "scene_avatar_info", kind: "message", T: () => SceneAvatarInfo },
            { no: 4, name: "weapon_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "weapon_ability_info", kind: "message", T: () => AbilitySyncStateInfo },
            { no: 12, name: "scene_entity_info", kind: "message", T: () => SceneEntityInfo },
            { no: 14, name: "player_uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "is_reconnect", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "ability_control_block", kind: "message", T: () => AbilityControlBlock },
            { no: 13, name: "is_player_cur_avatar", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "server_buff_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => ServerBuff }
        ]);
    }
    create(value?: PartialMessage<SceneTeamAvatar>): SceneTeamAvatar {
        const message = { serverBuffList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SceneTeamAvatar>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SceneTeamAvatar): SceneTeamAvatar {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.AbilitySyncStateInfo avatar_ability_info */ 5:
                    message.avatarAbilityInfo = AbilitySyncStateInfo.internalBinaryRead(reader, reader.uint32(), options, message.avatarAbilityInfo);
                    break;
                case /* optional com.midnights.game.AvatarInfo avatar_info */ 8:
                    message.avatarInfo = AvatarInfo.internalBinaryRead(reader, reader.uint32(), options, message.avatarInfo);
                    break;
                case /* optional bool is_on_scene */ 152:
                    message.isOnScene = reader.bool();
                    break;
                case /* optional uint32 entity_id */ 9:
                    message.entityId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 15:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 scene_id */ 1:
                    message.sceneId = reader.uint32();
                    break;
                case /* optional uint32 weapon_entity_id */ 7:
                    message.weaponEntityId = reader.uint32();
                    break;
                case /* optional com.midnights.game.SceneAvatarInfo scene_avatar_info */ 3:
                    message.sceneAvatarInfo = SceneAvatarInfo.internalBinaryRead(reader, reader.uint32(), options, message.sceneAvatarInfo);
                    break;
                case /* optional uint64 weapon_guid */ 4:
                    message.weaponGuid = reader.uint64().toBigInt();
                    break;
                case /* optional com.midnights.game.AbilitySyncStateInfo weapon_ability_info */ 11:
                    message.weaponAbilityInfo = AbilitySyncStateInfo.internalBinaryRead(reader, reader.uint32(), options, message.weaponAbilityInfo);
                    break;
                case /* optional com.midnights.game.SceneEntityInfo scene_entity_info */ 12:
                    message.sceneEntityInfo = SceneEntityInfo.internalBinaryRead(reader, reader.uint32(), options, message.sceneEntityInfo);
                    break;
                case /* optional uint32 player_uid */ 14:
                    message.playerUid = reader.uint32();
                    break;
                case /* optional bool is_reconnect */ 6:
                    message.isReconnect = reader.bool();
                    break;
                case /* optional com.midnights.game.AbilityControlBlock ability_control_block */ 2:
                    message.abilityControlBlock = AbilityControlBlock.internalBinaryRead(reader, reader.uint32(), options, message.abilityControlBlock);
                    break;
                case /* optional bool is_player_cur_avatar */ 13:
                    message.isPlayerCurAvatar = reader.bool();
                    break;
                case /* repeated com.midnights.game.ServerBuff server_buff_list */ 10:
                    message.serverBuffList.push(ServerBuff.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SceneTeamAvatar, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.AbilitySyncStateInfo avatar_ability_info = 5; */
        if (message.avatarAbilityInfo)
            AbilitySyncStateInfo.internalBinaryWrite(message.avatarAbilityInfo, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.AvatarInfo avatar_info = 8; */
        if (message.avatarInfo)
            AvatarInfo.internalBinaryWrite(message.avatarInfo, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_on_scene = 152; */
        if (message.isOnScene !== undefined)
            writer.tag(152, WireType.Varint).bool(message.isOnScene);
        /* optional uint32 entity_id = 9; */
        if (message.entityId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.entityId);
        /* optional uint64 avatar_guid = 15; */
        if (message.avatarGuid !== undefined)
            writer.tag(15, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 scene_id = 1; */
        if (message.sceneId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.sceneId);
        /* optional uint32 weapon_entity_id = 7; */
        if (message.weaponEntityId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.weaponEntityId);
        /* optional com.midnights.game.SceneAvatarInfo scene_avatar_info = 3; */
        if (message.sceneAvatarInfo)
            SceneAvatarInfo.internalBinaryWrite(message.sceneAvatarInfo, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional uint64 weapon_guid = 4; */
        if (message.weaponGuid !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.weaponGuid);
        /* optional com.midnights.game.AbilitySyncStateInfo weapon_ability_info = 11; */
        if (message.weaponAbilityInfo)
            AbilitySyncStateInfo.internalBinaryWrite(message.weaponAbilityInfo, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* optional com.midnights.game.SceneEntityInfo scene_entity_info = 12; */
        if (message.sceneEntityInfo)
            SceneEntityInfo.internalBinaryWrite(message.sceneEntityInfo, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 player_uid = 14; */
        if (message.playerUid !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.playerUid);
        /* optional bool is_reconnect = 6; */
        if (message.isReconnect !== undefined)
            writer.tag(6, WireType.Varint).bool(message.isReconnect);
        /* optional com.midnights.game.AbilityControlBlock ability_control_block = 2; */
        if (message.abilityControlBlock)
            AbilityControlBlock.internalBinaryWrite(message.abilityControlBlock, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_player_cur_avatar = 13; */
        if (message.isPlayerCurAvatar !== undefined)
            writer.tag(13, WireType.Varint).bool(message.isPlayerCurAvatar);
        /* repeated com.midnights.game.ServerBuff server_buff_list = 10; */
        for (let i = 0; i < message.serverBuffList.length; i++)
            ServerBuff.internalBinaryWrite(message.serverBuffList[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SceneTeamAvatar
 */
export const SceneTeamAvatar = new SceneTeamAvatar$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SceneTeamUpdateNotify$Type extends MessageType<SceneTeamUpdateNotify> {
    constructor() {
        super("com.midnights.game.SceneTeamUpdateNotify", [
            { no: 11, name: "scene_team_avatar_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => SceneTeamAvatar },
            { no: 15, name: "is_in_mp", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<SceneTeamUpdateNotify>): SceneTeamUpdateNotify {
        const message = { sceneTeamAvatarList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<SceneTeamUpdateNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: SceneTeamUpdateNotify): SceneTeamUpdateNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.SceneTeamAvatar scene_team_avatar_list */ 11:
                    message.sceneTeamAvatarList.push(SceneTeamAvatar.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional bool is_in_mp */ 15:
                    message.isInMp = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: SceneTeamUpdateNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.SceneTeamAvatar scene_team_avatar_list = 11; */
        for (let i = 0; i < message.sceneTeamAvatarList.length; i++)
            SceneTeamAvatar.internalBinaryWrite(message.sceneTeamAvatarList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* optional bool is_in_mp = 15; */
        if (message.isInMp !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isInMp);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.SceneTeamUpdateNotify
 */
export const SceneTeamUpdateNotify = new SceneTeamUpdateNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FocusAvatarReq$Type extends MessageType<FocusAvatarReq> {
    constructor() {
        super("com.midnights.game.FocusAvatarReq", [
            { no: 1, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "is_focus", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<FocusAvatarReq>): FocusAvatarReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FocusAvatarReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FocusAvatarReq): FocusAvatarReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 1:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional bool is_focus */ 8:
                    message.isFocus = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FocusAvatarReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 1; */
        if (message.avatarGuid !== undefined)
            writer.tag(1, WireType.Varint).uint64(message.avatarGuid);
        /* optional bool is_focus = 8; */
        if (message.isFocus !== undefined)
            writer.tag(8, WireType.Varint).bool(message.isFocus);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FocusAvatarReq
 */
export const FocusAvatarReq = new FocusAvatarReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FocusAvatarRsp$Type extends MessageType<FocusAvatarRsp> {
    constructor() {
        super("com.midnights.game.FocusAvatarRsp", [
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "is_focus", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<FocusAvatarRsp>): FocusAvatarRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FocusAvatarRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FocusAvatarRsp): FocusAvatarRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                case /* optional bool is_focus */ 11:
                    message.isFocus = reader.bool();
                    break;
                case /* optional uint64 avatar_guid */ 4:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FocusAvatarRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        /* optional bool is_focus = 11; */
        if (message.isFocus !== undefined)
            writer.tag(11, WireType.Varint).bool(message.isFocus);
        /* optional uint64 avatar_guid = 4; */
        if (message.avatarGuid !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FocusAvatarRsp
 */
export const FocusAvatarRsp = new FocusAvatarRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarSatiationData$Type extends MessageType<AvatarSatiationData> {
    constructor() {
        super("com.midnights.game.AvatarSatiationData", [
            { no: 14, name: "finish_time", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/ },
            { no: 13, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "penalty_finish_time", kind: "scalar", opt: true, T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarSatiationData>): AvatarSatiationData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarSatiationData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarSatiationData): AvatarSatiationData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional float finish_time */ 14:
                    message.finishTime = reader.float();
                    break;
                case /* optional uint64 avatar_guid */ 13:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional float penalty_finish_time */ 12:
                    message.penaltyFinishTime = reader.float();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarSatiationData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional float finish_time = 14; */
        if (message.finishTime !== undefined)
            writer.tag(14, WireType.Bit32).float(message.finishTime);
        /* optional uint64 avatar_guid = 13; */
        if (message.avatarGuid !== undefined)
            writer.tag(13, WireType.Varint).uint64(message.avatarGuid);
        /* optional float penalty_finish_time = 12; */
        if (message.penaltyFinishTime !== undefined)
            writer.tag(12, WireType.Bit32).float(message.penaltyFinishTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarSatiationData
 */
export const AvatarSatiationData = new AvatarSatiationData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarSatiationDataNotify$Type extends MessageType<AvatarSatiationDataNotify> {
    constructor() {
        super("com.midnights.game.AvatarSatiationDataNotify", [
            { no: 6, name: "satiation_data_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => AvatarSatiationData }
        ]);
    }
    create(value?: PartialMessage<AvatarSatiationDataNotify>): AvatarSatiationDataNotify {
        const message = { satiationDataList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarSatiationDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarSatiationDataNotify): AvatarSatiationDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.AvatarSatiationData satiation_data_list */ 6:
                    message.satiationDataList.push(AvatarSatiationData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarSatiationDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.AvatarSatiationData satiation_data_list = 6; */
        for (let i = 0; i < message.satiationDataList.length; i++)
            AvatarSatiationData.internalBinaryWrite(message.satiationDataList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarSatiationDataNotify
 */
export const AvatarSatiationDataNotify = new AvatarSatiationDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarWearFlycloakReq$Type extends MessageType<AvatarWearFlycloakReq> {
    constructor() {
        super("com.midnights.game.AvatarWearFlycloakReq", [
            { no: 11, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "flycloak_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarWearFlycloakReq>): AvatarWearFlycloakReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarWearFlycloakReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarWearFlycloakReq): AvatarWearFlycloakReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 11:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 flycloak_id */ 13:
                    message.flycloakId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarWearFlycloakReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 11; */
        if (message.avatarGuid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 flycloak_id = 13; */
        if (message.flycloakId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.flycloakId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarWearFlycloakReq
 */
export const AvatarWearFlycloakReq = new AvatarWearFlycloakReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarWearFlycloakRsp$Type extends MessageType<AvatarWearFlycloakRsp> {
    constructor() {
        super("com.midnights.game.AvatarWearFlycloakRsp", [
            { no: 13, name: "flycloak_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarWearFlycloakRsp>): AvatarWearFlycloakRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarWearFlycloakRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarWearFlycloakRsp): AvatarWearFlycloakRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 flycloak_id */ 13:
                    message.flycloakId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 7:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional int32 retcode */ 6:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarWearFlycloakRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 flycloak_id = 13; */
        if (message.flycloakId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.flycloakId);
        /* optional uint64 avatar_guid = 7; */
        if (message.avatarGuid !== undefined)
            writer.tag(7, WireType.Varint).uint64(message.avatarGuid);
        /* optional int32 retcode = 6; */
        if (message.retcode !== undefined)
            writer.tag(6, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarWearFlycloakRsp
 */
export const AvatarWearFlycloakRsp = new AvatarWearFlycloakRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarFlycloakChangeNotify$Type extends MessageType<AvatarFlycloakChangeNotify> {
    constructor() {
        super("com.midnights.game.AvatarFlycloakChangeNotify", [
            { no: 8, name: "flycloak_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarFlycloakChangeNotify>): AvatarFlycloakChangeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarFlycloakChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarFlycloakChangeNotify): AvatarFlycloakChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 flycloak_id */ 8:
                    message.flycloakId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 2:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarFlycloakChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 flycloak_id = 8; */
        if (message.flycloakId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.flycloakId);
        /* optional uint64 avatar_guid = 2; */
        if (message.avatarGuid !== undefined)
            writer.tag(2, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarFlycloakChangeNotify
 */
export const AvatarFlycloakChangeNotify = new AvatarFlycloakChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarGainFlycloakNotify$Type extends MessageType<AvatarGainFlycloakNotify> {
    constructor() {
        super("com.midnights.game.AvatarGainFlycloakNotify", [
            { no: 3, name: "flycloak_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarGainFlycloakNotify>): AvatarGainFlycloakNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarGainFlycloakNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarGainFlycloakNotify): AvatarGainFlycloakNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 flycloak_id */ 3:
                    message.flycloakId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarGainFlycloakNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 flycloak_id = 3; */
        if (message.flycloakId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.flycloakId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarGainFlycloakNotify
 */
export const AvatarGainFlycloakNotify = new AvatarGainFlycloakNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarEquipAffixStartNotify$Type extends MessageType<AvatarEquipAffixStartNotify> {
    constructor() {
        super("com.midnights.game.AvatarEquipAffixStartNotify", [
            { no: 4, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "equip_affix_info", kind: "message", T: () => AvatarEquipAffixInfo }
        ]);
    }
    create(value?: PartialMessage<AvatarEquipAffixStartNotify>): AvatarEquipAffixStartNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarEquipAffixStartNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarEquipAffixStartNotify): AvatarEquipAffixStartNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 4:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional com.midnights.game.AvatarEquipAffixInfo equip_affix_info */ 12:
                    message.equipAffixInfo = AvatarEquipAffixInfo.internalBinaryRead(reader, reader.uint32(), options, message.equipAffixInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarEquipAffixStartNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 4; */
        if (message.avatarGuid !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.avatarGuid);
        /* optional com.midnights.game.AvatarEquipAffixInfo equip_affix_info = 12; */
        if (message.equipAffixInfo)
            AvatarEquipAffixInfo.internalBinaryWrite(message.equipAffixInfo, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarEquipAffixStartNotify
 */
export const AvatarEquipAffixStartNotify = new AvatarEquipAffixStartNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarFetterLevelRewardReq$Type extends MessageType<AvatarFetterLevelRewardReq> {
    constructor() {
        super("com.midnights.game.AvatarFetterLevelRewardReq", [
            { no: 1, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "fetter_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarFetterLevelRewardReq>): AvatarFetterLevelRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarFetterLevelRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarFetterLevelRewardReq): AvatarFetterLevelRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 1:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 fetter_level */ 6:
                    message.fetterLevel = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarFetterLevelRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 1; */
        if (message.avatarGuid !== undefined)
            writer.tag(1, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 fetter_level = 6; */
        if (message.fetterLevel !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.fetterLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarFetterLevelRewardReq
 */
export const AvatarFetterLevelRewardReq = new AvatarFetterLevelRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarFetterLevelRewardRsp$Type extends MessageType<AvatarFetterLevelRewardRsp> {
    constructor() {
        super("com.midnights.game.AvatarFetterLevelRewardRsp", [
            { no: 4, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 1, name: "reward_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "fetter_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarFetterLevelRewardRsp>): AvatarFetterLevelRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarFetterLevelRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarFetterLevelRewardRsp): AvatarFetterLevelRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 4:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 reward_id */ 1:
                    message.rewardId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 fetter_level */ 14:
                    message.fetterLevel = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarFetterLevelRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 4; */
        if (message.avatarGuid !== undefined)
            writer.tag(4, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 reward_id = 1; */
        if (message.rewardId !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.rewardId);
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        /* optional uint32 fetter_level = 14; */
        if (message.fetterLevel !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.fetterLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarFetterLevelRewardRsp
 */
export const AvatarFetterLevelRewardRsp = new AvatarFetterLevelRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddNoGachaAvatarCardTransferItem$Type extends MessageType<AddNoGachaAvatarCardTransferItem> {
    constructor() {
        super("com.midnights.game.AddNoGachaAvatarCardTransferItem", [
            { no: 9, name: "count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "item_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "is_new", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<AddNoGachaAvatarCardTransferItem>): AddNoGachaAvatarCardTransferItem {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddNoGachaAvatarCardTransferItem>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddNoGachaAvatarCardTransferItem): AddNoGachaAvatarCardTransferItem {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 count */ 9:
                    message.count = reader.uint32();
                    break;
                case /* optional uint32 item_id */ 6:
                    message.itemId = reader.uint32();
                    break;
                case /* optional bool is_new */ 15:
                    message.isNew = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddNoGachaAvatarCardTransferItem, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 count = 9; */
        if (message.count !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.count);
        /* optional uint32 item_id = 6; */
        if (message.itemId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.itemId);
        /* optional bool is_new = 15; */
        if (message.isNew !== undefined)
            writer.tag(15, WireType.Varint).bool(message.isNew);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddNoGachaAvatarCardTransferItem
 */
export const AddNoGachaAvatarCardTransferItem = new AddNoGachaAvatarCardTransferItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddNoGachaAvatarCardNotify$Type extends MessageType<AddNoGachaAvatarCardNotify> {
    constructor() {
        super("com.midnights.game.AddNoGachaAvatarCardNotify", [
            { no: 4, name: "transfer_item_list", kind: "message", repeat: 2 /*RepeatType.UNPACKED*/, T: () => AddNoGachaAvatarCardTransferItem },
            { no: 2, name: "initial_promote_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "avatar_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "is_transfer_to_item", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "reason", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "initial_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "item_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AddNoGachaAvatarCardNotify>): AddNoGachaAvatarCardNotify {
        const message = { transferItemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddNoGachaAvatarCardNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddNoGachaAvatarCardNotify): AddNoGachaAvatarCardNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.AddNoGachaAvatarCardTransferItem transfer_item_list */ 4:
                    message.transferItemList.push(AddNoGachaAvatarCardTransferItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 initial_promote_level */ 2:
                    message.initialPromoteLevel = reader.uint32();
                    break;
                case /* optional uint32 avatar_id */ 8:
                    message.avatarId = reader.uint32();
                    break;
                case /* optional bool is_transfer_to_item */ 6:
                    message.isTransferToItem = reader.bool();
                    break;
                case /* optional uint32 reason */ 9:
                    message.reason = reader.uint32();
                    break;
                case /* optional uint32 initial_level */ 10:
                    message.initialLevel = reader.uint32();
                    break;
                case /* optional uint32 item_id */ 14:
                    message.itemId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddNoGachaAvatarCardNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.AddNoGachaAvatarCardTransferItem transfer_item_list = 4; */
        for (let i = 0; i < message.transferItemList.length; i++)
            AddNoGachaAvatarCardTransferItem.internalBinaryWrite(message.transferItemList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 initial_promote_level = 2; */
        if (message.initialPromoteLevel !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.initialPromoteLevel);
        /* optional uint32 avatar_id = 8; */
        if (message.avatarId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.avatarId);
        /* optional bool is_transfer_to_item = 6; */
        if (message.isTransferToItem !== undefined)
            writer.tag(6, WireType.Varint).bool(message.isTransferToItem);
        /* optional uint32 reason = 9; */
        if (message.reason !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.reason);
        /* optional uint32 initial_level = 10; */
        if (message.initialLevel !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.initialLevel);
        /* optional uint32 item_id = 14; */
        if (message.itemId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.itemId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddNoGachaAvatarCardNotify
 */
export const AddNoGachaAvatarCardNotify = new AddNoGachaAvatarCardNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarPromoteGetRewardReq$Type extends MessageType<AvatarPromoteGetRewardReq> {
    constructor() {
        super("com.midnights.game.AvatarPromoteGetRewardReq", [
            { no: 7, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "promote_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarPromoteGetRewardReq>): AvatarPromoteGetRewardReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarPromoteGetRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarPromoteGetRewardReq): AvatarPromoteGetRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 7:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 promote_level */ 12:
                    message.promoteLevel = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarPromoteGetRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 7; */
        if (message.avatarGuid !== undefined)
            writer.tag(7, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 promote_level = 12; */
        if (message.promoteLevel !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.promoteLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarPromoteGetRewardReq
 */
export const AvatarPromoteGetRewardReq = new AvatarPromoteGetRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarPromoteGetRewardRsp$Type extends MessageType<AvatarPromoteGetRewardRsp> {
    constructor() {
        super("com.midnights.game.AvatarPromoteGetRewardRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "reward_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "promote_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarPromoteGetRewardRsp>): AvatarPromoteGetRewardRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarPromoteGetRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarPromoteGetRewardRsp): AvatarPromoteGetRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 reward_id */ 15:
                    message.rewardId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 11:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional uint32 promote_level */ 12:
                    message.promoteLevel = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarPromoteGetRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* optional uint32 reward_id = 15; */
        if (message.rewardId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.rewardId);
        /* optional uint64 avatar_guid = 11; */
        if (message.avatarGuid !== undefined)
            writer.tag(11, WireType.Varint).uint64(message.avatarGuid);
        /* optional uint32 promote_level = 12; */
        if (message.promoteLevel !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.promoteLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarPromoteGetRewardRsp
 */
export const AvatarPromoteGetRewardRsp = new AvatarPromoteGetRewardRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarChangeCostumeReq$Type extends MessageType<AvatarChangeCostumeReq> {
    constructor() {
        super("com.midnights.game.AvatarChangeCostumeReq", [
            { no: 4, name: "costume_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarChangeCostumeReq>): AvatarChangeCostumeReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarChangeCostumeReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarChangeCostumeReq): AvatarChangeCostumeReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 costume_id */ 4:
                    message.costumeId = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 2:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarChangeCostumeReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 costume_id = 4; */
        if (message.costumeId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.costumeId);
        /* optional uint64 avatar_guid = 2; */
        if (message.avatarGuid !== undefined)
            writer.tag(2, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarChangeCostumeReq
 */
export const AvatarChangeCostumeReq = new AvatarChangeCostumeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarChangeCostumeRsp$Type extends MessageType<AvatarChangeCostumeRsp> {
    constructor() {
        super("com.midnights.game.AvatarChangeCostumeRsp", [
            { no: 12, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "costume_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarChangeCostumeRsp>): AvatarChangeCostumeRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarChangeCostumeRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarChangeCostumeRsp): AvatarChangeCostumeRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 avatar_guid */ 12:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 costume_id */ 13:
                    message.costumeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarChangeCostumeRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 avatar_guid = 12; */
        if (message.avatarGuid !== undefined)
            writer.tag(12, WireType.Varint).uint64(message.avatarGuid);
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        /* optional uint32 costume_id = 13; */
        if (message.costumeId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.costumeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarChangeCostumeRsp
 */
export const AvatarChangeCostumeRsp = new AvatarChangeCostumeRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarChangeCostumeNotify$Type extends MessageType<AvatarChangeCostumeNotify> {
    constructor() {
        super("com.midnights.game.AvatarChangeCostumeNotify", [
            { no: 7, name: "entity_info", kind: "message", T: () => SceneEntityInfo }
        ]);
    }
    create(value?: PartialMessage<AvatarChangeCostumeNotify>): AvatarChangeCostumeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarChangeCostumeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarChangeCostumeNotify): AvatarChangeCostumeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.SceneEntityInfo entity_info */ 7:
                    message.entityInfo = SceneEntityInfo.internalBinaryRead(reader, reader.uint32(), options, message.entityInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarChangeCostumeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.SceneEntityInfo entity_info = 7; */
        if (message.entityInfo)
            SceneEntityInfo.internalBinaryWrite(message.entityInfo, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarChangeCostumeNotify
 */
export const AvatarChangeCostumeNotify = new AvatarChangeCostumeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarGainCostumeNotify$Type extends MessageType<AvatarGainCostumeNotify> {
    constructor() {
        super("com.midnights.game.AvatarGainCostumeNotify", [
            { no: 15, name: "costume_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarGainCostumeNotify>): AvatarGainCostumeNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarGainCostumeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarGainCostumeNotify): AvatarGainCostumeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 costume_id */ 15:
                    message.costumeId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarGainCostumeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 costume_id = 15; */
        if (message.costumeId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.costumeId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarGainCostumeNotify
 */
export const AvatarGainCostumeNotify = new AvatarGainCostumeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarChangeAnimHashReq$Type extends MessageType<AvatarChangeAnimHashReq> {
    constructor() {
        super("com.midnights.game.AvatarChangeAnimHashReq", [
            { no: 6, name: "anim_hash", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarChangeAnimHashReq>): AvatarChangeAnimHashReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarChangeAnimHashReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarChangeAnimHashReq): AvatarChangeAnimHashReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 anim_hash */ 6:
                    message.animHash = reader.uint32();
                    break;
                case /* optional uint64 avatar_guid */ 3:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarChangeAnimHashReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 anim_hash = 6; */
        if (message.animHash !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.animHash);
        /* optional uint64 avatar_guid = 3; */
        if (message.avatarGuid !== undefined)
            writer.tag(3, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarChangeAnimHashReq
 */
export const AvatarChangeAnimHashReq = new AvatarChangeAnimHashReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarChangeAnimHashRsp$Type extends MessageType<AvatarChangeAnimHashRsp> {
    constructor() {
        super("com.midnights.game.AvatarChangeAnimHashRsp", [
            { no: 13, name: "anim_hash", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarChangeAnimHashRsp>): AvatarChangeAnimHashRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarChangeAnimHashRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarChangeAnimHashRsp): AvatarChangeAnimHashRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 anim_hash */ 13:
                    message.animHash = reader.uint32();
                    break;
                case /* optional int32 retcode */ 5:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 avatar_guid */ 10:
                    message.avatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AvatarChangeAnimHashRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 anim_hash = 13; */
        if (message.animHash !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.animHash);
        /* optional int32 retcode = 5; */
        if (message.retcode !== undefined)
            writer.tag(5, WireType.Varint).int32(message.retcode);
        /* optional uint64 avatar_guid = 10; */
        if (message.avatarGuid !== undefined)
            writer.tag(10, WireType.Varint).uint64(message.avatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarChangeAnimHashRsp
 */
export const AvatarChangeAnimHashRsp = new AvatarChangeAnimHashRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PersistentDungeonSwitchAvatarReq$Type extends MessageType<PersistentDungeonSwitchAvatarReq> {
    constructor() {
        super("com.midnights.game.PersistentDungeonSwitchAvatarReq", [
            { no: 8, name: "cur_avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "avatar_team_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<PersistentDungeonSwitchAvatarReq>): PersistentDungeonSwitchAvatarReq {
        const message = { avatarTeamGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PersistentDungeonSwitchAvatarReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PersistentDungeonSwitchAvatarReq): PersistentDungeonSwitchAvatarReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint64 cur_avatar_guid */ 8:
                    message.curAvatarGuid = reader.uint64().toBigInt();
                    break;
                case /* repeated uint64 avatar_team_guid_list */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarTeamGuidList.push(reader.uint64().toBigInt());
                    else
                        message.avatarTeamGuidList.push(reader.uint64().toBigInt());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PersistentDungeonSwitchAvatarReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint64 cur_avatar_guid = 8; */
        if (message.curAvatarGuid !== undefined)
            writer.tag(8, WireType.Varint).uint64(message.curAvatarGuid);
        /* repeated uint64 avatar_team_guid_list = 3; */
        for (let i = 0; i < message.avatarTeamGuidList.length; i++)
            writer.tag(3, WireType.Varint).uint64(message.avatarTeamGuidList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PersistentDungeonSwitchAvatarReq
 */
export const PersistentDungeonSwitchAvatarReq = new PersistentDungeonSwitchAvatarReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PersistentDungeonSwitchAvatarRsp$Type extends MessageType<PersistentDungeonSwitchAvatarRsp> {
    constructor() {
        super("com.midnights.game.PersistentDungeonSwitchAvatarRsp", [
            { no: 14, name: "avatar_team_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 15, name: "cur_avatar_guid", kind: "scalar", opt: true, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value?: PartialMessage<PersistentDungeonSwitchAvatarRsp>): PersistentDungeonSwitchAvatarRsp {
        const message = { avatarTeamGuidList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PersistentDungeonSwitchAvatarRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PersistentDungeonSwitchAvatarRsp): PersistentDungeonSwitchAvatarRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint64 avatar_team_guid_list */ 14:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.avatarTeamGuidList.push(reader.uint64().toBigInt());
                    else
                        message.avatarTeamGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint64 cur_avatar_guid */ 15:
                    message.curAvatarGuid = reader.uint64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PersistentDungeonSwitchAvatarRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint64 avatar_team_guid_list = 14; */
        for (let i = 0; i < message.avatarTeamGuidList.length; i++)
            writer.tag(14, WireType.Varint).uint64(message.avatarTeamGuidList[i]);
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        /* optional uint64 cur_avatar_guid = 15; */
        if (message.curAvatarGuid !== undefined)
            writer.tag(15, WireType.Varint).uint64(message.curAvatarGuid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PersistentDungeonSwitchAvatarRsp
 */
export const PersistentDungeonSwitchAvatarRsp = new PersistentDungeonSwitchAvatarRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddBackupAvatarTeamReq$Type extends MessageType<AddBackupAvatarTeamReq> {
    constructor() {
        super("com.midnights.game.AddBackupAvatarTeamReq", []);
    }
    create(value?: PartialMessage<AddBackupAvatarTeamReq>): AddBackupAvatarTeamReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddBackupAvatarTeamReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddBackupAvatarTeamReq): AddBackupAvatarTeamReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: AddBackupAvatarTeamReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddBackupAvatarTeamReq
 */
export const AddBackupAvatarTeamReq = new AddBackupAvatarTeamReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AddBackupAvatarTeamRsp$Type extends MessageType<AddBackupAvatarTeamRsp> {
    constructor() {
        super("com.midnights.game.AddBackupAvatarTeamRsp", [
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<AddBackupAvatarTeamRsp>): AddBackupAvatarTeamRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AddBackupAvatarTeamRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AddBackupAvatarTeamRsp): AddBackupAvatarTeamRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: AddBackupAvatarTeamRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AddBackupAvatarTeamRsp
 */
export const AddBackupAvatarTeamRsp = new AddBackupAvatarTeamRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelBackupAvatarTeamReq$Type extends MessageType<DelBackupAvatarTeamReq> {
    constructor() {
        super("com.midnights.game.DelBackupAvatarTeamReq", [
            { no: 4, name: "backup_avatar_team_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<DelBackupAvatarTeamReq>): DelBackupAvatarTeamReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DelBackupAvatarTeamReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DelBackupAvatarTeamReq): DelBackupAvatarTeamReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 backup_avatar_team_id */ 4:
                    message.backupAvatarTeamId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DelBackupAvatarTeamReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 backup_avatar_team_id = 4; */
        if (message.backupAvatarTeamId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.backupAvatarTeamId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DelBackupAvatarTeamReq
 */
export const DelBackupAvatarTeamReq = new DelBackupAvatarTeamReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DelBackupAvatarTeamRsp$Type extends MessageType<DelBackupAvatarTeamRsp> {
    constructor() {
        super("com.midnights.game.DelBackupAvatarTeamRsp", [
            { no: 15, name: "backup_avatar_team_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<DelBackupAvatarTeamRsp>): DelBackupAvatarTeamRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<DelBackupAvatarTeamRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: DelBackupAvatarTeamRsp): DelBackupAvatarTeamRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 backup_avatar_team_id */ 15:
                    message.backupAvatarTeamId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 4:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: DelBackupAvatarTeamRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 backup_avatar_team_id = 15; */
        if (message.backupAvatarTeamId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.backupAvatarTeamId);
        /* optional int32 retcode = 4; */
        if (message.retcode !== undefined)
            writer.tag(4, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.DelBackupAvatarTeamRsp
 */
export const DelBackupAvatarTeamRsp = new DelBackupAvatarTeamRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AvatarTeamAllDataNotify$Type extends MessageType<AvatarTeamAllDataNotify> {
    constructor() {
        super("com.midnights.game.AvatarTeamAllDataNotify", [
            { no: 6, name: "temp_avatar_guid_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "avatar_team_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "message", T: () => AvatarTeam } },
            { no: 1, name: "backup_avatar_team_order_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<AvatarTeamAllDataNotify>): AvatarTeamAllDataNotify {
        const message = { tempAvatarGuidList: [], avatarTeamMap: {}, backupAvatarTeamOrderList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<AvatarTeamAllDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: AvatarTeamAllDataNotify): AvatarTeamAllDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint64 temp_avatar_guid_list */ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.tempAvatarGuidList.push(reader.uint64().toBigInt());
                    else
                        message.tempAvatarGuidList.push(reader.uint64().toBigInt());
                    break;
                case /* map<uint32, com.midnights.game.AvatarTeam> avatar_team_map */ 3:
                    this.binaryReadMap3(message.avatarTeamMap, reader, options);
                    break;
                case /* repeated uint32 backup_avatar_team_order_list */ 1:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.backupAvatarTeamOrderList.push(reader.uint32());
                    else
                        message.backupAvatarTeamOrderList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap3(map: AvatarTeamAllDataNotify["avatarTeamMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof AvatarTeamAllDataNotify["avatarTeamMap"] | undefined, val: AvatarTeamAllDataNotify["avatarTeamMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = AvatarTeam.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field com.midnights.game.AvatarTeamAllDataNotify.avatar_team_map");
            }
        }
        map[key ?? 0] = val ?? AvatarTeam.create();
    }
    internalBinaryWrite(message: AvatarTeamAllDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint64 temp_avatar_guid_list = 6; */
        for (let i = 0; i < message.tempAvatarGuidList.length; i++)
            writer.tag(6, WireType.Varint).uint64(message.tempAvatarGuidList[i]);
        /* map<uint32, com.midnights.game.AvatarTeam> avatar_team_map = 3; */
        for (let k of Object.keys(message.avatarTeamMap)) {
            writer.tag(3, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k));
            writer.tag(2, WireType.LengthDelimited).fork();
            AvatarTeam.internalBinaryWrite(message.avatarTeamMap[k as any], writer, options);
            writer.join().join();
        }
        /* repeated uint32 backup_avatar_team_order_list = 1; */
        for (let i = 0; i < message.backupAvatarTeamOrderList.length; i++)
            writer.tag(1, WireType.Varint).uint32(message.backupAvatarTeamOrderList[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.AvatarTeamAllDataNotify
 */
export const AvatarTeamAllDataNotify = new AvatarTeamAllDataNotify$Type();
