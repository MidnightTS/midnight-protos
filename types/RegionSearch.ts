/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: RegionSearch.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./RegionSearchState";
import * as pb_1 from "google-protobuf";
export class RegionSearch extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        is_entered?: boolean;
        progress?: number;
        state?: dependency_1.RegionSearchState;
        region_search_id?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_entered" in data && data.is_entered != undefined) {
                this.is_entered = data.is_entered;
            }
            if ("progress" in data && data.progress != undefined) {
                this.progress = data.progress;
            }
            if ("state" in data && data.state != undefined) {
                this.state = data.state;
            }
            if ("region_search_id" in data && data.region_search_id != undefined) {
                this.region_search_id = data.region_search_id;
            }
        }
    }
    get is_entered() {
        return pb_1.Message.getFieldWithDefault(this, 13, false) as boolean;
    }
    set is_entered(value: boolean) {
        pb_1.Message.setField(this, 13, value);
    }
    get progress() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set progress(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get state() {
        return pb_1.Message.getFieldWithDefault(this, 2, dependency_1.RegionSearchState.REGION_SEARCH_STATE_NONE) as dependency_1.RegionSearchState;
    }
    set state(value: dependency_1.RegionSearchState) {
        pb_1.Message.setField(this, 2, value);
    }
    get region_search_id() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
    }
    set region_search_id(value: number) {
        pb_1.Message.setField(this, 8, value);
    }
    static fromObject(data: {
        is_entered?: boolean;
        progress?: number;
        state?: dependency_1.RegionSearchState;
        region_search_id?: number;
    }): RegionSearch {
        const message = new RegionSearch({});
        if (data.is_entered != null) {
            message.is_entered = data.is_entered;
        }
        if (data.progress != null) {
            message.progress = data.progress;
        }
        if (data.state != null) {
            message.state = data.state;
        }
        if (data.region_search_id != null) {
            message.region_search_id = data.region_search_id;
        }
        return message;
    }
    toObject() {
        const data: {
            is_entered?: boolean;
            progress?: number;
            state?: dependency_1.RegionSearchState;
            region_search_id?: number;
        } = {};
        if (this.is_entered != null) {
            data.is_entered = this.is_entered;
        }
        if (this.progress != null) {
            data.progress = this.progress;
        }
        if (this.state != null) {
            data.state = this.state;
        }
        if (this.region_search_id != null) {
            data.region_search_id = this.region_search_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_entered != false)
            writer.writeBool(13, this.is_entered);
        if (this.progress != 0)
            writer.writeUint32(5, this.progress);
        if (this.state != dependency_1.RegionSearchState.REGION_SEARCH_STATE_NONE)
            writer.writeEnum(2, this.state);
        if (this.region_search_id != 0)
            writer.writeUint32(8, this.region_search_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RegionSearch {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RegionSearch();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 13:
                    message.is_entered = reader.readBool();
                    break;
                case 5:
                    message.progress = reader.readUint32();
                    break;
                case 2:
                    message.state = reader.readEnum();
                    break;
                case 8:
                    message.region_search_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): RegionSearch {
        return RegionSearch.deserialize(bytes);
    }
}
