// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "ActivityInfo.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { BrickBreakerDetailInfo } from "./BrickBreakerDetailInfo";
import { CoinCollectDetailInfo } from "./CoinCollectDetailInfo";
import { EffigyChallengeV2DetailInfo } from "./EffigyChallengeV2DetailInfo";
import { CharAmusementDetailInfo } from "./CharAmusementDetailInfo";
import { FungusFighterDetailInfo } from "./FungusFighterDetailInfo";
import { WindFieldDetailInfo } from "./WindFieldDetailInfo";
import { VintageActivityDetailInfo } from "./VintageActivityDetailInfo";
import { RockBoardExploreDetailInfo } from "./RockBoardExploreDetailInfo";
import { TreasureSeelieActivityDetailInfo } from "./TreasureSeelieActivityDetailInfo";
import { MuqadasPotionActivityDetailInfo } from "./MuqadasPotionActivityDetailInfo";
import { InstableSprayDetailInfo } from "./InstableSprayDetailInfo";
import { GravenInnocenceDetailInfo } from "./GravenInnocenceDetailInfo";
import { GearActivityDetailInfo } from "./GearActivityDetailInfo";
import { IslandPartyDetailInfo } from "./IslandPartyDetailInfo";
import { SummerTimeV2DetailInfo } from "./SummerTimeV2DetailInfo";
import { RogueDiaryActivityDetailInfo } from "./RogueDiaryActivityDetailInfo";
import { LuminanceStoneChallengeActivityDetailInfo } from "./LuminanceStoneChallengeActivityDetailInfo";
import { GachaActivityDetailInfo } from "./GachaActivityDetailInfo";
import { SpiceActivityDetailInfo } from "./SpiceActivityDetailInfo";
import { PhotoActivityDetailInfo } from "./PhotoActivityDetailInfo";
import { IrodoriActivityDetailInfo } from "./IrodoriActivityDetailInfo";
import { CrystalLinkActivityDetailInfo } from "./CrystalLinkActivityDetailInfo";
import { UgcActivityDetailInfo } from "./UgcActivityDetailInfo";
import { BartenderActivityDetailInfo } from "./BartenderActivityDetailInfo";
import { MichiaeMatsuriActivityDetailInfo } from "./MichiaeMatsuriActivityDetailInfo";
import { LanternRiteActivityDetailInfo } from "./LanternRiteActivityDetailInfo";
import { TanukiTravelActivityDetailInfo } from "./TanukiTravelActivityDetailInfo";
import { PotionActivityDetailInfo } from "./PotionActivityDetailInfo";
import { WinterCampActivityDetailInfo } from "./WinterCampActivityDetailInfo";
import { HachiActivityDetailInfo } from "./HachiActivityDetailInfo";
import { DigActivityDetailInfo } from "./DigActivityDetailInfo";
import { RoguelikeDungeonActivityDetailInfo } from "./RoguelikeDungeonActivityDetailInfo";
import { MusicGameActivityDetailInfo } from "./MusicGameActivityDetailInfo";
import { PlantFlowerActivityDetailInfo } from "./PlantFlowerActivityDetailInfo";
import { LunaRiteDetailInfo } from "./LunaRiteDetailInfo";
import { MoonfinTrialActivityDetailInfo } from "./MoonfinTrialActivityDetailInfo";
import { SumoActivityDetailInfo } from "./SumoActivityDetailInfo";
import { ChessActivityDetailInfo } from "./ChessActivityDetailInfo";
import { BlitzRushActivityDetailInfo } from "./BlitzRushActivityDetailInfo";
import { BounceConjuringActivityDetailInfo } from "./BounceConjuringActivityDetailInfo";
import { EchoShellDetailInfo } from "./EchoShellDetailInfo";
import { BuoyantCombatDetailInfo } from "./BuoyantCombatDetailInfo";
import { SummerTimeDetailInfo } from "./SummerTimeDetailInfo";
import { FindHilichurlDetailInfo } from "./FindHilichurlDetailInfo";
import { HideAndSeekActivityDetailInfo } from "./HideAndSeekActivityDetailInfo";
import { MistTrialActivityDetailInfo } from "./MistTrialActivityDetailInfo";
import { ChannelerSlabActivityDetailInfo } from "./ChannelerSlabActivityDetailInfo";
import { WaterSpiritActivityDetailInfo } from "./WaterSpiritActivityDetailInfo";
import { FleurFairActivityDetailInfo } from "./FleurFairActivityDetailInfo";
import { ArenaChallengeActivityDetailInfo } from "./ArenaChallengeActivityDetailInfo";
import { ExpeditionActivityDetailInfo } from "./ExpeditionActivityDetailInfo";
import { SeaLampActivityInfo } from "./SeaLampActivityInfo";
import { BlessingActivityDetailInfo } from "./BlessingActivityDetailInfo";
import { TreasureMapActivityDetailInfo } from "./TreasureMapActivityDetailInfo";
import { EffigyActivityDetailInfo } from "./EffigyActivityDetailInfo";
import { DragonSpineActivityDetailInfo } from "./DragonSpineActivityDetailInfo";
import { FlightActivityDetailInfo } from "./FlightActivityDetailInfo";
import { AsterActivityDetailInfo } from "./AsterActivityDetailInfo";
import { DeliveryActivityDetailInfo } from "./DeliveryActivityDetailInfo";
import { TrialAvatarActivityDetailInfo } from "./TrialAvatarActivityDetailInfo";
import { SalesmanActivityDetailInfo } from "./SalesmanActivityDetailInfo";
import { CrucibleActivityDetailInfo } from "./CrucibleActivityDetailInfo";
import { SeaLampActivityDetailInfo } from "./SeaLampActivityDetailInfo";
import { ActivityPushTipsData } from "./ActivityPushTipsData";
import { ActivityWatcherInfo } from "./ActivityWatcherInfo";
/**
 * @generated from protobuf message ActivityInfo
 */
export interface ActivityInfo {
    /**
     * @generated from protobuf field: bool Unk3300_MJNPGEKLOCG = 360 [json_name = "Unk3300MJNPGEKLOCG"];
     */
    unk3300MJNPGEKLOCG: boolean;
    /**
     * @generated from protobuf field: bool is_finished = 8;
     */
    isFinished: boolean;
    /**
     * @generated from protobuf field: uint32 cur_score = 1268;
     */
    curScore: number;
    /**
     * @generated from protobuf field: uint32 schedule_id = 7;
     */
    scheduleId: number;
    /**
     * @generated from protobuf field: uint32 Unk3300_JAEALAIOOID = 1870 [json_name = "Unk3300JAEALAIOOID"];
     */
    unk3300JAEALAIOOID: number;
    /**
     * @generated from protobuf field: bool Unk3300_ICNJJKDHPCH = 14 [json_name = "Unk3300ICNJJKDHPCH"];
     */
    unk3300ICNJJKDHPCH: boolean;
    /**
     * @generated from protobuf field: repeated uint32 Unk3300_BGNIBLKCPCA = 11 [json_name = "Unk3300BGNIBLKCPCA"];
     */
    unk3300BGNIBLKCPCA: number[];
    /**
     * @generated from protobuf field: bool Unk3300_NEPKLLBJFKK = 1645 [json_name = "Unk3300NEPKLLBJFKK"];
     */
    unk3300NEPKLLBJFKK: boolean;
    /**
     * @generated from protobuf field: repeated ActivityWatcherInfo watcher_info_list = 6;
     */
    watcherInfoList: ActivityWatcherInfo[];
    /**
     * @generated from protobuf field: repeated ActivityPushTipsData activity_push_tips_data_list = 1867;
     */
    activityPushTipsDataList: ActivityPushTipsData[];
    /**
     * @generated from protobuf field: uint32 activity_id = 13;
     */
    activityId: number;
    /**
     * @generated from protobuf field: repeated uint32 taken_reward_list = 1889;
     */
    takenRewardList: number[];
    /**
     * @generated from protobuf field: uint32 Unk3300_GCEAKEMMJEA = 697 [json_name = "Unk3300GCEAKEMMJEA"];
     */
    unk3300GCEAKEMMJEA: number;
    /**
     * @generated from protobuf field: map<uint32, uint32> activity_coin_map = 36;
     */
    activityCoinMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: uint32 first_day_start_time = 786;
     */
    firstDayStartTime: number;
    /**
     * @generated from protobuf field: bool Unk3300_ABJKLALKLDG = 1486 [json_name = "Unk3300ABJKLALKLDG"];
     */
    unk3300ABJKLALKLDG: boolean;
    /**
     * @generated from protobuf field: uint32 Unk3300_DMILOONBELH = 3 [json_name = "Unk3300DMILOONBELH"];
     */
    unk3300DMILOONBELH: number;
    /**
     * @generated from protobuf field: bool Unk3300_CBCEHLJJOGI = 1375 [json_name = "Unk3300CBCEHLJJOGI"];
     */
    unk3300CBCEHLJJOGI: boolean;
    /**
     * @generated from protobuf field: uint32 begin_time = 1;
     */
    beginTime: number;
    /**
     * @generated from protobuf field: bool Unk3300_MDBDPIBEGGH = 12 [json_name = "Unk3300MDBDPIBEGGH"];
     */
    unk3300MDBDPIBEGGH: boolean;
    /**
     * @generated from protobuf field: map<uint32, uint32> wish_gift_num_map = 939;
     */
    wishGiftNumMap: {
        [key: number]: number;
    };
    /**
     * @generated from protobuf field: uint32 end_time = 10;
     */
    endTime: number;
    /**
     * @generated from protobuf field: repeated uint32 Unk3300_HKKNIHNBHAE = 5 [json_name = "Unk3300HKKNIHNBHAE"];
     */
    unk3300HKKNIHNBHAE: number[];
    /**
     * @generated from protobuf oneof: detail
     */
    detail: {
        oneofKind: "samLampInfo";
        /**
         * @generated from protobuf field: SeaLampActivityDetailInfo sam_lamp_info = 2;
         */
        samLampInfo: SeaLampActivityDetailInfo;
    } | {
        oneofKind: "crucibleInfo";
        /**
         * @generated from protobuf field: CrucibleActivityDetailInfo crucible_info = 15;
         */
        crucibleInfo: CrucibleActivityDetailInfo;
    } | {
        oneofKind: "salesmanInfo";
        /**
         * @generated from protobuf field: SalesmanActivityDetailInfo salesman_info = 9;
         */
        salesmanInfo: SalesmanActivityDetailInfo;
    } | {
        oneofKind: "trialAvatarInfo";
        /**
         * @generated from protobuf field: TrialAvatarActivityDetailInfo trial_avatar_info = 4;
         */
        trialAvatarInfo: TrialAvatarActivityDetailInfo;
    } | {
        oneofKind: "deliveryInfo";
        /**
         * @generated from protobuf field: DeliveryActivityDetailInfo delivery_info = 1141;
         */
        deliveryInfo: DeliveryActivityDetailInfo;
    } | {
        oneofKind: "asterInfo";
        /**
         * @generated from protobuf field: AsterActivityDetailInfo aster_info = 1977;
         */
        asterInfo: AsterActivityDetailInfo;
    } | {
        oneofKind: "flightInfo";
        /**
         * @generated from protobuf field: FlightActivityDetailInfo flight_info = 2011;
         */
        flightInfo: FlightActivityDetailInfo;
    } | {
        oneofKind: "dragonSpineInfo";
        /**
         * @generated from protobuf field: DragonSpineActivityDetailInfo dragon_spine_info = 1310;
         */
        dragonSpineInfo: DragonSpineActivityDetailInfo;
    } | {
        oneofKind: "effigyInfo";
        /**
         * @generated from protobuf field: EffigyActivityDetailInfo effigy_info = 1374;
         */
        effigyInfo: EffigyActivityDetailInfo;
    } | {
        oneofKind: "treasureMapInfo";
        /**
         * @generated from protobuf field: TreasureMapActivityDetailInfo treasure_map_info = 1925;
         */
        treasureMapInfo: TreasureMapActivityDetailInfo;
    } | {
        oneofKind: "blessingInfo";
        /**
         * @generated from protobuf field: BlessingActivityDetailInfo blessing_info = 1962;
         */
        blessingInfo: BlessingActivityDetailInfo;
    } | {
        oneofKind: "seaLampInfo";
        /**
         * @generated from protobuf field: SeaLampActivityInfo sea_lamp_info = 247;
         */
        seaLampInfo: SeaLampActivityInfo;
    } | {
        oneofKind: "expeditionInfo";
        /**
         * @generated from protobuf field: ExpeditionActivityDetailInfo expedition_info = 1752;
         */
        expeditionInfo: ExpeditionActivityDetailInfo;
    } | {
        oneofKind: "arenaChallengeInfo";
        /**
         * @generated from protobuf field: ArenaChallengeActivityDetailInfo arena_challenge_info = 538;
         */
        arenaChallengeInfo: ArenaChallengeActivityDetailInfo;
    } | {
        oneofKind: "fleurFairInfo";
        /**
         * @generated from protobuf field: FleurFairActivityDetailInfo fleur_fair_info = 1447;
         */
        fleurFairInfo: FleurFairActivityDetailInfo;
    } | {
        oneofKind: "waterSpiritInfo";
        /**
         * @generated from protobuf field: WaterSpiritActivityDetailInfo water_spirit_info = 635;
         */
        waterSpiritInfo: WaterSpiritActivityDetailInfo;
    } | {
        oneofKind: "channelerSlabInfo";
        /**
         * @generated from protobuf field: ChannelerSlabActivityDetailInfo channeler_slab_info = 846;
         */
        channelerSlabInfo: ChannelerSlabActivityDetailInfo;
    } | {
        oneofKind: "mistTrialActivityInfo";
        /**
         * @generated from protobuf field: MistTrialActivityDetailInfo mist_trial_activity_info = 432;
         */
        mistTrialActivityInfo: MistTrialActivityDetailInfo;
    } | {
        oneofKind: "hideAndSeekInfo";
        /**
         * @generated from protobuf field: HideAndSeekActivityDetailInfo hide_and_seek_info = 839;
         */
        hideAndSeekInfo: HideAndSeekActivityDetailInfo;
    } | {
        oneofKind: "findHilichurlInfo";
        /**
         * @generated from protobuf field: FindHilichurlDetailInfo find_hilichurl_info = 378;
         */
        findHilichurlInfo: FindHilichurlDetailInfo;
    } | {
        oneofKind: "summerTimeInfo";
        /**
         * @generated from protobuf field: SummerTimeDetailInfo summer_time_info = 1910;
         */
        summerTimeInfo: SummerTimeDetailInfo;
    } | {
        oneofKind: "buoyantCombatInfo";
        /**
         * @generated from protobuf field: BuoyantCombatDetailInfo buoyant_combat_info = 686;
         */
        buoyantCombatInfo: BuoyantCombatDetailInfo;
    } | {
        oneofKind: "echoShellInfo";
        /**
         * @generated from protobuf field: EchoShellDetailInfo echo_shell_info = 1162;
         */
        echoShellInfo: EchoShellDetailInfo;
    } | {
        oneofKind: "bounceConjuringInfo";
        /**
         * @generated from protobuf field: BounceConjuringActivityDetailInfo bounce_conjuring_info = 922;
         */
        bounceConjuringInfo: BounceConjuringActivityDetailInfo;
    } | {
        oneofKind: "blitzRushInfo";
        /**
         * @generated from protobuf field: BlitzRushActivityDetailInfo blitz_rush_info = 64;
         */
        blitzRushInfo: BlitzRushActivityDetailInfo;
    } | {
        oneofKind: "chessInfo";
        /**
         * @generated from protobuf field: ChessActivityDetailInfo chess_info = 1006;
         */
        chessInfo: ChessActivityDetailInfo;
    } | {
        oneofKind: "sumoInfo";
        /**
         * @generated from protobuf field: SumoActivityDetailInfo sumo_info = 505;
         */
        sumoInfo: SumoActivityDetailInfo;
    } | {
        oneofKind: "moonfinTrialInfo";
        /**
         * @generated from protobuf field: MoonfinTrialActivityDetailInfo moonfin_trial_info = 766;
         */
        moonfinTrialInfo: MoonfinTrialActivityDetailInfo;
    } | {
        oneofKind: "lunaRiteInfo";
        /**
         * @generated from protobuf field: LunaRiteDetailInfo luna_rite_info = 1545;
         */
        lunaRiteInfo: LunaRiteDetailInfo;
    } | {
        oneofKind: "plantFlowerInfo";
        /**
         * @generated from protobuf field: PlantFlowerActivityDetailInfo plant_flower_info = 1274;
         */
        plantFlowerInfo: PlantFlowerActivityDetailInfo;
    } | {
        oneofKind: "musicGameInfo";
        /**
         * @generated from protobuf field: MusicGameActivityDetailInfo music_game_info = 1989;
         */
        musicGameInfo: MusicGameActivityDetailInfo;
    } | {
        oneofKind: "roguelikeDungeonInfo";
        /**
         * @generated from protobuf field: RoguelikeDungeonActivityDetailInfo roguelike_dungeon_info = 970;
         */
        roguelikeDungeonInfo: RoguelikeDungeonActivityDetailInfo;
    } | {
        oneofKind: "digInfo";
        /**
         * @generated from protobuf field: DigActivityDetailInfo dig_info = 1862;
         */
        digInfo: DigActivityDetailInfo;
    } | {
        oneofKind: "hachiInfo";
        /**
         * @generated from protobuf field: HachiActivityDetailInfo hachi_info = 511;
         */
        hachiInfo: HachiActivityDetailInfo;
    } | {
        oneofKind: "winterCampInfo";
        /**
         * @generated from protobuf field: WinterCampActivityDetailInfo winter_camp_info = 699;
         */
        winterCampInfo: WinterCampActivityDetailInfo;
    } | {
        oneofKind: "potionInfo";
        /**
         * @generated from protobuf field: PotionActivityDetailInfo potion_info = 1567;
         */
        potionInfo: PotionActivityDetailInfo;
    } | {
        oneofKind: "tanukiTravelActivityInfo";
        /**
         * @generated from protobuf field: TanukiTravelActivityDetailInfo tanuki_travel_activity_info = 1348;
         */
        tanukiTravelActivityInfo: TanukiTravelActivityDetailInfo;
    } | {
        oneofKind: "lanternRiteActivityInfo";
        /**
         * @generated from protobuf field: LanternRiteActivityDetailInfo lantern_rite_activity_info = 237;
         */
        lanternRiteActivityInfo: LanternRiteActivityDetailInfo;
    } | {
        oneofKind: "michiaeMatsuriInfo";
        /**
         * @generated from protobuf field: MichiaeMatsuriActivityDetailInfo michiae_matsuri_info = 1839;
         */
        michiaeMatsuriInfo: MichiaeMatsuriActivityDetailInfo;
    } | {
        oneofKind: "bartenderInfo";
        /**
         * @generated from protobuf field: BartenderActivityDetailInfo bartender_info = 551;
         */
        bartenderInfo: BartenderActivityDetailInfo;
    } | {
        oneofKind: "ugcInfo";
        /**
         * @generated from protobuf field: UgcActivityDetailInfo ugc_info = 1182;
         */
        ugcInfo: UgcActivityDetailInfo;
    } | {
        oneofKind: "crystalLinkInfo";
        /**
         * @generated from protobuf field: CrystalLinkActivityDetailInfo crystal_link_info = 812;
         */
        crystalLinkInfo: CrystalLinkActivityDetailInfo;
    } | {
        oneofKind: "irodoriInfo";
        /**
         * @generated from protobuf field: IrodoriActivityDetailInfo irodori_info = 1056;
         */
        irodoriInfo: IrodoriActivityDetailInfo;
    } | {
        oneofKind: "photoInfo";
        /**
         * @generated from protobuf field: PhotoActivityDetailInfo photo_info = 1822;
         */
        photoInfo: PhotoActivityDetailInfo;
    } | {
        oneofKind: "spiceInfo";
        /**
         * @generated from protobuf field: SpiceActivityDetailInfo spice_info = 789;
         */
        spiceInfo: SpiceActivityDetailInfo;
    } | {
        oneofKind: "gachaInfo";
        /**
         * @generated from protobuf field: GachaActivityDetailInfo gacha_info = 1297;
         */
        gachaInfo: GachaActivityDetailInfo;
    } | {
        oneofKind: "luminanceStoneChallengeInfo";
        /**
         * @generated from protobuf field: LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 444;
         */
        luminanceStoneChallengeInfo: LuminanceStoneChallengeActivityDetailInfo;
    } | {
        oneofKind: "rogueDiaryInfo";
        /**
         * @generated from protobuf field: RogueDiaryActivityDetailInfo rogue_diary_info = 560;
         */
        rogueDiaryInfo: RogueDiaryActivityDetailInfo;
    } | {
        oneofKind: "summerTimeV2Info";
        /**
         * @generated from protobuf field: SummerTimeV2DetailInfo summer_time_v2_info = 411;
         */
        summerTimeV2Info: SummerTimeV2DetailInfo;
    } | {
        oneofKind: "islandPartyInfo";
        /**
         * @generated from protobuf field: IslandPartyDetailInfo island_party_info = 740;
         */
        islandPartyInfo: IslandPartyDetailInfo;
    } | {
        oneofKind: "gearInfo";
        /**
         * @generated from protobuf field: GearActivityDetailInfo gear_info = 1482;
         */
        gearInfo: GearActivityDetailInfo;
    } | {
        oneofKind: "gravenInnocenceInfo";
        /**
         * @generated from protobuf field: GravenInnocenceDetailInfo graven_innocence_info = 1928;
         */
        gravenInnocenceInfo: GravenInnocenceDetailInfo;
    } | {
        oneofKind: "instableSprayInfo";
        /**
         * @generated from protobuf field: InstableSprayDetailInfo instable_spray_info = 1145;
         */
        instableSprayInfo: InstableSprayDetailInfo;
    } | {
        oneofKind: "muqadasPotionInfo";
        /**
         * @generated from protobuf field: MuqadasPotionActivityDetailInfo muqadas_potion_info = 1662;
         */
        muqadasPotionInfo: MuqadasPotionActivityDetailInfo;
    } | {
        oneofKind: "treasureSeelieInfo";
        /**
         * @generated from protobuf field: TreasureSeelieActivityDetailInfo treasure_seelie_info = 1032;
         */
        treasureSeelieInfo: TreasureSeelieActivityDetailInfo;
    } | {
        oneofKind: "rockBoardExploreInfo";
        /**
         * @generated from protobuf field: RockBoardExploreDetailInfo rock_board_explore_info = 1265;
         */
        rockBoardExploreInfo: RockBoardExploreDetailInfo;
    } | {
        oneofKind: "vintageInfo";
        /**
         * @generated from protobuf field: VintageActivityDetailInfo vintage_info = 1308;
         */
        vintageInfo: VintageActivityDetailInfo;
    } | {
        oneofKind: "windFieldInfo";
        /**
         * @generated from protobuf field: WindFieldDetailInfo wind_field_info = 468;
         */
        windFieldInfo: WindFieldDetailInfo;
    } | {
        oneofKind: "fungusFighterInfo";
        /**
         * @generated from protobuf field: FungusFighterDetailInfo fungus_fighter_info = 1757;
         */
        fungusFighterInfo: FungusFighterDetailInfo;
    } | {
        oneofKind: "charAmusementInfo";
        /**
         * @generated from protobuf field: CharAmusementDetailInfo char_amusement_info = 621;
         */
        charAmusementInfo: CharAmusementDetailInfo;
    } | {
        oneofKind: "effigyChallengeInfo";
        /**
         * @generated from protobuf field: EffigyChallengeV2DetailInfo effigy_challenge_info = 233;
         */
        effigyChallengeInfo: EffigyChallengeV2DetailInfo;
    } | {
        oneofKind: "coinCollectInfo";
        /**
         * @generated from protobuf field: CoinCollectDetailInfo coin_collect_info = 2002;
         */
        coinCollectInfo: CoinCollectDetailInfo;
    } | {
        oneofKind: "brickBreakerInfo";
        /**
         * @generated from protobuf field: BrickBreakerDetailInfo brick_breaker_info = 1522;
         */
        brickBreakerInfo: BrickBreakerDetailInfo;
    } | {
        oneofKind: undefined;
    };
}
// @generated message type with reflection information, may provide speed optimized methods
class ActivityInfo$Type extends MessageType<ActivityInfo> {
    constructor() {
        super("ActivityInfo", [
            { no: 360, name: "Unk3300_MJNPGEKLOCG", kind: "scalar", jsonName: "Unk3300MJNPGEKLOCG", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "is_finished", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 1268, name: "cur_score", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "schedule_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 1870, name: "Unk3300_JAEALAIOOID", kind: "scalar", jsonName: "Unk3300JAEALAIOOID", T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "Unk3300_ICNJJKDHPCH", kind: "scalar", jsonName: "Unk3300ICNJJKDHPCH", T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "Unk3300_BGNIBLKCPCA", kind: "scalar", jsonName: "Unk3300BGNIBLKCPCA", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 1645, name: "Unk3300_NEPKLLBJFKK", kind: "scalar", jsonName: "Unk3300NEPKLLBJFKK", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "watcher_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ActivityWatcherInfo },
            { no: 1867, name: "activity_push_tips_data_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ActivityPushTipsData },
            { no: 13, name: "activity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 1889, name: "taken_reward_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 697, name: "Unk3300_GCEAKEMMJEA", kind: "scalar", jsonName: "Unk3300GCEAKEMMJEA", T: 13 /*ScalarType.UINT32*/ },
            { no: 36, name: "activity_coin_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 786, name: "first_day_start_time", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 1486, name: "Unk3300_ABJKLALKLDG", kind: "scalar", jsonName: "Unk3300ABJKLALKLDG", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "Unk3300_DMILOONBELH", kind: "scalar", jsonName: "Unk3300DMILOONBELH", T: 13 /*ScalarType.UINT32*/ },
            { no: 1375, name: "Unk3300_CBCEHLJJOGI", kind: "scalar", jsonName: "Unk3300CBCEHLJJOGI", T: 8 /*ScalarType.BOOL*/ },
            { no: 1, name: "begin_time", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "Unk3300_MDBDPIBEGGH", kind: "scalar", jsonName: "Unk3300MDBDPIBEGGH", T: 8 /*ScalarType.BOOL*/ },
            { no: 939, name: "wish_gift_num_map", kind: "map", K: 13 /*ScalarType.UINT32*/, V: { kind: "scalar", T: 13 /*ScalarType.UINT32*/ } },
            { no: 10, name: "end_time", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "Unk3300_HKKNIHNBHAE", kind: "scalar", jsonName: "Unk3300HKKNIHNBHAE", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "sam_lamp_info", kind: "message", oneof: "detail", T: () => SeaLampActivityDetailInfo },
            { no: 15, name: "crucible_info", kind: "message", oneof: "detail", T: () => CrucibleActivityDetailInfo },
            { no: 9, name: "salesman_info", kind: "message", oneof: "detail", T: () => SalesmanActivityDetailInfo },
            { no: 4, name: "trial_avatar_info", kind: "message", oneof: "detail", T: () => TrialAvatarActivityDetailInfo },
            { no: 1141, name: "delivery_info", kind: "message", oneof: "detail", T: () => DeliveryActivityDetailInfo },
            { no: 1977, name: "aster_info", kind: "message", oneof: "detail", T: () => AsterActivityDetailInfo },
            { no: 2011, name: "flight_info", kind: "message", oneof: "detail", T: () => FlightActivityDetailInfo },
            { no: 1310, name: "dragon_spine_info", kind: "message", oneof: "detail", T: () => DragonSpineActivityDetailInfo },
            { no: 1374, name: "effigy_info", kind: "message", oneof: "detail", T: () => EffigyActivityDetailInfo },
            { no: 1925, name: "treasure_map_info", kind: "message", oneof: "detail", T: () => TreasureMapActivityDetailInfo },
            { no: 1962, name: "blessing_info", kind: "message", oneof: "detail", T: () => BlessingActivityDetailInfo },
            { no: 247, name: "sea_lamp_info", kind: "message", oneof: "detail", T: () => SeaLampActivityInfo },
            { no: 1752, name: "expedition_info", kind: "message", oneof: "detail", T: () => ExpeditionActivityDetailInfo },
            { no: 538, name: "arena_challenge_info", kind: "message", oneof: "detail", T: () => ArenaChallengeActivityDetailInfo },
            { no: 1447, name: "fleur_fair_info", kind: "message", oneof: "detail", T: () => FleurFairActivityDetailInfo },
            { no: 635, name: "water_spirit_info", kind: "message", oneof: "detail", T: () => WaterSpiritActivityDetailInfo },
            { no: 846, name: "channeler_slab_info", kind: "message", oneof: "detail", T: () => ChannelerSlabActivityDetailInfo },
            { no: 432, name: "mist_trial_activity_info", kind: "message", oneof: "detail", T: () => MistTrialActivityDetailInfo },
            { no: 839, name: "hide_and_seek_info", kind: "message", oneof: "detail", T: () => HideAndSeekActivityDetailInfo },
            { no: 378, name: "find_hilichurl_info", kind: "message", oneof: "detail", T: () => FindHilichurlDetailInfo },
            { no: 1910, name: "summer_time_info", kind: "message", oneof: "detail", T: () => SummerTimeDetailInfo },
            { no: 686, name: "buoyant_combat_info", kind: "message", oneof: "detail", T: () => BuoyantCombatDetailInfo },
            { no: 1162, name: "echo_shell_info", kind: "message", oneof: "detail", T: () => EchoShellDetailInfo },
            { no: 922, name: "bounce_conjuring_info", kind: "message", oneof: "detail", T: () => BounceConjuringActivityDetailInfo },
            { no: 64, name: "blitz_rush_info", kind: "message", oneof: "detail", T: () => BlitzRushActivityDetailInfo },
            { no: 1006, name: "chess_info", kind: "message", oneof: "detail", T: () => ChessActivityDetailInfo },
            { no: 505, name: "sumo_info", kind: "message", oneof: "detail", T: () => SumoActivityDetailInfo },
            { no: 766, name: "moonfin_trial_info", kind: "message", oneof: "detail", T: () => MoonfinTrialActivityDetailInfo },
            { no: 1545, name: "luna_rite_info", kind: "message", oneof: "detail", T: () => LunaRiteDetailInfo },
            { no: 1274, name: "plant_flower_info", kind: "message", oneof: "detail", T: () => PlantFlowerActivityDetailInfo },
            { no: 1989, name: "music_game_info", kind: "message", oneof: "detail", T: () => MusicGameActivityDetailInfo },
            { no: 970, name: "roguelike_dungeon_info", kind: "message", oneof: "detail", T: () => RoguelikeDungeonActivityDetailInfo },
            { no: 1862, name: "dig_info", kind: "message", oneof: "detail", T: () => DigActivityDetailInfo },
            { no: 511, name: "hachi_info", kind: "message", oneof: "detail", T: () => HachiActivityDetailInfo },
            { no: 699, name: "winter_camp_info", kind: "message", oneof: "detail", T: () => WinterCampActivityDetailInfo },
            { no: 1567, name: "potion_info", kind: "message", oneof: "detail", T: () => PotionActivityDetailInfo },
            { no: 1348, name: "tanuki_travel_activity_info", kind: "message", oneof: "detail", T: () => TanukiTravelActivityDetailInfo },
            { no: 237, name: "lantern_rite_activity_info", kind: "message", oneof: "detail", T: () => LanternRiteActivityDetailInfo },
            { no: 1839, name: "michiae_matsuri_info", kind: "message", oneof: "detail", T: () => MichiaeMatsuriActivityDetailInfo },
            { no: 551, name: "bartender_info", kind: "message", oneof: "detail", T: () => BartenderActivityDetailInfo },
            { no: 1182, name: "ugc_info", kind: "message", oneof: "detail", T: () => UgcActivityDetailInfo },
            { no: 812, name: "crystal_link_info", kind: "message", oneof: "detail", T: () => CrystalLinkActivityDetailInfo },
            { no: 1056, name: "irodori_info", kind: "message", oneof: "detail", T: () => IrodoriActivityDetailInfo },
            { no: 1822, name: "photo_info", kind: "message", oneof: "detail", T: () => PhotoActivityDetailInfo },
            { no: 789, name: "spice_info", kind: "message", oneof: "detail", T: () => SpiceActivityDetailInfo },
            { no: 1297, name: "gacha_info", kind: "message", oneof: "detail", T: () => GachaActivityDetailInfo },
            { no: 444, name: "luminance_stone_challenge_info", kind: "message", oneof: "detail", T: () => LuminanceStoneChallengeActivityDetailInfo },
            { no: 560, name: "rogue_diary_info", kind: "message", oneof: "detail", T: () => RogueDiaryActivityDetailInfo },
            { no: 411, name: "summer_time_v2_info", kind: "message", oneof: "detail", T: () => SummerTimeV2DetailInfo },
            { no: 740, name: "island_party_info", kind: "message", oneof: "detail", T: () => IslandPartyDetailInfo },
            { no: 1482, name: "gear_info", kind: "message", oneof: "detail", T: () => GearActivityDetailInfo },
            { no: 1928, name: "graven_innocence_info", kind: "message", oneof: "detail", T: () => GravenInnocenceDetailInfo },
            { no: 1145, name: "instable_spray_info", kind: "message", oneof: "detail", T: () => InstableSprayDetailInfo },
            { no: 1662, name: "muqadas_potion_info", kind: "message", oneof: "detail", T: () => MuqadasPotionActivityDetailInfo },
            { no: 1032, name: "treasure_seelie_info", kind: "message", oneof: "detail", T: () => TreasureSeelieActivityDetailInfo },
            { no: 1265, name: "rock_board_explore_info", kind: "message", oneof: "detail", T: () => RockBoardExploreDetailInfo },
            { no: 1308, name: "vintage_info", kind: "message", oneof: "detail", T: () => VintageActivityDetailInfo },
            { no: 468, name: "wind_field_info", kind: "message", oneof: "detail", T: () => WindFieldDetailInfo },
            { no: 1757, name: "fungus_fighter_info", kind: "message", oneof: "detail", T: () => FungusFighterDetailInfo },
            { no: 621, name: "char_amusement_info", kind: "message", oneof: "detail", T: () => CharAmusementDetailInfo },
            { no: 233, name: "effigy_challenge_info", kind: "message", oneof: "detail", T: () => EffigyChallengeV2DetailInfo },
            { no: 2002, name: "coin_collect_info", kind: "message", oneof: "detail", T: () => CoinCollectDetailInfo },
            { no: 1522, name: "brick_breaker_info", kind: "message", oneof: "detail", T: () => BrickBreakerDetailInfo }
        ]);
    }
    create(value?: PartialMessage<ActivityInfo>): ActivityInfo {
        const message = { unk3300MJNPGEKLOCG: false, isFinished: false, curScore: 0, scheduleId: 0, unk3300JAEALAIOOID: 0, unk3300ICNJJKDHPCH: false, unk3300BGNIBLKCPCA: [], unk3300NEPKLLBJFKK: false, watcherInfoList: [], activityPushTipsDataList: [], activityId: 0, takenRewardList: [], unk3300GCEAKEMMJEA: 0, activityCoinMap: {}, firstDayStartTime: 0, unk3300ABJKLALKLDG: false, unk3300DMILOONBELH: 0, unk3300CBCEHLJJOGI: false, beginTime: 0, unk3300MDBDPIBEGGH: false, wishGiftNumMap: {}, endTime: 0, unk3300HKKNIHNBHAE: [], detail: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ActivityInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ActivityInfo): ActivityInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool Unk3300_MJNPGEKLOCG = 360 [json_name = "Unk3300MJNPGEKLOCG"];*/ 360:
                    message.unk3300MJNPGEKLOCG = reader.bool();
                    break;
                case /* bool is_finished */ 8:
                    message.isFinished = reader.bool();
                    break;
                case /* uint32 cur_score */ 1268:
                    message.curScore = reader.uint32();
                    break;
                case /* uint32 schedule_id */ 7:
                    message.scheduleId = reader.uint32();
                    break;
                case /* uint32 Unk3300_JAEALAIOOID = 1870 [json_name = "Unk3300JAEALAIOOID"];*/ 1870:
                    message.unk3300JAEALAIOOID = reader.uint32();
                    break;
                case /* bool Unk3300_ICNJJKDHPCH = 14 [json_name = "Unk3300ICNJJKDHPCH"];*/ 14:
                    message.unk3300ICNJJKDHPCH = reader.bool();
                    break;
                case /* repeated uint32 Unk3300_BGNIBLKCPCA = 11 [json_name = "Unk3300BGNIBLKCPCA"];*/ 11:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.unk3300BGNIBLKCPCA.push(reader.uint32());
                    else
                        message.unk3300BGNIBLKCPCA.push(reader.uint32());
                    break;
                case /* bool Unk3300_NEPKLLBJFKK = 1645 [json_name = "Unk3300NEPKLLBJFKK"];*/ 1645:
                    message.unk3300NEPKLLBJFKK = reader.bool();
                    break;
                case /* repeated ActivityWatcherInfo watcher_info_list */ 6:
                    message.watcherInfoList.push(ActivityWatcherInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated ActivityPushTipsData activity_push_tips_data_list */ 1867:
                    message.activityPushTipsDataList.push(ActivityPushTipsData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* uint32 activity_id */ 13:
                    message.activityId = reader.uint32();
                    break;
                case /* repeated uint32 taken_reward_list */ 1889:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.takenRewardList.push(reader.uint32());
                    else
                        message.takenRewardList.push(reader.uint32());
                    break;
                case /* uint32 Unk3300_GCEAKEMMJEA = 697 [json_name = "Unk3300GCEAKEMMJEA"];*/ 697:
                    message.unk3300GCEAKEMMJEA = reader.uint32();
                    break;
                case /* map<uint32, uint32> activity_coin_map */ 36:
                    this.binaryReadMap36(message.activityCoinMap, reader, options);
                    break;
                case /* uint32 first_day_start_time */ 786:
                    message.firstDayStartTime = reader.uint32();
                    break;
                case /* bool Unk3300_ABJKLALKLDG = 1486 [json_name = "Unk3300ABJKLALKLDG"];*/ 1486:
                    message.unk3300ABJKLALKLDG = reader.bool();
                    break;
                case /* uint32 Unk3300_DMILOONBELH = 3 [json_name = "Unk3300DMILOONBELH"];*/ 3:
                    message.unk3300DMILOONBELH = reader.uint32();
                    break;
                case /* bool Unk3300_CBCEHLJJOGI = 1375 [json_name = "Unk3300CBCEHLJJOGI"];*/ 1375:
                    message.unk3300CBCEHLJJOGI = reader.bool();
                    break;
                case /* uint32 begin_time */ 1:
                    message.beginTime = reader.uint32();
                    break;
                case /* bool Unk3300_MDBDPIBEGGH = 12 [json_name = "Unk3300MDBDPIBEGGH"];*/ 12:
                    message.unk3300MDBDPIBEGGH = reader.bool();
                    break;
                case /* map<uint32, uint32> wish_gift_num_map */ 939:
                    this.binaryReadMap939(message.wishGiftNumMap, reader, options);
                    break;
                case /* uint32 end_time */ 10:
                    message.endTime = reader.uint32();
                    break;
                case /* repeated uint32 Unk3300_HKKNIHNBHAE = 5 [json_name = "Unk3300HKKNIHNBHAE"];*/ 5:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.unk3300HKKNIHNBHAE.push(reader.uint32());
                    else
                        message.unk3300HKKNIHNBHAE.push(reader.uint32());
                    break;
                case /* SeaLampActivityDetailInfo sam_lamp_info */ 2:
                    message.detail = {
                        oneofKind: "samLampInfo",
                        samLampInfo: SeaLampActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).samLampInfo)
                    };
                    break;
                case /* CrucibleActivityDetailInfo crucible_info */ 15:
                    message.detail = {
                        oneofKind: "crucibleInfo",
                        crucibleInfo: CrucibleActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).crucibleInfo)
                    };
                    break;
                case /* SalesmanActivityDetailInfo salesman_info */ 9:
                    message.detail = {
                        oneofKind: "salesmanInfo",
                        salesmanInfo: SalesmanActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).salesmanInfo)
                    };
                    break;
                case /* TrialAvatarActivityDetailInfo trial_avatar_info */ 4:
                    message.detail = {
                        oneofKind: "trialAvatarInfo",
                        trialAvatarInfo: TrialAvatarActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).trialAvatarInfo)
                    };
                    break;
                case /* DeliveryActivityDetailInfo delivery_info */ 1141:
                    message.detail = {
                        oneofKind: "deliveryInfo",
                        deliveryInfo: DeliveryActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).deliveryInfo)
                    };
                    break;
                case /* AsterActivityDetailInfo aster_info */ 1977:
                    message.detail = {
                        oneofKind: "asterInfo",
                        asterInfo: AsterActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).asterInfo)
                    };
                    break;
                case /* FlightActivityDetailInfo flight_info */ 2011:
                    message.detail = {
                        oneofKind: "flightInfo",
                        flightInfo: FlightActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).flightInfo)
                    };
                    break;
                case /* DragonSpineActivityDetailInfo dragon_spine_info */ 1310:
                    message.detail = {
                        oneofKind: "dragonSpineInfo",
                        dragonSpineInfo: DragonSpineActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).dragonSpineInfo)
                    };
                    break;
                case /* EffigyActivityDetailInfo effigy_info */ 1374:
                    message.detail = {
                        oneofKind: "effigyInfo",
                        effigyInfo: EffigyActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).effigyInfo)
                    };
                    break;
                case /* TreasureMapActivityDetailInfo treasure_map_info */ 1925:
                    message.detail = {
                        oneofKind: "treasureMapInfo",
                        treasureMapInfo: TreasureMapActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).treasureMapInfo)
                    };
                    break;
                case /* BlessingActivityDetailInfo blessing_info */ 1962:
                    message.detail = {
                        oneofKind: "blessingInfo",
                        blessingInfo: BlessingActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).blessingInfo)
                    };
                    break;
                case /* SeaLampActivityInfo sea_lamp_info */ 247:
                    message.detail = {
                        oneofKind: "seaLampInfo",
                        seaLampInfo: SeaLampActivityInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).seaLampInfo)
                    };
                    break;
                case /* ExpeditionActivityDetailInfo expedition_info */ 1752:
                    message.detail = {
                        oneofKind: "expeditionInfo",
                        expeditionInfo: ExpeditionActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).expeditionInfo)
                    };
                    break;
                case /* ArenaChallengeActivityDetailInfo arena_challenge_info */ 538:
                    message.detail = {
                        oneofKind: "arenaChallengeInfo",
                        arenaChallengeInfo: ArenaChallengeActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).arenaChallengeInfo)
                    };
                    break;
                case /* FleurFairActivityDetailInfo fleur_fair_info */ 1447:
                    message.detail = {
                        oneofKind: "fleurFairInfo",
                        fleurFairInfo: FleurFairActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).fleurFairInfo)
                    };
                    break;
                case /* WaterSpiritActivityDetailInfo water_spirit_info */ 635:
                    message.detail = {
                        oneofKind: "waterSpiritInfo",
                        waterSpiritInfo: WaterSpiritActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).waterSpiritInfo)
                    };
                    break;
                case /* ChannelerSlabActivityDetailInfo channeler_slab_info */ 846:
                    message.detail = {
                        oneofKind: "channelerSlabInfo",
                        channelerSlabInfo: ChannelerSlabActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).channelerSlabInfo)
                    };
                    break;
                case /* MistTrialActivityDetailInfo mist_trial_activity_info */ 432:
                    message.detail = {
                        oneofKind: "mistTrialActivityInfo",
                        mistTrialActivityInfo: MistTrialActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).mistTrialActivityInfo)
                    };
                    break;
                case /* HideAndSeekActivityDetailInfo hide_and_seek_info */ 839:
                    message.detail = {
                        oneofKind: "hideAndSeekInfo",
                        hideAndSeekInfo: HideAndSeekActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).hideAndSeekInfo)
                    };
                    break;
                case /* FindHilichurlDetailInfo find_hilichurl_info */ 378:
                    message.detail = {
                        oneofKind: "findHilichurlInfo",
                        findHilichurlInfo: FindHilichurlDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).findHilichurlInfo)
                    };
                    break;
                case /* SummerTimeDetailInfo summer_time_info */ 1910:
                    message.detail = {
                        oneofKind: "summerTimeInfo",
                        summerTimeInfo: SummerTimeDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).summerTimeInfo)
                    };
                    break;
                case /* BuoyantCombatDetailInfo buoyant_combat_info */ 686:
                    message.detail = {
                        oneofKind: "buoyantCombatInfo",
                        buoyantCombatInfo: BuoyantCombatDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).buoyantCombatInfo)
                    };
                    break;
                case /* EchoShellDetailInfo echo_shell_info */ 1162:
                    message.detail = {
                        oneofKind: "echoShellInfo",
                        echoShellInfo: EchoShellDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).echoShellInfo)
                    };
                    break;
                case /* BounceConjuringActivityDetailInfo bounce_conjuring_info */ 922:
                    message.detail = {
                        oneofKind: "bounceConjuringInfo",
                        bounceConjuringInfo: BounceConjuringActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).bounceConjuringInfo)
                    };
                    break;
                case /* BlitzRushActivityDetailInfo blitz_rush_info */ 64:
                    message.detail = {
                        oneofKind: "blitzRushInfo",
                        blitzRushInfo: BlitzRushActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).blitzRushInfo)
                    };
                    break;
                case /* ChessActivityDetailInfo chess_info */ 1006:
                    message.detail = {
                        oneofKind: "chessInfo",
                        chessInfo: ChessActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).chessInfo)
                    };
                    break;
                case /* SumoActivityDetailInfo sumo_info */ 505:
                    message.detail = {
                        oneofKind: "sumoInfo",
                        sumoInfo: SumoActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).sumoInfo)
                    };
                    break;
                case /* MoonfinTrialActivityDetailInfo moonfin_trial_info */ 766:
                    message.detail = {
                        oneofKind: "moonfinTrialInfo",
                        moonfinTrialInfo: MoonfinTrialActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).moonfinTrialInfo)
                    };
                    break;
                case /* LunaRiteDetailInfo luna_rite_info */ 1545:
                    message.detail = {
                        oneofKind: "lunaRiteInfo",
                        lunaRiteInfo: LunaRiteDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).lunaRiteInfo)
                    };
                    break;
                case /* PlantFlowerActivityDetailInfo plant_flower_info */ 1274:
                    message.detail = {
                        oneofKind: "plantFlowerInfo",
                        plantFlowerInfo: PlantFlowerActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).plantFlowerInfo)
                    };
                    break;
                case /* MusicGameActivityDetailInfo music_game_info */ 1989:
                    message.detail = {
                        oneofKind: "musicGameInfo",
                        musicGameInfo: MusicGameActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).musicGameInfo)
                    };
                    break;
                case /* RoguelikeDungeonActivityDetailInfo roguelike_dungeon_info */ 970:
                    message.detail = {
                        oneofKind: "roguelikeDungeonInfo",
                        roguelikeDungeonInfo: RoguelikeDungeonActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).roguelikeDungeonInfo)
                    };
                    break;
                case /* DigActivityDetailInfo dig_info */ 1862:
                    message.detail = {
                        oneofKind: "digInfo",
                        digInfo: DigActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).digInfo)
                    };
                    break;
                case /* HachiActivityDetailInfo hachi_info */ 511:
                    message.detail = {
                        oneofKind: "hachiInfo",
                        hachiInfo: HachiActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).hachiInfo)
                    };
                    break;
                case /* WinterCampActivityDetailInfo winter_camp_info */ 699:
                    message.detail = {
                        oneofKind: "winterCampInfo",
                        winterCampInfo: WinterCampActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).winterCampInfo)
                    };
                    break;
                case /* PotionActivityDetailInfo potion_info */ 1567:
                    message.detail = {
                        oneofKind: "potionInfo",
                        potionInfo: PotionActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).potionInfo)
                    };
                    break;
                case /* TanukiTravelActivityDetailInfo tanuki_travel_activity_info */ 1348:
                    message.detail = {
                        oneofKind: "tanukiTravelActivityInfo",
                        tanukiTravelActivityInfo: TanukiTravelActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).tanukiTravelActivityInfo)
                    };
                    break;
                case /* LanternRiteActivityDetailInfo lantern_rite_activity_info */ 237:
                    message.detail = {
                        oneofKind: "lanternRiteActivityInfo",
                        lanternRiteActivityInfo: LanternRiteActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).lanternRiteActivityInfo)
                    };
                    break;
                case /* MichiaeMatsuriActivityDetailInfo michiae_matsuri_info */ 1839:
                    message.detail = {
                        oneofKind: "michiaeMatsuriInfo",
                        michiaeMatsuriInfo: MichiaeMatsuriActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).michiaeMatsuriInfo)
                    };
                    break;
                case /* BartenderActivityDetailInfo bartender_info */ 551:
                    message.detail = {
                        oneofKind: "bartenderInfo",
                        bartenderInfo: BartenderActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).bartenderInfo)
                    };
                    break;
                case /* UgcActivityDetailInfo ugc_info */ 1182:
                    message.detail = {
                        oneofKind: "ugcInfo",
                        ugcInfo: UgcActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).ugcInfo)
                    };
                    break;
                case /* CrystalLinkActivityDetailInfo crystal_link_info */ 812:
                    message.detail = {
                        oneofKind: "crystalLinkInfo",
                        crystalLinkInfo: CrystalLinkActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).crystalLinkInfo)
                    };
                    break;
                case /* IrodoriActivityDetailInfo irodori_info */ 1056:
                    message.detail = {
                        oneofKind: "irodoriInfo",
                        irodoriInfo: IrodoriActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).irodoriInfo)
                    };
                    break;
                case /* PhotoActivityDetailInfo photo_info */ 1822:
                    message.detail = {
                        oneofKind: "photoInfo",
                        photoInfo: PhotoActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).photoInfo)
                    };
                    break;
                case /* SpiceActivityDetailInfo spice_info */ 789:
                    message.detail = {
                        oneofKind: "spiceInfo",
                        spiceInfo: SpiceActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).spiceInfo)
                    };
                    break;
                case /* GachaActivityDetailInfo gacha_info */ 1297:
                    message.detail = {
                        oneofKind: "gachaInfo",
                        gachaInfo: GachaActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).gachaInfo)
                    };
                    break;
                case /* LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info */ 444:
                    message.detail = {
                        oneofKind: "luminanceStoneChallengeInfo",
                        luminanceStoneChallengeInfo: LuminanceStoneChallengeActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).luminanceStoneChallengeInfo)
                    };
                    break;
                case /* RogueDiaryActivityDetailInfo rogue_diary_info */ 560:
                    message.detail = {
                        oneofKind: "rogueDiaryInfo",
                        rogueDiaryInfo: RogueDiaryActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).rogueDiaryInfo)
                    };
                    break;
                case /* SummerTimeV2DetailInfo summer_time_v2_info */ 411:
                    message.detail = {
                        oneofKind: "summerTimeV2Info",
                        summerTimeV2Info: SummerTimeV2DetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).summerTimeV2Info)
                    };
                    break;
                case /* IslandPartyDetailInfo island_party_info */ 740:
                    message.detail = {
                        oneofKind: "islandPartyInfo",
                        islandPartyInfo: IslandPartyDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).islandPartyInfo)
                    };
                    break;
                case /* GearActivityDetailInfo gear_info */ 1482:
                    message.detail = {
                        oneofKind: "gearInfo",
                        gearInfo: GearActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).gearInfo)
                    };
                    break;
                case /* GravenInnocenceDetailInfo graven_innocence_info */ 1928:
                    message.detail = {
                        oneofKind: "gravenInnocenceInfo",
                        gravenInnocenceInfo: GravenInnocenceDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).gravenInnocenceInfo)
                    };
                    break;
                case /* InstableSprayDetailInfo instable_spray_info */ 1145:
                    message.detail = {
                        oneofKind: "instableSprayInfo",
                        instableSprayInfo: InstableSprayDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).instableSprayInfo)
                    };
                    break;
                case /* MuqadasPotionActivityDetailInfo muqadas_potion_info */ 1662:
                    message.detail = {
                        oneofKind: "muqadasPotionInfo",
                        muqadasPotionInfo: MuqadasPotionActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).muqadasPotionInfo)
                    };
                    break;
                case /* TreasureSeelieActivityDetailInfo treasure_seelie_info */ 1032:
                    message.detail = {
                        oneofKind: "treasureSeelieInfo",
                        treasureSeelieInfo: TreasureSeelieActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).treasureSeelieInfo)
                    };
                    break;
                case /* RockBoardExploreDetailInfo rock_board_explore_info */ 1265:
                    message.detail = {
                        oneofKind: "rockBoardExploreInfo",
                        rockBoardExploreInfo: RockBoardExploreDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).rockBoardExploreInfo)
                    };
                    break;
                case /* VintageActivityDetailInfo vintage_info */ 1308:
                    message.detail = {
                        oneofKind: "vintageInfo",
                        vintageInfo: VintageActivityDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).vintageInfo)
                    };
                    break;
                case /* WindFieldDetailInfo wind_field_info */ 468:
                    message.detail = {
                        oneofKind: "windFieldInfo",
                        windFieldInfo: WindFieldDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).windFieldInfo)
                    };
                    break;
                case /* FungusFighterDetailInfo fungus_fighter_info */ 1757:
                    message.detail = {
                        oneofKind: "fungusFighterInfo",
                        fungusFighterInfo: FungusFighterDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).fungusFighterInfo)
                    };
                    break;
                case /* CharAmusementDetailInfo char_amusement_info */ 621:
                    message.detail = {
                        oneofKind: "charAmusementInfo",
                        charAmusementInfo: CharAmusementDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).charAmusementInfo)
                    };
                    break;
                case /* EffigyChallengeV2DetailInfo effigy_challenge_info */ 233:
                    message.detail = {
                        oneofKind: "effigyChallengeInfo",
                        effigyChallengeInfo: EffigyChallengeV2DetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).effigyChallengeInfo)
                    };
                    break;
                case /* CoinCollectDetailInfo coin_collect_info */ 2002:
                    message.detail = {
                        oneofKind: "coinCollectInfo",
                        coinCollectInfo: CoinCollectDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).coinCollectInfo)
                    };
                    break;
                case /* BrickBreakerDetailInfo brick_breaker_info */ 1522:
                    message.detail = {
                        oneofKind: "brickBreakerInfo",
                        brickBreakerInfo: BrickBreakerDetailInfo.internalBinaryRead(reader, reader.uint32(), options, (message.detail as any).brickBreakerInfo)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    private binaryReadMap36(map: ActivityInfo["activityCoinMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof ActivityInfo["activityCoinMap"] | undefined, val: ActivityInfo["activityCoinMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field ActivityInfo.activity_coin_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    private binaryReadMap939(map: ActivityInfo["wishGiftNumMap"], reader: IBinaryReader, options: BinaryReadOptions): void {
        let len = reader.uint32(), end = reader.pos + len, key: keyof ActivityInfo["wishGiftNumMap"] | undefined, val: ActivityInfo["wishGiftNumMap"][any] | undefined;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.uint32();
                    break;
                case 2:
                    val = reader.uint32();
                    break;
                default: throw new globalThis.Error("unknown map entry field for field ActivityInfo.wish_gift_num_map");
            }
        }
        map[key ?? 0] = val ?? 0;
    }
    internalBinaryWrite(message: ActivityInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* bool Unk3300_MJNPGEKLOCG = 360 [json_name = "Unk3300MJNPGEKLOCG"]; */
        if (message.unk3300MJNPGEKLOCG !== false)
            writer.tag(360, WireType.Varint).bool(message.unk3300MJNPGEKLOCG);
        /* bool is_finished = 8; */
        if (message.isFinished !== false)
            writer.tag(8, WireType.Varint).bool(message.isFinished);
        /* uint32 cur_score = 1268; */
        if (message.curScore !== 0)
            writer.tag(1268, WireType.Varint).uint32(message.curScore);
        /* uint32 schedule_id = 7; */
        if (message.scheduleId !== 0)
            writer.tag(7, WireType.Varint).uint32(message.scheduleId);
        /* uint32 Unk3300_JAEALAIOOID = 1870 [json_name = "Unk3300JAEALAIOOID"]; */
        if (message.unk3300JAEALAIOOID !== 0)
            writer.tag(1870, WireType.Varint).uint32(message.unk3300JAEALAIOOID);
        /* bool Unk3300_ICNJJKDHPCH = 14 [json_name = "Unk3300ICNJJKDHPCH"]; */
        if (message.unk3300ICNJJKDHPCH !== false)
            writer.tag(14, WireType.Varint).bool(message.unk3300ICNJJKDHPCH);
        /* repeated uint32 Unk3300_BGNIBLKCPCA = 11 [json_name = "Unk3300BGNIBLKCPCA"]; */
        if (message.unk3300BGNIBLKCPCA.length) {
            writer.tag(11, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.unk3300BGNIBLKCPCA.length; i++)
                writer.uint32(message.unk3300BGNIBLKCPCA[i]);
            writer.join();
        }
        /* bool Unk3300_NEPKLLBJFKK = 1645 [json_name = "Unk3300NEPKLLBJFKK"]; */
        if (message.unk3300NEPKLLBJFKK !== false)
            writer.tag(1645, WireType.Varint).bool(message.unk3300NEPKLLBJFKK);
        /* repeated ActivityWatcherInfo watcher_info_list = 6; */
        for (let i = 0; i < message.watcherInfoList.length; i++)
            ActivityWatcherInfo.internalBinaryWrite(message.watcherInfoList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* repeated ActivityPushTipsData activity_push_tips_data_list = 1867; */
        for (let i = 0; i < message.activityPushTipsDataList.length; i++)
            ActivityPushTipsData.internalBinaryWrite(message.activityPushTipsDataList[i], writer.tag(1867, WireType.LengthDelimited).fork(), options).join();
        /* uint32 activity_id = 13; */
        if (message.activityId !== 0)
            writer.tag(13, WireType.Varint).uint32(message.activityId);
        /* repeated uint32 taken_reward_list = 1889; */
        if (message.takenRewardList.length) {
            writer.tag(1889, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.takenRewardList.length; i++)
                writer.uint32(message.takenRewardList[i]);
            writer.join();
        }
        /* uint32 Unk3300_GCEAKEMMJEA = 697 [json_name = "Unk3300GCEAKEMMJEA"]; */
        if (message.unk3300GCEAKEMMJEA !== 0)
            writer.tag(697, WireType.Varint).uint32(message.unk3300GCEAKEMMJEA);
        /* map<uint32, uint32> activity_coin_map = 36; */
        for (let k of Object.keys(message.activityCoinMap))
            writer.tag(36, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.activityCoinMap[k as any]).join();
        /* uint32 first_day_start_time = 786; */
        if (message.firstDayStartTime !== 0)
            writer.tag(786, WireType.Varint).uint32(message.firstDayStartTime);
        /* bool Unk3300_ABJKLALKLDG = 1486 [json_name = "Unk3300ABJKLALKLDG"]; */
        if (message.unk3300ABJKLALKLDG !== false)
            writer.tag(1486, WireType.Varint).bool(message.unk3300ABJKLALKLDG);
        /* uint32 Unk3300_DMILOONBELH = 3 [json_name = "Unk3300DMILOONBELH"]; */
        if (message.unk3300DMILOONBELH !== 0)
            writer.tag(3, WireType.Varint).uint32(message.unk3300DMILOONBELH);
        /* bool Unk3300_CBCEHLJJOGI = 1375 [json_name = "Unk3300CBCEHLJJOGI"]; */
        if (message.unk3300CBCEHLJJOGI !== false)
            writer.tag(1375, WireType.Varint).bool(message.unk3300CBCEHLJJOGI);
        /* uint32 begin_time = 1; */
        if (message.beginTime !== 0)
            writer.tag(1, WireType.Varint).uint32(message.beginTime);
        /* bool Unk3300_MDBDPIBEGGH = 12 [json_name = "Unk3300MDBDPIBEGGH"]; */
        if (message.unk3300MDBDPIBEGGH !== false)
            writer.tag(12, WireType.Varint).bool(message.unk3300MDBDPIBEGGH);
        /* map<uint32, uint32> wish_gift_num_map = 939; */
        for (let k of Object.keys(message.wishGiftNumMap))
            writer.tag(939, WireType.LengthDelimited).fork().tag(1, WireType.Varint).uint32(parseInt(k)).tag(2, WireType.Varint).uint32(message.wishGiftNumMap[k as any]).join();
        /* uint32 end_time = 10; */
        if (message.endTime !== 0)
            writer.tag(10, WireType.Varint).uint32(message.endTime);
        /* repeated uint32 Unk3300_HKKNIHNBHAE = 5 [json_name = "Unk3300HKKNIHNBHAE"]; */
        if (message.unk3300HKKNIHNBHAE.length) {
            writer.tag(5, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.unk3300HKKNIHNBHAE.length; i++)
                writer.uint32(message.unk3300HKKNIHNBHAE[i]);
            writer.join();
        }
        /* SeaLampActivityDetailInfo sam_lamp_info = 2; */
        if (message.detail.oneofKind === "samLampInfo")
            SeaLampActivityDetailInfo.internalBinaryWrite(message.detail.samLampInfo, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* CrucibleActivityDetailInfo crucible_info = 15; */
        if (message.detail.oneofKind === "crucibleInfo")
            CrucibleActivityDetailInfo.internalBinaryWrite(message.detail.crucibleInfo, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* SalesmanActivityDetailInfo salesman_info = 9; */
        if (message.detail.oneofKind === "salesmanInfo")
            SalesmanActivityDetailInfo.internalBinaryWrite(message.detail.salesmanInfo, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* TrialAvatarActivityDetailInfo trial_avatar_info = 4; */
        if (message.detail.oneofKind === "trialAvatarInfo")
            TrialAvatarActivityDetailInfo.internalBinaryWrite(message.detail.trialAvatarInfo, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* DeliveryActivityDetailInfo delivery_info = 1141; */
        if (message.detail.oneofKind === "deliveryInfo")
            DeliveryActivityDetailInfo.internalBinaryWrite(message.detail.deliveryInfo, writer.tag(1141, WireType.LengthDelimited).fork(), options).join();
        /* AsterActivityDetailInfo aster_info = 1977; */
        if (message.detail.oneofKind === "asterInfo")
            AsterActivityDetailInfo.internalBinaryWrite(message.detail.asterInfo, writer.tag(1977, WireType.LengthDelimited).fork(), options).join();
        /* FlightActivityDetailInfo flight_info = 2011; */
        if (message.detail.oneofKind === "flightInfo")
            FlightActivityDetailInfo.internalBinaryWrite(message.detail.flightInfo, writer.tag(2011, WireType.LengthDelimited).fork(), options).join();
        /* DragonSpineActivityDetailInfo dragon_spine_info = 1310; */
        if (message.detail.oneofKind === "dragonSpineInfo")
            DragonSpineActivityDetailInfo.internalBinaryWrite(message.detail.dragonSpineInfo, writer.tag(1310, WireType.LengthDelimited).fork(), options).join();
        /* EffigyActivityDetailInfo effigy_info = 1374; */
        if (message.detail.oneofKind === "effigyInfo")
            EffigyActivityDetailInfo.internalBinaryWrite(message.detail.effigyInfo, writer.tag(1374, WireType.LengthDelimited).fork(), options).join();
        /* TreasureMapActivityDetailInfo treasure_map_info = 1925; */
        if (message.detail.oneofKind === "treasureMapInfo")
            TreasureMapActivityDetailInfo.internalBinaryWrite(message.detail.treasureMapInfo, writer.tag(1925, WireType.LengthDelimited).fork(), options).join();
        /* BlessingActivityDetailInfo blessing_info = 1962; */
        if (message.detail.oneofKind === "blessingInfo")
            BlessingActivityDetailInfo.internalBinaryWrite(message.detail.blessingInfo, writer.tag(1962, WireType.LengthDelimited).fork(), options).join();
        /* SeaLampActivityInfo sea_lamp_info = 247; */
        if (message.detail.oneofKind === "seaLampInfo")
            SeaLampActivityInfo.internalBinaryWrite(message.detail.seaLampInfo, writer.tag(247, WireType.LengthDelimited).fork(), options).join();
        /* ExpeditionActivityDetailInfo expedition_info = 1752; */
        if (message.detail.oneofKind === "expeditionInfo")
            ExpeditionActivityDetailInfo.internalBinaryWrite(message.detail.expeditionInfo, writer.tag(1752, WireType.LengthDelimited).fork(), options).join();
        /* ArenaChallengeActivityDetailInfo arena_challenge_info = 538; */
        if (message.detail.oneofKind === "arenaChallengeInfo")
            ArenaChallengeActivityDetailInfo.internalBinaryWrite(message.detail.arenaChallengeInfo, writer.tag(538, WireType.LengthDelimited).fork(), options).join();
        /* FleurFairActivityDetailInfo fleur_fair_info = 1447; */
        if (message.detail.oneofKind === "fleurFairInfo")
            FleurFairActivityDetailInfo.internalBinaryWrite(message.detail.fleurFairInfo, writer.tag(1447, WireType.LengthDelimited).fork(), options).join();
        /* WaterSpiritActivityDetailInfo water_spirit_info = 635; */
        if (message.detail.oneofKind === "waterSpiritInfo")
            WaterSpiritActivityDetailInfo.internalBinaryWrite(message.detail.waterSpiritInfo, writer.tag(635, WireType.LengthDelimited).fork(), options).join();
        /* ChannelerSlabActivityDetailInfo channeler_slab_info = 846; */
        if (message.detail.oneofKind === "channelerSlabInfo")
            ChannelerSlabActivityDetailInfo.internalBinaryWrite(message.detail.channelerSlabInfo, writer.tag(846, WireType.LengthDelimited).fork(), options).join();
        /* MistTrialActivityDetailInfo mist_trial_activity_info = 432; */
        if (message.detail.oneofKind === "mistTrialActivityInfo")
            MistTrialActivityDetailInfo.internalBinaryWrite(message.detail.mistTrialActivityInfo, writer.tag(432, WireType.LengthDelimited).fork(), options).join();
        /* HideAndSeekActivityDetailInfo hide_and_seek_info = 839; */
        if (message.detail.oneofKind === "hideAndSeekInfo")
            HideAndSeekActivityDetailInfo.internalBinaryWrite(message.detail.hideAndSeekInfo, writer.tag(839, WireType.LengthDelimited).fork(), options).join();
        /* FindHilichurlDetailInfo find_hilichurl_info = 378; */
        if (message.detail.oneofKind === "findHilichurlInfo")
            FindHilichurlDetailInfo.internalBinaryWrite(message.detail.findHilichurlInfo, writer.tag(378, WireType.LengthDelimited).fork(), options).join();
        /* SummerTimeDetailInfo summer_time_info = 1910; */
        if (message.detail.oneofKind === "summerTimeInfo")
            SummerTimeDetailInfo.internalBinaryWrite(message.detail.summerTimeInfo, writer.tag(1910, WireType.LengthDelimited).fork(), options).join();
        /* BuoyantCombatDetailInfo buoyant_combat_info = 686; */
        if (message.detail.oneofKind === "buoyantCombatInfo")
            BuoyantCombatDetailInfo.internalBinaryWrite(message.detail.buoyantCombatInfo, writer.tag(686, WireType.LengthDelimited).fork(), options).join();
        /* EchoShellDetailInfo echo_shell_info = 1162; */
        if (message.detail.oneofKind === "echoShellInfo")
            EchoShellDetailInfo.internalBinaryWrite(message.detail.echoShellInfo, writer.tag(1162, WireType.LengthDelimited).fork(), options).join();
        /* BounceConjuringActivityDetailInfo bounce_conjuring_info = 922; */
        if (message.detail.oneofKind === "bounceConjuringInfo")
            BounceConjuringActivityDetailInfo.internalBinaryWrite(message.detail.bounceConjuringInfo, writer.tag(922, WireType.LengthDelimited).fork(), options).join();
        /* BlitzRushActivityDetailInfo blitz_rush_info = 64; */
        if (message.detail.oneofKind === "blitzRushInfo")
            BlitzRushActivityDetailInfo.internalBinaryWrite(message.detail.blitzRushInfo, writer.tag(64, WireType.LengthDelimited).fork(), options).join();
        /* ChessActivityDetailInfo chess_info = 1006; */
        if (message.detail.oneofKind === "chessInfo")
            ChessActivityDetailInfo.internalBinaryWrite(message.detail.chessInfo, writer.tag(1006, WireType.LengthDelimited).fork(), options).join();
        /* SumoActivityDetailInfo sumo_info = 505; */
        if (message.detail.oneofKind === "sumoInfo")
            SumoActivityDetailInfo.internalBinaryWrite(message.detail.sumoInfo, writer.tag(505, WireType.LengthDelimited).fork(), options).join();
        /* MoonfinTrialActivityDetailInfo moonfin_trial_info = 766; */
        if (message.detail.oneofKind === "moonfinTrialInfo")
            MoonfinTrialActivityDetailInfo.internalBinaryWrite(message.detail.moonfinTrialInfo, writer.tag(766, WireType.LengthDelimited).fork(), options).join();
        /* LunaRiteDetailInfo luna_rite_info = 1545; */
        if (message.detail.oneofKind === "lunaRiteInfo")
            LunaRiteDetailInfo.internalBinaryWrite(message.detail.lunaRiteInfo, writer.tag(1545, WireType.LengthDelimited).fork(), options).join();
        /* PlantFlowerActivityDetailInfo plant_flower_info = 1274; */
        if (message.detail.oneofKind === "plantFlowerInfo")
            PlantFlowerActivityDetailInfo.internalBinaryWrite(message.detail.plantFlowerInfo, writer.tag(1274, WireType.LengthDelimited).fork(), options).join();
        /* MusicGameActivityDetailInfo music_game_info = 1989; */
        if (message.detail.oneofKind === "musicGameInfo")
            MusicGameActivityDetailInfo.internalBinaryWrite(message.detail.musicGameInfo, writer.tag(1989, WireType.LengthDelimited).fork(), options).join();
        /* RoguelikeDungeonActivityDetailInfo roguelike_dungeon_info = 970; */
        if (message.detail.oneofKind === "roguelikeDungeonInfo")
            RoguelikeDungeonActivityDetailInfo.internalBinaryWrite(message.detail.roguelikeDungeonInfo, writer.tag(970, WireType.LengthDelimited).fork(), options).join();
        /* DigActivityDetailInfo dig_info = 1862; */
        if (message.detail.oneofKind === "digInfo")
            DigActivityDetailInfo.internalBinaryWrite(message.detail.digInfo, writer.tag(1862, WireType.LengthDelimited).fork(), options).join();
        /* HachiActivityDetailInfo hachi_info = 511; */
        if (message.detail.oneofKind === "hachiInfo")
            HachiActivityDetailInfo.internalBinaryWrite(message.detail.hachiInfo, writer.tag(511, WireType.LengthDelimited).fork(), options).join();
        /* WinterCampActivityDetailInfo winter_camp_info = 699; */
        if (message.detail.oneofKind === "winterCampInfo")
            WinterCampActivityDetailInfo.internalBinaryWrite(message.detail.winterCampInfo, writer.tag(699, WireType.LengthDelimited).fork(), options).join();
        /* PotionActivityDetailInfo potion_info = 1567; */
        if (message.detail.oneofKind === "potionInfo")
            PotionActivityDetailInfo.internalBinaryWrite(message.detail.potionInfo, writer.tag(1567, WireType.LengthDelimited).fork(), options).join();
        /* TanukiTravelActivityDetailInfo tanuki_travel_activity_info = 1348; */
        if (message.detail.oneofKind === "tanukiTravelActivityInfo")
            TanukiTravelActivityDetailInfo.internalBinaryWrite(message.detail.tanukiTravelActivityInfo, writer.tag(1348, WireType.LengthDelimited).fork(), options).join();
        /* LanternRiteActivityDetailInfo lantern_rite_activity_info = 237; */
        if (message.detail.oneofKind === "lanternRiteActivityInfo")
            LanternRiteActivityDetailInfo.internalBinaryWrite(message.detail.lanternRiteActivityInfo, writer.tag(237, WireType.LengthDelimited).fork(), options).join();
        /* MichiaeMatsuriActivityDetailInfo michiae_matsuri_info = 1839; */
        if (message.detail.oneofKind === "michiaeMatsuriInfo")
            MichiaeMatsuriActivityDetailInfo.internalBinaryWrite(message.detail.michiaeMatsuriInfo, writer.tag(1839, WireType.LengthDelimited).fork(), options).join();
        /* BartenderActivityDetailInfo bartender_info = 551; */
        if (message.detail.oneofKind === "bartenderInfo")
            BartenderActivityDetailInfo.internalBinaryWrite(message.detail.bartenderInfo, writer.tag(551, WireType.LengthDelimited).fork(), options).join();
        /* UgcActivityDetailInfo ugc_info = 1182; */
        if (message.detail.oneofKind === "ugcInfo")
            UgcActivityDetailInfo.internalBinaryWrite(message.detail.ugcInfo, writer.tag(1182, WireType.LengthDelimited).fork(), options).join();
        /* CrystalLinkActivityDetailInfo crystal_link_info = 812; */
        if (message.detail.oneofKind === "crystalLinkInfo")
            CrystalLinkActivityDetailInfo.internalBinaryWrite(message.detail.crystalLinkInfo, writer.tag(812, WireType.LengthDelimited).fork(), options).join();
        /* IrodoriActivityDetailInfo irodori_info = 1056; */
        if (message.detail.oneofKind === "irodoriInfo")
            IrodoriActivityDetailInfo.internalBinaryWrite(message.detail.irodoriInfo, writer.tag(1056, WireType.LengthDelimited).fork(), options).join();
        /* PhotoActivityDetailInfo photo_info = 1822; */
        if (message.detail.oneofKind === "photoInfo")
            PhotoActivityDetailInfo.internalBinaryWrite(message.detail.photoInfo, writer.tag(1822, WireType.LengthDelimited).fork(), options).join();
        /* SpiceActivityDetailInfo spice_info = 789; */
        if (message.detail.oneofKind === "spiceInfo")
            SpiceActivityDetailInfo.internalBinaryWrite(message.detail.spiceInfo, writer.tag(789, WireType.LengthDelimited).fork(), options).join();
        /* GachaActivityDetailInfo gacha_info = 1297; */
        if (message.detail.oneofKind === "gachaInfo")
            GachaActivityDetailInfo.internalBinaryWrite(message.detail.gachaInfo, writer.tag(1297, WireType.LengthDelimited).fork(), options).join();
        /* LuminanceStoneChallengeActivityDetailInfo luminance_stone_challenge_info = 444; */
        if (message.detail.oneofKind === "luminanceStoneChallengeInfo")
            LuminanceStoneChallengeActivityDetailInfo.internalBinaryWrite(message.detail.luminanceStoneChallengeInfo, writer.tag(444, WireType.LengthDelimited).fork(), options).join();
        /* RogueDiaryActivityDetailInfo rogue_diary_info = 560; */
        if (message.detail.oneofKind === "rogueDiaryInfo")
            RogueDiaryActivityDetailInfo.internalBinaryWrite(message.detail.rogueDiaryInfo, writer.tag(560, WireType.LengthDelimited).fork(), options).join();
        /* SummerTimeV2DetailInfo summer_time_v2_info = 411; */
        if (message.detail.oneofKind === "summerTimeV2Info")
            SummerTimeV2DetailInfo.internalBinaryWrite(message.detail.summerTimeV2Info, writer.tag(411, WireType.LengthDelimited).fork(), options).join();
        /* IslandPartyDetailInfo island_party_info = 740; */
        if (message.detail.oneofKind === "islandPartyInfo")
            IslandPartyDetailInfo.internalBinaryWrite(message.detail.islandPartyInfo, writer.tag(740, WireType.LengthDelimited).fork(), options).join();
        /* GearActivityDetailInfo gear_info = 1482; */
        if (message.detail.oneofKind === "gearInfo")
            GearActivityDetailInfo.internalBinaryWrite(message.detail.gearInfo, writer.tag(1482, WireType.LengthDelimited).fork(), options).join();
        /* GravenInnocenceDetailInfo graven_innocence_info = 1928; */
        if (message.detail.oneofKind === "gravenInnocenceInfo")
            GravenInnocenceDetailInfo.internalBinaryWrite(message.detail.gravenInnocenceInfo, writer.tag(1928, WireType.LengthDelimited).fork(), options).join();
        /* InstableSprayDetailInfo instable_spray_info = 1145; */
        if (message.detail.oneofKind === "instableSprayInfo")
            InstableSprayDetailInfo.internalBinaryWrite(message.detail.instableSprayInfo, writer.tag(1145, WireType.LengthDelimited).fork(), options).join();
        /* MuqadasPotionActivityDetailInfo muqadas_potion_info = 1662; */
        if (message.detail.oneofKind === "muqadasPotionInfo")
            MuqadasPotionActivityDetailInfo.internalBinaryWrite(message.detail.muqadasPotionInfo, writer.tag(1662, WireType.LengthDelimited).fork(), options).join();
        /* TreasureSeelieActivityDetailInfo treasure_seelie_info = 1032; */
        if (message.detail.oneofKind === "treasureSeelieInfo")
            TreasureSeelieActivityDetailInfo.internalBinaryWrite(message.detail.treasureSeelieInfo, writer.tag(1032, WireType.LengthDelimited).fork(), options).join();
        /* RockBoardExploreDetailInfo rock_board_explore_info = 1265; */
        if (message.detail.oneofKind === "rockBoardExploreInfo")
            RockBoardExploreDetailInfo.internalBinaryWrite(message.detail.rockBoardExploreInfo, writer.tag(1265, WireType.LengthDelimited).fork(), options).join();
        /* VintageActivityDetailInfo vintage_info = 1308; */
        if (message.detail.oneofKind === "vintageInfo")
            VintageActivityDetailInfo.internalBinaryWrite(message.detail.vintageInfo, writer.tag(1308, WireType.LengthDelimited).fork(), options).join();
        /* WindFieldDetailInfo wind_field_info = 468; */
        if (message.detail.oneofKind === "windFieldInfo")
            WindFieldDetailInfo.internalBinaryWrite(message.detail.windFieldInfo, writer.tag(468, WireType.LengthDelimited).fork(), options).join();
        /* FungusFighterDetailInfo fungus_fighter_info = 1757; */
        if (message.detail.oneofKind === "fungusFighterInfo")
            FungusFighterDetailInfo.internalBinaryWrite(message.detail.fungusFighterInfo, writer.tag(1757, WireType.LengthDelimited).fork(), options).join();
        /* CharAmusementDetailInfo char_amusement_info = 621; */
        if (message.detail.oneofKind === "charAmusementInfo")
            CharAmusementDetailInfo.internalBinaryWrite(message.detail.charAmusementInfo, writer.tag(621, WireType.LengthDelimited).fork(), options).join();
        /* EffigyChallengeV2DetailInfo effigy_challenge_info = 233; */
        if (message.detail.oneofKind === "effigyChallengeInfo")
            EffigyChallengeV2DetailInfo.internalBinaryWrite(message.detail.effigyChallengeInfo, writer.tag(233, WireType.LengthDelimited).fork(), options).join();
        /* CoinCollectDetailInfo coin_collect_info = 2002; */
        if (message.detail.oneofKind === "coinCollectInfo")
            CoinCollectDetailInfo.internalBinaryWrite(message.detail.coinCollectInfo, writer.tag(2002, WireType.LengthDelimited).fork(), options).join();
        /* BrickBreakerDetailInfo brick_breaker_info = 1522; */
        if (message.detail.oneofKind === "brickBreakerInfo")
            BrickBreakerDetailInfo.internalBinaryWrite(message.detail.brickBreakerInfo, writer.tag(1522, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message ActivityInfo
 */
export const ActivityInfo = new ActivityInfo$Type();
