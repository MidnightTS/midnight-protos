/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ActivityInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ActivityWatcherInfo";
import * as dependency_2 from "./ArenaChallengeActivityDetailInfo";
import * as dependency_3 from "./AsterActivityDetailInfo";
import * as dependency_4 from "./BartenderActivityDetailInfo";
import * as dependency_5 from "./BlessingActivityDetailInfo";
import * as dependency_6 from "./BlitzRushActivityDetailInfo";
import * as dependency_7 from "./BounceConjuringActivityDetailInfo";
import * as dependency_8 from "./BuoyantCombatDetailInfo";
import * as dependency_9 from "./ChannelerSlabActivityDetailInfo";
import * as dependency_10 from "./ChessActivityDetailInfo";
import * as dependency_11 from "./CrucibleActivityDetailInfo";
import * as dependency_12 from "./CrystalLinkActivityDetailInfo";
import * as dependency_13 from "./DeliveryActivityDetailInfo";
import * as dependency_14 from "./DigActivityDetailInfo";
import * as dependency_15 from "./DragonSpineActivityDetailInfo";
import * as dependency_16 from "./EchoShellDetailInfo";
import * as dependency_17 from "./EffigyActivityDetailInfo";
import * as dependency_18 from "./ExpeditionActivityDetailInfo";
import * as dependency_19 from "./FindHilichurlDetailInfo";
import * as dependency_20 from "./FleurFairActivityDetailInfo";
import * as dependency_21 from "./FlightActivityDetailInfo";
import * as dependency_22 from "./GachaActivityDetailInfo";
import * as dependency_23 from "./GearActivityDetailInfo";
import * as dependency_24 from "./GravenInnocenceDetailInfo";
import * as dependency_25 from "./HachiActivityDetailInfo";
import * as dependency_26 from "./HideAndSeekActivityDetailInfo";
import * as dependency_27 from "./InstableSprayDetailInfo";
import * as dependency_28 from "./IrodoriActivityDetailInfo";
import * as dependency_29 from "./IslandPartyActivityDetailInfo";
import * as dependency_30 from "./LanternRiteActivityDetailInfo";
import * as dependency_31 from "./LuminanceStoneChallengeActivityDetailInfo";
import * as dependency_32 from "./LunaRiteDetailInfo";
import * as dependency_33 from "./MichiaeMatsuriActivityDetailInfo";
import * as dependency_34 from "./MistTrialActivityDetailInfo";
import * as dependency_35 from "./MoonfinTrialActivityDetailInfo";
import * as dependency_36 from "./MuqadasPotionDetailInfo";
import * as dependency_37 from "./MusicGameActivityDetailInfo";
import * as dependency_38 from "./PhotoActivityDetailInfo";
import * as dependency_39 from "./PlantFlowerActivityDetailInfo";
import * as dependency_40 from "./PotionActivityDetailInfo";
import * as dependency_41 from "./RockBoardExploreDetailInfo";
import * as dependency_42 from "./RogueDiaryActivityDetailInfo";
import * as dependency_43 from "./RoguelikeDungeonActivityDetailInfo";
import * as dependency_44 from "./SalesmanActivityDetailInfo";
import * as dependency_45 from "./SeaLampActivityDetailInfo";
import * as dependency_46 from "./SeaLampActivityInfo";
import * as dependency_47 from "./SpiceActivityDetailInfo";
import * as dependency_48 from "./SummerTimeDetailInfo";
import * as dependency_49 from "./SummerTimeV2DetailInfo";
import * as dependency_50 from "./SumoActivityDetailInfo";
import * as dependency_51 from "./TanukiTravelActivityDetailInfo";
import * as dependency_52 from "./TreasureMapActivityDetailInfo";
import * as dependency_53 from "./TreasureSeelieDetailInfo";
import * as dependency_54 from "./TrialAvatarActivityDetailInfo";
import * as dependency_55 from "./UgcActivityDetailInfo";
import * as dependency_56 from "./Unk2800_PHPHMILPOLC";
import * as dependency_57 from "./VintageDetailInfo";
import * as dependency_58 from "./WaterSpiritActivityDetailInfo";
import * as dependency_59 from "./WindFieldDetailInfo";
import * as dependency_60 from "./WinterCampActivityDetailInfo";
import * as pb_1 from "google-protobuf";
export class ActivityInfo extends pb_1.Message {
    #one_of_decls: number[][] = [[7, 14, 11, 1, 1092, 557, 1365, 1727, 391, 1114, 1869, 494, 202, 859, 857, 1675, 1015, 156, 427, 1411, 1372, 1842, 1113, 767, 794, 927, 1261, 1588, 814, 54, 460, 219, 403, 491, 1083, 1273, 1796, 1876, 194, 1725, 703, 1226, 750, 328, 1891, 825, 1308, 812, 622, 1885, 722, 1911, 1043, 1157, 966, 1078, 445, 352]];
    constructor(data?: any[] | ({
        is_play_open_anim?: boolean;
        schedule_id?: number;
        cur_score?: number;
        is_starting?: boolean;
        taken_reward_list?: number[];
        Unk2700_NONJFHAIFLA?: boolean;
        selected_avatar_reward_id?: number;
        first_day_start_time?: number;
        score_limit?: number;
        is_finished?: boolean;
        is_hidden?: boolean;
        begin_time?: number;
        end_time?: number;
        activity_coin_map?: Map<number, number>;
        activity_type?: number;
        Unk2700_EDKLLHBEEGE?: boolean;
        Unk2800_KOMIPKKKOBE?: dependency_56.Unk2800_PHPHMILPOLC[];
        meet_cond_list?: number[];
        Unk2700_IFPBCNLCKLG?: Map<number, number>;
        expire_cond_list?: number[];
        watcher_info_list?: dependency_1.ActivityWatcherInfo[];
        activity_id?: number;
    } & (({
        sam_lamp_info?: dependency_45.SeaLampActivityDetailInfo;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: dependency_11.CrucibleActivityDetailInfo;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: dependency_44.SalesmanActivityDetailInfo;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: dependency_54.TrialAvatarActivityDetailInfo;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: dependency_13.DeliveryActivityDetailInfo;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: dependency_3.AsterActivityDetailInfo;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: dependency_21.FlightActivityDetailInfo;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: dependency_15.DragonSpineActivityDetailInfo;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: dependency_17.EffigyActivityDetailInfo;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: dependency_52.TreasureMapActivityDetailInfo;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: dependency_5.BlessingActivityDetailInfo;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: dependency_46.SeaLampActivityInfo;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: dependency_18.ExpeditionActivityDetailInfo;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: dependency_2.ArenaChallengeActivityDetailInfo;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: dependency_20.FleurFairActivityDetailInfo;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: dependency_58.WaterSpiritActivityDetailInfo;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: dependency_9.ChannelerSlabActivityDetailInfo;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: dependency_34.MistTrialActivityDetailInfo;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: dependency_26.HideAndSeekActivityDetailInfo;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: dependency_19.FindHilichurlDetailInfo;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: dependency_48.SummerTimeDetailInfo;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: dependency_8.BuoyantCombatDetailInfo;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: dependency_16.EchoShellDetailInfo;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: dependency_7.BounceConjuringActivityDetailInfo;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: dependency_6.BlitzRushActivityDetailInfo;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: dependency_10.ChessActivityDetailInfo;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: dependency_50.SumoActivityDetailInfo;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: dependency_35.MoonfinTrialActivityDetailInfo;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: dependency_32.LunaRiteDetailInfo;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: dependency_39.PlantFlowerActivityDetailInfo;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: dependency_37.MusicGameActivityDetailInfo;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: dependency_43.RoguelikeDungeonActivityDetailInfo;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: dependency_14.DigActivityDetailInfo;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: dependency_25.HachiActivityDetailInfo;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: dependency_60.WinterCampActivityDetailInfo;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: dependency_40.PotionActivityDetailInfo;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: dependency_51.TanukiTravelActivityDetailInfo;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: dependency_30.LanternRiteActivityDetailInfo;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: dependency_33.MichiaeMatsuriActivityDetailInfo;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: dependency_4.BartenderActivityDetailInfo;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: dependency_55.UgcActivityDetailInfo;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: dependency_12.CrystalLinkActivityDetailInfo;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: dependency_28.IrodoriActivityDetailInfo;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: dependency_38.PhotoActivityDetailInfo;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: dependency_47.SpiceActivityDetailInfo;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: dependency_22.GachaActivityDetailInfo;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: dependency_31.LuminanceStoneChallengeActivityDetailInfo;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: dependency_42.RogueDiaryActivityDetailInfo;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: dependency_49.SummerTimeV2DetailInfo;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: dependency_29.IslandPartyActivityDetailInfo;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: dependency_23.GearActivityDetailInfo;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: dependency_24.GravenInnocenceDetailInfo;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: dependency_27.InstableSprayDetailInfo;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: dependency_36.MuqadasPotionDetailInfo;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: dependency_53.TreasureSeelieDetailInfo;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: dependency_41.RockBoardExploreDetailInfo;
        vintage_info?: never;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: dependency_57.VintageDetailInfo;
        wind_field_info?: never;
    } | {
        sam_lamp_info?: never;
        crucible_info?: never;
        salesman_info?: never;
        trial_avatar_info?: never;
        delivery_info?: never;
        aster_info?: never;
        flight_info?: never;
        dragon_spine_info?: never;
        effigy_info?: never;
        treasure_map_info?: never;
        blessing_info?: never;
        sea_lamp_info?: never;
        expedition_info?: never;
        arena_challenge_info?: never;
        fleur_fair_info?: never;
        water_spirit_info?: never;
        channeler_slab_info?: never;
        mist_trial_activity_info?: never;
        hide_and_seek_info?: never;
        find_hilichurl_info?: never;
        summer_time_info?: never;
        buoyant_combat_info?: never;
        echo_shell_info?: never;
        bounce_conjuring_info?: never;
        blitz_rush_info?: never;
        chess_info?: never;
        sumo_info?: never;
        moonfin_trial_info?: never;
        luna_rite_info?: never;
        plant_flower_info?: never;
        music_game_info?: never;
        roguelike_dungeon_info?: never;
        dig_info?: never;
        hachi_info?: never;
        winter_camp_info?: never;
        potion_info?: never;
        tanuki_travel_activity_info?: never;
        lantern_rite_activity_info?: never;
        michiae_matsuri_info?: never;
        bartender_info?: never;
        ugc_info?: never;
        crystal_link_info?: never;
        irodori_info?: never;
        photo_info?: never;
        spice_info?: never;
        gacha_info?: never;
        luminance_stone_challenge_info?: never;
        rogue_diary_info?: never;
        summer_time_v2_info?: never;
        island_party_info?: never;
        gear_info?: never;
        graven_innocence_info?: never;
        instable_spray_info?: never;
        muqadas_potion_info?: never;
        treasure_seelie_info?: never;
        rock_board_explore_info?: never;
        vintage_info?: never;
        wind_field_info?: dependency_59.WindFieldDetailInfo;
    })))) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [329, 864, 10, 3, 2], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_play_open_anim" in data && data.is_play_open_anim != undefined) {
                this.is_play_open_anim = data.is_play_open_anim;
            }
            if ("schedule_id" in data && data.schedule_id != undefined) {
                this.schedule_id = data.schedule_id;
            }
            if ("cur_score" in data && data.cur_score != undefined) {
                this.cur_score = data.cur_score;
            }
            if ("is_starting" in data && data.is_starting != undefined) {
                this.is_starting = data.is_starting;
            }
            if ("taken_reward_list" in data && data.taken_reward_list != undefined) {
                this.taken_reward_list = data.taken_reward_list;
            }
            if ("Unk2700_NONJFHAIFLA" in data && data.Unk2700_NONJFHAIFLA != undefined) {
                this.Unk2700_NONJFHAIFLA = data.Unk2700_NONJFHAIFLA;
            }
            if ("selected_avatar_reward_id" in data && data.selected_avatar_reward_id != undefined) {
                this.selected_avatar_reward_id = data.selected_avatar_reward_id;
            }
            if ("first_day_start_time" in data && data.first_day_start_time != undefined) {
                this.first_day_start_time = data.first_day_start_time;
            }
            if ("score_limit" in data && data.score_limit != undefined) {
                this.score_limit = data.score_limit;
            }
            if ("is_finished" in data && data.is_finished != undefined) {
                this.is_finished = data.is_finished;
            }
            if ("is_hidden" in data && data.is_hidden != undefined) {
                this.is_hidden = data.is_hidden;
            }
            if ("begin_time" in data && data.begin_time != undefined) {
                this.begin_time = data.begin_time;
            }
            if ("end_time" in data && data.end_time != undefined) {
                this.end_time = data.end_time;
            }
            if ("activity_coin_map" in data && data.activity_coin_map != undefined) {
                this.activity_coin_map = data.activity_coin_map;
            }
            if ("activity_type" in data && data.activity_type != undefined) {
                this.activity_type = data.activity_type;
            }
            if ("Unk2700_EDKLLHBEEGE" in data && data.Unk2700_EDKLLHBEEGE != undefined) {
                this.Unk2700_EDKLLHBEEGE = data.Unk2700_EDKLLHBEEGE;
            }
            if ("Unk2800_KOMIPKKKOBE" in data && data.Unk2800_KOMIPKKKOBE != undefined) {
                this.Unk2800_KOMIPKKKOBE = data.Unk2800_KOMIPKKKOBE;
            }
            if ("meet_cond_list" in data && data.meet_cond_list != undefined) {
                this.meet_cond_list = data.meet_cond_list;
            }
            if ("Unk2700_IFPBCNLCKLG" in data && data.Unk2700_IFPBCNLCKLG != undefined) {
                this.Unk2700_IFPBCNLCKLG = data.Unk2700_IFPBCNLCKLG;
            }
            if ("expire_cond_list" in data && data.expire_cond_list != undefined) {
                this.expire_cond_list = data.expire_cond_list;
            }
            if ("watcher_info_list" in data && data.watcher_info_list != undefined) {
                this.watcher_info_list = data.watcher_info_list;
            }
            if ("activity_id" in data && data.activity_id != undefined) {
                this.activity_id = data.activity_id;
            }
            if ("sam_lamp_info" in data && data.sam_lamp_info != undefined) {
                this.sam_lamp_info = data.sam_lamp_info;
            }
            if ("crucible_info" in data && data.crucible_info != undefined) {
                this.crucible_info = data.crucible_info;
            }
            if ("salesman_info" in data && data.salesman_info != undefined) {
                this.salesman_info = data.salesman_info;
            }
            if ("trial_avatar_info" in data && data.trial_avatar_info != undefined) {
                this.trial_avatar_info = data.trial_avatar_info;
            }
            if ("delivery_info" in data && data.delivery_info != undefined) {
                this.delivery_info = data.delivery_info;
            }
            if ("aster_info" in data && data.aster_info != undefined) {
                this.aster_info = data.aster_info;
            }
            if ("flight_info" in data && data.flight_info != undefined) {
                this.flight_info = data.flight_info;
            }
            if ("dragon_spine_info" in data && data.dragon_spine_info != undefined) {
                this.dragon_spine_info = data.dragon_spine_info;
            }
            if ("effigy_info" in data && data.effigy_info != undefined) {
                this.effigy_info = data.effigy_info;
            }
            if ("treasure_map_info" in data && data.treasure_map_info != undefined) {
                this.treasure_map_info = data.treasure_map_info;
            }
            if ("blessing_info" in data && data.blessing_info != undefined) {
                this.blessing_info = data.blessing_info;
            }
            if ("sea_lamp_info" in data && data.sea_lamp_info != undefined) {
                this.sea_lamp_info = data.sea_lamp_info;
            }
            if ("expedition_info" in data && data.expedition_info != undefined) {
                this.expedition_info = data.expedition_info;
            }
            if ("arena_challenge_info" in data && data.arena_challenge_info != undefined) {
                this.arena_challenge_info = data.arena_challenge_info;
            }
            if ("fleur_fair_info" in data && data.fleur_fair_info != undefined) {
                this.fleur_fair_info = data.fleur_fair_info;
            }
            if ("water_spirit_info" in data && data.water_spirit_info != undefined) {
                this.water_spirit_info = data.water_spirit_info;
            }
            if ("channeler_slab_info" in data && data.channeler_slab_info != undefined) {
                this.channeler_slab_info = data.channeler_slab_info;
            }
            if ("mist_trial_activity_info" in data && data.mist_trial_activity_info != undefined) {
                this.mist_trial_activity_info = data.mist_trial_activity_info;
            }
            if ("hide_and_seek_info" in data && data.hide_and_seek_info != undefined) {
                this.hide_and_seek_info = data.hide_and_seek_info;
            }
            if ("find_hilichurl_info" in data && data.find_hilichurl_info != undefined) {
                this.find_hilichurl_info = data.find_hilichurl_info;
            }
            if ("summer_time_info" in data && data.summer_time_info != undefined) {
                this.summer_time_info = data.summer_time_info;
            }
            if ("buoyant_combat_info" in data && data.buoyant_combat_info != undefined) {
                this.buoyant_combat_info = data.buoyant_combat_info;
            }
            if ("echo_shell_info" in data && data.echo_shell_info != undefined) {
                this.echo_shell_info = data.echo_shell_info;
            }
            if ("bounce_conjuring_info" in data && data.bounce_conjuring_info != undefined) {
                this.bounce_conjuring_info = data.bounce_conjuring_info;
            }
            if ("blitz_rush_info" in data && data.blitz_rush_info != undefined) {
                this.blitz_rush_info = data.blitz_rush_info;
            }
            if ("chess_info" in data && data.chess_info != undefined) {
                this.chess_info = data.chess_info;
            }
            if ("sumo_info" in data && data.sumo_info != undefined) {
                this.sumo_info = data.sumo_info;
            }
            if ("moonfin_trial_info" in data && data.moonfin_trial_info != undefined) {
                this.moonfin_trial_info = data.moonfin_trial_info;
            }
            if ("luna_rite_info" in data && data.luna_rite_info != undefined) {
                this.luna_rite_info = data.luna_rite_info;
            }
            if ("plant_flower_info" in data && data.plant_flower_info != undefined) {
                this.plant_flower_info = data.plant_flower_info;
            }
            if ("music_game_info" in data && data.music_game_info != undefined) {
                this.music_game_info = data.music_game_info;
            }
            if ("roguelike_dungeon_info" in data && data.roguelike_dungeon_info != undefined) {
                this.roguelike_dungeon_info = data.roguelike_dungeon_info;
            }
            if ("dig_info" in data && data.dig_info != undefined) {
                this.dig_info = data.dig_info;
            }
            if ("hachi_info" in data && data.hachi_info != undefined) {
                this.hachi_info = data.hachi_info;
            }
            if ("winter_camp_info" in data && data.winter_camp_info != undefined) {
                this.winter_camp_info = data.winter_camp_info;
            }
            if ("potion_info" in data && data.potion_info != undefined) {
                this.potion_info = data.potion_info;
            }
            if ("tanuki_travel_activity_info" in data && data.tanuki_travel_activity_info != undefined) {
                this.tanuki_travel_activity_info = data.tanuki_travel_activity_info;
            }
            if ("lantern_rite_activity_info" in data && data.lantern_rite_activity_info != undefined) {
                this.lantern_rite_activity_info = data.lantern_rite_activity_info;
            }
            if ("michiae_matsuri_info" in data && data.michiae_matsuri_info != undefined) {
                this.michiae_matsuri_info = data.michiae_matsuri_info;
            }
            if ("bartender_info" in data && data.bartender_info != undefined) {
                this.bartender_info = data.bartender_info;
            }
            if ("ugc_info" in data && data.ugc_info != undefined) {
                this.ugc_info = data.ugc_info;
            }
            if ("crystal_link_info" in data && data.crystal_link_info != undefined) {
                this.crystal_link_info = data.crystal_link_info;
            }
            if ("irodori_info" in data && data.irodori_info != undefined) {
                this.irodori_info = data.irodori_info;
            }
            if ("photo_info" in data && data.photo_info != undefined) {
                this.photo_info = data.photo_info;
            }
            if ("spice_info" in data && data.spice_info != undefined) {
                this.spice_info = data.spice_info;
            }
            if ("gacha_info" in data && data.gacha_info != undefined) {
                this.gacha_info = data.gacha_info;
            }
            if ("luminance_stone_challenge_info" in data && data.luminance_stone_challenge_info != undefined) {
                this.luminance_stone_challenge_info = data.luminance_stone_challenge_info;
            }
            if ("rogue_diary_info" in data && data.rogue_diary_info != undefined) {
                this.rogue_diary_info = data.rogue_diary_info;
            }
            if ("summer_time_v2_info" in data && data.summer_time_v2_info != undefined) {
                this.summer_time_v2_info = data.summer_time_v2_info;
            }
            if ("island_party_info" in data && data.island_party_info != undefined) {
                this.island_party_info = data.island_party_info;
            }
            if ("gear_info" in data && data.gear_info != undefined) {
                this.gear_info = data.gear_info;
            }
            if ("graven_innocence_info" in data && data.graven_innocence_info != undefined) {
                this.graven_innocence_info = data.graven_innocence_info;
            }
            if ("instable_spray_info" in data && data.instable_spray_info != undefined) {
                this.instable_spray_info = data.instable_spray_info;
            }
            if ("muqadas_potion_info" in data && data.muqadas_potion_info != undefined) {
                this.muqadas_potion_info = data.muqadas_potion_info;
            }
            if ("treasure_seelie_info" in data && data.treasure_seelie_info != undefined) {
                this.treasure_seelie_info = data.treasure_seelie_info;
            }
            if ("rock_board_explore_info" in data && data.rock_board_explore_info != undefined) {
                this.rock_board_explore_info = data.rock_board_explore_info;
            }
            if ("vintage_info" in data && data.vintage_info != undefined) {
                this.vintage_info = data.vintage_info;
            }
            if ("wind_field_info" in data && data.wind_field_info != undefined) {
                this.wind_field_info = data.wind_field_info;
            }
        }
        if (!this.activity_coin_map)
            this.activity_coin_map = new Map();
        if (!this.Unk2700_IFPBCNLCKLG)
            this.Unk2700_IFPBCNLCKLG = new Map();
    }
    get is_play_open_anim() {
        return pb_1.Message.getFieldWithDefault(this, 13, false) as boolean;
    }
    set is_play_open_anim(value: boolean) {
        pb_1.Message.setField(this, 13, value);
    }
    get schedule_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set schedule_id(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    get cur_score() {
        return pb_1.Message.getFieldWithDefault(this, 1906, 0) as number;
    }
    set cur_score(value: number) {
        pb_1.Message.setField(this, 1906, value);
    }
    get is_starting() {
        return pb_1.Message.getFieldWithDefault(this, 9, false) as boolean;
    }
    set is_starting(value: boolean) {
        pb_1.Message.setField(this, 9, value);
    }
    get taken_reward_list() {
        return pb_1.Message.getFieldWithDefault(this, 329, []) as number[];
    }
    set taken_reward_list(value: number[]) {
        pb_1.Message.setField(this, 329, value);
    }
    get Unk2700_NONJFHAIFLA() {
        return pb_1.Message.getFieldWithDefault(this, 102, false) as boolean;
    }
    set Unk2700_NONJFHAIFLA(value: boolean) {
        pb_1.Message.setField(this, 102, value);
    }
    get selected_avatar_reward_id() {
        return pb_1.Message.getFieldWithDefault(this, 1290, 0) as number;
    }
    set selected_avatar_reward_id(value: number) {
        pb_1.Message.setField(this, 1290, value);
    }
    get first_day_start_time() {
        return pb_1.Message.getFieldWithDefault(this, 592, 0) as number;
    }
    set first_day_start_time(value: number) {
        pb_1.Message.setField(this, 592, value);
    }
    get score_limit() {
        return pb_1.Message.getFieldWithDefault(this, 1958, 0) as number;
    }
    set score_limit(value: number) {
        pb_1.Message.setField(this, 1958, value);
    }
    get is_finished() {
        return pb_1.Message.getFieldWithDefault(this, 6, false) as boolean;
    }
    set is_finished(value: boolean) {
        pb_1.Message.setField(this, 6, value);
    }
    get is_hidden() {
        return pb_1.Message.getFieldWithDefault(this, 919, false) as boolean;
    }
    set is_hidden(value: boolean) {
        pb_1.Message.setField(this, 919, value);
    }
    get begin_time() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
    }
    set begin_time(value: number) {
        pb_1.Message.setField(this, 8, value);
    }
    get end_time() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set end_time(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get activity_coin_map() {
        return pb_1.Message.getField(this, 682) as any as Map<number, number>;
    }
    set activity_coin_map(value: Map<number, number>) {
        pb_1.Message.setField(this, 682, value as any);
    }
    get activity_type() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set activity_type(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get Unk2700_EDKLLHBEEGE() {
        return pb_1.Message.getFieldWithDefault(this, 1449, false) as boolean;
    }
    set Unk2700_EDKLLHBEEGE(value: boolean) {
        pb_1.Message.setField(this, 1449, value);
    }
    get Unk2800_KOMIPKKKOBE() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_56.Unk2800_PHPHMILPOLC, 864) as dependency_56.Unk2800_PHPHMILPOLC[];
    }
    set Unk2800_KOMIPKKKOBE(value: dependency_56.Unk2800_PHPHMILPOLC[]) {
        pb_1.Message.setRepeatedWrapperField(this, 864, value);
    }
    get meet_cond_list() {
        return pb_1.Message.getFieldWithDefault(this, 10, []) as number[];
    }
    set meet_cond_list(value: number[]) {
        pb_1.Message.setField(this, 10, value);
    }
    get Unk2700_IFPBCNLCKLG() {
        return pb_1.Message.getField(this, 1399) as any as Map<number, number>;
    }
    set Unk2700_IFPBCNLCKLG(value: Map<number, number>) {
        pb_1.Message.setField(this, 1399, value as any);
    }
    get expire_cond_list() {
        return pb_1.Message.getFieldWithDefault(this, 3, []) as number[];
    }
    set expire_cond_list(value: number[]) {
        pb_1.Message.setField(this, 3, value);
    }
    get watcher_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ActivityWatcherInfo, 2) as dependency_1.ActivityWatcherInfo[];
    }
    set watcher_info_list(value: dependency_1.ActivityWatcherInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 2, value);
    }
    get activity_id() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set activity_id(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get sam_lamp_info() {
        return pb_1.Message.getWrapperField(this, dependency_45.SeaLampActivityDetailInfo, 7) as dependency_45.SeaLampActivityDetailInfo;
    }
    set sam_lamp_info(value: dependency_45.SeaLampActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 7, this.#one_of_decls[0], value);
    }
    get has_sam_lamp_info() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get crucible_info() {
        return pb_1.Message.getWrapperField(this, dependency_11.CrucibleActivityDetailInfo, 14) as dependency_11.CrucibleActivityDetailInfo;
    }
    set crucible_info(value: dependency_11.CrucibleActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 14, this.#one_of_decls[0], value);
    }
    get has_crucible_info() {
        return pb_1.Message.getField(this, 14) != null;
    }
    get salesman_info() {
        return pb_1.Message.getWrapperField(this, dependency_44.SalesmanActivityDetailInfo, 11) as dependency_44.SalesmanActivityDetailInfo;
    }
    set salesman_info(value: dependency_44.SalesmanActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 11, this.#one_of_decls[0], value);
    }
    get has_salesman_info() {
        return pb_1.Message.getField(this, 11) != null;
    }
    get trial_avatar_info() {
        return pb_1.Message.getWrapperField(this, dependency_54.TrialAvatarActivityDetailInfo, 1) as dependency_54.TrialAvatarActivityDetailInfo;
    }
    set trial_avatar_info(value: dependency_54.TrialAvatarActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);
    }
    get has_trial_avatar_info() {
        return pb_1.Message.getField(this, 1) != null;
    }
    get delivery_info() {
        return pb_1.Message.getWrapperField(this, dependency_13.DeliveryActivityDetailInfo, 1092) as dependency_13.DeliveryActivityDetailInfo;
    }
    set delivery_info(value: dependency_13.DeliveryActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1092, this.#one_of_decls[0], value);
    }
    get has_delivery_info() {
        return pb_1.Message.getField(this, 1092) != null;
    }
    get aster_info() {
        return pb_1.Message.getWrapperField(this, dependency_3.AsterActivityDetailInfo, 557) as dependency_3.AsterActivityDetailInfo;
    }
    set aster_info(value: dependency_3.AsterActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 557, this.#one_of_decls[0], value);
    }
    get has_aster_info() {
        return pb_1.Message.getField(this, 557) != null;
    }
    get flight_info() {
        return pb_1.Message.getWrapperField(this, dependency_21.FlightActivityDetailInfo, 1365) as dependency_21.FlightActivityDetailInfo;
    }
    set flight_info(value: dependency_21.FlightActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1365, this.#one_of_decls[0], value);
    }
    get has_flight_info() {
        return pb_1.Message.getField(this, 1365) != null;
    }
    get dragon_spine_info() {
        return pb_1.Message.getWrapperField(this, dependency_15.DragonSpineActivityDetailInfo, 1727) as dependency_15.DragonSpineActivityDetailInfo;
    }
    set dragon_spine_info(value: dependency_15.DragonSpineActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1727, this.#one_of_decls[0], value);
    }
    get has_dragon_spine_info() {
        return pb_1.Message.getField(this, 1727) != null;
    }
    get effigy_info() {
        return pb_1.Message.getWrapperField(this, dependency_17.EffigyActivityDetailInfo, 391) as dependency_17.EffigyActivityDetailInfo;
    }
    set effigy_info(value: dependency_17.EffigyActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 391, this.#one_of_decls[0], value);
    }
    get has_effigy_info() {
        return pb_1.Message.getField(this, 391) != null;
    }
    get treasure_map_info() {
        return pb_1.Message.getWrapperField(this, dependency_52.TreasureMapActivityDetailInfo, 1114) as dependency_52.TreasureMapActivityDetailInfo;
    }
    set treasure_map_info(value: dependency_52.TreasureMapActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1114, this.#one_of_decls[0], value);
    }
    get has_treasure_map_info() {
        return pb_1.Message.getField(this, 1114) != null;
    }
    get blessing_info() {
        return pb_1.Message.getWrapperField(this, dependency_5.BlessingActivityDetailInfo, 1869) as dependency_5.BlessingActivityDetailInfo;
    }
    set blessing_info(value: dependency_5.BlessingActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1869, this.#one_of_decls[0], value);
    }
    get has_blessing_info() {
        return pb_1.Message.getField(this, 1869) != null;
    }
    get sea_lamp_info() {
        return pb_1.Message.getWrapperField(this, dependency_46.SeaLampActivityInfo, 494) as dependency_46.SeaLampActivityInfo;
    }
    set sea_lamp_info(value: dependency_46.SeaLampActivityInfo) {
        pb_1.Message.setOneofWrapperField(this, 494, this.#one_of_decls[0], value);
    }
    get has_sea_lamp_info() {
        return pb_1.Message.getField(this, 494) != null;
    }
    get expedition_info() {
        return pb_1.Message.getWrapperField(this, dependency_18.ExpeditionActivityDetailInfo, 202) as dependency_18.ExpeditionActivityDetailInfo;
    }
    set expedition_info(value: dependency_18.ExpeditionActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 202, this.#one_of_decls[0], value);
    }
    get has_expedition_info() {
        return pb_1.Message.getField(this, 202) != null;
    }
    get arena_challenge_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.ArenaChallengeActivityDetailInfo, 859) as dependency_2.ArenaChallengeActivityDetailInfo;
    }
    set arena_challenge_info(value: dependency_2.ArenaChallengeActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 859, this.#one_of_decls[0], value);
    }
    get has_arena_challenge_info() {
        return pb_1.Message.getField(this, 859) != null;
    }
    get fleur_fair_info() {
        return pb_1.Message.getWrapperField(this, dependency_20.FleurFairActivityDetailInfo, 857) as dependency_20.FleurFairActivityDetailInfo;
    }
    set fleur_fair_info(value: dependency_20.FleurFairActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 857, this.#one_of_decls[0], value);
    }
    get has_fleur_fair_info() {
        return pb_1.Message.getField(this, 857) != null;
    }
    get water_spirit_info() {
        return pb_1.Message.getWrapperField(this, dependency_58.WaterSpiritActivityDetailInfo, 1675) as dependency_58.WaterSpiritActivityDetailInfo;
    }
    set water_spirit_info(value: dependency_58.WaterSpiritActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1675, this.#one_of_decls[0], value);
    }
    get has_water_spirit_info() {
        return pb_1.Message.getField(this, 1675) != null;
    }
    get channeler_slab_info() {
        return pb_1.Message.getWrapperField(this, dependency_9.ChannelerSlabActivityDetailInfo, 1015) as dependency_9.ChannelerSlabActivityDetailInfo;
    }
    set channeler_slab_info(value: dependency_9.ChannelerSlabActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1015, this.#one_of_decls[0], value);
    }
    get has_channeler_slab_info() {
        return pb_1.Message.getField(this, 1015) != null;
    }
    get mist_trial_activity_info() {
        return pb_1.Message.getWrapperField(this, dependency_34.MistTrialActivityDetailInfo, 156) as dependency_34.MistTrialActivityDetailInfo;
    }
    set mist_trial_activity_info(value: dependency_34.MistTrialActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 156, this.#one_of_decls[0], value);
    }
    get has_mist_trial_activity_info() {
        return pb_1.Message.getField(this, 156) != null;
    }
    get hide_and_seek_info() {
        return pb_1.Message.getWrapperField(this, dependency_26.HideAndSeekActivityDetailInfo, 427) as dependency_26.HideAndSeekActivityDetailInfo;
    }
    set hide_and_seek_info(value: dependency_26.HideAndSeekActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 427, this.#one_of_decls[0], value);
    }
    get has_hide_and_seek_info() {
        return pb_1.Message.getField(this, 427) != null;
    }
    get find_hilichurl_info() {
        return pb_1.Message.getWrapperField(this, dependency_19.FindHilichurlDetailInfo, 1411) as dependency_19.FindHilichurlDetailInfo;
    }
    set find_hilichurl_info(value: dependency_19.FindHilichurlDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1411, this.#one_of_decls[0], value);
    }
    get has_find_hilichurl_info() {
        return pb_1.Message.getField(this, 1411) != null;
    }
    get summer_time_info() {
        return pb_1.Message.getWrapperField(this, dependency_48.SummerTimeDetailInfo, 1372) as dependency_48.SummerTimeDetailInfo;
    }
    set summer_time_info(value: dependency_48.SummerTimeDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1372, this.#one_of_decls[0], value);
    }
    get has_summer_time_info() {
        return pb_1.Message.getField(this, 1372) != null;
    }
    get buoyant_combat_info() {
        return pb_1.Message.getWrapperField(this, dependency_8.BuoyantCombatDetailInfo, 1842) as dependency_8.BuoyantCombatDetailInfo;
    }
    set buoyant_combat_info(value: dependency_8.BuoyantCombatDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1842, this.#one_of_decls[0], value);
    }
    get has_buoyant_combat_info() {
        return pb_1.Message.getField(this, 1842) != null;
    }
    get echo_shell_info() {
        return pb_1.Message.getWrapperField(this, dependency_16.EchoShellDetailInfo, 1113) as dependency_16.EchoShellDetailInfo;
    }
    set echo_shell_info(value: dependency_16.EchoShellDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1113, this.#one_of_decls[0], value);
    }
    get has_echo_shell_info() {
        return pb_1.Message.getField(this, 1113) != null;
    }
    get bounce_conjuring_info() {
        return pb_1.Message.getWrapperField(this, dependency_7.BounceConjuringActivityDetailInfo, 767) as dependency_7.BounceConjuringActivityDetailInfo;
    }
    set bounce_conjuring_info(value: dependency_7.BounceConjuringActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 767, this.#one_of_decls[0], value);
    }
    get has_bounce_conjuring_info() {
        return pb_1.Message.getField(this, 767) != null;
    }
    get blitz_rush_info() {
        return pb_1.Message.getWrapperField(this, dependency_6.BlitzRushActivityDetailInfo, 794) as dependency_6.BlitzRushActivityDetailInfo;
    }
    set blitz_rush_info(value: dependency_6.BlitzRushActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 794, this.#one_of_decls[0], value);
    }
    get has_blitz_rush_info() {
        return pb_1.Message.getField(this, 794) != null;
    }
    get chess_info() {
        return pb_1.Message.getWrapperField(this, dependency_10.ChessActivityDetailInfo, 927) as dependency_10.ChessActivityDetailInfo;
    }
    set chess_info(value: dependency_10.ChessActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 927, this.#one_of_decls[0], value);
    }
    get has_chess_info() {
        return pb_1.Message.getField(this, 927) != null;
    }
    get sumo_info() {
        return pb_1.Message.getWrapperField(this, dependency_50.SumoActivityDetailInfo, 1261) as dependency_50.SumoActivityDetailInfo;
    }
    set sumo_info(value: dependency_50.SumoActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1261, this.#one_of_decls[0], value);
    }
    get has_sumo_info() {
        return pb_1.Message.getField(this, 1261) != null;
    }
    get moonfin_trial_info() {
        return pb_1.Message.getWrapperField(this, dependency_35.MoonfinTrialActivityDetailInfo, 1588) as dependency_35.MoonfinTrialActivityDetailInfo;
    }
    set moonfin_trial_info(value: dependency_35.MoonfinTrialActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1588, this.#one_of_decls[0], value);
    }
    get has_moonfin_trial_info() {
        return pb_1.Message.getField(this, 1588) != null;
    }
    get luna_rite_info() {
        return pb_1.Message.getWrapperField(this, dependency_32.LunaRiteDetailInfo, 814) as dependency_32.LunaRiteDetailInfo;
    }
    set luna_rite_info(value: dependency_32.LunaRiteDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 814, this.#one_of_decls[0], value);
    }
    get has_luna_rite_info() {
        return pb_1.Message.getField(this, 814) != null;
    }
    get plant_flower_info() {
        return pb_1.Message.getWrapperField(this, dependency_39.PlantFlowerActivityDetailInfo, 54) as dependency_39.PlantFlowerActivityDetailInfo;
    }
    set plant_flower_info(value: dependency_39.PlantFlowerActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 54, this.#one_of_decls[0], value);
    }
    get has_plant_flower_info() {
        return pb_1.Message.getField(this, 54) != null;
    }
    get music_game_info() {
        return pb_1.Message.getWrapperField(this, dependency_37.MusicGameActivityDetailInfo, 460) as dependency_37.MusicGameActivityDetailInfo;
    }
    set music_game_info(value: dependency_37.MusicGameActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 460, this.#one_of_decls[0], value);
    }
    get has_music_game_info() {
        return pb_1.Message.getField(this, 460) != null;
    }
    get roguelike_dungeon_info() {
        return pb_1.Message.getWrapperField(this, dependency_43.RoguelikeDungeonActivityDetailInfo, 219) as dependency_43.RoguelikeDungeonActivityDetailInfo;
    }
    set roguelike_dungeon_info(value: dependency_43.RoguelikeDungeonActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 219, this.#one_of_decls[0], value);
    }
    get has_roguelike_dungeon_info() {
        return pb_1.Message.getField(this, 219) != null;
    }
    get dig_info() {
        return pb_1.Message.getWrapperField(this, dependency_14.DigActivityDetailInfo, 403) as dependency_14.DigActivityDetailInfo;
    }
    set dig_info(value: dependency_14.DigActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 403, this.#one_of_decls[0], value);
    }
    get has_dig_info() {
        return pb_1.Message.getField(this, 403) != null;
    }
    get hachi_info() {
        return pb_1.Message.getWrapperField(this, dependency_25.HachiActivityDetailInfo, 491) as dependency_25.HachiActivityDetailInfo;
    }
    set hachi_info(value: dependency_25.HachiActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 491, this.#one_of_decls[0], value);
    }
    get has_hachi_info() {
        return pb_1.Message.getField(this, 491) != null;
    }
    get winter_camp_info() {
        return pb_1.Message.getWrapperField(this, dependency_60.WinterCampActivityDetailInfo, 1083) as dependency_60.WinterCampActivityDetailInfo;
    }
    set winter_camp_info(value: dependency_60.WinterCampActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1083, this.#one_of_decls[0], value);
    }
    get has_winter_camp_info() {
        return pb_1.Message.getField(this, 1083) != null;
    }
    get potion_info() {
        return pb_1.Message.getWrapperField(this, dependency_40.PotionActivityDetailInfo, 1273) as dependency_40.PotionActivityDetailInfo;
    }
    set potion_info(value: dependency_40.PotionActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1273, this.#one_of_decls[0], value);
    }
    get has_potion_info() {
        return pb_1.Message.getField(this, 1273) != null;
    }
    get tanuki_travel_activity_info() {
        return pb_1.Message.getWrapperField(this, dependency_51.TanukiTravelActivityDetailInfo, 1796) as dependency_51.TanukiTravelActivityDetailInfo;
    }
    set tanuki_travel_activity_info(value: dependency_51.TanukiTravelActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1796, this.#one_of_decls[0], value);
    }
    get has_tanuki_travel_activity_info() {
        return pb_1.Message.getField(this, 1796) != null;
    }
    get lantern_rite_activity_info() {
        return pb_1.Message.getWrapperField(this, dependency_30.LanternRiteActivityDetailInfo, 1876) as dependency_30.LanternRiteActivityDetailInfo;
    }
    set lantern_rite_activity_info(value: dependency_30.LanternRiteActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1876, this.#one_of_decls[0], value);
    }
    get has_lantern_rite_activity_info() {
        return pb_1.Message.getField(this, 1876) != null;
    }
    get michiae_matsuri_info() {
        return pb_1.Message.getWrapperField(this, dependency_33.MichiaeMatsuriActivityDetailInfo, 194) as dependency_33.MichiaeMatsuriActivityDetailInfo;
    }
    set michiae_matsuri_info(value: dependency_33.MichiaeMatsuriActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 194, this.#one_of_decls[0], value);
    }
    get has_michiae_matsuri_info() {
        return pb_1.Message.getField(this, 194) != null;
    }
    get bartender_info() {
        return pb_1.Message.getWrapperField(this, dependency_4.BartenderActivityDetailInfo, 1725) as dependency_4.BartenderActivityDetailInfo;
    }
    set bartender_info(value: dependency_4.BartenderActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1725, this.#one_of_decls[0], value);
    }
    get has_bartender_info() {
        return pb_1.Message.getField(this, 1725) != null;
    }
    get ugc_info() {
        return pb_1.Message.getWrapperField(this, dependency_55.UgcActivityDetailInfo, 703) as dependency_55.UgcActivityDetailInfo;
    }
    set ugc_info(value: dependency_55.UgcActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 703, this.#one_of_decls[0], value);
    }
    get has_ugc_info() {
        return pb_1.Message.getField(this, 703) != null;
    }
    get crystal_link_info() {
        return pb_1.Message.getWrapperField(this, dependency_12.CrystalLinkActivityDetailInfo, 1226) as dependency_12.CrystalLinkActivityDetailInfo;
    }
    set crystal_link_info(value: dependency_12.CrystalLinkActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1226, this.#one_of_decls[0], value);
    }
    get has_crystal_link_info() {
        return pb_1.Message.getField(this, 1226) != null;
    }
    get irodori_info() {
        return pb_1.Message.getWrapperField(this, dependency_28.IrodoriActivityDetailInfo, 750) as dependency_28.IrodoriActivityDetailInfo;
    }
    set irodori_info(value: dependency_28.IrodoriActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 750, this.#one_of_decls[0], value);
    }
    get has_irodori_info() {
        return pb_1.Message.getField(this, 750) != null;
    }
    get photo_info() {
        return pb_1.Message.getWrapperField(this, dependency_38.PhotoActivityDetailInfo, 328) as dependency_38.PhotoActivityDetailInfo;
    }
    set photo_info(value: dependency_38.PhotoActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 328, this.#one_of_decls[0], value);
    }
    get has_photo_info() {
        return pb_1.Message.getField(this, 328) != null;
    }
    get spice_info() {
        return pb_1.Message.getWrapperField(this, dependency_47.SpiceActivityDetailInfo, 1891) as dependency_47.SpiceActivityDetailInfo;
    }
    set spice_info(value: dependency_47.SpiceActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1891, this.#one_of_decls[0], value);
    }
    get has_spice_info() {
        return pb_1.Message.getField(this, 1891) != null;
    }
    get gacha_info() {
        return pb_1.Message.getWrapperField(this, dependency_22.GachaActivityDetailInfo, 825) as dependency_22.GachaActivityDetailInfo;
    }
    set gacha_info(value: dependency_22.GachaActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 825, this.#one_of_decls[0], value);
    }
    get has_gacha_info() {
        return pb_1.Message.getField(this, 825) != null;
    }
    get luminance_stone_challenge_info() {
        return pb_1.Message.getWrapperField(this, dependency_31.LuminanceStoneChallengeActivityDetailInfo, 1308) as dependency_31.LuminanceStoneChallengeActivityDetailInfo;
    }
    set luminance_stone_challenge_info(value: dependency_31.LuminanceStoneChallengeActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1308, this.#one_of_decls[0], value);
    }
    get has_luminance_stone_challenge_info() {
        return pb_1.Message.getField(this, 1308) != null;
    }
    get rogue_diary_info() {
        return pb_1.Message.getWrapperField(this, dependency_42.RogueDiaryActivityDetailInfo, 812) as dependency_42.RogueDiaryActivityDetailInfo;
    }
    set rogue_diary_info(value: dependency_42.RogueDiaryActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 812, this.#one_of_decls[0], value);
    }
    get has_rogue_diary_info() {
        return pb_1.Message.getField(this, 812) != null;
    }
    get summer_time_v2_info() {
        return pb_1.Message.getWrapperField(this, dependency_49.SummerTimeV2DetailInfo, 622) as dependency_49.SummerTimeV2DetailInfo;
    }
    set summer_time_v2_info(value: dependency_49.SummerTimeV2DetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 622, this.#one_of_decls[0], value);
    }
    get has_summer_time_v2_info() {
        return pb_1.Message.getField(this, 622) != null;
    }
    get island_party_info() {
        return pb_1.Message.getWrapperField(this, dependency_29.IslandPartyActivityDetailInfo, 1885) as dependency_29.IslandPartyActivityDetailInfo;
    }
    set island_party_info(value: dependency_29.IslandPartyActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1885, this.#one_of_decls[0], value);
    }
    get has_island_party_info() {
        return pb_1.Message.getField(this, 1885) != null;
    }
    get gear_info() {
        return pb_1.Message.getWrapperField(this, dependency_23.GearActivityDetailInfo, 722) as dependency_23.GearActivityDetailInfo;
    }
    set gear_info(value: dependency_23.GearActivityDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 722, this.#one_of_decls[0], value);
    }
    get has_gear_info() {
        return pb_1.Message.getField(this, 722) != null;
    }
    get graven_innocence_info() {
        return pb_1.Message.getWrapperField(this, dependency_24.GravenInnocenceDetailInfo, 1911) as dependency_24.GravenInnocenceDetailInfo;
    }
    set graven_innocence_info(value: dependency_24.GravenInnocenceDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1911, this.#one_of_decls[0], value);
    }
    get has_graven_innocence_info() {
        return pb_1.Message.getField(this, 1911) != null;
    }
    get instable_spray_info() {
        return pb_1.Message.getWrapperField(this, dependency_27.InstableSprayDetailInfo, 1043) as dependency_27.InstableSprayDetailInfo;
    }
    set instable_spray_info(value: dependency_27.InstableSprayDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1043, this.#one_of_decls[0], value);
    }
    get has_instable_spray_info() {
        return pb_1.Message.getField(this, 1043) != null;
    }
    get muqadas_potion_info() {
        return pb_1.Message.getWrapperField(this, dependency_36.MuqadasPotionDetailInfo, 1157) as dependency_36.MuqadasPotionDetailInfo;
    }
    set muqadas_potion_info(value: dependency_36.MuqadasPotionDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1157, this.#one_of_decls[0], value);
    }
    get has_muqadas_potion_info() {
        return pb_1.Message.getField(this, 1157) != null;
    }
    get treasure_seelie_info() {
        return pb_1.Message.getWrapperField(this, dependency_53.TreasureSeelieDetailInfo, 966) as dependency_53.TreasureSeelieDetailInfo;
    }
    set treasure_seelie_info(value: dependency_53.TreasureSeelieDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 966, this.#one_of_decls[0], value);
    }
    get has_treasure_seelie_info() {
        return pb_1.Message.getField(this, 966) != null;
    }
    get rock_board_explore_info() {
        return pb_1.Message.getWrapperField(this, dependency_41.RockBoardExploreDetailInfo, 1078) as dependency_41.RockBoardExploreDetailInfo;
    }
    set rock_board_explore_info(value: dependency_41.RockBoardExploreDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 1078, this.#one_of_decls[0], value);
    }
    get has_rock_board_explore_info() {
        return pb_1.Message.getField(this, 1078) != null;
    }
    get vintage_info() {
        return pb_1.Message.getWrapperField(this, dependency_57.VintageDetailInfo, 445) as dependency_57.VintageDetailInfo;
    }
    set vintage_info(value: dependency_57.VintageDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 445, this.#one_of_decls[0], value);
    }
    get has_vintage_info() {
        return pb_1.Message.getField(this, 445) != null;
    }
    get wind_field_info() {
        return pb_1.Message.getWrapperField(this, dependency_59.WindFieldDetailInfo, 352) as dependency_59.WindFieldDetailInfo;
    }
    set wind_field_info(value: dependency_59.WindFieldDetailInfo) {
        pb_1.Message.setOneofWrapperField(this, 352, this.#one_of_decls[0], value);
    }
    get has_wind_field_info() {
        return pb_1.Message.getField(this, 352) != null;
    }
    get detail() {
        const cases: {
            [index: number]: "none" | "sam_lamp_info" | "crucible_info" | "salesman_info" | "trial_avatar_info" | "delivery_info" | "aster_info" | "flight_info" | "dragon_spine_info" | "effigy_info" | "treasure_map_info" | "blessing_info" | "sea_lamp_info" | "expedition_info" | "arena_challenge_info" | "fleur_fair_info" | "water_spirit_info" | "channeler_slab_info" | "mist_trial_activity_info" | "hide_and_seek_info" | "find_hilichurl_info" | "summer_time_info" | "buoyant_combat_info" | "echo_shell_info" | "bounce_conjuring_info" | "blitz_rush_info" | "chess_info" | "sumo_info" | "moonfin_trial_info" | "luna_rite_info" | "plant_flower_info" | "music_game_info" | "roguelike_dungeon_info" | "dig_info" | "hachi_info" | "winter_camp_info" | "potion_info" | "tanuki_travel_activity_info" | "lantern_rite_activity_info" | "michiae_matsuri_info" | "bartender_info" | "ugc_info" | "crystal_link_info" | "irodori_info" | "photo_info" | "spice_info" | "gacha_info" | "luminance_stone_challenge_info" | "rogue_diary_info" | "summer_time_v2_info" | "island_party_info" | "gear_info" | "graven_innocence_info" | "instable_spray_info" | "muqadas_potion_info" | "treasure_seelie_info" | "rock_board_explore_info" | "vintage_info" | "wind_field_info";
        } = {
            0: "none",
            7: "sam_lamp_info",
            14: "crucible_info",
            11: "salesman_info",
            1: "trial_avatar_info",
            1092: "delivery_info",
            557: "aster_info",
            1365: "flight_info",
            1727: "dragon_spine_info",
            391: "effigy_info",
            1114: "treasure_map_info",
            1869: "blessing_info",
            494: "sea_lamp_info",
            202: "expedition_info",
            859: "arena_challenge_info",
            857: "fleur_fair_info",
            1675: "water_spirit_info",
            1015: "channeler_slab_info",
            156: "mist_trial_activity_info",
            427: "hide_and_seek_info",
            1411: "find_hilichurl_info",
            1372: "summer_time_info",
            1842: "buoyant_combat_info",
            1113: "echo_shell_info",
            767: "bounce_conjuring_info",
            794: "blitz_rush_info",
            927: "chess_info",
            1261: "sumo_info",
            1588: "moonfin_trial_info",
            814: "luna_rite_info",
            54: "plant_flower_info",
            460: "music_game_info",
            219: "roguelike_dungeon_info",
            403: "dig_info",
            491: "hachi_info",
            1083: "winter_camp_info",
            1273: "potion_info",
            1796: "tanuki_travel_activity_info",
            1876: "lantern_rite_activity_info",
            194: "michiae_matsuri_info",
            1725: "bartender_info",
            703: "ugc_info",
            1226: "crystal_link_info",
            750: "irodori_info",
            328: "photo_info",
            1891: "spice_info",
            825: "gacha_info",
            1308: "luminance_stone_challenge_info",
            812: "rogue_diary_info",
            622: "summer_time_v2_info",
            1885: "island_party_info",
            722: "gear_info",
            1911: "graven_innocence_info",
            1043: "instable_spray_info",
            1157: "muqadas_potion_info",
            966: "treasure_seelie_info",
            1078: "rock_board_explore_info",
            445: "vintage_info",
            352: "wind_field_info"
        };
        return cases[pb_1.Message.computeOneofCase(this, [7, 14, 11, 1, 1092, 557, 1365, 1727, 391, 1114, 1869, 494, 202, 859, 857, 1675, 1015, 156, 427, 1411, 1372, 1842, 1113, 767, 794, 927, 1261, 1588, 814, 54, 460, 219, 403, 491, 1083, 1273, 1796, 1876, 194, 1725, 703, 1226, 750, 328, 1891, 825, 1308, 812, 622, 1885, 722, 1911, 1043, 1157, 966, 1078, 445, 352])];
    }
    static fromObject(data: {
        is_play_open_anim?: boolean;
        schedule_id?: number;
        cur_score?: number;
        is_starting?: boolean;
        taken_reward_list?: number[];
        Unk2700_NONJFHAIFLA?: boolean;
        selected_avatar_reward_id?: number;
        first_day_start_time?: number;
        score_limit?: number;
        is_finished?: boolean;
        is_hidden?: boolean;
        begin_time?: number;
        end_time?: number;
        activity_coin_map?: {
            [key: number]: number;
        };
        activity_type?: number;
        Unk2700_EDKLLHBEEGE?: boolean;
        Unk2800_KOMIPKKKOBE?: ReturnType<typeof dependency_56.Unk2800_PHPHMILPOLC.prototype.toObject>[];
        meet_cond_list?: number[];
        Unk2700_IFPBCNLCKLG?: {
            [key: number]: number;
        };
        expire_cond_list?: number[];
        watcher_info_list?: ReturnType<typeof dependency_1.ActivityWatcherInfo.prototype.toObject>[];
        activity_id?: number;
        sam_lamp_info?: ReturnType<typeof dependency_45.SeaLampActivityDetailInfo.prototype.toObject>;
        crucible_info?: ReturnType<typeof dependency_11.CrucibleActivityDetailInfo.prototype.toObject>;
        salesman_info?: ReturnType<typeof dependency_44.SalesmanActivityDetailInfo.prototype.toObject>;
        trial_avatar_info?: ReturnType<typeof dependency_54.TrialAvatarActivityDetailInfo.prototype.toObject>;
        delivery_info?: ReturnType<typeof dependency_13.DeliveryActivityDetailInfo.prototype.toObject>;
        aster_info?: ReturnType<typeof dependency_3.AsterActivityDetailInfo.prototype.toObject>;
        flight_info?: ReturnType<typeof dependency_21.FlightActivityDetailInfo.prototype.toObject>;
        dragon_spine_info?: ReturnType<typeof dependency_15.DragonSpineActivityDetailInfo.prototype.toObject>;
        effigy_info?: ReturnType<typeof dependency_17.EffigyActivityDetailInfo.prototype.toObject>;
        treasure_map_info?: ReturnType<typeof dependency_52.TreasureMapActivityDetailInfo.prototype.toObject>;
        blessing_info?: ReturnType<typeof dependency_5.BlessingActivityDetailInfo.prototype.toObject>;
        sea_lamp_info?: ReturnType<typeof dependency_46.SeaLampActivityInfo.prototype.toObject>;
        expedition_info?: ReturnType<typeof dependency_18.ExpeditionActivityDetailInfo.prototype.toObject>;
        arena_challenge_info?: ReturnType<typeof dependency_2.ArenaChallengeActivityDetailInfo.prototype.toObject>;
        fleur_fair_info?: ReturnType<typeof dependency_20.FleurFairActivityDetailInfo.prototype.toObject>;
        water_spirit_info?: ReturnType<typeof dependency_58.WaterSpiritActivityDetailInfo.prototype.toObject>;
        channeler_slab_info?: ReturnType<typeof dependency_9.ChannelerSlabActivityDetailInfo.prototype.toObject>;
        mist_trial_activity_info?: ReturnType<typeof dependency_34.MistTrialActivityDetailInfo.prototype.toObject>;
        hide_and_seek_info?: ReturnType<typeof dependency_26.HideAndSeekActivityDetailInfo.prototype.toObject>;
        find_hilichurl_info?: ReturnType<typeof dependency_19.FindHilichurlDetailInfo.prototype.toObject>;
        summer_time_info?: ReturnType<typeof dependency_48.SummerTimeDetailInfo.prototype.toObject>;
        buoyant_combat_info?: ReturnType<typeof dependency_8.BuoyantCombatDetailInfo.prototype.toObject>;
        echo_shell_info?: ReturnType<typeof dependency_16.EchoShellDetailInfo.prototype.toObject>;
        bounce_conjuring_info?: ReturnType<typeof dependency_7.BounceConjuringActivityDetailInfo.prototype.toObject>;
        blitz_rush_info?: ReturnType<typeof dependency_6.BlitzRushActivityDetailInfo.prototype.toObject>;
        chess_info?: ReturnType<typeof dependency_10.ChessActivityDetailInfo.prototype.toObject>;
        sumo_info?: ReturnType<typeof dependency_50.SumoActivityDetailInfo.prototype.toObject>;
        moonfin_trial_info?: ReturnType<typeof dependency_35.MoonfinTrialActivityDetailInfo.prototype.toObject>;
        luna_rite_info?: ReturnType<typeof dependency_32.LunaRiteDetailInfo.prototype.toObject>;
        plant_flower_info?: ReturnType<typeof dependency_39.PlantFlowerActivityDetailInfo.prototype.toObject>;
        music_game_info?: ReturnType<typeof dependency_37.MusicGameActivityDetailInfo.prototype.toObject>;
        roguelike_dungeon_info?: ReturnType<typeof dependency_43.RoguelikeDungeonActivityDetailInfo.prototype.toObject>;
        dig_info?: ReturnType<typeof dependency_14.DigActivityDetailInfo.prototype.toObject>;
        hachi_info?: ReturnType<typeof dependency_25.HachiActivityDetailInfo.prototype.toObject>;
        winter_camp_info?: ReturnType<typeof dependency_60.WinterCampActivityDetailInfo.prototype.toObject>;
        potion_info?: ReturnType<typeof dependency_40.PotionActivityDetailInfo.prototype.toObject>;
        tanuki_travel_activity_info?: ReturnType<typeof dependency_51.TanukiTravelActivityDetailInfo.prototype.toObject>;
        lantern_rite_activity_info?: ReturnType<typeof dependency_30.LanternRiteActivityDetailInfo.prototype.toObject>;
        michiae_matsuri_info?: ReturnType<typeof dependency_33.MichiaeMatsuriActivityDetailInfo.prototype.toObject>;
        bartender_info?: ReturnType<typeof dependency_4.BartenderActivityDetailInfo.prototype.toObject>;
        ugc_info?: ReturnType<typeof dependency_55.UgcActivityDetailInfo.prototype.toObject>;
        crystal_link_info?: ReturnType<typeof dependency_12.CrystalLinkActivityDetailInfo.prototype.toObject>;
        irodori_info?: ReturnType<typeof dependency_28.IrodoriActivityDetailInfo.prototype.toObject>;
        photo_info?: ReturnType<typeof dependency_38.PhotoActivityDetailInfo.prototype.toObject>;
        spice_info?: ReturnType<typeof dependency_47.SpiceActivityDetailInfo.prototype.toObject>;
        gacha_info?: ReturnType<typeof dependency_22.GachaActivityDetailInfo.prototype.toObject>;
        luminance_stone_challenge_info?: ReturnType<typeof dependency_31.LuminanceStoneChallengeActivityDetailInfo.prototype.toObject>;
        rogue_diary_info?: ReturnType<typeof dependency_42.RogueDiaryActivityDetailInfo.prototype.toObject>;
        summer_time_v2_info?: ReturnType<typeof dependency_49.SummerTimeV2DetailInfo.prototype.toObject>;
        island_party_info?: ReturnType<typeof dependency_29.IslandPartyActivityDetailInfo.prototype.toObject>;
        gear_info?: ReturnType<typeof dependency_23.GearActivityDetailInfo.prototype.toObject>;
        graven_innocence_info?: ReturnType<typeof dependency_24.GravenInnocenceDetailInfo.prototype.toObject>;
        instable_spray_info?: ReturnType<typeof dependency_27.InstableSprayDetailInfo.prototype.toObject>;
        muqadas_potion_info?: ReturnType<typeof dependency_36.MuqadasPotionDetailInfo.prototype.toObject>;
        treasure_seelie_info?: ReturnType<typeof dependency_53.TreasureSeelieDetailInfo.prototype.toObject>;
        rock_board_explore_info?: ReturnType<typeof dependency_41.RockBoardExploreDetailInfo.prototype.toObject>;
        vintage_info?: ReturnType<typeof dependency_57.VintageDetailInfo.prototype.toObject>;
        wind_field_info?: ReturnType<typeof dependency_59.WindFieldDetailInfo.prototype.toObject>;
    }): ActivityInfo {
        const message = new ActivityInfo({});
        if (data.is_play_open_anim != null) {
            message.is_play_open_anim = data.is_play_open_anim;
        }
        if (data.schedule_id != null) {
            message.schedule_id = data.schedule_id;
        }
        if (data.cur_score != null) {
            message.cur_score = data.cur_score;
        }
        if (data.is_starting != null) {
            message.is_starting = data.is_starting;
        }
        if (data.taken_reward_list != null) {
            message.taken_reward_list = data.taken_reward_list;
        }
        if (data.Unk2700_NONJFHAIFLA != null) {
            message.Unk2700_NONJFHAIFLA = data.Unk2700_NONJFHAIFLA;
        }
        if (data.selected_avatar_reward_id != null) {
            message.selected_avatar_reward_id = data.selected_avatar_reward_id;
        }
        if (data.first_day_start_time != null) {
            message.first_day_start_time = data.first_day_start_time;
        }
        if (data.score_limit != null) {
            message.score_limit = data.score_limit;
        }
        if (data.is_finished != null) {
            message.is_finished = data.is_finished;
        }
        if (data.is_hidden != null) {
            message.is_hidden = data.is_hidden;
        }
        if (data.begin_time != null) {
            message.begin_time = data.begin_time;
        }
        if (data.end_time != null) {
            message.end_time = data.end_time;
        }
        if (typeof data.activity_coin_map == "object") {
            message.activity_coin_map = new Map(Object.entries(data.activity_coin_map).map(([key, value]) => [Number(key), value]));
        }
        if (data.activity_type != null) {
            message.activity_type = data.activity_type;
        }
        if (data.Unk2700_EDKLLHBEEGE != null) {
            message.Unk2700_EDKLLHBEEGE = data.Unk2700_EDKLLHBEEGE;
        }
        if (data.Unk2800_KOMIPKKKOBE != null) {
            message.Unk2800_KOMIPKKKOBE = data.Unk2800_KOMIPKKKOBE.map(item => dependency_56.Unk2800_PHPHMILPOLC.fromObject(item));
        }
        if (data.meet_cond_list != null) {
            message.meet_cond_list = data.meet_cond_list;
        }
        if (typeof data.Unk2700_IFPBCNLCKLG == "object") {
            message.Unk2700_IFPBCNLCKLG = new Map(Object.entries(data.Unk2700_IFPBCNLCKLG).map(([key, value]) => [Number(key), value]));
        }
        if (data.expire_cond_list != null) {
            message.expire_cond_list = data.expire_cond_list;
        }
        if (data.watcher_info_list != null) {
            message.watcher_info_list = data.watcher_info_list.map(item => dependency_1.ActivityWatcherInfo.fromObject(item));
        }
        if (data.activity_id != null) {
            message.activity_id = data.activity_id;
        }
        if (data.sam_lamp_info != null) {
            message.sam_lamp_info = dependency_45.SeaLampActivityDetailInfo.fromObject(data.sam_lamp_info);
        }
        if (data.crucible_info != null) {
            message.crucible_info = dependency_11.CrucibleActivityDetailInfo.fromObject(data.crucible_info);
        }
        if (data.salesman_info != null) {
            message.salesman_info = dependency_44.SalesmanActivityDetailInfo.fromObject(data.salesman_info);
        }
        if (data.trial_avatar_info != null) {
            message.trial_avatar_info = dependency_54.TrialAvatarActivityDetailInfo.fromObject(data.trial_avatar_info);
        }
        if (data.delivery_info != null) {
            message.delivery_info = dependency_13.DeliveryActivityDetailInfo.fromObject(data.delivery_info);
        }
        if (data.aster_info != null) {
            message.aster_info = dependency_3.AsterActivityDetailInfo.fromObject(data.aster_info);
        }
        if (data.flight_info != null) {
            message.flight_info = dependency_21.FlightActivityDetailInfo.fromObject(data.flight_info);
        }
        if (data.dragon_spine_info != null) {
            message.dragon_spine_info = dependency_15.DragonSpineActivityDetailInfo.fromObject(data.dragon_spine_info);
        }
        if (data.effigy_info != null) {
            message.effigy_info = dependency_17.EffigyActivityDetailInfo.fromObject(data.effigy_info);
        }
        if (data.treasure_map_info != null) {
            message.treasure_map_info = dependency_52.TreasureMapActivityDetailInfo.fromObject(data.treasure_map_info);
        }
        if (data.blessing_info != null) {
            message.blessing_info = dependency_5.BlessingActivityDetailInfo.fromObject(data.blessing_info);
        }
        if (data.sea_lamp_info != null) {
            message.sea_lamp_info = dependency_46.SeaLampActivityInfo.fromObject(data.sea_lamp_info);
        }
        if (data.expedition_info != null) {
            message.expedition_info = dependency_18.ExpeditionActivityDetailInfo.fromObject(data.expedition_info);
        }
        if (data.arena_challenge_info != null) {
            message.arena_challenge_info = dependency_2.ArenaChallengeActivityDetailInfo.fromObject(data.arena_challenge_info);
        }
        if (data.fleur_fair_info != null) {
            message.fleur_fair_info = dependency_20.FleurFairActivityDetailInfo.fromObject(data.fleur_fair_info);
        }
        if (data.water_spirit_info != null) {
            message.water_spirit_info = dependency_58.WaterSpiritActivityDetailInfo.fromObject(data.water_spirit_info);
        }
        if (data.channeler_slab_info != null) {
            message.channeler_slab_info = dependency_9.ChannelerSlabActivityDetailInfo.fromObject(data.channeler_slab_info);
        }
        if (data.mist_trial_activity_info != null) {
            message.mist_trial_activity_info = dependency_34.MistTrialActivityDetailInfo.fromObject(data.mist_trial_activity_info);
        }
        if (data.hide_and_seek_info != null) {
            message.hide_and_seek_info = dependency_26.HideAndSeekActivityDetailInfo.fromObject(data.hide_and_seek_info);
        }
        if (data.find_hilichurl_info != null) {
            message.find_hilichurl_info = dependency_19.FindHilichurlDetailInfo.fromObject(data.find_hilichurl_info);
        }
        if (data.summer_time_info != null) {
            message.summer_time_info = dependency_48.SummerTimeDetailInfo.fromObject(data.summer_time_info);
        }
        if (data.buoyant_combat_info != null) {
            message.buoyant_combat_info = dependency_8.BuoyantCombatDetailInfo.fromObject(data.buoyant_combat_info);
        }
        if (data.echo_shell_info != null) {
            message.echo_shell_info = dependency_16.EchoShellDetailInfo.fromObject(data.echo_shell_info);
        }
        if (data.bounce_conjuring_info != null) {
            message.bounce_conjuring_info = dependency_7.BounceConjuringActivityDetailInfo.fromObject(data.bounce_conjuring_info);
        }
        if (data.blitz_rush_info != null) {
            message.blitz_rush_info = dependency_6.BlitzRushActivityDetailInfo.fromObject(data.blitz_rush_info);
        }
        if (data.chess_info != null) {
            message.chess_info = dependency_10.ChessActivityDetailInfo.fromObject(data.chess_info);
        }
        if (data.sumo_info != null) {
            message.sumo_info = dependency_50.SumoActivityDetailInfo.fromObject(data.sumo_info);
        }
        if (data.moonfin_trial_info != null) {
            message.moonfin_trial_info = dependency_35.MoonfinTrialActivityDetailInfo.fromObject(data.moonfin_trial_info);
        }
        if (data.luna_rite_info != null) {
            message.luna_rite_info = dependency_32.LunaRiteDetailInfo.fromObject(data.luna_rite_info);
        }
        if (data.plant_flower_info != null) {
            message.plant_flower_info = dependency_39.PlantFlowerActivityDetailInfo.fromObject(data.plant_flower_info);
        }
        if (data.music_game_info != null) {
            message.music_game_info = dependency_37.MusicGameActivityDetailInfo.fromObject(data.music_game_info);
        }
        if (data.roguelike_dungeon_info != null) {
            message.roguelike_dungeon_info = dependency_43.RoguelikeDungeonActivityDetailInfo.fromObject(data.roguelike_dungeon_info);
        }
        if (data.dig_info != null) {
            message.dig_info = dependency_14.DigActivityDetailInfo.fromObject(data.dig_info);
        }
        if (data.hachi_info != null) {
            message.hachi_info = dependency_25.HachiActivityDetailInfo.fromObject(data.hachi_info);
        }
        if (data.winter_camp_info != null) {
            message.winter_camp_info = dependency_60.WinterCampActivityDetailInfo.fromObject(data.winter_camp_info);
        }
        if (data.potion_info != null) {
            message.potion_info = dependency_40.PotionActivityDetailInfo.fromObject(data.potion_info);
        }
        if (data.tanuki_travel_activity_info != null) {
            message.tanuki_travel_activity_info = dependency_51.TanukiTravelActivityDetailInfo.fromObject(data.tanuki_travel_activity_info);
        }
        if (data.lantern_rite_activity_info != null) {
            message.lantern_rite_activity_info = dependency_30.LanternRiteActivityDetailInfo.fromObject(data.lantern_rite_activity_info);
        }
        if (data.michiae_matsuri_info != null) {
            message.michiae_matsuri_info = dependency_33.MichiaeMatsuriActivityDetailInfo.fromObject(data.michiae_matsuri_info);
        }
        if (data.bartender_info != null) {
            message.bartender_info = dependency_4.BartenderActivityDetailInfo.fromObject(data.bartender_info);
        }
        if (data.ugc_info != null) {
            message.ugc_info = dependency_55.UgcActivityDetailInfo.fromObject(data.ugc_info);
        }
        if (data.crystal_link_info != null) {
            message.crystal_link_info = dependency_12.CrystalLinkActivityDetailInfo.fromObject(data.crystal_link_info);
        }
        if (data.irodori_info != null) {
            message.irodori_info = dependency_28.IrodoriActivityDetailInfo.fromObject(data.irodori_info);
        }
        if (data.photo_info != null) {
            message.photo_info = dependency_38.PhotoActivityDetailInfo.fromObject(data.photo_info);
        }
        if (data.spice_info != null) {
            message.spice_info = dependency_47.SpiceActivityDetailInfo.fromObject(data.spice_info);
        }
        if (data.gacha_info != null) {
            message.gacha_info = dependency_22.GachaActivityDetailInfo.fromObject(data.gacha_info);
        }
        if (data.luminance_stone_challenge_info != null) {
            message.luminance_stone_challenge_info = dependency_31.LuminanceStoneChallengeActivityDetailInfo.fromObject(data.luminance_stone_challenge_info);
        }
        if (data.rogue_diary_info != null) {
            message.rogue_diary_info = dependency_42.RogueDiaryActivityDetailInfo.fromObject(data.rogue_diary_info);
        }
        if (data.summer_time_v2_info != null) {
            message.summer_time_v2_info = dependency_49.SummerTimeV2DetailInfo.fromObject(data.summer_time_v2_info);
        }
        if (data.island_party_info != null) {
            message.island_party_info = dependency_29.IslandPartyActivityDetailInfo.fromObject(data.island_party_info);
        }
        if (data.gear_info != null) {
            message.gear_info = dependency_23.GearActivityDetailInfo.fromObject(data.gear_info);
        }
        if (data.graven_innocence_info != null) {
            message.graven_innocence_info = dependency_24.GravenInnocenceDetailInfo.fromObject(data.graven_innocence_info);
        }
        if (data.instable_spray_info != null) {
            message.instable_spray_info = dependency_27.InstableSprayDetailInfo.fromObject(data.instable_spray_info);
        }
        if (data.muqadas_potion_info != null) {
            message.muqadas_potion_info = dependency_36.MuqadasPotionDetailInfo.fromObject(data.muqadas_potion_info);
        }
        if (data.treasure_seelie_info != null) {
            message.treasure_seelie_info = dependency_53.TreasureSeelieDetailInfo.fromObject(data.treasure_seelie_info);
        }
        if (data.rock_board_explore_info != null) {
            message.rock_board_explore_info = dependency_41.RockBoardExploreDetailInfo.fromObject(data.rock_board_explore_info);
        }
        if (data.vintage_info != null) {
            message.vintage_info = dependency_57.VintageDetailInfo.fromObject(data.vintage_info);
        }
        if (data.wind_field_info != null) {
            message.wind_field_info = dependency_59.WindFieldDetailInfo.fromObject(data.wind_field_info);
        }
        return message;
    }
    toObject() {
        const data: {
            is_play_open_anim?: boolean;
            schedule_id?: number;
            cur_score?: number;
            is_starting?: boolean;
            taken_reward_list?: number[];
            Unk2700_NONJFHAIFLA?: boolean;
            selected_avatar_reward_id?: number;
            first_day_start_time?: number;
            score_limit?: number;
            is_finished?: boolean;
            is_hidden?: boolean;
            begin_time?: number;
            end_time?: number;
            activity_coin_map?: {
                [key: number]: number;
            };
            activity_type?: number;
            Unk2700_EDKLLHBEEGE?: boolean;
            Unk2800_KOMIPKKKOBE?: ReturnType<typeof dependency_56.Unk2800_PHPHMILPOLC.prototype.toObject>[];
            meet_cond_list?: number[];
            Unk2700_IFPBCNLCKLG?: {
                [key: number]: number;
            };
            expire_cond_list?: number[];
            watcher_info_list?: ReturnType<typeof dependency_1.ActivityWatcherInfo.prototype.toObject>[];
            activity_id?: number;
            sam_lamp_info?: ReturnType<typeof dependency_45.SeaLampActivityDetailInfo.prototype.toObject>;
            crucible_info?: ReturnType<typeof dependency_11.CrucibleActivityDetailInfo.prototype.toObject>;
            salesman_info?: ReturnType<typeof dependency_44.SalesmanActivityDetailInfo.prototype.toObject>;
            trial_avatar_info?: ReturnType<typeof dependency_54.TrialAvatarActivityDetailInfo.prototype.toObject>;
            delivery_info?: ReturnType<typeof dependency_13.DeliveryActivityDetailInfo.prototype.toObject>;
            aster_info?: ReturnType<typeof dependency_3.AsterActivityDetailInfo.prototype.toObject>;
            flight_info?: ReturnType<typeof dependency_21.FlightActivityDetailInfo.prototype.toObject>;
            dragon_spine_info?: ReturnType<typeof dependency_15.DragonSpineActivityDetailInfo.prototype.toObject>;
            effigy_info?: ReturnType<typeof dependency_17.EffigyActivityDetailInfo.prototype.toObject>;
            treasure_map_info?: ReturnType<typeof dependency_52.TreasureMapActivityDetailInfo.prototype.toObject>;
            blessing_info?: ReturnType<typeof dependency_5.BlessingActivityDetailInfo.prototype.toObject>;
            sea_lamp_info?: ReturnType<typeof dependency_46.SeaLampActivityInfo.prototype.toObject>;
            expedition_info?: ReturnType<typeof dependency_18.ExpeditionActivityDetailInfo.prototype.toObject>;
            arena_challenge_info?: ReturnType<typeof dependency_2.ArenaChallengeActivityDetailInfo.prototype.toObject>;
            fleur_fair_info?: ReturnType<typeof dependency_20.FleurFairActivityDetailInfo.prototype.toObject>;
            water_spirit_info?: ReturnType<typeof dependency_58.WaterSpiritActivityDetailInfo.prototype.toObject>;
            channeler_slab_info?: ReturnType<typeof dependency_9.ChannelerSlabActivityDetailInfo.prototype.toObject>;
            mist_trial_activity_info?: ReturnType<typeof dependency_34.MistTrialActivityDetailInfo.prototype.toObject>;
            hide_and_seek_info?: ReturnType<typeof dependency_26.HideAndSeekActivityDetailInfo.prototype.toObject>;
            find_hilichurl_info?: ReturnType<typeof dependency_19.FindHilichurlDetailInfo.prototype.toObject>;
            summer_time_info?: ReturnType<typeof dependency_48.SummerTimeDetailInfo.prototype.toObject>;
            buoyant_combat_info?: ReturnType<typeof dependency_8.BuoyantCombatDetailInfo.prototype.toObject>;
            echo_shell_info?: ReturnType<typeof dependency_16.EchoShellDetailInfo.prototype.toObject>;
            bounce_conjuring_info?: ReturnType<typeof dependency_7.BounceConjuringActivityDetailInfo.prototype.toObject>;
            blitz_rush_info?: ReturnType<typeof dependency_6.BlitzRushActivityDetailInfo.prototype.toObject>;
            chess_info?: ReturnType<typeof dependency_10.ChessActivityDetailInfo.prototype.toObject>;
            sumo_info?: ReturnType<typeof dependency_50.SumoActivityDetailInfo.prototype.toObject>;
            moonfin_trial_info?: ReturnType<typeof dependency_35.MoonfinTrialActivityDetailInfo.prototype.toObject>;
            luna_rite_info?: ReturnType<typeof dependency_32.LunaRiteDetailInfo.prototype.toObject>;
            plant_flower_info?: ReturnType<typeof dependency_39.PlantFlowerActivityDetailInfo.prototype.toObject>;
            music_game_info?: ReturnType<typeof dependency_37.MusicGameActivityDetailInfo.prototype.toObject>;
            roguelike_dungeon_info?: ReturnType<typeof dependency_43.RoguelikeDungeonActivityDetailInfo.prototype.toObject>;
            dig_info?: ReturnType<typeof dependency_14.DigActivityDetailInfo.prototype.toObject>;
            hachi_info?: ReturnType<typeof dependency_25.HachiActivityDetailInfo.prototype.toObject>;
            winter_camp_info?: ReturnType<typeof dependency_60.WinterCampActivityDetailInfo.prototype.toObject>;
            potion_info?: ReturnType<typeof dependency_40.PotionActivityDetailInfo.prototype.toObject>;
            tanuki_travel_activity_info?: ReturnType<typeof dependency_51.TanukiTravelActivityDetailInfo.prototype.toObject>;
            lantern_rite_activity_info?: ReturnType<typeof dependency_30.LanternRiteActivityDetailInfo.prototype.toObject>;
            michiae_matsuri_info?: ReturnType<typeof dependency_33.MichiaeMatsuriActivityDetailInfo.prototype.toObject>;
            bartender_info?: ReturnType<typeof dependency_4.BartenderActivityDetailInfo.prototype.toObject>;
            ugc_info?: ReturnType<typeof dependency_55.UgcActivityDetailInfo.prototype.toObject>;
            crystal_link_info?: ReturnType<typeof dependency_12.CrystalLinkActivityDetailInfo.prototype.toObject>;
            irodori_info?: ReturnType<typeof dependency_28.IrodoriActivityDetailInfo.prototype.toObject>;
            photo_info?: ReturnType<typeof dependency_38.PhotoActivityDetailInfo.prototype.toObject>;
            spice_info?: ReturnType<typeof dependency_47.SpiceActivityDetailInfo.prototype.toObject>;
            gacha_info?: ReturnType<typeof dependency_22.GachaActivityDetailInfo.prototype.toObject>;
            luminance_stone_challenge_info?: ReturnType<typeof dependency_31.LuminanceStoneChallengeActivityDetailInfo.prototype.toObject>;
            rogue_diary_info?: ReturnType<typeof dependency_42.RogueDiaryActivityDetailInfo.prototype.toObject>;
            summer_time_v2_info?: ReturnType<typeof dependency_49.SummerTimeV2DetailInfo.prototype.toObject>;
            island_party_info?: ReturnType<typeof dependency_29.IslandPartyActivityDetailInfo.prototype.toObject>;
            gear_info?: ReturnType<typeof dependency_23.GearActivityDetailInfo.prototype.toObject>;
            graven_innocence_info?: ReturnType<typeof dependency_24.GravenInnocenceDetailInfo.prototype.toObject>;
            instable_spray_info?: ReturnType<typeof dependency_27.InstableSprayDetailInfo.prototype.toObject>;
            muqadas_potion_info?: ReturnType<typeof dependency_36.MuqadasPotionDetailInfo.prototype.toObject>;
            treasure_seelie_info?: ReturnType<typeof dependency_53.TreasureSeelieDetailInfo.prototype.toObject>;
            rock_board_explore_info?: ReturnType<typeof dependency_41.RockBoardExploreDetailInfo.prototype.toObject>;
            vintage_info?: ReturnType<typeof dependency_57.VintageDetailInfo.prototype.toObject>;
            wind_field_info?: ReturnType<typeof dependency_59.WindFieldDetailInfo.prototype.toObject>;
        } = {};
        if (this.is_play_open_anim != null) {
            data.is_play_open_anim = this.is_play_open_anim;
        }
        if (this.schedule_id != null) {
            data.schedule_id = this.schedule_id;
        }
        if (this.cur_score != null) {
            data.cur_score = this.cur_score;
        }
        if (this.is_starting != null) {
            data.is_starting = this.is_starting;
        }
        if (this.taken_reward_list != null) {
            data.taken_reward_list = this.taken_reward_list;
        }
        if (this.Unk2700_NONJFHAIFLA != null) {
            data.Unk2700_NONJFHAIFLA = this.Unk2700_NONJFHAIFLA;
        }
        if (this.selected_avatar_reward_id != null) {
            data.selected_avatar_reward_id = this.selected_avatar_reward_id;
        }
        if (this.first_day_start_time != null) {
            data.first_day_start_time = this.first_day_start_time;
        }
        if (this.score_limit != null) {
            data.score_limit = this.score_limit;
        }
        if (this.is_finished != null) {
            data.is_finished = this.is_finished;
        }
        if (this.is_hidden != null) {
            data.is_hidden = this.is_hidden;
        }
        if (this.begin_time != null) {
            data.begin_time = this.begin_time;
        }
        if (this.end_time != null) {
            data.end_time = this.end_time;
        }
        if (this.activity_coin_map.size > 0) {
            data.activity_coin_map = (Object.fromEntries)(this.activity_coin_map);
        }
        if (this.activity_type != null) {
            data.activity_type = this.activity_type;
        }
        if (this.Unk2700_EDKLLHBEEGE != null) {
            data.Unk2700_EDKLLHBEEGE = this.Unk2700_EDKLLHBEEGE;
        }
        if (this.Unk2800_KOMIPKKKOBE != null) {
            data.Unk2800_KOMIPKKKOBE = this.Unk2800_KOMIPKKKOBE.map((item: dependency_56.Unk2800_PHPHMILPOLC) => item.toObject());
        }
        if (this.meet_cond_list != null) {
            data.meet_cond_list = this.meet_cond_list;
        }
        if (this.Unk2700_IFPBCNLCKLG.size > 0) {
            data.Unk2700_IFPBCNLCKLG = (Object.fromEntries)(this.Unk2700_IFPBCNLCKLG);
        }
        if (this.expire_cond_list != null) {
            data.expire_cond_list = this.expire_cond_list;
        }
        if (this.watcher_info_list != null) {
            data.watcher_info_list = this.watcher_info_list.map((item: dependency_1.ActivityWatcherInfo) => item.toObject());
        }
        if (this.activity_id != null) {
            data.activity_id = this.activity_id;
        }
        if (this.sam_lamp_info != null) {
            data.sam_lamp_info = this.sam_lamp_info.toObject();
        }
        if (this.crucible_info != null) {
            data.crucible_info = this.crucible_info.toObject();
        }
        if (this.salesman_info != null) {
            data.salesman_info = this.salesman_info.toObject();
        }
        if (this.trial_avatar_info != null) {
            data.trial_avatar_info = this.trial_avatar_info.toObject();
        }
        if (this.delivery_info != null) {
            data.delivery_info = this.delivery_info.toObject();
        }
        if (this.aster_info != null) {
            data.aster_info = this.aster_info.toObject();
        }
        if (this.flight_info != null) {
            data.flight_info = this.flight_info.toObject();
        }
        if (this.dragon_spine_info != null) {
            data.dragon_spine_info = this.dragon_spine_info.toObject();
        }
        if (this.effigy_info != null) {
            data.effigy_info = this.effigy_info.toObject();
        }
        if (this.treasure_map_info != null) {
            data.treasure_map_info = this.treasure_map_info.toObject();
        }
        if (this.blessing_info != null) {
            data.blessing_info = this.blessing_info.toObject();
        }
        if (this.sea_lamp_info != null) {
            data.sea_lamp_info = this.sea_lamp_info.toObject();
        }
        if (this.expedition_info != null) {
            data.expedition_info = this.expedition_info.toObject();
        }
        if (this.arena_challenge_info != null) {
            data.arena_challenge_info = this.arena_challenge_info.toObject();
        }
        if (this.fleur_fair_info != null) {
            data.fleur_fair_info = this.fleur_fair_info.toObject();
        }
        if (this.water_spirit_info != null) {
            data.water_spirit_info = this.water_spirit_info.toObject();
        }
        if (this.channeler_slab_info != null) {
            data.channeler_slab_info = this.channeler_slab_info.toObject();
        }
        if (this.mist_trial_activity_info != null) {
            data.mist_trial_activity_info = this.mist_trial_activity_info.toObject();
        }
        if (this.hide_and_seek_info != null) {
            data.hide_and_seek_info = this.hide_and_seek_info.toObject();
        }
        if (this.find_hilichurl_info != null) {
            data.find_hilichurl_info = this.find_hilichurl_info.toObject();
        }
        if (this.summer_time_info != null) {
            data.summer_time_info = this.summer_time_info.toObject();
        }
        if (this.buoyant_combat_info != null) {
            data.buoyant_combat_info = this.buoyant_combat_info.toObject();
        }
        if (this.echo_shell_info != null) {
            data.echo_shell_info = this.echo_shell_info.toObject();
        }
        if (this.bounce_conjuring_info != null) {
            data.bounce_conjuring_info = this.bounce_conjuring_info.toObject();
        }
        if (this.blitz_rush_info != null) {
            data.blitz_rush_info = this.blitz_rush_info.toObject();
        }
        if (this.chess_info != null) {
            data.chess_info = this.chess_info.toObject();
        }
        if (this.sumo_info != null) {
            data.sumo_info = this.sumo_info.toObject();
        }
        if (this.moonfin_trial_info != null) {
            data.moonfin_trial_info = this.moonfin_trial_info.toObject();
        }
        if (this.luna_rite_info != null) {
            data.luna_rite_info = this.luna_rite_info.toObject();
        }
        if (this.plant_flower_info != null) {
            data.plant_flower_info = this.plant_flower_info.toObject();
        }
        if (this.music_game_info != null) {
            data.music_game_info = this.music_game_info.toObject();
        }
        if (this.roguelike_dungeon_info != null) {
            data.roguelike_dungeon_info = this.roguelike_dungeon_info.toObject();
        }
        if (this.dig_info != null) {
            data.dig_info = this.dig_info.toObject();
        }
        if (this.hachi_info != null) {
            data.hachi_info = this.hachi_info.toObject();
        }
        if (this.winter_camp_info != null) {
            data.winter_camp_info = this.winter_camp_info.toObject();
        }
        if (this.potion_info != null) {
            data.potion_info = this.potion_info.toObject();
        }
        if (this.tanuki_travel_activity_info != null) {
            data.tanuki_travel_activity_info = this.tanuki_travel_activity_info.toObject();
        }
        if (this.lantern_rite_activity_info != null) {
            data.lantern_rite_activity_info = this.lantern_rite_activity_info.toObject();
        }
        if (this.michiae_matsuri_info != null) {
            data.michiae_matsuri_info = this.michiae_matsuri_info.toObject();
        }
        if (this.bartender_info != null) {
            data.bartender_info = this.bartender_info.toObject();
        }
        if (this.ugc_info != null) {
            data.ugc_info = this.ugc_info.toObject();
        }
        if (this.crystal_link_info != null) {
            data.crystal_link_info = this.crystal_link_info.toObject();
        }
        if (this.irodori_info != null) {
            data.irodori_info = this.irodori_info.toObject();
        }
        if (this.photo_info != null) {
            data.photo_info = this.photo_info.toObject();
        }
        if (this.spice_info != null) {
            data.spice_info = this.spice_info.toObject();
        }
        if (this.gacha_info != null) {
            data.gacha_info = this.gacha_info.toObject();
        }
        if (this.luminance_stone_challenge_info != null) {
            data.luminance_stone_challenge_info = this.luminance_stone_challenge_info.toObject();
        }
        if (this.rogue_diary_info != null) {
            data.rogue_diary_info = this.rogue_diary_info.toObject();
        }
        if (this.summer_time_v2_info != null) {
            data.summer_time_v2_info = this.summer_time_v2_info.toObject();
        }
        if (this.island_party_info != null) {
            data.island_party_info = this.island_party_info.toObject();
        }
        if (this.gear_info != null) {
            data.gear_info = this.gear_info.toObject();
        }
        if (this.graven_innocence_info != null) {
            data.graven_innocence_info = this.graven_innocence_info.toObject();
        }
        if (this.instable_spray_info != null) {
            data.instable_spray_info = this.instable_spray_info.toObject();
        }
        if (this.muqadas_potion_info != null) {
            data.muqadas_potion_info = this.muqadas_potion_info.toObject();
        }
        if (this.treasure_seelie_info != null) {
            data.treasure_seelie_info = this.treasure_seelie_info.toObject();
        }
        if (this.rock_board_explore_info != null) {
            data.rock_board_explore_info = this.rock_board_explore_info.toObject();
        }
        if (this.vintage_info != null) {
            data.vintage_info = this.vintage_info.toObject();
        }
        if (this.wind_field_info != null) {
            data.wind_field_info = this.wind_field_info.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_play_open_anim != false)
            writer.writeBool(13, this.is_play_open_anim);
        if (this.schedule_id != 0)
            writer.writeUint32(15, this.schedule_id);
        if (this.cur_score != 0)
            writer.writeUint32(1906, this.cur_score);
        if (this.is_starting != false)
            writer.writeBool(9, this.is_starting);
        if (this.taken_reward_list.length)
            writer.writePackedUint32(329, this.taken_reward_list);
        if (this.Unk2700_NONJFHAIFLA != false)
            writer.writeBool(102, this.Unk2700_NONJFHAIFLA);
        if (this.selected_avatar_reward_id != 0)
            writer.writeUint32(1290, this.selected_avatar_reward_id);
        if (this.first_day_start_time != 0)
            writer.writeUint32(592, this.first_day_start_time);
        if (this.score_limit != 0)
            writer.writeUint32(1958, this.score_limit);
        if (this.is_finished != false)
            writer.writeBool(6, this.is_finished);
        if (this.is_hidden != false)
            writer.writeBool(919, this.is_hidden);
        if (this.begin_time != 0)
            writer.writeUint32(8, this.begin_time);
        if (this.end_time != 0)
            writer.writeUint32(5, this.end_time);
        for (const [key, value] of this.activity_coin_map) {
            writer.writeMessage(682, this.activity_coin_map, () => {
                writer.writeUint32(1, key);
                writer.writeUint32(2, value);
            });
        }
        if (this.activity_type != 0)
            writer.writeUint32(4, this.activity_type);
        if (this.Unk2700_EDKLLHBEEGE != false)
            writer.writeBool(1449, this.Unk2700_EDKLLHBEEGE);
        if (this.Unk2800_KOMIPKKKOBE.length)
            writer.writeRepeatedMessage(864, this.Unk2800_KOMIPKKKOBE, (item: dependency_56.Unk2800_PHPHMILPOLC) => item.serialize(writer));
        if (this.meet_cond_list.length)
            writer.writePackedUint32(10, this.meet_cond_list);
        for (const [key, value] of this.Unk2700_IFPBCNLCKLG) {
            writer.writeMessage(1399, this.Unk2700_IFPBCNLCKLG, () => {
                writer.writeUint32(1, key);
                writer.writeUint32(2, value);
            });
        }
        if (this.expire_cond_list.length)
            writer.writePackedUint32(3, this.expire_cond_list);
        if (this.watcher_info_list.length)
            writer.writeRepeatedMessage(2, this.watcher_info_list, (item: dependency_1.ActivityWatcherInfo) => item.serialize(writer));
        if (this.activity_id != 0)
            writer.writeUint32(12, this.activity_id);
        if (this.has_sam_lamp_info)
            writer.writeMessage(7, this.sam_lamp_info, () => this.sam_lamp_info.serialize(writer));
        if (this.has_crucible_info)
            writer.writeMessage(14, this.crucible_info, () => this.crucible_info.serialize(writer));
        if (this.has_salesman_info)
            writer.writeMessage(11, this.salesman_info, () => this.salesman_info.serialize(writer));
        if (this.has_trial_avatar_info)
            writer.writeMessage(1, this.trial_avatar_info, () => this.trial_avatar_info.serialize(writer));
        if (this.has_delivery_info)
            writer.writeMessage(1092, this.delivery_info, () => this.delivery_info.serialize(writer));
        if (this.has_aster_info)
            writer.writeMessage(557, this.aster_info, () => this.aster_info.serialize(writer));
        if (this.has_flight_info)
            writer.writeMessage(1365, this.flight_info, () => this.flight_info.serialize(writer));
        if (this.has_dragon_spine_info)
            writer.writeMessage(1727, this.dragon_spine_info, () => this.dragon_spine_info.serialize(writer));
        if (this.has_effigy_info)
            writer.writeMessage(391, this.effigy_info, () => this.effigy_info.serialize(writer));
        if (this.has_treasure_map_info)
            writer.writeMessage(1114, this.treasure_map_info, () => this.treasure_map_info.serialize(writer));
        if (this.has_blessing_info)
            writer.writeMessage(1869, this.blessing_info, () => this.blessing_info.serialize(writer));
        if (this.has_sea_lamp_info)
            writer.writeMessage(494, this.sea_lamp_info, () => this.sea_lamp_info.serialize(writer));
        if (this.has_expedition_info)
            writer.writeMessage(202, this.expedition_info, () => this.expedition_info.serialize(writer));
        if (this.has_arena_challenge_info)
            writer.writeMessage(859, this.arena_challenge_info, () => this.arena_challenge_info.serialize(writer));
        if (this.has_fleur_fair_info)
            writer.writeMessage(857, this.fleur_fair_info, () => this.fleur_fair_info.serialize(writer));
        if (this.has_water_spirit_info)
            writer.writeMessage(1675, this.water_spirit_info, () => this.water_spirit_info.serialize(writer));
        if (this.has_channeler_slab_info)
            writer.writeMessage(1015, this.channeler_slab_info, () => this.channeler_slab_info.serialize(writer));
        if (this.has_mist_trial_activity_info)
            writer.writeMessage(156, this.mist_trial_activity_info, () => this.mist_trial_activity_info.serialize(writer));
        if (this.has_hide_and_seek_info)
            writer.writeMessage(427, this.hide_and_seek_info, () => this.hide_and_seek_info.serialize(writer));
        if (this.has_find_hilichurl_info)
            writer.writeMessage(1411, this.find_hilichurl_info, () => this.find_hilichurl_info.serialize(writer));
        if (this.has_summer_time_info)
            writer.writeMessage(1372, this.summer_time_info, () => this.summer_time_info.serialize(writer));
        if (this.has_buoyant_combat_info)
            writer.writeMessage(1842, this.buoyant_combat_info, () => this.buoyant_combat_info.serialize(writer));
        if (this.has_echo_shell_info)
            writer.writeMessage(1113, this.echo_shell_info, () => this.echo_shell_info.serialize(writer));
        if (this.has_bounce_conjuring_info)
            writer.writeMessage(767, this.bounce_conjuring_info, () => this.bounce_conjuring_info.serialize(writer));
        if (this.has_blitz_rush_info)
            writer.writeMessage(794, this.blitz_rush_info, () => this.blitz_rush_info.serialize(writer));
        if (this.has_chess_info)
            writer.writeMessage(927, this.chess_info, () => this.chess_info.serialize(writer));
        if (this.has_sumo_info)
            writer.writeMessage(1261, this.sumo_info, () => this.sumo_info.serialize(writer));
        if (this.has_moonfin_trial_info)
            writer.writeMessage(1588, this.moonfin_trial_info, () => this.moonfin_trial_info.serialize(writer));
        if (this.has_luna_rite_info)
            writer.writeMessage(814, this.luna_rite_info, () => this.luna_rite_info.serialize(writer));
        if (this.has_plant_flower_info)
            writer.writeMessage(54, this.plant_flower_info, () => this.plant_flower_info.serialize(writer));
        if (this.has_music_game_info)
            writer.writeMessage(460, this.music_game_info, () => this.music_game_info.serialize(writer));
        if (this.has_roguelike_dungeon_info)
            writer.writeMessage(219, this.roguelike_dungeon_info, () => this.roguelike_dungeon_info.serialize(writer));
        if (this.has_dig_info)
            writer.writeMessage(403, this.dig_info, () => this.dig_info.serialize(writer));
        if (this.has_hachi_info)
            writer.writeMessage(491, this.hachi_info, () => this.hachi_info.serialize(writer));
        if (this.has_winter_camp_info)
            writer.writeMessage(1083, this.winter_camp_info, () => this.winter_camp_info.serialize(writer));
        if (this.has_potion_info)
            writer.writeMessage(1273, this.potion_info, () => this.potion_info.serialize(writer));
        if (this.has_tanuki_travel_activity_info)
            writer.writeMessage(1796, this.tanuki_travel_activity_info, () => this.tanuki_travel_activity_info.serialize(writer));
        if (this.has_lantern_rite_activity_info)
            writer.writeMessage(1876, this.lantern_rite_activity_info, () => this.lantern_rite_activity_info.serialize(writer));
        if (this.has_michiae_matsuri_info)
            writer.writeMessage(194, this.michiae_matsuri_info, () => this.michiae_matsuri_info.serialize(writer));
        if (this.has_bartender_info)
            writer.writeMessage(1725, this.bartender_info, () => this.bartender_info.serialize(writer));
        if (this.has_ugc_info)
            writer.writeMessage(703, this.ugc_info, () => this.ugc_info.serialize(writer));
        if (this.has_crystal_link_info)
            writer.writeMessage(1226, this.crystal_link_info, () => this.crystal_link_info.serialize(writer));
        if (this.has_irodori_info)
            writer.writeMessage(750, this.irodori_info, () => this.irodori_info.serialize(writer));
        if (this.has_photo_info)
            writer.writeMessage(328, this.photo_info, () => this.photo_info.serialize(writer));
        if (this.has_spice_info)
            writer.writeMessage(1891, this.spice_info, () => this.spice_info.serialize(writer));
        if (this.has_gacha_info)
            writer.writeMessage(825, this.gacha_info, () => this.gacha_info.serialize(writer));
        if (this.has_luminance_stone_challenge_info)
            writer.writeMessage(1308, this.luminance_stone_challenge_info, () => this.luminance_stone_challenge_info.serialize(writer));
        if (this.has_rogue_diary_info)
            writer.writeMessage(812, this.rogue_diary_info, () => this.rogue_diary_info.serialize(writer));
        if (this.has_summer_time_v2_info)
            writer.writeMessage(622, this.summer_time_v2_info, () => this.summer_time_v2_info.serialize(writer));
        if (this.has_island_party_info)
            writer.writeMessage(1885, this.island_party_info, () => this.island_party_info.serialize(writer));
        if (this.has_gear_info)
            writer.writeMessage(722, this.gear_info, () => this.gear_info.serialize(writer));
        if (this.has_graven_innocence_info)
            writer.writeMessage(1911, this.graven_innocence_info, () => this.graven_innocence_info.serialize(writer));
        if (this.has_instable_spray_info)
            writer.writeMessage(1043, this.instable_spray_info, () => this.instable_spray_info.serialize(writer));
        if (this.has_muqadas_potion_info)
            writer.writeMessage(1157, this.muqadas_potion_info, () => this.muqadas_potion_info.serialize(writer));
        if (this.has_treasure_seelie_info)
            writer.writeMessage(966, this.treasure_seelie_info, () => this.treasure_seelie_info.serialize(writer));
        if (this.has_rock_board_explore_info)
            writer.writeMessage(1078, this.rock_board_explore_info, () => this.rock_board_explore_info.serialize(writer));
        if (this.has_vintage_info)
            writer.writeMessage(445, this.vintage_info, () => this.vintage_info.serialize(writer));
        if (this.has_wind_field_info)
            writer.writeMessage(352, this.wind_field_info, () => this.wind_field_info.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ActivityInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ActivityInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 13:
                    message.is_play_open_anim = reader.readBool();
                    break;
                case 15:
                    message.schedule_id = reader.readUint32();
                    break;
                case 1906:
                    message.cur_score = reader.readUint32();
                    break;
                case 9:
                    message.is_starting = reader.readBool();
                    break;
                case 329:
                    message.taken_reward_list = reader.readPackedUint32();
                    break;
                case 102:
                    message.Unk2700_NONJFHAIFLA = reader.readBool();
                    break;
                case 1290:
                    message.selected_avatar_reward_id = reader.readUint32();
                    break;
                case 592:
                    message.first_day_start_time = reader.readUint32();
                    break;
                case 1958:
                    message.score_limit = reader.readUint32();
                    break;
                case 6:
                    message.is_finished = reader.readBool();
                    break;
                case 919:
                    message.is_hidden = reader.readBool();
                    break;
                case 8:
                    message.begin_time = reader.readUint32();
                    break;
                case 5:
                    message.end_time = reader.readUint32();
                    break;
                case 682:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.activity_coin_map as any, reader, reader.readUint32, reader.readUint32));
                    break;
                case 4:
                    message.activity_type = reader.readUint32();
                    break;
                case 1449:
                    message.Unk2700_EDKLLHBEEGE = reader.readBool();
                    break;
                case 864:
                    reader.readMessage(message.Unk2800_KOMIPKKKOBE, () => pb_1.Message.addToRepeatedWrapperField(message, 864, dependency_56.Unk2800_PHPHMILPOLC.deserialize(reader), dependency_56.Unk2800_PHPHMILPOLC));
                    break;
                case 10:
                    message.meet_cond_list = reader.readPackedUint32();
                    break;
                case 1399:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.Unk2700_IFPBCNLCKLG as any, reader, reader.readUint32, reader.readUint32));
                    break;
                case 3:
                    message.expire_cond_list = reader.readPackedUint32();
                    break;
                case 2:
                    reader.readMessage(message.watcher_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.ActivityWatcherInfo.deserialize(reader), dependency_1.ActivityWatcherInfo));
                    break;
                case 12:
                    message.activity_id = reader.readUint32();
                    break;
                case 7:
                    reader.readMessage(message.sam_lamp_info, () => message.sam_lamp_info = dependency_45.SeaLampActivityDetailInfo.deserialize(reader));
                    break;
                case 14:
                    reader.readMessage(message.crucible_info, () => message.crucible_info = dependency_11.CrucibleActivityDetailInfo.deserialize(reader));
                    break;
                case 11:
                    reader.readMessage(message.salesman_info, () => message.salesman_info = dependency_44.SalesmanActivityDetailInfo.deserialize(reader));
                    break;
                case 1:
                    reader.readMessage(message.trial_avatar_info, () => message.trial_avatar_info = dependency_54.TrialAvatarActivityDetailInfo.deserialize(reader));
                    break;
                case 1092:
                    reader.readMessage(message.delivery_info, () => message.delivery_info = dependency_13.DeliveryActivityDetailInfo.deserialize(reader));
                    break;
                case 557:
                    reader.readMessage(message.aster_info, () => message.aster_info = dependency_3.AsterActivityDetailInfo.deserialize(reader));
                    break;
                case 1365:
                    reader.readMessage(message.flight_info, () => message.flight_info = dependency_21.FlightActivityDetailInfo.deserialize(reader));
                    break;
                case 1727:
                    reader.readMessage(message.dragon_spine_info, () => message.dragon_spine_info = dependency_15.DragonSpineActivityDetailInfo.deserialize(reader));
                    break;
                case 391:
                    reader.readMessage(message.effigy_info, () => message.effigy_info = dependency_17.EffigyActivityDetailInfo.deserialize(reader));
                    break;
                case 1114:
                    reader.readMessage(message.treasure_map_info, () => message.treasure_map_info = dependency_52.TreasureMapActivityDetailInfo.deserialize(reader));
                    break;
                case 1869:
                    reader.readMessage(message.blessing_info, () => message.blessing_info = dependency_5.BlessingActivityDetailInfo.deserialize(reader));
                    break;
                case 494:
                    reader.readMessage(message.sea_lamp_info, () => message.sea_lamp_info = dependency_46.SeaLampActivityInfo.deserialize(reader));
                    break;
                case 202:
                    reader.readMessage(message.expedition_info, () => message.expedition_info = dependency_18.ExpeditionActivityDetailInfo.deserialize(reader));
                    break;
                case 859:
                    reader.readMessage(message.arena_challenge_info, () => message.arena_challenge_info = dependency_2.ArenaChallengeActivityDetailInfo.deserialize(reader));
                    break;
                case 857:
                    reader.readMessage(message.fleur_fair_info, () => message.fleur_fair_info = dependency_20.FleurFairActivityDetailInfo.deserialize(reader));
                    break;
                case 1675:
                    reader.readMessage(message.water_spirit_info, () => message.water_spirit_info = dependency_58.WaterSpiritActivityDetailInfo.deserialize(reader));
                    break;
                case 1015:
                    reader.readMessage(message.channeler_slab_info, () => message.channeler_slab_info = dependency_9.ChannelerSlabActivityDetailInfo.deserialize(reader));
                    break;
                case 156:
                    reader.readMessage(message.mist_trial_activity_info, () => message.mist_trial_activity_info = dependency_34.MistTrialActivityDetailInfo.deserialize(reader));
                    break;
                case 427:
                    reader.readMessage(message.hide_and_seek_info, () => message.hide_and_seek_info = dependency_26.HideAndSeekActivityDetailInfo.deserialize(reader));
                    break;
                case 1411:
                    reader.readMessage(message.find_hilichurl_info, () => message.find_hilichurl_info = dependency_19.FindHilichurlDetailInfo.deserialize(reader));
                    break;
                case 1372:
                    reader.readMessage(message.summer_time_info, () => message.summer_time_info = dependency_48.SummerTimeDetailInfo.deserialize(reader));
                    break;
                case 1842:
                    reader.readMessage(message.buoyant_combat_info, () => message.buoyant_combat_info = dependency_8.BuoyantCombatDetailInfo.deserialize(reader));
                    break;
                case 1113:
                    reader.readMessage(message.echo_shell_info, () => message.echo_shell_info = dependency_16.EchoShellDetailInfo.deserialize(reader));
                    break;
                case 767:
                    reader.readMessage(message.bounce_conjuring_info, () => message.bounce_conjuring_info = dependency_7.BounceConjuringActivityDetailInfo.deserialize(reader));
                    break;
                case 794:
                    reader.readMessage(message.blitz_rush_info, () => message.blitz_rush_info = dependency_6.BlitzRushActivityDetailInfo.deserialize(reader));
                    break;
                case 927:
                    reader.readMessage(message.chess_info, () => message.chess_info = dependency_10.ChessActivityDetailInfo.deserialize(reader));
                    break;
                case 1261:
                    reader.readMessage(message.sumo_info, () => message.sumo_info = dependency_50.SumoActivityDetailInfo.deserialize(reader));
                    break;
                case 1588:
                    reader.readMessage(message.moonfin_trial_info, () => message.moonfin_trial_info = dependency_35.MoonfinTrialActivityDetailInfo.deserialize(reader));
                    break;
                case 814:
                    reader.readMessage(message.luna_rite_info, () => message.luna_rite_info = dependency_32.LunaRiteDetailInfo.deserialize(reader));
                    break;
                case 54:
                    reader.readMessage(message.plant_flower_info, () => message.plant_flower_info = dependency_39.PlantFlowerActivityDetailInfo.deserialize(reader));
                    break;
                case 460:
                    reader.readMessage(message.music_game_info, () => message.music_game_info = dependency_37.MusicGameActivityDetailInfo.deserialize(reader));
                    break;
                case 219:
                    reader.readMessage(message.roguelike_dungeon_info, () => message.roguelike_dungeon_info = dependency_43.RoguelikeDungeonActivityDetailInfo.deserialize(reader));
                    break;
                case 403:
                    reader.readMessage(message.dig_info, () => message.dig_info = dependency_14.DigActivityDetailInfo.deserialize(reader));
                    break;
                case 491:
                    reader.readMessage(message.hachi_info, () => message.hachi_info = dependency_25.HachiActivityDetailInfo.deserialize(reader));
                    break;
                case 1083:
                    reader.readMessage(message.winter_camp_info, () => message.winter_camp_info = dependency_60.WinterCampActivityDetailInfo.deserialize(reader));
                    break;
                case 1273:
                    reader.readMessage(message.potion_info, () => message.potion_info = dependency_40.PotionActivityDetailInfo.deserialize(reader));
                    break;
                case 1796:
                    reader.readMessage(message.tanuki_travel_activity_info, () => message.tanuki_travel_activity_info = dependency_51.TanukiTravelActivityDetailInfo.deserialize(reader));
                    break;
                case 1876:
                    reader.readMessage(message.lantern_rite_activity_info, () => message.lantern_rite_activity_info = dependency_30.LanternRiteActivityDetailInfo.deserialize(reader));
                    break;
                case 194:
                    reader.readMessage(message.michiae_matsuri_info, () => message.michiae_matsuri_info = dependency_33.MichiaeMatsuriActivityDetailInfo.deserialize(reader));
                    break;
                case 1725:
                    reader.readMessage(message.bartender_info, () => message.bartender_info = dependency_4.BartenderActivityDetailInfo.deserialize(reader));
                    break;
                case 703:
                    reader.readMessage(message.ugc_info, () => message.ugc_info = dependency_55.UgcActivityDetailInfo.deserialize(reader));
                    break;
                case 1226:
                    reader.readMessage(message.crystal_link_info, () => message.crystal_link_info = dependency_12.CrystalLinkActivityDetailInfo.deserialize(reader));
                    break;
                case 750:
                    reader.readMessage(message.irodori_info, () => message.irodori_info = dependency_28.IrodoriActivityDetailInfo.deserialize(reader));
                    break;
                case 328:
                    reader.readMessage(message.photo_info, () => message.photo_info = dependency_38.PhotoActivityDetailInfo.deserialize(reader));
                    break;
                case 1891:
                    reader.readMessage(message.spice_info, () => message.spice_info = dependency_47.SpiceActivityDetailInfo.deserialize(reader));
                    break;
                case 825:
                    reader.readMessage(message.gacha_info, () => message.gacha_info = dependency_22.GachaActivityDetailInfo.deserialize(reader));
                    break;
                case 1308:
                    reader.readMessage(message.luminance_stone_challenge_info, () => message.luminance_stone_challenge_info = dependency_31.LuminanceStoneChallengeActivityDetailInfo.deserialize(reader));
                    break;
                case 812:
                    reader.readMessage(message.rogue_diary_info, () => message.rogue_diary_info = dependency_42.RogueDiaryActivityDetailInfo.deserialize(reader));
                    break;
                case 622:
                    reader.readMessage(message.summer_time_v2_info, () => message.summer_time_v2_info = dependency_49.SummerTimeV2DetailInfo.deserialize(reader));
                    break;
                case 1885:
                    reader.readMessage(message.island_party_info, () => message.island_party_info = dependency_29.IslandPartyActivityDetailInfo.deserialize(reader));
                    break;
                case 722:
                    reader.readMessage(message.gear_info, () => message.gear_info = dependency_23.GearActivityDetailInfo.deserialize(reader));
                    break;
                case 1911:
                    reader.readMessage(message.graven_innocence_info, () => message.graven_innocence_info = dependency_24.GravenInnocenceDetailInfo.deserialize(reader));
                    break;
                case 1043:
                    reader.readMessage(message.instable_spray_info, () => message.instable_spray_info = dependency_27.InstableSprayDetailInfo.deserialize(reader));
                    break;
                case 1157:
                    reader.readMessage(message.muqadas_potion_info, () => message.muqadas_potion_info = dependency_36.MuqadasPotionDetailInfo.deserialize(reader));
                    break;
                case 966:
                    reader.readMessage(message.treasure_seelie_info, () => message.treasure_seelie_info = dependency_53.TreasureSeelieDetailInfo.deserialize(reader));
                    break;
                case 1078:
                    reader.readMessage(message.rock_board_explore_info, () => message.rock_board_explore_info = dependency_41.RockBoardExploreDetailInfo.deserialize(reader));
                    break;
                case 445:
                    reader.readMessage(message.vintage_info, () => message.vintage_info = dependency_57.VintageDetailInfo.deserialize(reader));
                    break;
                case 352:
                    reader.readMessage(message.wind_field_info, () => message.wind_field_info = dependency_59.WindFieldDetailInfo.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ActivityInfo {
        return ActivityInfo.deserialize(bytes);
    }
}
