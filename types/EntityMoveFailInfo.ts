/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EntityMoveFailInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./MotionInfo";
import * as pb_1 from "google-protobuf";
export class EntityMoveFailInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        retcode?: number;
        scene_time?: number;
        fail_motion?: dependency_1.MotionInfo;
        reliable_seq?: number;
        entity_id?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("retcode" in data && data.retcode != undefined) {
                this.retcode = data.retcode;
            }
            if ("scene_time" in data && data.scene_time != undefined) {
                this.scene_time = data.scene_time;
            }
            if ("fail_motion" in data && data.fail_motion != undefined) {
                this.fail_motion = data.fail_motion;
            }
            if ("reliable_seq" in data && data.reliable_seq != undefined) {
                this.reliable_seq = data.reliable_seq;
            }
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
        }
    }
    get retcode() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set retcode(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get scene_time() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set scene_time(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get fail_motion() {
        return pb_1.Message.getWrapperField(this, dependency_1.MotionInfo, 14) as dependency_1.MotionInfo;
    }
    set fail_motion(value: dependency_1.MotionInfo) {
        pb_1.Message.setWrapperField(this, 14, value);
    }
    get has_fail_motion() {
        return pb_1.Message.getField(this, 14) != null;
    }
    get reliable_seq() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set reliable_seq(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;
    }
    set entity_id(value: number) {
        pb_1.Message.setField(this, 10, value);
    }
    static fromObject(data: {
        retcode?: number;
        scene_time?: number;
        fail_motion?: ReturnType<typeof dependency_1.MotionInfo.prototype.toObject>;
        reliable_seq?: number;
        entity_id?: number;
    }): EntityMoveFailInfo {
        const message = new EntityMoveFailInfo({});
        if (data.retcode != null) {
            message.retcode = data.retcode;
        }
        if (data.scene_time != null) {
            message.scene_time = data.scene_time;
        }
        if (data.fail_motion != null) {
            message.fail_motion = dependency_1.MotionInfo.fromObject(data.fail_motion);
        }
        if (data.reliable_seq != null) {
            message.reliable_seq = data.reliable_seq;
        }
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        return message;
    }
    toObject() {
        const data: {
            retcode?: number;
            scene_time?: number;
            fail_motion?: ReturnType<typeof dependency_1.MotionInfo.prototype.toObject>;
            reliable_seq?: number;
            entity_id?: number;
        } = {};
        if (this.retcode != null) {
            data.retcode = this.retcode;
        }
        if (this.scene_time != null) {
            data.scene_time = this.scene_time;
        }
        if (this.fail_motion != null) {
            data.fail_motion = this.fail_motion.toObject();
        }
        if (this.reliable_seq != null) {
            data.reliable_seq = this.reliable_seq;
        }
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.retcode != 0)
            writer.writeInt32(12, this.retcode);
        if (this.scene_time != 0)
            writer.writeUint32(9, this.scene_time);
        if (this.has_fail_motion)
            writer.writeMessage(14, this.fail_motion, () => this.fail_motion.serialize(writer));
        if (this.reliable_seq != 0)
            writer.writeUint32(4, this.reliable_seq);
        if (this.entity_id != 0)
            writer.writeUint32(10, this.entity_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EntityMoveFailInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EntityMoveFailInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 12:
                    message.retcode = reader.readInt32();
                    break;
                case 9:
                    message.scene_time = reader.readUint32();
                    break;
                case 14:
                    reader.readMessage(message.fail_motion, () => message.fail_motion = dependency_1.MotionInfo.deserialize(reader));
                    break;
                case 4:
                    message.reliable_seq = reader.readUint32();
                    break;
                case 10:
                    message.entity_id = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): EntityMoveFailInfo {
        return EntityMoveFailInfo.deserialize(bytes);
    }
}
