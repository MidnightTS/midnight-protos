/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: QuickUseWidgetRsp.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ClientCollectorData";
import * as dependency_2 from "./OneofGatherPointDetectorData";
import * as dependency_3 from "./SkyCrystalDetectorQuickUseResult";
import * as pb_1 from "google-protobuf";
export class QuickUseWidgetRsp extends pb_1.Message {
    #one_of_decls: number[][] = [[3, 15, 168922]];
    constructor(data?: any[] | ({
        material_id?: number;
        retcode?: number;
    } & (({
        detector_data?: dependency_2.OneofGatherPointDetectorData;
        client_collector_data?: never;
        sky_crystal_detector_quick_use_result?: never;
    } | {
        detector_data?: never;
        client_collector_data?: dependency_1.ClientCollectorData;
        sky_crystal_detector_quick_use_result?: never;
    } | {
        detector_data?: never;
        client_collector_data?: never;
        sky_crystal_detector_quick_use_result?: dependency_3.SkyCrystalDetectorQuickUseResult;
    })))) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("material_id" in data && data.material_id != undefined) {
                this.material_id = data.material_id;
            }
            if ("retcode" in data && data.retcode != undefined) {
                this.retcode = data.retcode;
            }
            if ("detector_data" in data && data.detector_data != undefined) {
                this.detector_data = data.detector_data;
            }
            if ("client_collector_data" in data && data.client_collector_data != undefined) {
                this.client_collector_data = data.client_collector_data;
            }
            if ("sky_crystal_detector_quick_use_result" in data && data.sky_crystal_detector_quick_use_result != undefined) {
                this.sky_crystal_detector_quick_use_result = data.sky_crystal_detector_quick_use_result;
            }
        }
    }
    get material_id() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set material_id(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get retcode() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set retcode(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get detector_data() {
        return pb_1.Message.getWrapperField(this, dependency_2.OneofGatherPointDetectorData, 3) as dependency_2.OneofGatherPointDetectorData;
    }
    set detector_data(value: dependency_2.OneofGatherPointDetectorData) {
        pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[0], value);
    }
    get has_detector_data() {
        return pb_1.Message.getField(this, 3) != null;
    }
    get client_collector_data() {
        return pb_1.Message.getWrapperField(this, dependency_1.ClientCollectorData, 15) as dependency_1.ClientCollectorData;
    }
    set client_collector_data(value: dependency_1.ClientCollectorData) {
        pb_1.Message.setOneofWrapperField(this, 15, this.#one_of_decls[0], value);
    }
    get has_client_collector_data() {
        return pb_1.Message.getField(this, 15) != null;
    }
    get sky_crystal_detector_quick_use_result() {
        return pb_1.Message.getWrapperField(this, dependency_3.SkyCrystalDetectorQuickUseResult, 168922) as dependency_3.SkyCrystalDetectorQuickUseResult;
    }
    set sky_crystal_detector_quick_use_result(value: dependency_3.SkyCrystalDetectorQuickUseResult) {
        pb_1.Message.setOneofWrapperField(this, 168922, this.#one_of_decls[0], value);
    }
    get has_sky_crystal_detector_quick_use_result() {
        return pb_1.Message.getField(this, 168922) != null;
    }
    get param() {
        const cases: {
            [index: number]: "none" | "detector_data" | "client_collector_data" | "sky_crystal_detector_quick_use_result";
        } = {
            0: "none",
            3: "detector_data",
            15: "client_collector_data",
            168922: "sky_crystal_detector_quick_use_result"
        };
        return cases[pb_1.Message.computeOneofCase(this, [3, 15, 168922])];
    }
    static fromObject(data: {
        material_id?: number;
        retcode?: number;
        detector_data?: ReturnType<typeof dependency_2.OneofGatherPointDetectorData.prototype.toObject>;
        client_collector_data?: ReturnType<typeof dependency_1.ClientCollectorData.prototype.toObject>;
        sky_crystal_detector_quick_use_result?: ReturnType<typeof dependency_3.SkyCrystalDetectorQuickUseResult.prototype.toObject>;
    }): QuickUseWidgetRsp {
        const message = new QuickUseWidgetRsp({});
        if (data.material_id != null) {
            message.material_id = data.material_id;
        }
        if (data.retcode != null) {
            message.retcode = data.retcode;
        }
        if (data.detector_data != null) {
            message.detector_data = dependency_2.OneofGatherPointDetectorData.fromObject(data.detector_data);
        }
        if (data.client_collector_data != null) {
            message.client_collector_data = dependency_1.ClientCollectorData.fromObject(data.client_collector_data);
        }
        if (data.sky_crystal_detector_quick_use_result != null) {
            message.sky_crystal_detector_quick_use_result = dependency_3.SkyCrystalDetectorQuickUseResult.fromObject(data.sky_crystal_detector_quick_use_result);
        }
        return message;
    }
    toObject() {
        const data: {
            material_id?: number;
            retcode?: number;
            detector_data?: ReturnType<typeof dependency_2.OneofGatherPointDetectorData.prototype.toObject>;
            client_collector_data?: ReturnType<typeof dependency_1.ClientCollectorData.prototype.toObject>;
            sky_crystal_detector_quick_use_result?: ReturnType<typeof dependency_3.SkyCrystalDetectorQuickUseResult.prototype.toObject>;
        } = {};
        if (this.material_id != null) {
            data.material_id = this.material_id;
        }
        if (this.retcode != null) {
            data.retcode = this.retcode;
        }
        if (this.detector_data != null) {
            data.detector_data = this.detector_data.toObject();
        }
        if (this.client_collector_data != null) {
            data.client_collector_data = this.client_collector_data.toObject();
        }
        if (this.sky_crystal_detector_quick_use_result != null) {
            data.sky_crystal_detector_quick_use_result = this.sky_crystal_detector_quick_use_result.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.material_id != 0)
            writer.writeUint32(6, this.material_id);
        if (this.retcode != 0)
            writer.writeInt32(5, this.retcode);
        if (this.has_detector_data)
            writer.writeMessage(3, this.detector_data, () => this.detector_data.serialize(writer));
        if (this.has_client_collector_data)
            writer.writeMessage(15, this.client_collector_data, () => this.client_collector_data.serialize(writer));
        if (this.has_sky_crystal_detector_quick_use_result)
            writer.writeMessage(168922, this.sky_crystal_detector_quick_use_result, () => this.sky_crystal_detector_quick_use_result.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): QuickUseWidgetRsp {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new QuickUseWidgetRsp();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 6:
                    message.material_id = reader.readUint32();
                    break;
                case 5:
                    message.retcode = reader.readInt32();
                    break;
                case 3:
                    reader.readMessage(message.detector_data, () => message.detector_data = dependency_2.OneofGatherPointDetectorData.deserialize(reader));
                    break;
                case 15:
                    reader.readMessage(message.client_collector_data, () => message.client_collector_data = dependency_1.ClientCollectorData.deserialize(reader));
                    break;
                case 168922:
                    reader.readMessage(message.sky_crystal_detector_quick_use_result, () => message.sky_crystal_detector_quick_use_result = dependency_3.SkyCrystalDetectorQuickUseResult.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): QuickUseWidgetRsp {
        return QuickUseWidgetRsp.deserialize(bytes);
    }
}
