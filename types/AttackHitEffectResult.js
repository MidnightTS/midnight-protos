"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _AttackHitEffectResult_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AttackHitEffectResult = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: AttackHitEffectResult.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class AttackHitEffectResult extends pb_1.Message {
    constructor(data) {
        super();
        _AttackHitEffectResult_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _AttackHitEffectResult_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("hit_halt_time_scale" in data && data.hit_halt_time_scale != undefined) {
                this.hit_halt_time_scale = data.hit_halt_time_scale;
            }
            if ("original_hit_eff_level" in data && data.original_hit_eff_level != undefined) {
                this.original_hit_eff_level = data.original_hit_eff_level;
            }
            if ("air_strength" in data && data.air_strength != undefined) {
                this.air_strength = data.air_strength;
            }
            if ("hit_eff_level" in data && data.hit_eff_level != undefined) {
                this.hit_eff_level = data.hit_eff_level;
            }
            if ("hit_halt_time" in data && data.hit_halt_time != undefined) {
                this.hit_halt_time = data.hit_halt_time;
            }
            if ("retreat_strength" in data && data.retreat_strength != undefined) {
                this.retreat_strength = data.retreat_strength;
            }
        }
    }
    get hit_halt_time_scale() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0);
    }
    set hit_halt_time_scale(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get original_hit_eff_level() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set original_hit_eff_level(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get air_strength() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set air_strength(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get hit_eff_level() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set hit_eff_level(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get hit_halt_time() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0);
    }
    set hit_halt_time(value) {
        pb_1.Message.setField(this, 13, value);
    }
    get retreat_strength() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set retreat_strength(value) {
        pb_1.Message.setField(this, 7, value);
    }
    static fromObject(data) {
        const message = new AttackHitEffectResult({});
        if (data.hit_halt_time_scale != null) {
            message.hit_halt_time_scale = data.hit_halt_time_scale;
        }
        if (data.original_hit_eff_level != null) {
            message.original_hit_eff_level = data.original_hit_eff_level;
        }
        if (data.air_strength != null) {
            message.air_strength = data.air_strength;
        }
        if (data.hit_eff_level != null) {
            message.hit_eff_level = data.hit_eff_level;
        }
        if (data.hit_halt_time != null) {
            message.hit_halt_time = data.hit_halt_time;
        }
        if (data.retreat_strength != null) {
            message.retreat_strength = data.retreat_strength;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.hit_halt_time_scale != null) {
            data.hit_halt_time_scale = this.hit_halt_time_scale;
        }
        if (this.original_hit_eff_level != null) {
            data.original_hit_eff_level = this.original_hit_eff_level;
        }
        if (this.air_strength != null) {
            data.air_strength = this.air_strength;
        }
        if (this.hit_eff_level != null) {
            data.hit_eff_level = this.hit_eff_level;
        }
        if (this.hit_halt_time != null) {
            data.hit_halt_time = this.hit_halt_time;
        }
        if (this.retreat_strength != null) {
            data.retreat_strength = this.retreat_strength;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.hit_halt_time_scale != 0)
            writer.writeFloat(8, this.hit_halt_time_scale);
        if (this.original_hit_eff_level != 0)
            writer.writeUint32(12, this.original_hit_eff_level);
        if (this.air_strength != 0)
            writer.writeFloat(15, this.air_strength);
        if (this.hit_eff_level != 0)
            writer.writeUint32(2, this.hit_eff_level);
        if (this.hit_halt_time != 0)
            writer.writeFloat(13, this.hit_halt_time);
        if (this.retreat_strength != 0)
            writer.writeFloat(7, this.retreat_strength);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AttackHitEffectResult();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.hit_halt_time_scale = reader.readFloat();
                    break;
                case 12:
                    message.original_hit_eff_level = reader.readUint32();
                    break;
                case 15:
                    message.air_strength = reader.readFloat();
                    break;
                case 2:
                    message.hit_eff_level = reader.readUint32();
                    break;
                case 13:
                    message.hit_halt_time = reader.readFloat();
                    break;
                case 7:
                    message.retreat_strength = reader.readFloat();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return AttackHitEffectResult.deserialize(bytes);
    }
}
exports.AttackHitEffectResult = AttackHitEffectResult;
_AttackHitEffectResult_one_of_decls = new WeakMap();
