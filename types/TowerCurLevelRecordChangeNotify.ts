/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: TowerCurLevelRecordChangeNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./TowerCurLevelRecord";
import * as pb_1 from "google-protobuf";
export class TowerCurLevelRecordChangeNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        cur_level_record?: dependency_1.TowerCurLevelRecord;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("cur_level_record" in data && data.cur_level_record != undefined) {
                this.cur_level_record = data.cur_level_record;
            }
        }
    }
    get cur_level_record() {
        return pb_1.Message.getWrapperField(this, dependency_1.TowerCurLevelRecord, 10) as dependency_1.TowerCurLevelRecord;
    }
    set cur_level_record(value: dependency_1.TowerCurLevelRecord) {
        pb_1.Message.setWrapperField(this, 10, value);
    }
    get has_cur_level_record() {
        return pb_1.Message.getField(this, 10) != null;
    }
    static fromObject(data: {
        cur_level_record?: ReturnType<typeof dependency_1.TowerCurLevelRecord.prototype.toObject>;
    }): TowerCurLevelRecordChangeNotify {
        const message = new TowerCurLevelRecordChangeNotify({});
        if (data.cur_level_record != null) {
            message.cur_level_record = dependency_1.TowerCurLevelRecord.fromObject(data.cur_level_record);
        }
        return message;
    }
    toObject() {
        const data: {
            cur_level_record?: ReturnType<typeof dependency_1.TowerCurLevelRecord.prototype.toObject>;
        } = {};
        if (this.cur_level_record != null) {
            data.cur_level_record = this.cur_level_record.toObject();
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.has_cur_level_record)
            writer.writeMessage(10, this.cur_level_record, () => this.cur_level_record.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TowerCurLevelRecordChangeNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new TowerCurLevelRecordChangeNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 10:
                    reader.readMessage(message.cur_level_record, () => message.cur_level_record = dependency_1.TowerCurLevelRecord.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): TowerCurLevelRecordChangeNotify {
        return TowerCurLevelRecordChangeNotify.deserialize(bytes);
    }
}
