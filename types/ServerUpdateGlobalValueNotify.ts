/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ServerUpdateGlobalValueNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as pb_1 from "google-protobuf";
export class ServerUpdateGlobalValueNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        entity_id?: number;
        update_type?: ServerUpdateGlobalValueNotify.UpdateType;
        delta?: number;
        key_hash?: number;
        value?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
            if ("update_type" in data && data.update_type != undefined) {
                this.update_type = data.update_type;
            }
            if ("delta" in data && data.delta != undefined) {
                this.delta = data.delta;
            }
            if ("key_hash" in data && data.key_hash != undefined) {
                this.key_hash = data.key_hash;
            }
            if ("value" in data && data.value != undefined) {
                this.value = data.value;
            }
        }
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set entity_id(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get update_type() {
        return pb_1.Message.getFieldWithDefault(this, 13, ServerUpdateGlobalValueNotify.UpdateType.UPDATE_TYPE_INVALUE) as ServerUpdateGlobalValueNotify.UpdateType;
    }
    set update_type(value: ServerUpdateGlobalValueNotify.UpdateType) {
        pb_1.Message.setField(this, 13, value);
    }
    get delta() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set delta(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get key_hash() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0) as number;
    }
    set key_hash(value: number) {
        pb_1.Message.setField(this, 10, value);
    }
    get value() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set value(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data: {
        entity_id?: number;
        update_type?: ServerUpdateGlobalValueNotify.UpdateType;
        delta?: number;
        key_hash?: number;
        value?: number;
    }): ServerUpdateGlobalValueNotify {
        const message = new ServerUpdateGlobalValueNotify({});
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        if (data.update_type != null) {
            message.update_type = data.update_type;
        }
        if (data.delta != null) {
            message.delta = data.delta;
        }
        if (data.key_hash != null) {
            message.key_hash = data.key_hash;
        }
        if (data.value != null) {
            message.value = data.value;
        }
        return message;
    }
    toObject() {
        const data: {
            entity_id?: number;
            update_type?: ServerUpdateGlobalValueNotify.UpdateType;
            delta?: number;
            key_hash?: number;
            value?: number;
        } = {};
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        if (this.update_type != null) {
            data.update_type = this.update_type;
        }
        if (this.delta != null) {
            data.delta = this.delta;
        }
        if (this.key_hash != null) {
            data.key_hash = this.key_hash;
        }
        if (this.value != null) {
            data.value = this.value;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.entity_id != 0)
            writer.writeUint32(9, this.entity_id);
        if (this.update_type != ServerUpdateGlobalValueNotify.UpdateType.UPDATE_TYPE_INVALUE)
            writer.writeEnum(13, this.update_type);
        if (this.delta != 0)
            writer.writeFloat(3, this.delta);
        if (this.key_hash != 0)
            writer.writeUint32(10, this.key_hash);
        if (this.value != 0)
            writer.writeFloat(6, this.value);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ServerUpdateGlobalValueNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ServerUpdateGlobalValueNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 9:
                    message.entity_id = reader.readUint32();
                    break;
                case 13:
                    message.update_type = reader.readEnum();
                    break;
                case 3:
                    message.delta = reader.readFloat();
                    break;
                case 10:
                    message.key_hash = reader.readUint32();
                    break;
                case 6:
                    message.value = reader.readFloat();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ServerUpdateGlobalValueNotify {
        return ServerUpdateGlobalValueNotify.deserialize(bytes);
    }
}
export namespace ServerUpdateGlobalValueNotify {
    export enum UpdateType {
        UPDATE_TYPE_INVALUE = 0,
        UPDATE_TYPE_ADD = 1,
        UPDATE_TYPE_SET = 2
    }
}
