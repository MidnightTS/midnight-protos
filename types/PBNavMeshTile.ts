/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PBNavMeshTile.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./PBNavMeshPoly";
import * as dependency_2 from "./Vector";
import * as pb_1 from "google-protobuf";
export class PBNavMeshTile extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        vecs?: dependency_2.Vector[];
        polys?: dependency_1.PBNavMeshPoly[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4, 8], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("vecs" in data && data.vecs != undefined) {
                this.vecs = data.vecs;
            }
            if ("polys" in data && data.polys != undefined) {
                this.polys = data.polys;
            }
        }
    }
    get vecs() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Vector, 4) as dependency_2.Vector[];
    }
    set vecs(value: dependency_2.Vector[]) {
        pb_1.Message.setRepeatedWrapperField(this, 4, value);
    }
    get polys() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.PBNavMeshPoly, 8) as dependency_1.PBNavMeshPoly[];
    }
    set polys(value: dependency_1.PBNavMeshPoly[]) {
        pb_1.Message.setRepeatedWrapperField(this, 8, value);
    }
    static fromObject(data: {
        vecs?: ReturnType<typeof dependency_2.Vector.prototype.toObject>[];
        polys?: ReturnType<typeof dependency_1.PBNavMeshPoly.prototype.toObject>[];
    }): PBNavMeshTile {
        const message = new PBNavMeshTile({});
        if (data.vecs != null) {
            message.vecs = data.vecs.map(item => dependency_2.Vector.fromObject(item));
        }
        if (data.polys != null) {
            message.polys = data.polys.map(item => dependency_1.PBNavMeshPoly.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            vecs?: ReturnType<typeof dependency_2.Vector.prototype.toObject>[];
            polys?: ReturnType<typeof dependency_1.PBNavMeshPoly.prototype.toObject>[];
        } = {};
        if (this.vecs != null) {
            data.vecs = this.vecs.map((item: dependency_2.Vector) => item.toObject());
        }
        if (this.polys != null) {
            data.polys = this.polys.map((item: dependency_1.PBNavMeshPoly) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.vecs.length)
            writer.writeRepeatedMessage(4, this.vecs, (item: dependency_2.Vector) => item.serialize(writer));
        if (this.polys.length)
            writer.writeRepeatedMessage(8, this.polys, (item: dependency_1.PBNavMeshPoly) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PBNavMeshTile {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PBNavMeshTile();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 4:
                    reader.readMessage(message.vecs, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_2.Vector.deserialize(reader), dependency_2.Vector));
                    break;
                case 8:
                    reader.readMessage(message.polys, () => pb_1.Message.addToRepeatedWrapperField(message, 8, dependency_1.PBNavMeshPoly.deserialize(reader), dependency_1.PBNavMeshPoly));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): PBNavMeshTile {
        return PBNavMeshTile.deserialize(bytes);
    }
}
