"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _SceneGalleryProgressInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.SceneGalleryProgressInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneGalleryProgressInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const pb_1 = require("google-protobuf");
class SceneGalleryProgressInfo extends pb_1.Message {
    constructor(data) {
        super();
        _SceneGalleryProgressInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [8], __classPrivateFieldGet(this, _SceneGalleryProgressInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("progress_stage_list" in data && data.progress_stage_list != undefined) {
                this.progress_stage_list = data.progress_stage_list;
            }
            if ("key" in data && data.key != undefined) {
                this.key = data.key;
            }
            if ("progress" in data && data.progress != undefined) {
                this.progress = data.progress;
            }
            if ("ui_form" in data && data.ui_form != undefined) {
                this.ui_form = data.ui_form;
            }
        }
    }
    get progress_stage_list() {
        return pb_1.Message.getFieldWithDefault(this, 8, []);
    }
    set progress_stage_list(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get key() {
        return pb_1.Message.getFieldWithDefault(this, 11, "");
    }
    set key(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get progress() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0);
    }
    set progress(value) {
        pb_1.Message.setField(this, 5, value);
    }
    get ui_form() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set ui_form(value) {
        pb_1.Message.setField(this, 12, value);
    }
    static fromObject(data) {
        const message = new SceneGalleryProgressInfo({});
        if (data.progress_stage_list != null) {
            message.progress_stage_list = data.progress_stage_list;
        }
        if (data.key != null) {
            message.key = data.key;
        }
        if (data.progress != null) {
            message.progress = data.progress;
        }
        if (data.ui_form != null) {
            message.ui_form = data.ui_form;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.progress_stage_list != null) {
            data.progress_stage_list = this.progress_stage_list;
        }
        if (this.key != null) {
            data.key = this.key;
        }
        if (this.progress != null) {
            data.progress = this.progress;
        }
        if (this.ui_form != null) {
            data.ui_form = this.ui_form;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.progress_stage_list.length)
            writer.writePackedUint32(8, this.progress_stage_list);
        if (this.key.length)
            writer.writeString(11, this.key);
        if (this.progress != 0)
            writer.writeUint32(5, this.progress);
        if (this.ui_form != 0)
            writer.writeUint32(12, this.ui_form);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneGalleryProgressInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.progress_stage_list = reader.readPackedUint32();
                    break;
                case 11:
                    message.key = reader.readString();
                    break;
                case 5:
                    message.progress = reader.readUint32();
                    break;
                case 12:
                    message.ui_form = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return SceneGalleryProgressInfo.deserialize(bytes);
    }
}
exports.SceneGalleryProgressInfo = SceneGalleryProgressInfo;
_SceneGalleryProgressInfo_one_of_decls = new WeakMap();
