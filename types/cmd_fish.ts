// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_fish.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ItemParam } from "./define";
import { Vector } from "./define";
/**
 * @generated from protobuf message com.midnights.game.EnterFishingReq
 */
export interface EnterFishingReq {
    /**
     * @generated from protobuf field: optional uint32 fish_pool_id = 3;
     */
    fishPoolId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.EnterFishingReq.CmdId
 */
export enum EnterFishingReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5826;
     */
    CMD_ID = 5826,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.EnterFishingRsp
 */
export interface EnterFishingRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 fish_pool_id = 9;
     */
    fishPoolId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.EnterFishingRsp.CmdId
 */
export enum EnterFishingRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5818;
     */
    CMD_ID = 5818,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.StartFishingReq
 */
export interface StartFishingReq {
    /**
     * @generated from protobuf field: optional uint32 rod_entity_id = 5;
     */
    rodEntityId?: number;
    /**
     * @generated from protobuf field: optional uint32 fish_pool_id = 15;
     */
    fishPoolId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.StartFishingReq.CmdId
 */
export enum StartFishingReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5825;
     */
    CMD_ID = 5825,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.StartFishingRsp
 */
export interface StartFishingRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 1;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional uint32 fish_pool_id = 14;
     */
    fishPoolId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.StartFishingRsp.CmdId
 */
export enum StartFishingRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5807;
     */
    CMD_ID = 5807,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishCastRodReq
 */
export interface FishCastRodReq {
    /**
     * @generated from protobuf field: optional uint32 bait_id = 14;
     */
    baitId?: number;
    /**
     * @generated from protobuf field: optional uint32 rod_id = 4;
     */
    rodId?: number;
    /**
     * @generated from protobuf field: optional uint32 rod_entity_id = 7;
     */
    rodEntityId?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 12;
     */
    pos?: Vector;
}
/**
 * @generated from protobuf enum com.midnights.game.FishCastRodReq.CmdId
 */
export enum FishCastRodReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5802;
     */
    CMD_ID = 5802,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishCastRodRsp
 */
export interface FishCastRodRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 12;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FishCastRodRsp.CmdId
 */
export enum FishCastRodRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5831;
     */
    CMD_ID = 5831,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishChosenNotify
 */
export interface FishChosenNotify {
    /**
     * @generated from protobuf field: optional uint32 fish_id = 12;
     */
    fishId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FishChosenNotify.CmdId
 */
export enum FishChosenNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5829;
     */
    CMD_ID = 5829,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishEscapeNotify
 */
export interface FishEscapeNotify {
    /**
     * @generated from protobuf field: optional com.midnights.game.FishEscapeReason reason = 4;
     */
    reason?: FishEscapeReason;
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 7;
     */
    pos?: Vector;
    /**
     * @generated from protobuf field: optional uint32 uid = 14;
     */
    uid?: number;
    /**
     * @generated from protobuf field: repeated uint32 fish_id_list = 6;
     */
    fishIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.FishEscapeNotify.CmdId
 */
export enum FishEscapeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5822;
     */
    CMD_ID = 5822,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishBiteReq
 */
export interface FishBiteReq {
}
/**
 * @generated from protobuf enum com.midnights.game.FishBiteReq.CmdId
 */
export enum FishBiteReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5844;
     */
    CMD_ID = 5844,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishBiteRsp
 */
export interface FishBiteRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FishBiteRsp.CmdId
 */
export enum FishBiteRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5849;
     */
    CMD_ID = 5849,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishBattleBeginReq
 */
export interface FishBattleBeginReq {
}
/**
 * @generated from protobuf enum com.midnights.game.FishBattleBeginReq.CmdId
 */
export enum FishBattleBeginReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5820;
     */
    CMD_ID = 5820,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishBattleBeginRsp
 */
export interface FishBattleBeginRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FishBattleBeginRsp.CmdId
 */
export enum FishBattleBeginRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5845;
     */
    CMD_ID = 5845,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishBattleEndReq
 */
export interface FishBattleEndReq {
    /**
     * @generated from protobuf field: optional uint32 max_bonus_time = 3;
     */
    maxBonusTime?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.FishBattleResult battle_result = 10;
     */
    battleResult?: FishBattleResult;
    /**
     * @generated from protobuf field: optional bool is_always_bonus = 11;
     */
    isAlwaysBonus?: boolean;
}
/**
 * @generated from protobuf enum com.midnights.game.FishBattleEndReq.CmdId
 */
export enum FishBattleEndReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5841;
     */
    CMD_ID = 5841,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishBattleEndRsp
 */
export interface FishBattleEndRsp {
    /**
     * @generated from protobuf field: optional bool is_got_reward = 10;
     */
    isGotReward?: boolean;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam reward_item_list = 11;
     */
    rewardItemList: ItemParam[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam talent_item_list = 13;
     */
    talentItemList: ItemParam[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam drop_item_list = 9;
     */
    dropItemList: ItemParam[];
    /**
     * @generated from protobuf field: optional int32 retcode = 7;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.FishBattleEndRsp.FishNoRewardReason no_reward_reason = 14;
     */
    noRewardReason?: FishBattleEndRsp_FishNoRewardReason;
    /**
     * @generated from protobuf field: optional com.midnights.game.FishBattleResult battle_result = 6;
     */
    battleResult?: FishBattleResult;
}
/**
 * @generated from protobuf enum com.midnights.game.FishBattleEndRsp.FishNoRewardReason
 */
export enum FishBattleEndRsp_FishNoRewardReason {
    /**
     * @generated from protobuf enum value: FISH_NO_REWARD_NONE = 0;
     */
    FISH_NO_REWARD_NONE = 0,
    /**
     * @generated from protobuf enum value: FISH_NO_REWARD_ACTIVITY_LIMIT = 1;
     */
    FISH_NO_REWARD_ACTIVITY_LIMIT = 1,
    /**
     * @generated from protobuf enum value: FISH_NO_REWARD_BAG_LIMIT = 2;
     */
    FISH_NO_REWARD_BAG_LIMIT = 2,
    /**
     * @generated from protobuf enum value: FISH_NO_REWARD_POOL_LIMIT = 3;
     */
    FISH_NO_REWARD_POOL_LIMIT = 3
}
/**
 * @generated from protobuf enum com.midnights.game.FishBattleEndRsp.CmdId
 */
export enum FishBattleEndRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5842;
     */
    CMD_ID = 5842,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ExitFishingReq
 */
export interface ExitFishingReq {
}
/**
 * @generated from protobuf enum com.midnights.game.ExitFishingReq.CmdId
 */
export enum ExitFishingReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5814;
     */
    CMD_ID = 5814,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.ExitFishingRsp
 */
export interface ExitFishingRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.ExitFishingRsp.CmdId
 */
export enum ExitFishingRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5847;
     */
    CMD_ID = 5847,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishAttractNotify
 */
export interface FishAttractNotify {
    /**
     * @generated from protobuf field: repeated uint32 fish_id_list = 3;
     */
    fishIdList: number[];
    /**
     * @generated from protobuf field: optional com.midnights.game.Vector pos = 9;
     */
    pos?: Vector;
    /**
     * @generated from protobuf field: optional uint32 uid = 2;
     */
    uid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FishAttractNotify.CmdId
 */
export enum FishAttractNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5837;
     */
    CMD_ID = 5837,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishBaitGoneNotify
 */
export interface FishBaitGoneNotify {
    /**
     * @generated from protobuf field: optional uint32 uid = 8;
     */
    uid?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FishBaitGoneNotify.CmdId
 */
export enum FishBaitGoneNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5823;
     */
    CMD_ID = 5823,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PlayerFishingDataNotify
 */
export interface PlayerFishingDataNotify {
    /**
     * @generated from protobuf field: optional uint32 last_fish_rod_id = 8;
     */
    lastFishRodId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PlayerFishingDataNotify.CmdId
 */
export enum PlayerFishingDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5835;
     */
    CMD_ID = 5835,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.FishPoolDataNotify
 */
export interface FishPoolDataNotify {
    /**
     * @generated from protobuf field: optional uint32 entity_id = 6;
     */
    entityId?: number;
    /**
     * @generated from protobuf field: optional uint32 today_fish_num = 2;
     */
    todayFishNum?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.FishPoolDataNotify.CmdId
 */
export enum FishPoolDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 5848;
     */
    CMD_ID = 5848,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.FishEscapeReason
 */
export enum FishEscapeReason {
    /**
     * @generated from protobuf enum value: FISN_ESCAPE_NONE = 0;
     */
    FISN_ESCAPE_NONE = 0,
    /**
     * @generated from protobuf enum value: FISH_ESCAPE_SHOCKED = 1;
     */
    FISH_ESCAPE_SHOCKED = 1,
    /**
     * @generated from protobuf enum value: FISH_ESCAPE_UNHOOK = 2;
     */
    FISH_ESCAPE_UNHOOK = 2
}
/**
 * @generated from protobuf enum com.midnights.game.FishBattleResult
 */
export enum FishBattleResult {
    /**
     * @generated from protobuf enum value: FISH_BATTLE_RESULT_NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: FISH_BATTLE_RESULT_SUCC = 1;
     */
    SUCC = 1,
    /**
     * @generated from protobuf enum value: FISH_BATTLE_RESULT_FAIL = 2;
     */
    FAIL = 2,
    /**
     * @generated from protobuf enum value: FISH_BATTLE_RESULT_TIMEOUT = 3;
     */
    TIMEOUT = 3,
    /**
     * @generated from protobuf enum value: FISH_BATTLE_RESULT_CANCEL = 4;
     */
    CANCEL = 4,
    /**
     * @generated from protobuf enum value: FISH_BATTLE_RESULT_EXIT = 5;
     */
    EXIT = 5
}
// @generated message type with reflection information, may provide speed optimized methods
class EnterFishingReq$Type extends MessageType<EnterFishingReq> {
    constructor() {
        super("com.midnights.game.EnterFishingReq", [
            { no: 3, name: "fish_pool_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<EnterFishingReq>): EnterFishingReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EnterFishingReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnterFishingReq): EnterFishingReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 fish_pool_id */ 3:
                    message.fishPoolId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EnterFishingReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 fish_pool_id = 3; */
        if (message.fishPoolId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.fishPoolId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EnterFishingReq
 */
export const EnterFishingReq = new EnterFishingReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class EnterFishingRsp$Type extends MessageType<EnterFishingRsp> {
    constructor() {
        super("com.midnights.game.EnterFishingRsp", [
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "fish_pool_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<EnterFishingRsp>): EnterFishingRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EnterFishingRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EnterFishingRsp): EnterFishingRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 fish_pool_id */ 9:
                    message.fishPoolId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EnterFishingRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        /* optional uint32 fish_pool_id = 9; */
        if (message.fishPoolId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.fishPoolId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.EnterFishingRsp
 */
export const EnterFishingRsp = new EnterFishingRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StartFishingReq$Type extends MessageType<StartFishingReq> {
    constructor() {
        super("com.midnights.game.StartFishingReq", [
            { no: 5, name: "rod_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "fish_pool_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<StartFishingReq>): StartFishingReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StartFishingReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StartFishingReq): StartFishingReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 rod_entity_id */ 5:
                    message.rodEntityId = reader.uint32();
                    break;
                case /* optional uint32 fish_pool_id */ 15:
                    message.fishPoolId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StartFishingReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 rod_entity_id = 5; */
        if (message.rodEntityId !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.rodEntityId);
        /* optional uint32 fish_pool_id = 15; */
        if (message.fishPoolId !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.fishPoolId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.StartFishingReq
 */
export const StartFishingReq = new StartFishingReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StartFishingRsp$Type extends MessageType<StartFishingRsp> {
    constructor() {
        super("com.midnights.game.StartFishingRsp", [
            { no: 1, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "fish_pool_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<StartFishingRsp>): StartFishingRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<StartFishingRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: StartFishingRsp): StartFishingRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 1:
                    message.retcode = reader.int32();
                    break;
                case /* optional uint32 fish_pool_id */ 14:
                    message.fishPoolId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: StartFishingRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 1; */
        if (message.retcode !== undefined)
            writer.tag(1, WireType.Varint).int32(message.retcode);
        /* optional uint32 fish_pool_id = 14; */
        if (message.fishPoolId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.fishPoolId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.StartFishingRsp
 */
export const StartFishingRsp = new StartFishingRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishCastRodReq$Type extends MessageType<FishCastRodReq> {
    constructor() {
        super("com.midnights.game.FishCastRodReq", [
            { no: 14, name: "bait_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "rod_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "rod_entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "pos", kind: "message", T: () => Vector }
        ]);
    }
    create(value?: PartialMessage<FishCastRodReq>): FishCastRodReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishCastRodReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishCastRodReq): FishCastRodReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 bait_id */ 14:
                    message.baitId = reader.uint32();
                    break;
                case /* optional uint32 rod_id */ 4:
                    message.rodId = reader.uint32();
                    break;
                case /* optional uint32 rod_entity_id */ 7:
                    message.rodEntityId = reader.uint32();
                    break;
                case /* optional com.midnights.game.Vector pos */ 12:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishCastRodReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 bait_id = 14; */
        if (message.baitId !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.baitId);
        /* optional uint32 rod_id = 4; */
        if (message.rodId !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.rodId);
        /* optional uint32 rod_entity_id = 7; */
        if (message.rodEntityId !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.rodEntityId);
        /* optional com.midnights.game.Vector pos = 12; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishCastRodReq
 */
export const FishCastRodReq = new FishCastRodReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishCastRodRsp$Type extends MessageType<FishCastRodRsp> {
    constructor() {
        super("com.midnights.game.FishCastRodRsp", [
            { no: 12, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<FishCastRodRsp>): FishCastRodRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishCastRodRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishCastRodRsp): FishCastRodRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 12:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishCastRodRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 12; */
        if (message.retcode !== undefined)
            writer.tag(12, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishCastRodRsp
 */
export const FishCastRodRsp = new FishCastRodRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishChosenNotify$Type extends MessageType<FishChosenNotify> {
    constructor() {
        super("com.midnights.game.FishChosenNotify", [
            { no: 12, name: "fish_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FishChosenNotify>): FishChosenNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishChosenNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishChosenNotify): FishChosenNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 fish_id */ 12:
                    message.fishId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishChosenNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 fish_id = 12; */
        if (message.fishId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.fishId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishChosenNotify
 */
export const FishChosenNotify = new FishChosenNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishEscapeNotify$Type extends MessageType<FishEscapeNotify> {
    constructor() {
        super("com.midnights.game.FishEscapeNotify", [
            { no: 4, name: "reason", kind: "enum", opt: true, T: () => ["com.midnights.game.FishEscapeReason", FishEscapeReason] },
            { no: 7, name: "pos", kind: "message", T: () => Vector },
            { no: 14, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "fish_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FishEscapeNotify>): FishEscapeNotify {
        const message = { fishIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishEscapeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishEscapeNotify): FishEscapeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.FishEscapeReason reason */ 4:
                    message.reason = reader.int32();
                    break;
                case /* optional com.midnights.game.Vector pos */ 7:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                case /* optional uint32 uid */ 14:
                    message.uid = reader.uint32();
                    break;
                case /* repeated uint32 fish_id_list */ 6:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.fishIdList.push(reader.uint32());
                    else
                        message.fishIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishEscapeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.FishEscapeReason reason = 4; */
        if (message.reason !== undefined)
            writer.tag(4, WireType.Varint).int32(message.reason);
        /* optional com.midnights.game.Vector pos = 7; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 uid = 14; */
        if (message.uid !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.uid);
        /* repeated uint32 fish_id_list = 6; */
        if (message.fishIdList.length) {
            writer.tag(6, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.fishIdList.length; i++)
                writer.uint32(message.fishIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishEscapeNotify
 */
export const FishEscapeNotify = new FishEscapeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishBiteReq$Type extends MessageType<FishBiteReq> {
    constructor() {
        super("com.midnights.game.FishBiteReq", []);
    }
    create(value?: PartialMessage<FishBiteReq>): FishBiteReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishBiteReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishBiteReq): FishBiteReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: FishBiteReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishBiteReq
 */
export const FishBiteReq = new FishBiteReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishBiteRsp$Type extends MessageType<FishBiteRsp> {
    constructor() {
        super("com.midnights.game.FishBiteRsp", [
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<FishBiteRsp>): FishBiteRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishBiteRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishBiteRsp): FishBiteRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishBiteRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishBiteRsp
 */
export const FishBiteRsp = new FishBiteRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishBattleBeginReq$Type extends MessageType<FishBattleBeginReq> {
    constructor() {
        super("com.midnights.game.FishBattleBeginReq", []);
    }
    create(value?: PartialMessage<FishBattleBeginReq>): FishBattleBeginReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishBattleBeginReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishBattleBeginReq): FishBattleBeginReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: FishBattleBeginReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishBattleBeginReq
 */
export const FishBattleBeginReq = new FishBattleBeginReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishBattleBeginRsp$Type extends MessageType<FishBattleBeginRsp> {
    constructor() {
        super("com.midnights.game.FishBattleBeginRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<FishBattleBeginRsp>): FishBattleBeginRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishBattleBeginRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishBattleBeginRsp): FishBattleBeginRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishBattleBeginRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishBattleBeginRsp
 */
export const FishBattleBeginRsp = new FishBattleBeginRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishBattleEndReq$Type extends MessageType<FishBattleEndReq> {
    constructor() {
        super("com.midnights.game.FishBattleEndReq", [
            { no: 3, name: "max_bonus_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "battle_result", kind: "enum", opt: true, T: () => ["com.midnights.game.FishBattleResult", FishBattleResult, "FISH_BATTLE_RESULT_"] },
            { no: 11, name: "is_always_bonus", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value?: PartialMessage<FishBattleEndReq>): FishBattleEndReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishBattleEndReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishBattleEndReq): FishBattleEndReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 max_bonus_time */ 3:
                    message.maxBonusTime = reader.uint32();
                    break;
                case /* optional com.midnights.game.FishBattleResult battle_result */ 10:
                    message.battleResult = reader.int32();
                    break;
                case /* optional bool is_always_bonus */ 11:
                    message.isAlwaysBonus = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishBattleEndReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 max_bonus_time = 3; */
        if (message.maxBonusTime !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.maxBonusTime);
        /* optional com.midnights.game.FishBattleResult battle_result = 10; */
        if (message.battleResult !== undefined)
            writer.tag(10, WireType.Varint).int32(message.battleResult);
        /* optional bool is_always_bonus = 11; */
        if (message.isAlwaysBonus !== undefined)
            writer.tag(11, WireType.Varint).bool(message.isAlwaysBonus);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishBattleEndReq
 */
export const FishBattleEndReq = new FishBattleEndReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishBattleEndRsp$Type extends MessageType<FishBattleEndRsp> {
    constructor() {
        super("com.midnights.game.FishBattleEndRsp", [
            { no: 10, name: "is_got_reward", kind: "scalar", opt: true, T: 8 /*ScalarType.BOOL*/ },
            { no: 11, name: "reward_item_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ItemParam },
            { no: 13, name: "talent_item_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ItemParam },
            { no: 9, name: "drop_item_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ItemParam },
            { no: 7, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "no_reward_reason", kind: "enum", opt: true, T: () => ["com.midnights.game.FishBattleEndRsp.FishNoRewardReason", FishBattleEndRsp_FishNoRewardReason] },
            { no: 6, name: "battle_result", kind: "enum", opt: true, T: () => ["com.midnights.game.FishBattleResult", FishBattleResult, "FISH_BATTLE_RESULT_"] }
        ]);
    }
    create(value?: PartialMessage<FishBattleEndRsp>): FishBattleEndRsp {
        const message = { rewardItemList: [], talentItemList: [], dropItemList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishBattleEndRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishBattleEndRsp): FishBattleEndRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional bool is_got_reward */ 10:
                    message.isGotReward = reader.bool();
                    break;
                case /* repeated com.midnights.game.ItemParam reward_item_list */ 11:
                    message.rewardItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.ItemParam talent_item_list */ 13:
                    message.talentItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.ItemParam drop_item_list */ 9:
                    message.dropItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional int32 retcode */ 7:
                    message.retcode = reader.int32();
                    break;
                case /* optional com.midnights.game.FishBattleEndRsp.FishNoRewardReason no_reward_reason */ 14:
                    message.noRewardReason = reader.int32();
                    break;
                case /* optional com.midnights.game.FishBattleResult battle_result */ 6:
                    message.battleResult = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishBattleEndRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional bool is_got_reward = 10; */
        if (message.isGotReward !== undefined)
            writer.tag(10, WireType.Varint).bool(message.isGotReward);
        /* repeated com.midnights.game.ItemParam reward_item_list = 11; */
        for (let i = 0; i < message.rewardItemList.length; i++)
            ItemParam.internalBinaryWrite(message.rewardItemList[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.ItemParam talent_item_list = 13; */
        for (let i = 0; i < message.talentItemList.length; i++)
            ItemParam.internalBinaryWrite(message.talentItemList[i], writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.ItemParam drop_item_list = 9; */
        for (let i = 0; i < message.dropItemList.length; i++)
            ItemParam.internalBinaryWrite(message.dropItemList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 7; */
        if (message.retcode !== undefined)
            writer.tag(7, WireType.Varint).int32(message.retcode);
        /* optional com.midnights.game.FishBattleEndRsp.FishNoRewardReason no_reward_reason = 14; */
        if (message.noRewardReason !== undefined)
            writer.tag(14, WireType.Varint).int32(message.noRewardReason);
        /* optional com.midnights.game.FishBattleResult battle_result = 6; */
        if (message.battleResult !== undefined)
            writer.tag(6, WireType.Varint).int32(message.battleResult);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishBattleEndRsp
 */
export const FishBattleEndRsp = new FishBattleEndRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExitFishingReq$Type extends MessageType<ExitFishingReq> {
    constructor() {
        super("com.midnights.game.ExitFishingReq", []);
    }
    create(value?: PartialMessage<ExitFishingReq>): ExitFishingReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ExitFishingReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExitFishingReq): ExitFishingReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: ExitFishingReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ExitFishingReq
 */
export const ExitFishingReq = new ExitFishingReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExitFishingRsp$Type extends MessageType<ExitFishingRsp> {
    constructor() {
        super("com.midnights.game.ExitFishingRsp", [
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<ExitFishingRsp>): ExitFishingRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ExitFishingRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ExitFishingRsp): ExitFishingRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ExitFishingRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ExitFishingRsp
 */
export const ExitFishingRsp = new ExitFishingRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishAttractNotify$Type extends MessageType<FishAttractNotify> {
    constructor() {
        super("com.midnights.game.FishAttractNotify", [
            { no: 3, name: "fish_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "pos", kind: "message", T: () => Vector },
            { no: 2, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FishAttractNotify>): FishAttractNotify {
        const message = { fishIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishAttractNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishAttractNotify): FishAttractNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 fish_id_list */ 3:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.fishIdList.push(reader.uint32());
                    else
                        message.fishIdList.push(reader.uint32());
                    break;
                case /* optional com.midnights.game.Vector pos */ 9:
                    message.pos = Vector.internalBinaryRead(reader, reader.uint32(), options, message.pos);
                    break;
                case /* optional uint32 uid */ 2:
                    message.uid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishAttractNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 fish_id_list = 3; */
        if (message.fishIdList.length) {
            writer.tag(3, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.fishIdList.length; i++)
                writer.uint32(message.fishIdList[i]);
            writer.join();
        }
        /* optional com.midnights.game.Vector pos = 9; */
        if (message.pos)
            Vector.internalBinaryWrite(message.pos, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 uid = 2; */
        if (message.uid !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.uid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishAttractNotify
 */
export const FishAttractNotify = new FishAttractNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishBaitGoneNotify$Type extends MessageType<FishBaitGoneNotify> {
    constructor() {
        super("com.midnights.game.FishBaitGoneNotify", [
            { no: 8, name: "uid", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FishBaitGoneNotify>): FishBaitGoneNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishBaitGoneNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishBaitGoneNotify): FishBaitGoneNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 uid */ 8:
                    message.uid = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishBaitGoneNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 uid = 8; */
        if (message.uid !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.uid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishBaitGoneNotify
 */
export const FishBaitGoneNotify = new FishBaitGoneNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayerFishingDataNotify$Type extends MessageType<PlayerFishingDataNotify> {
    constructor() {
        super("com.midnights.game.PlayerFishingDataNotify", [
            { no: 8, name: "last_fish_rod_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PlayerFishingDataNotify>): PlayerFishingDataNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PlayerFishingDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PlayerFishingDataNotify): PlayerFishingDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 last_fish_rod_id */ 8:
                    message.lastFishRodId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PlayerFishingDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 last_fish_rod_id = 8; */
        if (message.lastFishRodId !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.lastFishRodId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PlayerFishingDataNotify
 */
export const PlayerFishingDataNotify = new PlayerFishingDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FishPoolDataNotify$Type extends MessageType<FishPoolDataNotify> {
    constructor() {
        super("com.midnights.game.FishPoolDataNotify", [
            { no: 6, name: "entity_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "today_fish_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<FishPoolDataNotify>): FishPoolDataNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<FishPoolDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: FishPoolDataNotify): FishPoolDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 entity_id */ 6:
                    message.entityId = reader.uint32();
                    break;
                case /* optional uint32 today_fish_num */ 2:
                    message.todayFishNum = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: FishPoolDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 entity_id = 6; */
        if (message.entityId !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.entityId);
        /* optional uint32 today_fish_num = 2; */
        if (message.todayFishNum !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.todayFishNum);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.FishPoolDataNotify
 */
export const FishPoolDataNotify = new FishPoolDataNotify$Type();
