"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _HomeLimitedShopInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.HomeLimitedShopInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeLimitedShopInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./Vector");
const pb_1 = require("google-protobuf");
class HomeLimitedShopInfo extends pb_1.Message {
    constructor(data) {
        super();
        _HomeLimitedShopInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _HomeLimitedShopInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("next_close_time" in data && data.next_close_time != undefined) {
                this.next_close_time = data.next_close_time;
            }
            if ("next_guest_open_time" in data && data.next_guest_open_time != undefined) {
                this.next_guest_open_time = data.next_guest_open_time;
            }
            if ("djinn_rot" in data && data.djinn_rot != undefined) {
                this.djinn_rot = data.djinn_rot;
            }
            if ("uid" in data && data.uid != undefined) {
                this.uid = data.uid;
            }
            if ("next_open_time" in data && data.next_open_time != undefined) {
                this.next_open_time = data.next_open_time;
            }
            if ("djinn_pos" in data && data.djinn_pos != undefined) {
                this.djinn_pos = data.djinn_pos;
            }
        }
    }
    get next_close_time() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0);
    }
    set next_close_time(value) {
        pb_1.Message.setField(this, 9, value);
    }
    get next_guest_open_time() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set next_guest_open_time(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get djinn_rot() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 7);
    }
    set djinn_rot(value) {
        pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_djinn_rot() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get uid() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set uid(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get next_open_time() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set next_open_time(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get djinn_pos() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 2);
    }
    set djinn_pos(value) {
        pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_djinn_pos() {
        return pb_1.Message.getField(this, 2) != null;
    }
    static fromObject(data) {
        const message = new HomeLimitedShopInfo({});
        if (data.next_close_time != null) {
            message.next_close_time = data.next_close_time;
        }
        if (data.next_guest_open_time != null) {
            message.next_guest_open_time = data.next_guest_open_time;
        }
        if (data.djinn_rot != null) {
            message.djinn_rot = dependency_1.Vector.fromObject(data.djinn_rot);
        }
        if (data.uid != null) {
            message.uid = data.uid;
        }
        if (data.next_open_time != null) {
            message.next_open_time = data.next_open_time;
        }
        if (data.djinn_pos != null) {
            message.djinn_pos = dependency_1.Vector.fromObject(data.djinn_pos);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.next_close_time != null) {
            data.next_close_time = this.next_close_time;
        }
        if (this.next_guest_open_time != null) {
            data.next_guest_open_time = this.next_guest_open_time;
        }
        if (this.djinn_rot != null) {
            data.djinn_rot = this.djinn_rot.toObject();
        }
        if (this.uid != null) {
            data.uid = this.uid;
        }
        if (this.next_open_time != null) {
            data.next_open_time = this.next_open_time;
        }
        if (this.djinn_pos != null) {
            data.djinn_pos = this.djinn_pos.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.next_close_time != 0)
            writer.writeFixed32(9, this.next_close_time);
        if (this.next_guest_open_time != 0)
            writer.writeFixed32(11, this.next_guest_open_time);
        if (this.has_djinn_rot)
            writer.writeMessage(7, this.djinn_rot, () => this.djinn_rot.serialize(writer));
        if (this.uid != 0)
            writer.writeUint32(4, this.uid);
        if (this.next_open_time != 0)
            writer.writeFixed32(6, this.next_open_time);
        if (this.has_djinn_pos)
            writer.writeMessage(2, this.djinn_pos, () => this.djinn_pos.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeLimitedShopInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 9:
                    message.next_close_time = reader.readFixed32();
                    break;
                case 11:
                    message.next_guest_open_time = reader.readFixed32();
                    break;
                case 7:
                    reader.readMessage(message.djinn_rot, () => message.djinn_rot = dependency_1.Vector.deserialize(reader));
                    break;
                case 4:
                    message.uid = reader.readUint32();
                    break;
                case 6:
                    message.next_open_time = reader.readFixed32();
                    break;
                case 2:
                    reader.readMessage(message.djinn_pos, () => message.djinn_pos = dependency_1.Vector.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return HomeLimitedShopInfo.deserialize(bytes);
    }
}
exports.HomeLimitedShopInfo = HomeLimitedShopInfo;
_HomeLimitedShopInfo_one_of_decls = new WeakMap();
