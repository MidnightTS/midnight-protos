/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneRouteChangeInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./RoutePointChangeInfo";
import * as pb_1 from "google-protobuf";
export class SceneRouteChangeInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        is_forward?: boolean;
        route_id?: number;
        type?: number;
        point_list?: dependency_1.RoutePointChangeInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_forward" in data && data.is_forward != undefined) {
                this.is_forward = data.is_forward;
            }
            if ("route_id" in data && data.route_id != undefined) {
                this.route_id = data.route_id;
            }
            if ("type" in data && data.type != undefined) {
                this.type = data.type;
            }
            if ("point_list" in data && data.point_list != undefined) {
                this.point_list = data.point_list;
            }
        }
    }
    get is_forward() {
        return pb_1.Message.getFieldWithDefault(this, 12, false) as boolean;
    }
    set is_forward(value: boolean) {
        pb_1.Message.setField(this, 12, value);
    }
    get route_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set route_id(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    get type() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set type(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get point_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.RoutePointChangeInfo, 1) as dependency_1.RoutePointChangeInfo[];
    }
    set point_list(value: dependency_1.RoutePointChangeInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    static fromObject(data: {
        is_forward?: boolean;
        route_id?: number;
        type?: number;
        point_list?: ReturnType<typeof dependency_1.RoutePointChangeInfo.prototype.toObject>[];
    }): SceneRouteChangeInfo {
        const message = new SceneRouteChangeInfo({});
        if (data.is_forward != null) {
            message.is_forward = data.is_forward;
        }
        if (data.route_id != null) {
            message.route_id = data.route_id;
        }
        if (data.type != null) {
            message.type = data.type;
        }
        if (data.point_list != null) {
            message.point_list = data.point_list.map(item => dependency_1.RoutePointChangeInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            is_forward?: boolean;
            route_id?: number;
            type?: number;
            point_list?: ReturnType<typeof dependency_1.RoutePointChangeInfo.prototype.toObject>[];
        } = {};
        if (this.is_forward != null) {
            data.is_forward = this.is_forward;
        }
        if (this.route_id != null) {
            data.route_id = this.route_id;
        }
        if (this.type != null) {
            data.type = this.type;
        }
        if (this.point_list != null) {
            data.point_list = this.point_list.map((item: dependency_1.RoutePointChangeInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_forward != false)
            writer.writeBool(12, this.is_forward);
        if (this.route_id != 0)
            writer.writeUint32(15, this.route_id);
        if (this.type != 0)
            writer.writeUint32(4, this.type);
        if (this.point_list.length)
            writer.writeRepeatedMessage(1, this.point_list, (item: dependency_1.RoutePointChangeInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SceneRouteChangeInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneRouteChangeInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 12:
                    message.is_forward = reader.readBool();
                    break;
                case 15:
                    message.route_id = reader.readUint32();
                    break;
                case 4:
                    message.type = reader.readUint32();
                    break;
                case 1:
                    reader.readMessage(message.point_list, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.RoutePointChangeInfo.deserialize(reader), dependency_1.RoutePointChangeInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): SceneRouteChangeInfo {
        return SceneRouteChangeInfo.deserialize(bytes);
    }
}
