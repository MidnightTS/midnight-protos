/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: StoreWeightLimitNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./StoreType";
import * as pb_1 from "google-protobuf";
export class StoreWeightLimitNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        weapon_count_limit?: number;
        store_type?: dependency_1.StoreType;
        material_count_limit?: number;
        reliquary_count_limit?: number;
        furniture_count_limit?: number;
        weight_limit?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("weapon_count_limit" in data && data.weapon_count_limit != undefined) {
                this.weapon_count_limit = data.weapon_count_limit;
            }
            if ("store_type" in data && data.store_type != undefined) {
                this.store_type = data.store_type;
            }
            if ("material_count_limit" in data && data.material_count_limit != undefined) {
                this.material_count_limit = data.material_count_limit;
            }
            if ("reliquary_count_limit" in data && data.reliquary_count_limit != undefined) {
                this.reliquary_count_limit = data.reliquary_count_limit;
            }
            if ("furniture_count_limit" in data && data.furniture_count_limit != undefined) {
                this.furniture_count_limit = data.furniture_count_limit;
            }
            if ("weight_limit" in data && data.weight_limit != undefined) {
                this.weight_limit = data.weight_limit;
            }
        }
    }
    get weapon_count_limit() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set weapon_count_limit(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get store_type() {
        return pb_1.Message.getFieldWithDefault(this, 7, dependency_1.StoreType.STORE_TYPE_NONE) as dependency_1.StoreType;
    }
    set store_type(value: dependency_1.StoreType) {
        pb_1.Message.setField(this, 7, value);
    }
    get material_count_limit() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set material_count_limit(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get reliquary_count_limit() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
    }
    set reliquary_count_limit(value: number) {
        pb_1.Message.setField(this, 6, value);
    }
    get furniture_count_limit() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set furniture_count_limit(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get weight_limit() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set weight_limit(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data: {
        weapon_count_limit?: number;
        store_type?: dependency_1.StoreType;
        material_count_limit?: number;
        reliquary_count_limit?: number;
        furniture_count_limit?: number;
        weight_limit?: number;
    }): StoreWeightLimitNotify {
        const message = new StoreWeightLimitNotify({});
        if (data.weapon_count_limit != null) {
            message.weapon_count_limit = data.weapon_count_limit;
        }
        if (data.store_type != null) {
            message.store_type = data.store_type;
        }
        if (data.material_count_limit != null) {
            message.material_count_limit = data.material_count_limit;
        }
        if (data.reliquary_count_limit != null) {
            message.reliquary_count_limit = data.reliquary_count_limit;
        }
        if (data.furniture_count_limit != null) {
            message.furniture_count_limit = data.furniture_count_limit;
        }
        if (data.weight_limit != null) {
            message.weight_limit = data.weight_limit;
        }
        return message;
    }
    toObject() {
        const data: {
            weapon_count_limit?: number;
            store_type?: dependency_1.StoreType;
            material_count_limit?: number;
            reliquary_count_limit?: number;
            furniture_count_limit?: number;
            weight_limit?: number;
        } = {};
        if (this.weapon_count_limit != null) {
            data.weapon_count_limit = this.weapon_count_limit;
        }
        if (this.store_type != null) {
            data.store_type = this.store_type;
        }
        if (this.material_count_limit != null) {
            data.material_count_limit = this.material_count_limit;
        }
        if (this.reliquary_count_limit != null) {
            data.reliquary_count_limit = this.reliquary_count_limit;
        }
        if (this.furniture_count_limit != null) {
            data.furniture_count_limit = this.furniture_count_limit;
        }
        if (this.weight_limit != null) {
            data.weight_limit = this.weight_limit;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.weapon_count_limit != 0)
            writer.writeUint32(2, this.weapon_count_limit);
        if (this.store_type != dependency_1.StoreType.STORE_TYPE_NONE)
            writer.writeEnum(7, this.store_type);
        if (this.material_count_limit != 0)
            writer.writeUint32(4, this.material_count_limit);
        if (this.reliquary_count_limit != 0)
            writer.writeUint32(6, this.reliquary_count_limit);
        if (this.furniture_count_limit != 0)
            writer.writeUint32(9, this.furniture_count_limit);
        if (this.weight_limit != 0)
            writer.writeUint32(15, this.weight_limit);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): StoreWeightLimitNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new StoreWeightLimitNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 2:
                    message.weapon_count_limit = reader.readUint32();
                    break;
                case 7:
                    message.store_type = reader.readEnum();
                    break;
                case 4:
                    message.material_count_limit = reader.readUint32();
                    break;
                case 6:
                    message.reliquary_count_limit = reader.readUint32();
                    break;
                case 9:
                    message.furniture_count_limit = reader.readUint32();
                    break;
                case 15:
                    message.weight_limit = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): StoreWeightLimitNotify {
        return StoreWeightLimitNotify.deserialize(bytes);
    }
}
