/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ScenePlayBattleResultNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ScenePlayBattleSettlePlayerInfo";
import * as dependency_2 from "./Unk2700_OHOKEEGPPBG";
import * as pb_1 from "google-protobuf";
export class ScenePlayBattleResultNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        is_win?: boolean;
        cost_time?: number;
        play_type?: number;
        play_id?: number;
        settle_player_info_list?: dependency_1.ScenePlayBattleSettlePlayerInfo[];
        Unk2700_HMENAAMGMBB?: dependency_2.Unk2700_OHOKEEGPPBG[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [4, 14], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_win" in data && data.is_win != undefined) {
                this.is_win = data.is_win;
            }
            if ("cost_time" in data && data.cost_time != undefined) {
                this.cost_time = data.cost_time;
            }
            if ("play_type" in data && data.play_type != undefined) {
                this.play_type = data.play_type;
            }
            if ("play_id" in data && data.play_id != undefined) {
                this.play_id = data.play_id;
            }
            if ("settle_player_info_list" in data && data.settle_player_info_list != undefined) {
                this.settle_player_info_list = data.settle_player_info_list;
            }
            if ("Unk2700_HMENAAMGMBB" in data && data.Unk2700_HMENAAMGMBB != undefined) {
                this.Unk2700_HMENAAMGMBB = data.Unk2700_HMENAAMGMBB;
            }
        }
    }
    get is_win() {
        return pb_1.Message.getFieldWithDefault(this, 1, false) as boolean;
    }
    set is_win(value: boolean) {
        pb_1.Message.setField(this, 1, value);
    }
    get cost_time() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
    }
    set cost_time(value: number) {
        pb_1.Message.setField(this, 7, value);
    }
    get play_type() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set play_type(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    get play_id() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0) as number;
    }
    set play_id(value: number) {
        pb_1.Message.setField(this, 11, value);
    }
    get settle_player_info_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ScenePlayBattleSettlePlayerInfo, 4) as dependency_1.ScenePlayBattleSettlePlayerInfo[];
    }
    set settle_player_info_list(value: dependency_1.ScenePlayBattleSettlePlayerInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 4, value);
    }
    get Unk2700_HMENAAMGMBB() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Unk2700_OHOKEEGPPBG, 14) as dependency_2.Unk2700_OHOKEEGPPBG[];
    }
    set Unk2700_HMENAAMGMBB(value: dependency_2.Unk2700_OHOKEEGPPBG[]) {
        pb_1.Message.setRepeatedWrapperField(this, 14, value);
    }
    static fromObject(data: {
        is_win?: boolean;
        cost_time?: number;
        play_type?: number;
        play_id?: number;
        settle_player_info_list?: ReturnType<typeof dependency_1.ScenePlayBattleSettlePlayerInfo.prototype.toObject>[];
        Unk2700_HMENAAMGMBB?: ReturnType<typeof dependency_2.Unk2700_OHOKEEGPPBG.prototype.toObject>[];
    }): ScenePlayBattleResultNotify {
        const message = new ScenePlayBattleResultNotify({});
        if (data.is_win != null) {
            message.is_win = data.is_win;
        }
        if (data.cost_time != null) {
            message.cost_time = data.cost_time;
        }
        if (data.play_type != null) {
            message.play_type = data.play_type;
        }
        if (data.play_id != null) {
            message.play_id = data.play_id;
        }
        if (data.settle_player_info_list != null) {
            message.settle_player_info_list = data.settle_player_info_list.map(item => dependency_1.ScenePlayBattleSettlePlayerInfo.fromObject(item));
        }
        if (data.Unk2700_HMENAAMGMBB != null) {
            message.Unk2700_HMENAAMGMBB = data.Unk2700_HMENAAMGMBB.map(item => dependency_2.Unk2700_OHOKEEGPPBG.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            is_win?: boolean;
            cost_time?: number;
            play_type?: number;
            play_id?: number;
            settle_player_info_list?: ReturnType<typeof dependency_1.ScenePlayBattleSettlePlayerInfo.prototype.toObject>[];
            Unk2700_HMENAAMGMBB?: ReturnType<typeof dependency_2.Unk2700_OHOKEEGPPBG.prototype.toObject>[];
        } = {};
        if (this.is_win != null) {
            data.is_win = this.is_win;
        }
        if (this.cost_time != null) {
            data.cost_time = this.cost_time;
        }
        if (this.play_type != null) {
            data.play_type = this.play_type;
        }
        if (this.play_id != null) {
            data.play_id = this.play_id;
        }
        if (this.settle_player_info_list != null) {
            data.settle_player_info_list = this.settle_player_info_list.map((item: dependency_1.ScenePlayBattleSettlePlayerInfo) => item.toObject());
        }
        if (this.Unk2700_HMENAAMGMBB != null) {
            data.Unk2700_HMENAAMGMBB = this.Unk2700_HMENAAMGMBB.map((item: dependency_2.Unk2700_OHOKEEGPPBG) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_win != false)
            writer.writeBool(1, this.is_win);
        if (this.cost_time != 0)
            writer.writeUint32(7, this.cost_time);
        if (this.play_type != 0)
            writer.writeUint32(15, this.play_type);
        if (this.play_id != 0)
            writer.writeUint32(11, this.play_id);
        if (this.settle_player_info_list.length)
            writer.writeRepeatedMessage(4, this.settle_player_info_list, (item: dependency_1.ScenePlayBattleSettlePlayerInfo) => item.serialize(writer));
        if (this.Unk2700_HMENAAMGMBB.length)
            writer.writeRepeatedMessage(14, this.Unk2700_HMENAAMGMBB, (item: dependency_2.Unk2700_OHOKEEGPPBG) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ScenePlayBattleResultNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ScenePlayBattleResultNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.is_win = reader.readBool();
                    break;
                case 7:
                    message.cost_time = reader.readUint32();
                    break;
                case 15:
                    message.play_type = reader.readUint32();
                    break;
                case 11:
                    message.play_id = reader.readUint32();
                    break;
                case 4:
                    reader.readMessage(message.settle_player_info_list, () => pb_1.Message.addToRepeatedWrapperField(message, 4, dependency_1.ScenePlayBattleSettlePlayerInfo.deserialize(reader), dependency_1.ScenePlayBattleSettlePlayerInfo));
                    break;
                case 14:
                    reader.readMessage(message.Unk2700_HMENAAMGMBB, () => pb_1.Message.addToRepeatedWrapperField(message, 14, dependency_2.Unk2700_OHOKEEGPPBG.deserialize(reader), dependency_2.Unk2700_OHOKEEGPPBG));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): ScenePlayBattleResultNotify {
        return ScenePlayBattleResultNotify.deserialize(bytes);
    }
}
