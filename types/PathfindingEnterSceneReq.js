"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _PathfindingEnterSceneReq_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.PathfindingEnterSceneReq = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: PathfindingEnterSceneReq.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./ObstacleInfo");
const pb_1 = require("google-protobuf");
class PathfindingEnterSceneReq extends pb_1.Message {
    constructor(data) {
        super();
        _PathfindingEnterSceneReq_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [14, 13], __classPrivateFieldGet(this, _PathfindingEnterSceneReq_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("scene_id" in data && data.scene_id != undefined) {
                this.scene_id = data.scene_id;
            }
            if ("activity_id" in data && data.activity_id != undefined) {
                this.activity_id = data.activity_id;
            }
            if ("Unk2800_NCDFAFMGMIG" in data && data.Unk2800_NCDFAFMGMIG != undefined) {
                this.Unk2800_NCDFAFMGMIG = data.Unk2800_NCDFAFMGMIG;
            }
            if ("version" in data && data.version != undefined) {
                this.version = data.version;
            }
            if ("is_editor" in data && data.is_editor != undefined) {
                this.is_editor = data.is_editor;
            }
            if ("obstacles" in data && data.obstacles != undefined) {
                this.obstacles = data.obstacles;
            }
            if ("Unk2800_MBDFGODMPFN" in data && data.Unk2800_MBDFGODMPFN != undefined) {
                this.Unk2800_MBDFGODMPFN = data.Unk2800_MBDFGODMPFN;
            }
        }
    }
    get scene_id() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set scene_id(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get activity_id() {
        return pb_1.Message.getFieldWithDefault(this, 14, []);
    }
    set activity_id(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get Unk2800_NCDFAFMGMIG() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set Unk2800_NCDFAFMGMIG(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get version() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set version(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get is_editor() {
        return pb_1.Message.getFieldWithDefault(this, 11, false);
    }
    set is_editor(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get obstacles() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ObstacleInfo, 13);
    }
    set obstacles(value) {
        pb_1.Message.setRepeatedWrapperField(this, 13, value);
    }
    get Unk2800_MBDFGODMPFN() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set Unk2800_MBDFGODMPFN(value) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data) {
        const message = new PathfindingEnterSceneReq({});
        if (data.scene_id != null) {
            message.scene_id = data.scene_id;
        }
        if (data.activity_id != null) {
            message.activity_id = data.activity_id;
        }
        if (data.Unk2800_NCDFAFMGMIG != null) {
            message.Unk2800_NCDFAFMGMIG = data.Unk2800_NCDFAFMGMIG;
        }
        if (data.version != null) {
            message.version = data.version;
        }
        if (data.is_editor != null) {
            message.is_editor = data.is_editor;
        }
        if (data.obstacles != null) {
            message.obstacles = data.obstacles.map(item => dependency_1.ObstacleInfo.fromObject(item));
        }
        if (data.Unk2800_MBDFGODMPFN != null) {
            message.Unk2800_MBDFGODMPFN = data.Unk2800_MBDFGODMPFN;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.scene_id != null) {
            data.scene_id = this.scene_id;
        }
        if (this.activity_id != null) {
            data.activity_id = this.activity_id;
        }
        if (this.Unk2800_NCDFAFMGMIG != null) {
            data.Unk2800_NCDFAFMGMIG = this.Unk2800_NCDFAFMGMIG;
        }
        if (this.version != null) {
            data.version = this.version;
        }
        if (this.is_editor != null) {
            data.is_editor = this.is_editor;
        }
        if (this.obstacles != null) {
            data.obstacles = this.obstacles.map((item) => item.toObject());
        }
        if (this.Unk2800_MBDFGODMPFN != null) {
            data.Unk2800_MBDFGODMPFN = this.Unk2800_MBDFGODMPFN;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.scene_id != 0)
            writer.writeUint32(12, this.scene_id);
        if (this.activity_id.length)
            writer.writePackedUint32(14, this.activity_id);
        if (this.Unk2800_NCDFAFMGMIG != 0)
            writer.writeUint32(15, this.Unk2800_NCDFAFMGMIG);
        if (this.version != 0)
            writer.writeUint32(6, this.version);
        if (this.is_editor != false)
            writer.writeBool(11, this.is_editor);
        if (this.obstacles.length)
            writer.writeRepeatedMessage(13, this.obstacles, (item) => item.serialize(writer));
        if (this.Unk2800_MBDFGODMPFN != 0)
            writer.writeUint32(4, this.Unk2800_MBDFGODMPFN);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PathfindingEnterSceneReq();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 12:
                    message.scene_id = reader.readUint32();
                    break;
                case 14:
                    message.activity_id = reader.readPackedUint32();
                    break;
                case 15:
                    message.Unk2800_NCDFAFMGMIG = reader.readUint32();
                    break;
                case 6:
                    message.version = reader.readUint32();
                    break;
                case 11:
                    message.is_editor = reader.readBool();
                    break;
                case 13:
                    reader.readMessage(message.obstacles, () => pb_1.Message.addToRepeatedWrapperField(message, 13, dependency_1.ObstacleInfo.deserialize(reader), dependency_1.ObstacleInfo));
                    break;
                case 4:
                    message.Unk2800_MBDFGODMPFN = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return PathfindingEnterSceneReq.deserialize(bytes);
    }
}
exports.PathfindingEnterSceneReq = PathfindingEnterSceneReq;
_PathfindingEnterSceneReq_one_of_decls = new WeakMap();
