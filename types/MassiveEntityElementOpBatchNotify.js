"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _MassiveEntityElementOpBatchNotify_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.MassiveEntityElementOpBatchNotify = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: MassiveEntityElementOpBatchNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./ShapeBox");
const dependency_2 = require("./ShapeSphere");
const pb_1 = require("google-protobuf");
class MassiveEntityElementOpBatchNotify extends pb_1.Message {
    constructor(data) {
        super();
        _MassiveEntityElementOpBatchNotify_one_of_decls.set(this, [[10, 2]]);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _MassiveEntityElementOpBatchNotify_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("entity_type" in data && data.entity_type != undefined) {
                this.entity_type = data.entity_type;
            }
            if ("op_idx" in data && data.op_idx != undefined) {
                this.op_idx = data.op_idx;
            }
            if ("user_id" in data && data.user_id != undefined) {
                this.user_id = data.user_id;
            }
            if ("attacker_id" in data && data.attacker_id != undefined) {
                this.attacker_id = data.attacker_id;
            }
            if ("source_element_type" in data && data.source_element_type != undefined) {
                this.source_element_type = data.source_element_type;
            }
            if ("reaction_source_type" in data && data.reaction_source_type != undefined) {
                this.reaction_source_type = data.reaction_source_type;
            }
            if ("attack_element_durability" in data && data.attack_element_durability != undefined) {
                this.attack_element_durability = data.attack_element_durability;
            }
            if ("shape_sphere" in data && data.shape_sphere != undefined) {
                this.shape_sphere = data.shape_sphere;
            }
            if ("shape_box" in data && data.shape_box != undefined) {
                this.shape_box = data.shape_box;
            }
        }
    }
    get entity_type() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set entity_type(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get op_idx() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0);
    }
    set op_idx(value) {
        pb_1.Message.setField(this, 9, value);
    }
    get user_id() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set user_id(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get attacker_id() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set attacker_id(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get source_element_type() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0);
    }
    set source_element_type(value) {
        pb_1.Message.setField(this, 12, value);
    }
    get reaction_source_type() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set reaction_source_type(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get attack_element_durability() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0);
    }
    set attack_element_durability(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get shape_sphere() {
        return pb_1.Message.getWrapperField(this, dependency_2.ShapeSphere, 10);
    }
    set shape_sphere(value) {
        pb_1.Message.setOneofWrapperField(this, 10, __classPrivateFieldGet(this, _MassiveEntityElementOpBatchNotify_one_of_decls, "f")[0], value);
    }
    get has_shape_sphere() {
        return pb_1.Message.getField(this, 10) != null;
    }
    get shape_box() {
        return pb_1.Message.getWrapperField(this, dependency_1.ShapeBox, 2);
    }
    set shape_box(value) {
        pb_1.Message.setOneofWrapperField(this, 2, __classPrivateFieldGet(this, _MassiveEntityElementOpBatchNotify_one_of_decls, "f")[0], value);
    }
    get has_shape_box() {
        return pb_1.Message.getField(this, 2) != null;
    }
    get check_shape() {
        const cases = {
            0: "none",
            10: "shape_sphere",
            2: "shape_box"
        };
        return cases[pb_1.Message.computeOneofCase(this, [10, 2])];
    }
    static fromObject(data) {
        const message = new MassiveEntityElementOpBatchNotify({});
        if (data.entity_type != null) {
            message.entity_type = data.entity_type;
        }
        if (data.op_idx != null) {
            message.op_idx = data.op_idx;
        }
        if (data.user_id != null) {
            message.user_id = data.user_id;
        }
        if (data.attacker_id != null) {
            message.attacker_id = data.attacker_id;
        }
        if (data.source_element_type != null) {
            message.source_element_type = data.source_element_type;
        }
        if (data.reaction_source_type != null) {
            message.reaction_source_type = data.reaction_source_type;
        }
        if (data.attack_element_durability != null) {
            message.attack_element_durability = data.attack_element_durability;
        }
        if (data.shape_sphere != null) {
            message.shape_sphere = dependency_2.ShapeSphere.fromObject(data.shape_sphere);
        }
        if (data.shape_box != null) {
            message.shape_box = dependency_1.ShapeBox.fromObject(data.shape_box);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.entity_type != null) {
            data.entity_type = this.entity_type;
        }
        if (this.op_idx != null) {
            data.op_idx = this.op_idx;
        }
        if (this.user_id != null) {
            data.user_id = this.user_id;
        }
        if (this.attacker_id != null) {
            data.attacker_id = this.attacker_id;
        }
        if (this.source_element_type != null) {
            data.source_element_type = this.source_element_type;
        }
        if (this.reaction_source_type != null) {
            data.reaction_source_type = this.reaction_source_type;
        }
        if (this.attack_element_durability != null) {
            data.attack_element_durability = this.attack_element_durability;
        }
        if (this.shape_sphere != null) {
            data.shape_sphere = this.shape_sphere.toObject();
        }
        if (this.shape_box != null) {
            data.shape_box = this.shape_box.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.entity_type != 0)
            writer.writeInt32(6, this.entity_type);
        if (this.op_idx != 0)
            writer.writeUint32(9, this.op_idx);
        if (this.user_id != 0)
            writer.writeUint32(11, this.user_id);
        if (this.attacker_id != 0)
            writer.writeUint32(3, this.attacker_id);
        if (this.source_element_type != 0)
            writer.writeInt32(12, this.source_element_type);
        if (this.reaction_source_type != 0)
            writer.writeInt32(4, this.reaction_source_type);
        if (this.attack_element_durability != 0)
            writer.writeFloat(7, this.attack_element_durability);
        if (this.has_shape_sphere)
            writer.writeMessage(10, this.shape_sphere, () => this.shape_sphere.serialize(writer));
        if (this.has_shape_box)
            writer.writeMessage(2, this.shape_box, () => this.shape_box.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MassiveEntityElementOpBatchNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 6:
                    message.entity_type = reader.readInt32();
                    break;
                case 9:
                    message.op_idx = reader.readUint32();
                    break;
                case 11:
                    message.user_id = reader.readUint32();
                    break;
                case 3:
                    message.attacker_id = reader.readUint32();
                    break;
                case 12:
                    message.source_element_type = reader.readInt32();
                    break;
                case 4:
                    message.reaction_source_type = reader.readInt32();
                    break;
                case 7:
                    message.attack_element_durability = reader.readFloat();
                    break;
                case 10:
                    reader.readMessage(message.shape_sphere, () => message.shape_sphere = dependency_2.ShapeSphere.deserialize(reader));
                    break;
                case 2:
                    reader.readMessage(message.shape_box, () => message.shape_box = dependency_1.ShapeBox.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return MassiveEntityElementOpBatchNotify.deserialize(bytes);
    }
}
exports.MassiveEntityElementOpBatchNotify = MassiveEntityElementOpBatchNotify;
_MassiveEntityElementOpBatchNotify_one_of_decls = new WeakMap();
