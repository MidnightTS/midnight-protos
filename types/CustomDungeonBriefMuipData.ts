// @generated by protobuf-ts 2.8.2 with parameter output_typescript
// @generated from protobuf file "CustomDungeonBriefMuipData.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { CustomDungeonSocialMuipData } from "./CustomDungeonSocialMuipData";
import { CustomDungeonAbstractMuipData } from "./CustomDungeonAbstractMuipData";
import { CustomDungeonSettingMuipData } from "./CustomDungeonSettingMuipData";
/**
 * @generated from protobuf message CustomDungeonBriefMuipData
 */
export interface CustomDungeonBriefMuipData {
    /**
     * @generated from protobuf field: uint64 dungeon_guid = 1;
     */
    dungeonGuid: bigint;
    /**
     * @generated from protobuf field: uint32 dungeon_id = 2;
     */
    dungeonId: number;
    /**
     * @generated from protobuf field: string creator_nickname = 3;
     */
    creatorNickname: string;
    /**
     * @generated from protobuf field: repeated uint32 tag_list = 4;
     */
    tagList: number[];
    /**
     * @generated from protobuf field: CustomDungeonSettingMuipData setting = 5;
     */
    setting?: CustomDungeonSettingMuipData;
    /**
     * @generated from protobuf field: CustomDungeonAbstractMuipData abstract = 6;
     */
    abstract?: CustomDungeonAbstractMuipData;
    /**
     * @generated from protobuf field: CustomDungeonSocialMuipData social = 7;
     */
    social?: CustomDungeonSocialMuipData;
}
// @generated message type with reflection information, may provide speed optimized methods
class CustomDungeonBriefMuipData$Type extends MessageType<CustomDungeonBriefMuipData> {
    constructor() {
        super("CustomDungeonBriefMuipData", [
            { no: 1, name: "dungeon_guid", kind: "scalar", T: 4 /*ScalarType.UINT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "dungeon_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "creator_nickname", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "tag_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "setting", kind: "message", T: () => CustomDungeonSettingMuipData },
            { no: 6, name: "abstract", kind: "message", T: () => CustomDungeonAbstractMuipData },
            { no: 7, name: "social", kind: "message", T: () => CustomDungeonSocialMuipData }
        ]);
    }
    create(value?: PartialMessage<CustomDungeonBriefMuipData>): CustomDungeonBriefMuipData {
        const message = { dungeonGuid: 0n, dungeonId: 0, creatorNickname: "", tagList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<CustomDungeonBriefMuipData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: CustomDungeonBriefMuipData): CustomDungeonBriefMuipData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* uint64 dungeon_guid */ 1:
                    message.dungeonGuid = reader.uint64().toBigInt();
                    break;
                case /* uint32 dungeon_id */ 2:
                    message.dungeonId = reader.uint32();
                    break;
                case /* string creator_nickname */ 3:
                    message.creatorNickname = reader.string();
                    break;
                case /* repeated uint32 tag_list */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.tagList.push(reader.uint32());
                    else
                        message.tagList.push(reader.uint32());
                    break;
                case /* CustomDungeonSettingMuipData setting */ 5:
                    message.setting = CustomDungeonSettingMuipData.internalBinaryRead(reader, reader.uint32(), options, message.setting);
                    break;
                case /* CustomDungeonAbstractMuipData abstract */ 6:
                    message.abstract = CustomDungeonAbstractMuipData.internalBinaryRead(reader, reader.uint32(), options, message.abstract);
                    break;
                case /* CustomDungeonSocialMuipData social */ 7:
                    message.social = CustomDungeonSocialMuipData.internalBinaryRead(reader, reader.uint32(), options, message.social);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: CustomDungeonBriefMuipData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* uint64 dungeon_guid = 1; */
        if (message.dungeonGuid !== 0n)
            writer.tag(1, WireType.Varint).uint64(message.dungeonGuid);
        /* uint32 dungeon_id = 2; */
        if (message.dungeonId !== 0)
            writer.tag(2, WireType.Varint).uint32(message.dungeonId);
        /* string creator_nickname = 3; */
        if (message.creatorNickname !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.creatorNickname);
        /* repeated uint32 tag_list = 4; */
        if (message.tagList.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.tagList.length; i++)
                writer.uint32(message.tagList[i]);
            writer.join();
        }
        /* CustomDungeonSettingMuipData setting = 5; */
        if (message.setting)
            CustomDungeonSettingMuipData.internalBinaryWrite(message.setting, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* CustomDungeonAbstractMuipData abstract = 6; */
        if (message.abstract)
            CustomDungeonAbstractMuipData.internalBinaryWrite(message.abstract, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* CustomDungeonSocialMuipData social = 7; */
        if (message.social)
            CustomDungeonSocialMuipData.internalBinaryWrite(message.social, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message CustomDungeonBriefMuipData
 */
export const CustomDungeonBriefMuipData = new CustomDungeonBriefMuipData$Type();
