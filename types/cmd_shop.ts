// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_shop.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { ShopMcoinProduct } from "./define";
import { ShopCardProduct } from "./define";
import { ShopConcertProduct } from "./define";
import { ItemParam } from "./define";
/**
 * @generated from protobuf message com.midnights.game.ShopGoods
 */
export interface ShopGoods {
    /**
     * @generated from protobuf field: optional uint32 discount_end_time = 258;
     */
    discountEndTime?: number;
    /**
     * @generated from protobuf field: optional uint32 min_level = 8;
     */
    minLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 end_time = 11;
     */
    endTime?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ItemParam cost_item_list = 3;
     */
    costItemList: ItemParam[];
    /**
     * @generated from protobuf field: optional uint32 secondary_sheet_id = 318;
     */
    secondarySheetId?: number;
    /**
     * @generated from protobuf field: optional uint32 hcoin = 1;
     */
    hcoin?: number;
    /**
     * @generated from protobuf field: optional uint32 mcoin = 14;
     */
    mcoin?: number;
    /**
     * @generated from protobuf field: optional uint32 discount_id = 1998;
     */
    discountId?: number;
    /**
     * @generated from protobuf field: optional uint32 single_limit = 247;
     */
    singleLimit?: number;
    /**
     * @generated from protobuf field: optional uint32 goods_id = 13;
     */
    goodsId?: number;
    /**
     * @generated from protobuf field: optional uint32 next_refresh_time = 7;
     */
    nextRefreshTime?: number;
    /**
     * @generated from protobuf field: optional uint32 max_level = 4;
     */
    maxLevel?: number;
    /**
     * @generated from protobuf field: optional uint32 disable_type = 6;
     */
    disableType?: number;
    /**
     * @generated from protobuf field: optional uint32 discount_begin_time = 574;
     */
    discountBeginTime?: number;
    /**
     * @generated from protobuf field: repeated uint32 pre_goods_id_list = 2;
     */
    preGoodsIdList: number[];
    /**
     * @generated from protobuf field: optional uint32 begin_time = 5;
     */
    beginTime?: number;
    /**
     * @generated from protobuf field: optional uint32 scoin = 15;
     */
    scoin?: number;
    /**
     * @generated from protobuf field: optional uint32 bought_num = 10;
     */
    boughtNum?: number;
    /**
     * @generated from protobuf field: optional uint32 buy_limit = 12;
     */
    buyLimit?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ItemParam goods_item = 9;
     */
    goodsItem?: ItemParam;
}
/**
 * @generated from protobuf message com.midnights.game.Shop
 */
export interface Shop {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ShopConcertProduct concert_product_list = 3;
     */
    concertProductList: ShopConcertProduct[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.ShopGoods goods_list = 15;
     */
    goodsList: ShopGoods[];
    /**
     * @generated from protobuf field: optional uint32 city_reputation_level = 2;
     */
    cityReputationLevel?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ShopCardProduct card_product_list = 14;
     */
    cardProductList: ShopCardProduct[];
    /**
     * @generated from protobuf field: repeated com.midnights.game.ShopMcoinProduct mcoin_product_list = 7;
     */
    mcoinProductList: ShopMcoinProduct[];
    /**
     * @generated from protobuf field: optional uint32 next_refresh_time = 11;
     */
    nextRefreshTime?: number;
    /**
     * @generated from protobuf field: optional uint32 city_id = 10;
     */
    cityId?: number;
    /**
     * @generated from protobuf field: optional uint32 shop_type = 13;
     */
    shopType?: number;
}
/**
 * @generated from protobuf message com.midnights.game.GetShopReq
 */
export interface GetShopReq {
    /**
     * @generated from protobuf field: optional uint32 shop_type = 13;
     */
    shopType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetShopReq.CmdId
 */
export enum GetShopReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 772;
     */
    CMD_ID = 772,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetShopRsp
 */
export interface GetShopRsp {
    /**
     * @generated from protobuf field: optional com.midnights.game.Shop shop = 11;
     */
    shop?: Shop;
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetShopRsp.CmdId
 */
export enum GetShopRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 798;
     */
    CMD_ID = 798,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.BuyGoodsReq
 */
export interface BuyGoodsReq {
    /**
     * @generated from protobuf field: optional uint32 buy_count = 14;
     */
    buyCount?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ShopGoods goods = 15;
     */
    goods?: ShopGoods;
    /**
     * @generated from protobuf field: optional uint32 shop_type = 7;
     */
    shopType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.BuyGoodsReq.CmdId
 */
export enum BuyGoodsReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 712;
     */
    CMD_ID = 712,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.BuyGoodsRsp
 */
export interface BuyGoodsRsp {
    /**
     * @generated from protobuf field: optional uint32 buy_count = 14;
     */
    buyCount?: number;
    /**
     * @generated from protobuf field: optional com.midnights.game.ShopGoods goods = 12;
     */
    goods?: ShopGoods;
    /**
     * @generated from protobuf field: optional uint32 shop_type = 11;
     */
    shopType?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 2;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated com.midnights.game.ShopGoods goods_list = 5;
     */
    goodsList: ShopGoods[];
}
/**
 * @generated from protobuf enum com.midnights.game.BuyGoodsRsp.CmdId
 */
export enum BuyGoodsRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 735;
     */
    CMD_ID = 735,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetShopmallDataReq
 */
export interface GetShopmallDataReq {
}
/**
 * @generated from protobuf enum com.midnights.game.GetShopmallDataReq.CmdId
 */
export enum GetShopmallDataReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 707;
     */
    CMD_ID = 707,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetShopmallDataRsp
 */
export interface GetShopmallDataRsp {
    /**
     * @generated from protobuf field: repeated uint32 shop_type_list = 15;
     */
    shopTypeList: number[];
    /**
     * @generated from protobuf field: optional int32 retcode = 3;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetShopmallDataRsp.CmdId
 */
export enum GetShopmallDataRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 721;
     */
    CMD_ID = 721,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.ActivityShopSheetInfo
 */
export interface ActivityShopSheetInfo {
    /**
     * @generated from protobuf field: optional uint32 end_time = 1;
     */
    endTime?: number;
    /**
     * @generated from protobuf field: optional uint32 begin_time = 12;
     */
    beginTime?: number;
    /**
     * @generated from protobuf field: optional uint32 sheet_id = 2;
     */
    sheetId?: number;
}
/**
 * @generated from protobuf message com.midnights.game.GetActivityShopSheetInfoReq
 */
export interface GetActivityShopSheetInfoReq {
    /**
     * @generated from protobuf field: optional uint32 shop_type = 7;
     */
    shopType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetActivityShopSheetInfoReq.CmdId
 */
export enum GetActivityShopSheetInfoReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 703;
     */
    CMD_ID = 703,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetActivityShopSheetInfoRsp
 */
export interface GetActivityShopSheetInfoRsp {
    /**
     * @generated from protobuf field: repeated com.midnights.game.ActivityShopSheetInfo sheet_info_list = 6;
     */
    sheetInfoList: ActivityShopSheetInfo[];
    /**
     * @generated from protobuf field: optional uint32 shop_type = 8;
     */
    shopType?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 13;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.GetActivityShopSheetInfoRsp.CmdId
 */
export enum GetActivityShopSheetInfoRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 790;
     */
    CMD_ID = 790,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.ShopGoodsDisableType
 */
export enum ShopGoodsDisableType {
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_NONE = 0;
     */
    SHOP_GOODS_DISABLE_NONE = 0,
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_TALENT_FULL = 1;
     */
    SHOP_GOODS_DISABLE_TALENT_FULL = 1,
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_FURNITURE_FORMULA_UNLOCKED = 2;
     */
    SHOP_GOODS_DISABLE_FURNITURE_FORMULA_UNLOCKED = 2,
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_COSTUME_UNLOCKED = 3;
     */
    SHOP_GOODS_DISABLE_COSTUME_UNLOCKED = 3,
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_BGM_UNLOCKED = 4;
     */
    SHOP_GOODS_DISABLE_BGM_UNLOCKED = 4,
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_GCG_CARD_EXCEED = 5;
     */
    SHOP_GOODS_DISABLE_GCG_CARD_EXCEED = 5,
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_GCG_CARD_FACE_UNLOCKED = 6;
     */
    SHOP_GOODS_DISABLE_GCG_CARD_FACE_UNLOCKED = 6,
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_GCG_CARD_BACK_UNLOCKED = 7;
     */
    SHOP_GOODS_DISABLE_GCG_CARD_BACK_UNLOCKED = 7,
    /**
     * @generated from protobuf enum value: SHOP_GOODS_DISABLE_GCG_FIELD_UNLOCKED = 8;
     */
    SHOP_GOODS_DISABLE_GCG_FIELD_UNLOCKED = 8
}
// @generated message type with reflection information, may provide speed optimized methods
class ShopGoods$Type extends MessageType<ShopGoods> {
    constructor() {
        super("com.midnights.game.ShopGoods", [
            { no: 258, name: "discount_end_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "min_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "end_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "cost_item_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ItemParam },
            { no: 318, name: "secondary_sheet_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "hcoin", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "mcoin", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 1998, name: "discount_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 247, name: "single_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "goods_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 7, name: "next_refresh_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "max_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 6, name: "disable_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 574, name: "discount_begin_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "pre_goods_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 5, name: "begin_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "scoin", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "bought_num", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "buy_limit", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "goods_item", kind: "message", T: () => ItemParam }
        ]);
    }
    create(value?: PartialMessage<ShopGoods>): ShopGoods {
        const message = { costItemList: [], preGoodsIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ShopGoods>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ShopGoods): ShopGoods {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 discount_end_time */ 258:
                    message.discountEndTime = reader.uint32();
                    break;
                case /* optional uint32 min_level */ 8:
                    message.minLevel = reader.uint32();
                    break;
                case /* optional uint32 end_time */ 11:
                    message.endTime = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ItemParam cost_item_list */ 3:
                    message.costItemList.push(ItemParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 secondary_sheet_id */ 318:
                    message.secondarySheetId = reader.uint32();
                    break;
                case /* optional uint32 hcoin */ 1:
                    message.hcoin = reader.uint32();
                    break;
                case /* optional uint32 mcoin */ 14:
                    message.mcoin = reader.uint32();
                    break;
                case /* optional uint32 discount_id */ 1998:
                    message.discountId = reader.uint32();
                    break;
                case /* optional uint32 single_limit */ 247:
                    message.singleLimit = reader.uint32();
                    break;
                case /* optional uint32 goods_id */ 13:
                    message.goodsId = reader.uint32();
                    break;
                case /* optional uint32 next_refresh_time */ 7:
                    message.nextRefreshTime = reader.uint32();
                    break;
                case /* optional uint32 max_level */ 4:
                    message.maxLevel = reader.uint32();
                    break;
                case /* optional uint32 disable_type */ 6:
                    message.disableType = reader.uint32();
                    break;
                case /* optional uint32 discount_begin_time */ 574:
                    message.discountBeginTime = reader.uint32();
                    break;
                case /* repeated uint32 pre_goods_id_list */ 2:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.preGoodsIdList.push(reader.uint32());
                    else
                        message.preGoodsIdList.push(reader.uint32());
                    break;
                case /* optional uint32 begin_time */ 5:
                    message.beginTime = reader.uint32();
                    break;
                case /* optional uint32 scoin */ 15:
                    message.scoin = reader.uint32();
                    break;
                case /* optional uint32 bought_num */ 10:
                    message.boughtNum = reader.uint32();
                    break;
                case /* optional uint32 buy_limit */ 12:
                    message.buyLimit = reader.uint32();
                    break;
                case /* optional com.midnights.game.ItemParam goods_item */ 9:
                    message.goodsItem = ItemParam.internalBinaryRead(reader, reader.uint32(), options, message.goodsItem);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ShopGoods, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 discount_end_time = 258; */
        if (message.discountEndTime !== undefined)
            writer.tag(258, WireType.Varint).uint32(message.discountEndTime);
        /* optional uint32 min_level = 8; */
        if (message.minLevel !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.minLevel);
        /* optional uint32 end_time = 11; */
        if (message.endTime !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.endTime);
        /* repeated com.midnights.game.ItemParam cost_item_list = 3; */
        for (let i = 0; i < message.costItemList.length; i++)
            ItemParam.internalBinaryWrite(message.costItemList[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 secondary_sheet_id = 318; */
        if (message.secondarySheetId !== undefined)
            writer.tag(318, WireType.Varint).uint32(message.secondarySheetId);
        /* optional uint32 hcoin = 1; */
        if (message.hcoin !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.hcoin);
        /* optional uint32 mcoin = 14; */
        if (message.mcoin !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.mcoin);
        /* optional uint32 discount_id = 1998; */
        if (message.discountId !== undefined)
            writer.tag(1998, WireType.Varint).uint32(message.discountId);
        /* optional uint32 single_limit = 247; */
        if (message.singleLimit !== undefined)
            writer.tag(247, WireType.Varint).uint32(message.singleLimit);
        /* optional uint32 goods_id = 13; */
        if (message.goodsId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.goodsId);
        /* optional uint32 next_refresh_time = 7; */
        if (message.nextRefreshTime !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.nextRefreshTime);
        /* optional uint32 max_level = 4; */
        if (message.maxLevel !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.maxLevel);
        /* optional uint32 disable_type = 6; */
        if (message.disableType !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.disableType);
        /* optional uint32 discount_begin_time = 574; */
        if (message.discountBeginTime !== undefined)
            writer.tag(574, WireType.Varint).uint32(message.discountBeginTime);
        /* repeated uint32 pre_goods_id_list = 2; */
        if (message.preGoodsIdList.length) {
            writer.tag(2, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.preGoodsIdList.length; i++)
                writer.uint32(message.preGoodsIdList[i]);
            writer.join();
        }
        /* optional uint32 begin_time = 5; */
        if (message.beginTime !== undefined)
            writer.tag(5, WireType.Varint).uint32(message.beginTime);
        /* optional uint32 scoin = 15; */
        if (message.scoin !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.scoin);
        /* optional uint32 bought_num = 10; */
        if (message.boughtNum !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.boughtNum);
        /* optional uint32 buy_limit = 12; */
        if (message.buyLimit !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.buyLimit);
        /* optional com.midnights.game.ItemParam goods_item = 9; */
        if (message.goodsItem)
            ItemParam.internalBinaryWrite(message.goodsItem, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ShopGoods
 */
export const ShopGoods = new ShopGoods$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Shop$Type extends MessageType<Shop> {
    constructor() {
        super("com.midnights.game.Shop", [
            { no: 3, name: "concert_product_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ShopConcertProduct },
            { no: 15, name: "goods_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ShopGoods },
            { no: 2, name: "city_reputation_level", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 14, name: "card_product_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ShopCardProduct },
            { no: 7, name: "mcoin_product_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ShopMcoinProduct },
            { no: 11, name: "next_refresh_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 10, name: "city_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "shop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<Shop>): Shop {
        const message = { concertProductList: [], goodsList: [], cardProductList: [], mcoinProductList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<Shop>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: Shop): Shop {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ShopConcertProduct concert_product_list */ 3:
                    message.concertProductList.push(ShopConcertProduct.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.ShopGoods goods_list */ 15:
                    message.goodsList.push(ShopGoods.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 city_reputation_level */ 2:
                    message.cityReputationLevel = reader.uint32();
                    break;
                case /* repeated com.midnights.game.ShopCardProduct card_product_list */ 14:
                    message.cardProductList.push(ShopCardProduct.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated com.midnights.game.ShopMcoinProduct mcoin_product_list */ 7:
                    message.mcoinProductList.push(ShopMcoinProduct.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 next_refresh_time */ 11:
                    message.nextRefreshTime = reader.uint32();
                    break;
                case /* optional uint32 city_id */ 10:
                    message.cityId = reader.uint32();
                    break;
                case /* optional uint32 shop_type */ 13:
                    message.shopType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: Shop, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ShopConcertProduct concert_product_list = 3; */
        for (let i = 0; i < message.concertProductList.length; i++)
            ShopConcertProduct.internalBinaryWrite(message.concertProductList[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.ShopGoods goods_list = 15; */
        for (let i = 0; i < message.goodsList.length; i++)
            ShopGoods.internalBinaryWrite(message.goodsList[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 city_reputation_level = 2; */
        if (message.cityReputationLevel !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.cityReputationLevel);
        /* repeated com.midnights.game.ShopCardProduct card_product_list = 14; */
        for (let i = 0; i < message.cardProductList.length; i++)
            ShopCardProduct.internalBinaryWrite(message.cardProductList[i], writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* repeated com.midnights.game.ShopMcoinProduct mcoin_product_list = 7; */
        for (let i = 0; i < message.mcoinProductList.length; i++)
            ShopMcoinProduct.internalBinaryWrite(message.mcoinProductList[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 next_refresh_time = 11; */
        if (message.nextRefreshTime !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.nextRefreshTime);
        /* optional uint32 city_id = 10; */
        if (message.cityId !== undefined)
            writer.tag(10, WireType.Varint).uint32(message.cityId);
        /* optional uint32 shop_type = 13; */
        if (message.shopType !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.shopType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.Shop
 */
export const Shop = new Shop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetShopReq$Type extends MessageType<GetShopReq> {
    constructor() {
        super("com.midnights.game.GetShopReq", [
            { no: 13, name: "shop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetShopReq>): GetShopReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetShopReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetShopReq): GetShopReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 shop_type */ 13:
                    message.shopType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetShopReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 shop_type = 13; */
        if (message.shopType !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.shopType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetShopReq
 */
export const GetShopReq = new GetShopReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetShopRsp$Type extends MessageType<GetShopRsp> {
    constructor() {
        super("com.midnights.game.GetShopRsp", [
            { no: 11, name: "shop", kind: "message", T: () => Shop },
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetShopRsp>): GetShopRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetShopRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetShopRsp): GetShopRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional com.midnights.game.Shop shop */ 11:
                    message.shop = Shop.internalBinaryRead(reader, reader.uint32(), options, message.shop);
                    break;
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetShopRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional com.midnights.game.Shop shop = 11; */
        if (message.shop)
            Shop.internalBinaryWrite(message.shop, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetShopRsp
 */
export const GetShopRsp = new GetShopRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BuyGoodsReq$Type extends MessageType<BuyGoodsReq> {
    constructor() {
        super("com.midnights.game.BuyGoodsReq", [
            { no: 14, name: "buy_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "goods", kind: "message", T: () => ShopGoods },
            { no: 7, name: "shop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<BuyGoodsReq>): BuyGoodsReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BuyGoodsReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BuyGoodsReq): BuyGoodsReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 buy_count */ 14:
                    message.buyCount = reader.uint32();
                    break;
                case /* optional com.midnights.game.ShopGoods goods */ 15:
                    message.goods = ShopGoods.internalBinaryRead(reader, reader.uint32(), options, message.goods);
                    break;
                case /* optional uint32 shop_type */ 7:
                    message.shopType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BuyGoodsReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 buy_count = 14; */
        if (message.buyCount !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.buyCount);
        /* optional com.midnights.game.ShopGoods goods = 15; */
        if (message.goods)
            ShopGoods.internalBinaryWrite(message.goods, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 shop_type = 7; */
        if (message.shopType !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.shopType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BuyGoodsReq
 */
export const BuyGoodsReq = new BuyGoodsReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class BuyGoodsRsp$Type extends MessageType<BuyGoodsRsp> {
    constructor() {
        super("com.midnights.game.BuyGoodsRsp", [
            { no: 14, name: "buy_count", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "goods", kind: "message", T: () => ShopGoods },
            { no: 11, name: "shop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "goods_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ShopGoods }
        ]);
    }
    create(value?: PartialMessage<BuyGoodsRsp>): BuyGoodsRsp {
        const message = { goodsList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<BuyGoodsRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: BuyGoodsRsp): BuyGoodsRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 buy_count */ 14:
                    message.buyCount = reader.uint32();
                    break;
                case /* optional com.midnights.game.ShopGoods goods */ 12:
                    message.goods = ShopGoods.internalBinaryRead(reader, reader.uint32(), options, message.goods);
                    break;
                case /* optional uint32 shop_type */ 11:
                    message.shopType = reader.uint32();
                    break;
                case /* optional int32 retcode */ 2:
                    message.retcode = reader.int32();
                    break;
                case /* repeated com.midnights.game.ShopGoods goods_list */ 5:
                    message.goodsList.push(ShopGoods.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: BuyGoodsRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 buy_count = 14; */
        if (message.buyCount !== undefined)
            writer.tag(14, WireType.Varint).uint32(message.buyCount);
        /* optional com.midnights.game.ShopGoods goods = 12; */
        if (message.goods)
            ShopGoods.internalBinaryWrite(message.goods, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 shop_type = 11; */
        if (message.shopType !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.shopType);
        /* optional int32 retcode = 2; */
        if (message.retcode !== undefined)
            writer.tag(2, WireType.Varint).int32(message.retcode);
        /* repeated com.midnights.game.ShopGoods goods_list = 5; */
        for (let i = 0; i < message.goodsList.length; i++)
            ShopGoods.internalBinaryWrite(message.goodsList[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.BuyGoodsRsp
 */
export const BuyGoodsRsp = new BuyGoodsRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetShopmallDataReq$Type extends MessageType<GetShopmallDataReq> {
    constructor() {
        super("com.midnights.game.GetShopmallDataReq", []);
    }
    create(value?: PartialMessage<GetShopmallDataReq>): GetShopmallDataReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetShopmallDataReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetShopmallDataReq): GetShopmallDataReq {
        return target ?? this.create();
    }
    internalBinaryWrite(message: GetShopmallDataReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetShopmallDataReq
 */
export const GetShopmallDataReq = new GetShopmallDataReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetShopmallDataRsp$Type extends MessageType<GetShopmallDataRsp> {
    constructor() {
        super("com.midnights.game.GetShopmallDataRsp", [
            { no: 15, name: "shop_type_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetShopmallDataRsp>): GetShopmallDataRsp {
        const message = { shopTypeList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetShopmallDataRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetShopmallDataRsp): GetShopmallDataRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 shop_type_list */ 15:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.shopTypeList.push(reader.uint32());
                    else
                        message.shopTypeList.push(reader.uint32());
                    break;
                case /* optional int32 retcode */ 3:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetShopmallDataRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 shop_type_list = 15; */
        if (message.shopTypeList.length) {
            writer.tag(15, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.shopTypeList.length; i++)
                writer.uint32(message.shopTypeList[i]);
            writer.join();
        }
        /* optional int32 retcode = 3; */
        if (message.retcode !== undefined)
            writer.tag(3, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetShopmallDataRsp
 */
export const GetShopmallDataRsp = new GetShopmallDataRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ActivityShopSheetInfo$Type extends MessageType<ActivityShopSheetInfo> {
    constructor() {
        super("com.midnights.game.ActivityShopSheetInfo", [
            { no: 1, name: "end_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "begin_time", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "sheet_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<ActivityShopSheetInfo>): ActivityShopSheetInfo {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<ActivityShopSheetInfo>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: ActivityShopSheetInfo): ActivityShopSheetInfo {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 end_time */ 1:
                    message.endTime = reader.uint32();
                    break;
                case /* optional uint32 begin_time */ 12:
                    message.beginTime = reader.uint32();
                    break;
                case /* optional uint32 sheet_id */ 2:
                    message.sheetId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: ActivityShopSheetInfo, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 end_time = 1; */
        if (message.endTime !== undefined)
            writer.tag(1, WireType.Varint).uint32(message.endTime);
        /* optional uint32 begin_time = 12; */
        if (message.beginTime !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.beginTime);
        /* optional uint32 sheet_id = 2; */
        if (message.sheetId !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.sheetId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.ActivityShopSheetInfo
 */
export const ActivityShopSheetInfo = new ActivityShopSheetInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetActivityShopSheetInfoReq$Type extends MessageType<GetActivityShopSheetInfoReq> {
    constructor() {
        super("com.midnights.game.GetActivityShopSheetInfoReq", [
            { no: 7, name: "shop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetActivityShopSheetInfoReq>): GetActivityShopSheetInfoReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetActivityShopSheetInfoReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetActivityShopSheetInfoReq): GetActivityShopSheetInfoReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 shop_type */ 7:
                    message.shopType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetActivityShopSheetInfoReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 shop_type = 7; */
        if (message.shopType !== undefined)
            writer.tag(7, WireType.Varint).uint32(message.shopType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetActivityShopSheetInfoReq
 */
export const GetActivityShopSheetInfoReq = new GetActivityShopSheetInfoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetActivityShopSheetInfoRsp$Type extends MessageType<GetActivityShopSheetInfoRsp> {
    constructor() {
        super("com.midnights.game.GetActivityShopSheetInfoRsp", [
            { no: 6, name: "sheet_info_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ActivityShopSheetInfo },
            { no: 8, name: "shop_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 13, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetActivityShopSheetInfoRsp>): GetActivityShopSheetInfoRsp {
        const message = { sheetInfoList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetActivityShopSheetInfoRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetActivityShopSheetInfoRsp): GetActivityShopSheetInfoRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.ActivityShopSheetInfo sheet_info_list */ 6:
                    message.sheetInfoList.push(ActivityShopSheetInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* optional uint32 shop_type */ 8:
                    message.shopType = reader.uint32();
                    break;
                case /* optional int32 retcode */ 13:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetActivityShopSheetInfoRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.ActivityShopSheetInfo sheet_info_list = 6; */
        for (let i = 0; i < message.sheetInfoList.length; i++)
            ActivityShopSheetInfo.internalBinaryWrite(message.sheetInfoList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* optional uint32 shop_type = 8; */
        if (message.shopType !== undefined)
            writer.tag(8, WireType.Varint).uint32(message.shopType);
        /* optional int32 retcode = 13; */
        if (message.retcode !== undefined)
            writer.tag(13, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetActivityShopSheetInfoRsp
 */
export const GetActivityShopSheetInfoRsp = new GetActivityShopSheetInfoRsp$Type();
