/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeAvatarRewardEventNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./HomeAvatarRewardEventInfo";
import * as pb_1 from "google-protobuf";
export class HomeAvatarRewardEventNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        is_event_trigger?: boolean;
        reward_event?: dependency_1.HomeAvatarRewardEventInfo;
        pending_list?: dependency_1.HomeAvatarRewardEventInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [8], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("is_event_trigger" in data && data.is_event_trigger != undefined) {
                this.is_event_trigger = data.is_event_trigger;
            }
            if ("reward_event" in data && data.reward_event != undefined) {
                this.reward_event = data.reward_event;
            }
            if ("pending_list" in data && data.pending_list != undefined) {
                this.pending_list = data.pending_list;
            }
        }
    }
    get is_event_trigger() {
        return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;
    }
    set is_event_trigger(value: boolean) {
        pb_1.Message.setField(this, 4, value);
    }
    get reward_event() {
        return pb_1.Message.getWrapperField(this, dependency_1.HomeAvatarRewardEventInfo, 2) as dependency_1.HomeAvatarRewardEventInfo;
    }
    set reward_event(value: dependency_1.HomeAvatarRewardEventInfo) {
        pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_reward_event() {
        return pb_1.Message.getField(this, 2) != null;
    }
    get pending_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.HomeAvatarRewardEventInfo, 8) as dependency_1.HomeAvatarRewardEventInfo[];
    }
    set pending_list(value: dependency_1.HomeAvatarRewardEventInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 8, value);
    }
    static fromObject(data: {
        is_event_trigger?: boolean;
        reward_event?: ReturnType<typeof dependency_1.HomeAvatarRewardEventInfo.prototype.toObject>;
        pending_list?: ReturnType<typeof dependency_1.HomeAvatarRewardEventInfo.prototype.toObject>[];
    }): HomeAvatarRewardEventNotify {
        const message = new HomeAvatarRewardEventNotify({});
        if (data.is_event_trigger != null) {
            message.is_event_trigger = data.is_event_trigger;
        }
        if (data.reward_event != null) {
            message.reward_event = dependency_1.HomeAvatarRewardEventInfo.fromObject(data.reward_event);
        }
        if (data.pending_list != null) {
            message.pending_list = data.pending_list.map(item => dependency_1.HomeAvatarRewardEventInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            is_event_trigger?: boolean;
            reward_event?: ReturnType<typeof dependency_1.HomeAvatarRewardEventInfo.prototype.toObject>;
            pending_list?: ReturnType<typeof dependency_1.HomeAvatarRewardEventInfo.prototype.toObject>[];
        } = {};
        if (this.is_event_trigger != null) {
            data.is_event_trigger = this.is_event_trigger;
        }
        if (this.reward_event != null) {
            data.reward_event = this.reward_event.toObject();
        }
        if (this.pending_list != null) {
            data.pending_list = this.pending_list.map((item: dependency_1.HomeAvatarRewardEventInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.is_event_trigger != false)
            writer.writeBool(4, this.is_event_trigger);
        if (this.has_reward_event)
            writer.writeMessage(2, this.reward_event, () => this.reward_event.serialize(writer));
        if (this.pending_list.length)
            writer.writeRepeatedMessage(8, this.pending_list, (item: dependency_1.HomeAvatarRewardEventInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): HomeAvatarRewardEventNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeAvatarRewardEventNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 4:
                    message.is_event_trigger = reader.readBool();
                    break;
                case 2:
                    reader.readMessage(message.reward_event, () => message.reward_event = dependency_1.HomeAvatarRewardEventInfo.deserialize(reader));
                    break;
                case 8:
                    reader.readMessage(message.pending_list, () => pb_1.Message.addToRepeatedWrapperField(message, 8, dependency_1.HomeAvatarRewardEventInfo.deserialize(reader), dependency_1.HomeAvatarRewardEventInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): HomeAvatarRewardEventNotify {
        return HomeAvatarRewardEventNotify.deserialize(bytes);
    }
}
