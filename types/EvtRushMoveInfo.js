"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _EvtRushMoveInfo_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.EvtRushMoveInfo = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EvtRushMoveInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./Vector");
const pb_1 = require("google-protobuf");
class EvtRushMoveInfo extends pb_1.Message {
    constructor(data) {
        super();
        _EvtRushMoveInfo_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _EvtRushMoveInfo_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("state_name_hash" in data && data.state_name_hash != undefined) {
                this.state_name_hash = data.state_name_hash;
            }
            if ("rush_to_pos" in data && data.rush_to_pos != undefined) {
                this.rush_to_pos = data.rush_to_pos;
            }
            if ("rush_attack_target_pos" in data && data.rush_attack_target_pos != undefined) {
                this.rush_attack_target_pos = data.rush_attack_target_pos;
            }
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
            if ("time_range" in data && data.time_range != undefined) {
                this.time_range = data.time_range;
            }
            if ("velocity" in data && data.velocity != undefined) {
                this.velocity = data.velocity;
            }
            if ("pos" in data && data.pos != undefined) {
                this.pos = data.pos;
            }
            if ("face_angle_compact" in data && data.face_angle_compact != undefined) {
                this.face_angle_compact = data.face_angle_compact;
            }
        }
    }
    get state_name_hash() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set state_name_hash(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get rush_to_pos() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 9);
    }
    set rush_to_pos(value) {
        pb_1.Message.setWrapperField(this, 9, value);
    }
    get has_rush_to_pos() {
        return pb_1.Message.getField(this, 9) != null;
    }
    get rush_attack_target_pos() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 8);
    }
    set rush_attack_target_pos(value) {
        pb_1.Message.setWrapperField(this, 8, value);
    }
    get has_rush_attack_target_pos() {
        return pb_1.Message.getField(this, 8) != null;
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0);
    }
    set entity_id(value) {
        pb_1.Message.setField(this, 4, value);
    }
    get time_range() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0);
    }
    set time_range(value) {
        pb_1.Message.setField(this, 15, value);
    }
    get velocity() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 6);
    }
    set velocity(value) {
        pb_1.Message.setWrapperField(this, 6, value);
    }
    get has_velocity() {
        return pb_1.Message.getField(this, 6) != null;
    }
    get pos() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 2);
    }
    set pos(value) {
        pb_1.Message.setWrapperField(this, 2, value);
    }
    get has_pos() {
        return pb_1.Message.getField(this, 2) != null;
    }
    get face_angle_compact() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0);
    }
    set face_angle_compact(value) {
        pb_1.Message.setField(this, 10, value);
    }
    static fromObject(data) {
        const message = new EvtRushMoveInfo({});
        if (data.state_name_hash != null) {
            message.state_name_hash = data.state_name_hash;
        }
        if (data.rush_to_pos != null) {
            message.rush_to_pos = dependency_1.Vector.fromObject(data.rush_to_pos);
        }
        if (data.rush_attack_target_pos != null) {
            message.rush_attack_target_pos = dependency_1.Vector.fromObject(data.rush_attack_target_pos);
        }
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        if (data.time_range != null) {
            message.time_range = data.time_range;
        }
        if (data.velocity != null) {
            message.velocity = dependency_1.Vector.fromObject(data.velocity);
        }
        if (data.pos != null) {
            message.pos = dependency_1.Vector.fromObject(data.pos);
        }
        if (data.face_angle_compact != null) {
            message.face_angle_compact = data.face_angle_compact;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.state_name_hash != null) {
            data.state_name_hash = this.state_name_hash;
        }
        if (this.rush_to_pos != null) {
            data.rush_to_pos = this.rush_to_pos.toObject();
        }
        if (this.rush_attack_target_pos != null) {
            data.rush_attack_target_pos = this.rush_attack_target_pos.toObject();
        }
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        if (this.time_range != null) {
            data.time_range = this.time_range;
        }
        if (this.velocity != null) {
            data.velocity = this.velocity.toObject();
        }
        if (this.pos != null) {
            data.pos = this.pos.toObject();
        }
        if (this.face_angle_compact != null) {
            data.face_angle_compact = this.face_angle_compact;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.state_name_hash != 0)
            writer.writeInt32(11, this.state_name_hash);
        if (this.has_rush_to_pos)
            writer.writeMessage(9, this.rush_to_pos, () => this.rush_to_pos.serialize(writer));
        if (this.has_rush_attack_target_pos)
            writer.writeMessage(8, this.rush_attack_target_pos, () => this.rush_attack_target_pos.serialize(writer));
        if (this.entity_id != 0)
            writer.writeUint32(4, this.entity_id);
        if (this.time_range != 0)
            writer.writeFloat(15, this.time_range);
        if (this.has_velocity)
            writer.writeMessage(6, this.velocity, () => this.velocity.serialize(writer));
        if (this.has_pos)
            writer.writeMessage(2, this.pos, () => this.pos.serialize(writer));
        if (this.face_angle_compact != 0)
            writer.writeInt32(10, this.face_angle_compact);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EvtRushMoveInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 11:
                    message.state_name_hash = reader.readInt32();
                    break;
                case 9:
                    reader.readMessage(message.rush_to_pos, () => message.rush_to_pos = dependency_1.Vector.deserialize(reader));
                    break;
                case 8:
                    reader.readMessage(message.rush_attack_target_pos, () => message.rush_attack_target_pos = dependency_1.Vector.deserialize(reader));
                    break;
                case 4:
                    message.entity_id = reader.readUint32();
                    break;
                case 15:
                    message.time_range = reader.readFloat();
                    break;
                case 6:
                    reader.readMessage(message.velocity, () => message.velocity = dependency_1.Vector.deserialize(reader));
                    break;
                case 2:
                    reader.readMessage(message.pos, () => message.pos = dependency_1.Vector.deserialize(reader));
                    break;
                case 10:
                    message.face_angle_compact = reader.readInt32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return EvtRushMoveInfo.deserialize(bytes);
    }
}
exports.EvtRushMoveInfo = EvtRushMoveInfo;
_EvtRushMoveInfo_one_of_decls = new WeakMap();
