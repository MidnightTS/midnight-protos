/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: SceneRouteChangeNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./SceneRouteChangeInfo";
import * as pb_1 from "google-protobuf";
export class SceneRouteChangeNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        scene_id?: number;
        scene_time?: number;
        route_list?: dependency_1.SceneRouteChangeInfo[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("scene_id" in data && data.scene_id != undefined) {
                this.scene_id = data.scene_id;
            }
            if ("scene_time" in data && data.scene_time != undefined) {
                this.scene_time = data.scene_time;
            }
            if ("route_list" in data && data.route_list != undefined) {
                this.route_list = data.route_list;
            }
        }
    }
    get scene_id() {
        return pb_1.Message.getFieldWithDefault(this, 12, 0) as number;
    }
    set scene_id(value: number) {
        pb_1.Message.setField(this, 12, value);
    }
    get scene_time() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0) as number;
    }
    set scene_time(value: number) {
        pb_1.Message.setField(this, 11, value);
    }
    get route_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.SceneRouteChangeInfo, 2) as dependency_1.SceneRouteChangeInfo[];
    }
    set route_list(value: dependency_1.SceneRouteChangeInfo[]) {
        pb_1.Message.setRepeatedWrapperField(this, 2, value);
    }
    static fromObject(data: {
        scene_id?: number;
        scene_time?: number;
        route_list?: ReturnType<typeof dependency_1.SceneRouteChangeInfo.prototype.toObject>[];
    }): SceneRouteChangeNotify {
        const message = new SceneRouteChangeNotify({});
        if (data.scene_id != null) {
            message.scene_id = data.scene_id;
        }
        if (data.scene_time != null) {
            message.scene_time = data.scene_time;
        }
        if (data.route_list != null) {
            message.route_list = data.route_list.map(item => dependency_1.SceneRouteChangeInfo.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            scene_id?: number;
            scene_time?: number;
            route_list?: ReturnType<typeof dependency_1.SceneRouteChangeInfo.prototype.toObject>[];
        } = {};
        if (this.scene_id != null) {
            data.scene_id = this.scene_id;
        }
        if (this.scene_time != null) {
            data.scene_time = this.scene_time;
        }
        if (this.route_list != null) {
            data.route_list = this.route_list.map((item: dependency_1.SceneRouteChangeInfo) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.scene_id != 0)
            writer.writeUint32(12, this.scene_id);
        if (this.scene_time != 0)
            writer.writeUint32(11, this.scene_time);
        if (this.route_list.length)
            writer.writeRepeatedMessage(2, this.route_list, (item: dependency_1.SceneRouteChangeInfo) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): SceneRouteChangeNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new SceneRouteChangeNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 12:
                    message.scene_id = reader.readUint32();
                    break;
                case 11:
                    message.scene_time = reader.readUint32();
                    break;
                case 2:
                    reader.readMessage(message.route_list, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_1.SceneRouteChangeInfo.deserialize(reader), dependency_1.SceneRouteChangeInfo));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): SceneRouteChangeNotify {
        return SceneRouteChangeNotify.deserialize(bytes);
    }
}
