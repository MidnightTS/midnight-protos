"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Shop_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Shop = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: Shop.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./ShopCardProduct");
const dependency_2 = require("./ShopConcertProduct");
const dependency_3 = require("./ShopGoods");
const dependency_4 = require("./ShopMcoinProduct");
const pb_1 = require("google-protobuf");
class Shop extends pb_1.Message {
    constructor(data) {
        super();
        _Shop_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3, 15, 14, 7], __classPrivateFieldGet(this, _Shop_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("concert_product_list" in data && data.concert_product_list != undefined) {
                this.concert_product_list = data.concert_product_list;
            }
            if ("goods_list" in data && data.goods_list != undefined) {
                this.goods_list = data.goods_list;
            }
            if ("city_reputation_level" in data && data.city_reputation_level != undefined) {
                this.city_reputation_level = data.city_reputation_level;
            }
            if ("card_product_list" in data && data.card_product_list != undefined) {
                this.card_product_list = data.card_product_list;
            }
            if ("mcoin_product_list" in data && data.mcoin_product_list != undefined) {
                this.mcoin_product_list = data.mcoin_product_list;
            }
            if ("next_refresh_time" in data && data.next_refresh_time != undefined) {
                this.next_refresh_time = data.next_refresh_time;
            }
            if ("city_id" in data && data.city_id != undefined) {
                this.city_id = data.city_id;
            }
            if ("shop_type" in data && data.shop_type != undefined) {
                this.shop_type = data.shop_type;
            }
        }
    }
    get concert_product_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_2.ShopConcertProduct, 3);
    }
    set concert_product_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 3, value);
    }
    get goods_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_3.ShopGoods, 15);
    }
    set goods_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 15, value);
    }
    get city_reputation_level() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0);
    }
    set city_reputation_level(value) {
        pb_1.Message.setField(this, 2, value);
    }
    get card_product_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ShopCardProduct, 14);
    }
    set card_product_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 14, value);
    }
    get mcoin_product_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_4.ShopMcoinProduct, 7);
    }
    set mcoin_product_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 7, value);
    }
    get next_refresh_time() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set next_refresh_time(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get city_id() {
        return pb_1.Message.getFieldWithDefault(this, 10, 0);
    }
    set city_id(value) {
        pb_1.Message.setField(this, 10, value);
    }
    get shop_type() {
        return pb_1.Message.getFieldWithDefault(this, 13, 0);
    }
    set shop_type(value) {
        pb_1.Message.setField(this, 13, value);
    }
    static fromObject(data) {
        const message = new Shop({});
        if (data.concert_product_list != null) {
            message.concert_product_list = data.concert_product_list.map(item => dependency_2.ShopConcertProduct.fromObject(item));
        }
        if (data.goods_list != null) {
            message.goods_list = data.goods_list.map(item => dependency_3.ShopGoods.fromObject(item));
        }
        if (data.city_reputation_level != null) {
            message.city_reputation_level = data.city_reputation_level;
        }
        if (data.card_product_list != null) {
            message.card_product_list = data.card_product_list.map(item => dependency_1.ShopCardProduct.fromObject(item));
        }
        if (data.mcoin_product_list != null) {
            message.mcoin_product_list = data.mcoin_product_list.map(item => dependency_4.ShopMcoinProduct.fromObject(item));
        }
        if (data.next_refresh_time != null) {
            message.next_refresh_time = data.next_refresh_time;
        }
        if (data.city_id != null) {
            message.city_id = data.city_id;
        }
        if (data.shop_type != null) {
            message.shop_type = data.shop_type;
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.concert_product_list != null) {
            data.concert_product_list = this.concert_product_list.map((item) => item.toObject());
        }
        if (this.goods_list != null) {
            data.goods_list = this.goods_list.map((item) => item.toObject());
        }
        if (this.city_reputation_level != null) {
            data.city_reputation_level = this.city_reputation_level;
        }
        if (this.card_product_list != null) {
            data.card_product_list = this.card_product_list.map((item) => item.toObject());
        }
        if (this.mcoin_product_list != null) {
            data.mcoin_product_list = this.mcoin_product_list.map((item) => item.toObject());
        }
        if (this.next_refresh_time != null) {
            data.next_refresh_time = this.next_refresh_time;
        }
        if (this.city_id != null) {
            data.city_id = this.city_id;
        }
        if (this.shop_type != null) {
            data.shop_type = this.shop_type;
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.concert_product_list.length)
            writer.writeRepeatedMessage(3, this.concert_product_list, (item) => item.serialize(writer));
        if (this.goods_list.length)
            writer.writeRepeatedMessage(15, this.goods_list, (item) => item.serialize(writer));
        if (this.city_reputation_level != 0)
            writer.writeUint32(2, this.city_reputation_level);
        if (this.card_product_list.length)
            writer.writeRepeatedMessage(14, this.card_product_list, (item) => item.serialize(writer));
        if (this.mcoin_product_list.length)
            writer.writeRepeatedMessage(7, this.mcoin_product_list, (item) => item.serialize(writer));
        if (this.next_refresh_time != 0)
            writer.writeUint32(11, this.next_refresh_time);
        if (this.city_id != 0)
            writer.writeUint32(10, this.city_id);
        if (this.shop_type != 0)
            writer.writeUint32(13, this.shop_type);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Shop();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 3:
                    reader.readMessage(message.concert_product_list, () => pb_1.Message.addToRepeatedWrapperField(message, 3, dependency_2.ShopConcertProduct.deserialize(reader), dependency_2.ShopConcertProduct));
                    break;
                case 15:
                    reader.readMessage(message.goods_list, () => pb_1.Message.addToRepeatedWrapperField(message, 15, dependency_3.ShopGoods.deserialize(reader), dependency_3.ShopGoods));
                    break;
                case 2:
                    message.city_reputation_level = reader.readUint32();
                    break;
                case 14:
                    reader.readMessage(message.card_product_list, () => pb_1.Message.addToRepeatedWrapperField(message, 14, dependency_1.ShopCardProduct.deserialize(reader), dependency_1.ShopCardProduct));
                    break;
                case 7:
                    reader.readMessage(message.mcoin_product_list, () => pb_1.Message.addToRepeatedWrapperField(message, 7, dependency_4.ShopMcoinProduct.deserialize(reader), dependency_4.ShopMcoinProduct));
                    break;
                case 11:
                    message.next_refresh_time = reader.readUint32();
                    break;
                case 10:
                    message.city_id = reader.readUint32();
                    break;
                case 13:
                    message.shop_type = reader.readUint32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return Shop.deserialize(bytes);
    }
}
exports.Shop = Shop;
_Shop_one_of_decls = new WeakMap();
