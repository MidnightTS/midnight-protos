"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _HomeNpcData_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.HomeNpcData = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: HomeNpcData.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./Vector");
const pb_1 = require("google-protobuf");
class HomeNpcData extends pb_1.Message {
    constructor(data) {
        super();
        _HomeNpcData_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], __classPrivateFieldGet(this, _HomeNpcData_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("avatar_id" in data && data.avatar_id != undefined) {
                this.avatar_id = data.avatar_id;
            }
            if ("spawn_pos" in data && data.spawn_pos != undefined) {
                this.spawn_pos = data.spawn_pos;
            }
            if ("costume_id" in data && data.costume_id != undefined) {
                this.costume_id = data.costume_id;
            }
            if ("spawn_rot" in data && data.spawn_rot != undefined) {
                this.spawn_rot = data.spawn_rot;
            }
        }
    }
    get avatar_id() {
        return pb_1.Message.getFieldWithDefault(this, 14, 0);
    }
    set avatar_id(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get spawn_pos() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 15);
    }
    set spawn_pos(value) {
        pb_1.Message.setWrapperField(this, 15, value);
    }
    get has_spawn_pos() {
        return pb_1.Message.getField(this, 15) != null;
    }
    get costume_id() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set costume_id(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get spawn_rot() {
        return pb_1.Message.getWrapperField(this, dependency_1.Vector, 13);
    }
    set spawn_rot(value) {
        pb_1.Message.setWrapperField(this, 13, value);
    }
    get has_spawn_rot() {
        return pb_1.Message.getField(this, 13) != null;
    }
    static fromObject(data) {
        const message = new HomeNpcData({});
        if (data.avatar_id != null) {
            message.avatar_id = data.avatar_id;
        }
        if (data.spawn_pos != null) {
            message.spawn_pos = dependency_1.Vector.fromObject(data.spawn_pos);
        }
        if (data.costume_id != null) {
            message.costume_id = data.costume_id;
        }
        if (data.spawn_rot != null) {
            message.spawn_rot = dependency_1.Vector.fromObject(data.spawn_rot);
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.avatar_id != null) {
            data.avatar_id = this.avatar_id;
        }
        if (this.spawn_pos != null) {
            data.spawn_pos = this.spawn_pos.toObject();
        }
        if (this.costume_id != null) {
            data.costume_id = this.costume_id;
        }
        if (this.spawn_rot != null) {
            data.spawn_rot = this.spawn_rot.toObject();
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.avatar_id != 0)
            writer.writeUint32(14, this.avatar_id);
        if (this.has_spawn_pos)
            writer.writeMessage(15, this.spawn_pos, () => this.spawn_pos.serialize(writer));
        if (this.costume_id != 0)
            writer.writeUint32(3, this.costume_id);
        if (this.has_spawn_rot)
            writer.writeMessage(13, this.spawn_rot, () => this.spawn_rot.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HomeNpcData();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 14:
                    message.avatar_id = reader.readUint32();
                    break;
                case 15:
                    reader.readMessage(message.spawn_pos, () => message.spawn_pos = dependency_1.Vector.deserialize(reader));
                    break;
                case 3:
                    message.costume_id = reader.readUint32();
                    break;
                case 13:
                    reader.readMessage(message.spawn_rot, () => message.spawn_rot = dependency_1.Vector.deserialize(reader));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return HomeNpcData.deserialize(bytes);
    }
}
exports.HomeNpcData = HomeNpcData;
_HomeNpcData_one_of_decls = new WeakMap();
