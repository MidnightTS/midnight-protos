/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EvtAnimatorParameterInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./AnimatorParameterValueInfo";
import * as pb_1 from "google-protobuf";
export class EvtAnimatorParameterInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        entity_id?: number;
        is_server_cache?: boolean;
        value?: dependency_1.AnimatorParameterValueInfo;
        name_id?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
            if ("is_server_cache" in data && data.is_server_cache != undefined) {
                this.is_server_cache = data.is_server_cache;
            }
            if ("value" in data && data.value != undefined) {
                this.value = data.value;
            }
            if ("name_id" in data && data.name_id != undefined) {
                this.name_id = data.name_id;
            }
        }
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set entity_id(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get is_server_cache() {
        return pb_1.Message.getFieldWithDefault(this, 5, false) as boolean;
    }
    set is_server_cache(value: boolean) {
        pb_1.Message.setField(this, 5, value);
    }
    get value() {
        return pb_1.Message.getWrapperField(this, dependency_1.AnimatorParameterValueInfo, 7) as dependency_1.AnimatorParameterValueInfo;
    }
    set value(value: dependency_1.AnimatorParameterValueInfo) {
        pb_1.Message.setWrapperField(this, 7, value);
    }
    get has_value() {
        return pb_1.Message.getField(this, 7) != null;
    }
    get name_id() {
        return pb_1.Message.getFieldWithDefault(this, 15, 0) as number;
    }
    set name_id(value: number) {
        pb_1.Message.setField(this, 15, value);
    }
    static fromObject(data: {
        entity_id?: number;
        is_server_cache?: boolean;
        value?: ReturnType<typeof dependency_1.AnimatorParameterValueInfo.prototype.toObject>;
        name_id?: number;
    }): EvtAnimatorParameterInfo {
        const message = new EvtAnimatorParameterInfo({});
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        if (data.is_server_cache != null) {
            message.is_server_cache = data.is_server_cache;
        }
        if (data.value != null) {
            message.value = dependency_1.AnimatorParameterValueInfo.fromObject(data.value);
        }
        if (data.name_id != null) {
            message.name_id = data.name_id;
        }
        return message;
    }
    toObject() {
        const data: {
            entity_id?: number;
            is_server_cache?: boolean;
            value?: ReturnType<typeof dependency_1.AnimatorParameterValueInfo.prototype.toObject>;
            name_id?: number;
        } = {};
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        if (this.is_server_cache != null) {
            data.is_server_cache = this.is_server_cache;
        }
        if (this.value != null) {
            data.value = this.value.toObject();
        }
        if (this.name_id != null) {
            data.name_id = this.name_id;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.entity_id != 0)
            writer.writeUint32(4, this.entity_id);
        if (this.is_server_cache != false)
            writer.writeBool(5, this.is_server_cache);
        if (this.has_value)
            writer.writeMessage(7, this.value, () => this.value.serialize(writer));
        if (this.name_id != 0)
            writer.writeInt32(15, this.name_id);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EvtAnimatorParameterInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EvtAnimatorParameterInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 4:
                    message.entity_id = reader.readUint32();
                    break;
                case 5:
                    message.is_server_cache = reader.readBool();
                    break;
                case 7:
                    reader.readMessage(message.value, () => message.value = dependency_1.AnimatorParameterValueInfo.deserialize(reader));
                    break;
                case 15:
                    message.name_id = reader.readInt32();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): EvtAnimatorParameterInfo {
        return EvtAnimatorParameterInfo.deserialize(bytes);
    }
}
