"use strict";
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ParentQuest_one_of_decls;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParentQuest = void 0;
/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: ParentQuest.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
const dependency_1 = require("./ChildQuest");
const dependency_2 = require("./ParentQuestRandomInfo");
const dependency_3 = require("./Unk3000_ENLDIHLGNCK");
const pb_1 = require("google-protobuf");
class ParentQuest extends pb_1.Message {
    constructor(data) {
        super();
        _ParentQuest_one_of_decls.set(this, []);
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [14, 15, 9], __classPrivateFieldGet(this, _ParentQuest_one_of_decls, "f"));
        if (!Array.isArray(data) && typeof data == "object") {
            if ("quest_var" in data && data.quest_var != undefined) {
                this.quest_var = data.quest_var;
            }
            if ("time_var_map" in data && data.time_var_map != undefined) {
                this.time_var_map = data.time_var_map;
            }
            if ("parent_quest_state" in data && data.parent_quest_state != undefined) {
                this.parent_quest_state = data.parent_quest_state;
            }
            if ("is_finished" in data && data.is_finished != undefined) {
                this.is_finished = data.is_finished;
            }
            if ("Unk3000_HLPGILIGGCB" in data && data.Unk3000_HLPGILIGGCB != undefined) {
                this.Unk3000_HLPGILIGGCB = data.Unk3000_HLPGILIGGCB;
            }
            if ("random_info" in data && data.random_info != undefined) {
                this.random_info = data.random_info;
            }
            if ("parent_quest_id" in data && data.parent_quest_id != undefined) {
                this.parent_quest_id = data.parent_quest_id;
            }
            if ("is_random" in data && data.is_random != undefined) {
                this.is_random = data.is_random;
            }
            if ("Unk2700_KHDDIJNOICK" in data && data.Unk2700_KHDDIJNOICK != undefined) {
                this.Unk2700_KHDDIJNOICK = data.Unk2700_KHDDIJNOICK;
            }
            if ("quest_var_seq" in data && data.quest_var_seq != undefined) {
                this.quest_var_seq = data.quest_var_seq;
            }
            if ("child_quest_list" in data && data.child_quest_list != undefined) {
                this.child_quest_list = data.child_quest_list;
            }
        }
        if (!this.time_var_map)
            this.time_var_map = new Map();
    }
    get quest_var() {
        return pb_1.Message.getFieldWithDefault(this, 14, []);
    }
    set quest_var(value) {
        pb_1.Message.setField(this, 14, value);
    }
    get time_var_map() {
        return pb_1.Message.getField(this, 8);
    }
    set time_var_map(value) {
        pb_1.Message.setField(this, 8, value);
    }
    get parent_quest_state() {
        return pb_1.Message.getFieldWithDefault(this, 1, 0);
    }
    set parent_quest_state(value) {
        pb_1.Message.setField(this, 1, value);
    }
    get is_finished() {
        return pb_1.Message.getFieldWithDefault(this, 7, false);
    }
    set is_finished(value) {
        pb_1.Message.setField(this, 7, value);
    }
    get Unk3000_HLPGILIGGCB() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_3.Unk3000_ENLDIHLGNCK, 15);
    }
    set Unk3000_HLPGILIGGCB(value) {
        pb_1.Message.setRepeatedWrapperField(this, 15, value);
    }
    get random_info() {
        return pb_1.Message.getWrapperField(this, dependency_2.ParentQuestRandomInfo, 12);
    }
    set random_info(value) {
        pb_1.Message.setWrapperField(this, 12, value);
    }
    get has_random_info() {
        return pb_1.Message.getField(this, 12) != null;
    }
    get parent_quest_id() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0);
    }
    set parent_quest_id(value) {
        pb_1.Message.setField(this, 3, value);
    }
    get is_random() {
        return pb_1.Message.getFieldWithDefault(this, 13, false);
    }
    set is_random(value) {
        pb_1.Message.setField(this, 13, value);
    }
    get Unk2700_KHDDIJNOICK() {
        return pb_1.Message.getFieldWithDefault(this, 6, 0);
    }
    set Unk2700_KHDDIJNOICK(value) {
        pb_1.Message.setField(this, 6, value);
    }
    get quest_var_seq() {
        return pb_1.Message.getFieldWithDefault(this, 11, 0);
    }
    set quest_var_seq(value) {
        pb_1.Message.setField(this, 11, value);
    }
    get child_quest_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.ChildQuest, 9);
    }
    set child_quest_list(value) {
        pb_1.Message.setRepeatedWrapperField(this, 9, value);
    }
    static fromObject(data) {
        const message = new ParentQuest({});
        if (data.quest_var != null) {
            message.quest_var = data.quest_var;
        }
        if (typeof data.time_var_map == "object") {
            message.time_var_map = new Map(Object.entries(data.time_var_map).map(([key, value]) => [Number(key), value]));
        }
        if (data.parent_quest_state != null) {
            message.parent_quest_state = data.parent_quest_state;
        }
        if (data.is_finished != null) {
            message.is_finished = data.is_finished;
        }
        if (data.Unk3000_HLPGILIGGCB != null) {
            message.Unk3000_HLPGILIGGCB = data.Unk3000_HLPGILIGGCB.map(item => dependency_3.Unk3000_ENLDIHLGNCK.fromObject(item));
        }
        if (data.random_info != null) {
            message.random_info = dependency_2.ParentQuestRandomInfo.fromObject(data.random_info);
        }
        if (data.parent_quest_id != null) {
            message.parent_quest_id = data.parent_quest_id;
        }
        if (data.is_random != null) {
            message.is_random = data.is_random;
        }
        if (data.Unk2700_KHDDIJNOICK != null) {
            message.Unk2700_KHDDIJNOICK = data.Unk2700_KHDDIJNOICK;
        }
        if (data.quest_var_seq != null) {
            message.quest_var_seq = data.quest_var_seq;
        }
        if (data.child_quest_list != null) {
            message.child_quest_list = data.child_quest_list.map(item => dependency_1.ChildQuest.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data = {};
        if (this.quest_var != null) {
            data.quest_var = this.quest_var;
        }
        if (this.time_var_map.size > 0) {
            data.time_var_map = (Object.fromEntries)(this.time_var_map);
        }
        if (this.parent_quest_state != null) {
            data.parent_quest_state = this.parent_quest_state;
        }
        if (this.is_finished != null) {
            data.is_finished = this.is_finished;
        }
        if (this.Unk3000_HLPGILIGGCB != null) {
            data.Unk3000_HLPGILIGGCB = this.Unk3000_HLPGILIGGCB.map((item) => item.toObject());
        }
        if (this.random_info != null) {
            data.random_info = this.random_info.toObject();
        }
        if (this.parent_quest_id != null) {
            data.parent_quest_id = this.parent_quest_id;
        }
        if (this.is_random != null) {
            data.is_random = this.is_random;
        }
        if (this.Unk2700_KHDDIJNOICK != null) {
            data.Unk2700_KHDDIJNOICK = this.Unk2700_KHDDIJNOICK;
        }
        if (this.quest_var_seq != null) {
            data.quest_var_seq = this.quest_var_seq;
        }
        if (this.child_quest_list != null) {
            data.child_quest_list = this.child_quest_list.map((item) => item.toObject());
        }
        return data;
    }
    serialize(w) {
        const writer = w || new pb_1.BinaryWriter();
        if (this.quest_var.length)
            writer.writePackedInt32(14, this.quest_var);
        for (const [key, value] of this.time_var_map) {
            writer.writeMessage(8, this.time_var_map, () => {
                writer.writeUint32(1, key);
                writer.writeUint32(2, value);
            });
        }
        if (this.parent_quest_state != 0)
            writer.writeUint32(1, this.parent_quest_state);
        if (this.is_finished != false)
            writer.writeBool(7, this.is_finished);
        if (this.Unk3000_HLPGILIGGCB.length)
            writer.writeRepeatedMessage(15, this.Unk3000_HLPGILIGGCB, (item) => item.serialize(writer));
        if (this.has_random_info)
            writer.writeMessage(12, this.random_info, () => this.random_info.serialize(writer));
        if (this.parent_quest_id != 0)
            writer.writeUint32(3, this.parent_quest_id);
        if (this.is_random != false)
            writer.writeBool(13, this.is_random);
        if (this.Unk2700_KHDDIJNOICK != 0)
            writer.writeUint64(6, this.Unk2700_KHDDIJNOICK);
        if (this.quest_var_seq != 0)
            writer.writeUint32(11, this.quest_var_seq);
        if (this.child_quest_list.length)
            writer.writeRepeatedMessage(9, this.child_quest_list, (item) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes) {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ParentQuest();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 14:
                    message.quest_var = reader.readPackedInt32();
                    break;
                case 8:
                    reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.time_var_map, reader, reader.readUint32, reader.readUint32));
                    break;
                case 1:
                    message.parent_quest_state = reader.readUint32();
                    break;
                case 7:
                    message.is_finished = reader.readBool();
                    break;
                case 15:
                    reader.readMessage(message.Unk3000_HLPGILIGGCB, () => pb_1.Message.addToRepeatedWrapperField(message, 15, dependency_3.Unk3000_ENLDIHLGNCK.deserialize(reader), dependency_3.Unk3000_ENLDIHLGNCK));
                    break;
                case 12:
                    reader.readMessage(message.random_info, () => message.random_info = dependency_2.ParentQuestRandomInfo.deserialize(reader));
                    break;
                case 3:
                    message.parent_quest_id = reader.readUint32();
                    break;
                case 13:
                    message.is_random = reader.readBool();
                    break;
                case 6:
                    message.Unk2700_KHDDIJNOICK = reader.readUint64();
                    break;
                case 11:
                    message.quest_var_seq = reader.readUint32();
                    break;
                case 9:
                    reader.readMessage(message.child_quest_list, () => pb_1.Message.addToRepeatedWrapperField(message, 9, dependency_1.ChildQuest.deserialize(reader), dependency_1.ChildQuest));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary() {
        return this.serialize();
    }
    static deserializeBinary(bytes) {
        return ParentQuest.deserialize(bytes);
    }
}
exports.ParentQuest = ParentQuest;
_ParentQuest_one_of_decls = new WeakMap();
