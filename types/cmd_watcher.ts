// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "cmd_watcher.proto" (package "com.midnights.game", syntax proto3)
// tslint:disable
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
/**
 * @generated from protobuf message com.midnights.game.WatcherAllDataNotify
 */
export interface WatcherAllDataNotify {
    /**
     * @generated from protobuf field: repeated uint32 watcher_list = 4;
     */
    watcherList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.WatcherAllDataNotify.CmdId
 */
export enum WatcherAllDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2272;
     */
    CMD_ID = 2272,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.WatcherChangeNotify
 */
export interface WatcherChangeNotify {
    /**
     * @generated from protobuf field: repeated uint32 removed_watcher_list = 2;
     */
    removedWatcherList: number[];
    /**
     * @generated from protobuf field: repeated uint32 new_watcher_list = 15;
     */
    newWatcherList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.WatcherChangeNotify.CmdId
 */
export enum WatcherChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2298;
     */
    CMD_ID = 2298,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.WatcherEventNotify
 */
export interface WatcherEventNotify {
    /**
     * @generated from protobuf field: optional uint32 add_progress = 6;
     */
    addProgress?: number;
    /**
     * @generated from protobuf field: optional uint32 watcher_id = 9;
     */
    watcherId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.WatcherEventNotify.CmdId
 */
export enum WatcherEventNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2212;
     */
    CMD_ID = 2212,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.WatcherEventTypeNotify
 */
export interface WatcherEventTypeNotify {
    /**
     * @generated from protobuf field: repeated uint32 param_list = 14;
     */
    paramList: number[];
    /**
     * @generated from protobuf field: optional uint32 add_progress = 15;
     */
    addProgress?: number;
    /**
     * @generated from protobuf field: optional uint32 watcher_trigger_type = 11;
     */
    watcherTriggerType?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.WatcherEventTypeNotify.CmdId
 */
export enum WatcherEventTypeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2235;
     */
    CMD_ID = 2235,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.WatcherEventStageNotify
 */
export interface WatcherEventStageNotify {
    /**
     * @generated from protobuf field: optional uint32 add_progress = 4;
     */
    addProgress?: number;
    /**
     * @generated from protobuf field: optional uint32 stage = 2;
     */
    stage?: number;
    /**
     * @generated from protobuf field: optional uint32 watcher_id = 12;
     */
    watcherId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.WatcherEventStageNotify.CmdId
 */
export enum WatcherEventStageNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2207;
     */
    CMD_ID = 2207,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PushTipsData
 */
export interface PushTipsData {
    /**
     * @generated from protobuf field: optional uint32 push_tips_id = 13;
     */
    pushTipsId?: number;
    /**
     * @generated from protobuf field: optional uint32 state = 4;
     */
    state?: number;
}
/**
 * @generated from protobuf message com.midnights.game.PushTipsAllDataNotify
 */
export interface PushTipsAllDataNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.PushTipsData push_tips_list = 4;
     */
    pushTipsList: PushTipsData[];
}
/**
 * @generated from protobuf enum com.midnights.game.PushTipsAllDataNotify.CmdId
 */
export enum PushTipsAllDataNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2222;
     */
    CMD_ID = 2222,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PushTipsChangeNotify
 */
export interface PushTipsChangeNotify {
    /**
     * @generated from protobuf field: repeated com.midnights.game.PushTipsData push_tips_list = 9;
     */
    pushTipsList: PushTipsData[];
}
/**
 * @generated from protobuf enum com.midnights.game.PushTipsChangeNotify.CmdId
 */
export enum PushTipsChangeNotify_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2265;
     */
    CMD_ID = 2265,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.PushTipsReadFinishReq
 */
export interface PushTipsReadFinishReq {
    /**
     * @generated from protobuf field: optional uint32 push_tips_id = 11;
     */
    pushTipsId?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PushTipsReadFinishReq.CmdId
 */
export enum PushTipsReadFinishReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2204;
     */
    CMD_ID = 2204,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.PushTipsReadFinishRsp
 */
export interface PushTipsReadFinishRsp {
    /**
     * @generated from protobuf field: optional uint32 push_tips_id = 3;
     */
    pushTipsId?: number;
    /**
     * @generated from protobuf field: optional int32 retcode = 9;
     */
    retcode?: number;
}
/**
 * @generated from protobuf enum com.midnights.game.PushTipsReadFinishRsp.CmdId
 */
export enum PushTipsReadFinishRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2293;
     */
    CMD_ID = 2293,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPushTipsRewardReq
 */
export interface GetPushTipsRewardReq {
    /**
     * @generated from protobuf field: repeated uint32 push_tips_id_list = 4;
     */
    pushTipsIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetPushTipsRewardReq.CmdId
 */
export enum GetPushTipsRewardReq_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2227;
     */
    CMD_ID = 2227,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    IS_ALLOW_CLIENT = 1
}
/**
 * @generated from protobuf message com.midnights.game.GetPushTipsRewardRsp
 */
export interface GetPushTipsRewardRsp {
    /**
     * @generated from protobuf field: optional int32 retcode = 10;
     */
    retcode?: number;
    /**
     * @generated from protobuf field: repeated uint32 push_tips_id_list = 9;
     */
    pushTipsIdList: number[];
}
/**
 * @generated from protobuf enum com.midnights.game.GetPushTipsRewardRsp.CmdId
 */
export enum GetPushTipsRewardRsp_CmdId {
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: CMD_ID = 2294;
     */
    CMD_ID = 2294,
    /**
     * @generated from protobuf enum value: NONE = 0;
     */
    ENET_CHANNEL_ID = 0,
    /**
     * @generated from protobuf enum value: ENET_IS_RELIABLE = 1;
     */
    ENET_IS_RELIABLE = 1
}
/**
 * @generated from protobuf enum com.midnights.game.PushTipsState
 */
export enum PushTipsState {
    /**
     * @generated from protobuf enum value: PUSH_TIPS_STATE_NONE = 0;
     */
    NONE = 0,
    /**
     * @generated from protobuf enum value: PUSH_TIPS_STATE_START = 1;
     */
    START = 1,
    /**
     * @generated from protobuf enum value: PUSH_TIPS_STATE_READ = 2;
     */
    READ = 2,
    /**
     * @generated from protobuf enum value: PUSH_TIPS_STATE_FINISH = 3;
     */
    FINISH = 3
}
// @generated message type with reflection information, may provide speed optimized methods
class WatcherAllDataNotify$Type extends MessageType<WatcherAllDataNotify> {
    constructor() {
        super("com.midnights.game.WatcherAllDataNotify", [
            { no: 4, name: "watcher_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<WatcherAllDataNotify>): WatcherAllDataNotify {
        const message = { watcherList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WatcherAllDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WatcherAllDataNotify): WatcherAllDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 watcher_list */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.watcherList.push(reader.uint32());
                    else
                        message.watcherList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WatcherAllDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 watcher_list = 4; */
        if (message.watcherList.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.watcherList.length; i++)
                writer.uint32(message.watcherList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WatcherAllDataNotify
 */
export const WatcherAllDataNotify = new WatcherAllDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatcherChangeNotify$Type extends MessageType<WatcherChangeNotify> {
    constructor() {
        super("com.midnights.game.WatcherChangeNotify", [
            { no: 2, name: "removed_watcher_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "new_watcher_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<WatcherChangeNotify>): WatcherChangeNotify {
        const message = { removedWatcherList: [], newWatcherList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WatcherChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WatcherChangeNotify): WatcherChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 removed_watcher_list */ 2:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.removedWatcherList.push(reader.uint32());
                    else
                        message.removedWatcherList.push(reader.uint32());
                    break;
                case /* repeated uint32 new_watcher_list */ 15:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.newWatcherList.push(reader.uint32());
                    else
                        message.newWatcherList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WatcherChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 removed_watcher_list = 2; */
        if (message.removedWatcherList.length) {
            writer.tag(2, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.removedWatcherList.length; i++)
                writer.uint32(message.removedWatcherList[i]);
            writer.join();
        }
        /* repeated uint32 new_watcher_list = 15; */
        if (message.newWatcherList.length) {
            writer.tag(15, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.newWatcherList.length; i++)
                writer.uint32(message.newWatcherList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WatcherChangeNotify
 */
export const WatcherChangeNotify = new WatcherChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatcherEventNotify$Type extends MessageType<WatcherEventNotify> {
    constructor() {
        super("com.midnights.game.WatcherEventNotify", [
            { no: 6, name: "add_progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "watcher_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<WatcherEventNotify>): WatcherEventNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WatcherEventNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WatcherEventNotify): WatcherEventNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 add_progress */ 6:
                    message.addProgress = reader.uint32();
                    break;
                case /* optional uint32 watcher_id */ 9:
                    message.watcherId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WatcherEventNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 add_progress = 6; */
        if (message.addProgress !== undefined)
            writer.tag(6, WireType.Varint).uint32(message.addProgress);
        /* optional uint32 watcher_id = 9; */
        if (message.watcherId !== undefined)
            writer.tag(9, WireType.Varint).uint32(message.watcherId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WatcherEventNotify
 */
export const WatcherEventNotify = new WatcherEventNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatcherEventTypeNotify$Type extends MessageType<WatcherEventTypeNotify> {
    constructor() {
        super("com.midnights.game.WatcherEventTypeNotify", [
            { no: 14, name: "param_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ },
            { no: 15, name: "add_progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 11, name: "watcher_trigger_type", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<WatcherEventTypeNotify>): WatcherEventTypeNotify {
        const message = { paramList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WatcherEventTypeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WatcherEventTypeNotify): WatcherEventTypeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 param_list */ 14:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.paramList.push(reader.uint32());
                    else
                        message.paramList.push(reader.uint32());
                    break;
                case /* optional uint32 add_progress */ 15:
                    message.addProgress = reader.uint32();
                    break;
                case /* optional uint32 watcher_trigger_type */ 11:
                    message.watcherTriggerType = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WatcherEventTypeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 param_list = 14; */
        if (message.paramList.length) {
            writer.tag(14, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.paramList.length; i++)
                writer.uint32(message.paramList[i]);
            writer.join();
        }
        /* optional uint32 add_progress = 15; */
        if (message.addProgress !== undefined)
            writer.tag(15, WireType.Varint).uint32(message.addProgress);
        /* optional uint32 watcher_trigger_type = 11; */
        if (message.watcherTriggerType !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.watcherTriggerType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WatcherEventTypeNotify
 */
export const WatcherEventTypeNotify = new WatcherEventTypeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WatcherEventStageNotify$Type extends MessageType<WatcherEventStageNotify> {
    constructor() {
        super("com.midnights.game.WatcherEventStageNotify", [
            { no: 4, name: "add_progress", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 2, name: "stage", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 12, name: "watcher_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<WatcherEventStageNotify>): WatcherEventStageNotify {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<WatcherEventStageNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: WatcherEventStageNotify): WatcherEventStageNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 add_progress */ 4:
                    message.addProgress = reader.uint32();
                    break;
                case /* optional uint32 stage */ 2:
                    message.stage = reader.uint32();
                    break;
                case /* optional uint32 watcher_id */ 12:
                    message.watcherId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: WatcherEventStageNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 add_progress = 4; */
        if (message.addProgress !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.addProgress);
        /* optional uint32 stage = 2; */
        if (message.stage !== undefined)
            writer.tag(2, WireType.Varint).uint32(message.stage);
        /* optional uint32 watcher_id = 12; */
        if (message.watcherId !== undefined)
            writer.tag(12, WireType.Varint).uint32(message.watcherId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.WatcherEventStageNotify
 */
export const WatcherEventStageNotify = new WatcherEventStageNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PushTipsData$Type extends MessageType<PushTipsData> {
    constructor() {
        super("com.midnights.game.PushTipsData", [
            { no: 13, name: "push_tips_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 4, name: "state", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PushTipsData>): PushTipsData {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PushTipsData>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PushTipsData): PushTipsData {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 push_tips_id */ 13:
                    message.pushTipsId = reader.uint32();
                    break;
                case /* optional uint32 state */ 4:
                    message.state = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PushTipsData, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 push_tips_id = 13; */
        if (message.pushTipsId !== undefined)
            writer.tag(13, WireType.Varint).uint32(message.pushTipsId);
        /* optional uint32 state = 4; */
        if (message.state !== undefined)
            writer.tag(4, WireType.Varint).uint32(message.state);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PushTipsData
 */
export const PushTipsData = new PushTipsData$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PushTipsAllDataNotify$Type extends MessageType<PushTipsAllDataNotify> {
    constructor() {
        super("com.midnights.game.PushTipsAllDataNotify", [
            { no: 4, name: "push_tips_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PushTipsData }
        ]);
    }
    create(value?: PartialMessage<PushTipsAllDataNotify>): PushTipsAllDataNotify {
        const message = { pushTipsList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PushTipsAllDataNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PushTipsAllDataNotify): PushTipsAllDataNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.PushTipsData push_tips_list */ 4:
                    message.pushTipsList.push(PushTipsData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PushTipsAllDataNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.PushTipsData push_tips_list = 4; */
        for (let i = 0; i < message.pushTipsList.length; i++)
            PushTipsData.internalBinaryWrite(message.pushTipsList[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PushTipsAllDataNotify
 */
export const PushTipsAllDataNotify = new PushTipsAllDataNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PushTipsChangeNotify$Type extends MessageType<PushTipsChangeNotify> {
    constructor() {
        super("com.midnights.game.PushTipsChangeNotify", [
            { no: 9, name: "push_tips_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => PushTipsData }
        ]);
    }
    create(value?: PartialMessage<PushTipsChangeNotify>): PushTipsChangeNotify {
        const message = { pushTipsList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PushTipsChangeNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PushTipsChangeNotify): PushTipsChangeNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated com.midnights.game.PushTipsData push_tips_list */ 9:
                    message.pushTipsList.push(PushTipsData.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PushTipsChangeNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated com.midnights.game.PushTipsData push_tips_list = 9; */
        for (let i = 0; i < message.pushTipsList.length; i++)
            PushTipsData.internalBinaryWrite(message.pushTipsList[i], writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PushTipsChangeNotify
 */
export const PushTipsChangeNotify = new PushTipsChangeNotify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PushTipsReadFinishReq$Type extends MessageType<PushTipsReadFinishReq> {
    constructor() {
        super("com.midnights.game.PushTipsReadFinishReq", [
            { no: 11, name: "push_tips_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<PushTipsReadFinishReq>): PushTipsReadFinishReq {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PushTipsReadFinishReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PushTipsReadFinishReq): PushTipsReadFinishReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 push_tips_id */ 11:
                    message.pushTipsId = reader.uint32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PushTipsReadFinishReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 push_tips_id = 11; */
        if (message.pushTipsId !== undefined)
            writer.tag(11, WireType.Varint).uint32(message.pushTipsId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PushTipsReadFinishReq
 */
export const PushTipsReadFinishReq = new PushTipsReadFinishReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PushTipsReadFinishRsp$Type extends MessageType<PushTipsReadFinishRsp> {
    constructor() {
        super("com.midnights.game.PushTipsReadFinishRsp", [
            { no: 3, name: "push_tips_id", kind: "scalar", opt: true, T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<PushTipsReadFinishRsp>): PushTipsReadFinishRsp {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<PushTipsReadFinishRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: PushTipsReadFinishRsp): PushTipsReadFinishRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional uint32 push_tips_id */ 3:
                    message.pushTipsId = reader.uint32();
                    break;
                case /* optional int32 retcode */ 9:
                    message.retcode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: PushTipsReadFinishRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional uint32 push_tips_id = 3; */
        if (message.pushTipsId !== undefined)
            writer.tag(3, WireType.Varint).uint32(message.pushTipsId);
        /* optional int32 retcode = 9; */
        if (message.retcode !== undefined)
            writer.tag(9, WireType.Varint).int32(message.retcode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.PushTipsReadFinishRsp
 */
export const PushTipsReadFinishRsp = new PushTipsReadFinishRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPushTipsRewardReq$Type extends MessageType<GetPushTipsRewardReq> {
    constructor() {
        super("com.midnights.game.GetPushTipsRewardReq", [
            { no: 4, name: "push_tips_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetPushTipsRewardReq>): GetPushTipsRewardReq {
        const message = { pushTipsIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPushTipsRewardReq>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPushTipsRewardReq): GetPushTipsRewardReq {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated uint32 push_tips_id_list */ 4:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.pushTipsIdList.push(reader.uint32());
                    else
                        message.pushTipsIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPushTipsRewardReq, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* repeated uint32 push_tips_id_list = 4; */
        if (message.pushTipsIdList.length) {
            writer.tag(4, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.pushTipsIdList.length; i++)
                writer.uint32(message.pushTipsIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPushTipsRewardReq
 */
export const GetPushTipsRewardReq = new GetPushTipsRewardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GetPushTipsRewardRsp$Type extends MessageType<GetPushTipsRewardRsp> {
    constructor() {
        super("com.midnights.game.GetPushTipsRewardRsp", [
            { no: 10, name: "retcode", kind: "scalar", opt: true, T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "push_tips_id_list", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 13 /*ScalarType.UINT32*/ }
        ]);
    }
    create(value?: PartialMessage<GetPushTipsRewardRsp>): GetPushTipsRewardRsp {
        const message = { pushTipsIdList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<GetPushTipsRewardRsp>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: GetPushTipsRewardRsp): GetPushTipsRewardRsp {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* optional int32 retcode */ 10:
                    message.retcode = reader.int32();
                    break;
                case /* repeated uint32 push_tips_id_list */ 9:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.pushTipsIdList.push(reader.uint32());
                    else
                        message.pushTipsIdList.push(reader.uint32());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: GetPushTipsRewardRsp, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* optional int32 retcode = 10; */
        if (message.retcode !== undefined)
            writer.tag(10, WireType.Varint).int32(message.retcode);
        /* repeated uint32 push_tips_id_list = 9; */
        if (message.pushTipsIdList.length) {
            writer.tag(9, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.pushTipsIdList.length; i++)
                writer.uint32(message.pushTipsIdList[i]);
            writer.join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message com.midnights.game.GetPushTipsRewardRsp
 */
export const GetPushTipsRewardRsp = new GetPushTipsRewardRsp$Type();
