/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: VehicleInfo.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./VehicleMember";
import * as pb_1 from "google-protobuf";
export class VehicleInfo extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        member_list?: dependency_1.VehicleMember[];
        owner_uid?: number;
        cur_stamina?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("member_list" in data && data.member_list != undefined) {
                this.member_list = data.member_list;
            }
            if ("owner_uid" in data && data.owner_uid != undefined) {
                this.owner_uid = data.owner_uid;
            }
            if ("cur_stamina" in data && data.cur_stamina != undefined) {
                this.cur_stamina = data.cur_stamina;
            }
        }
    }
    get member_list() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_1.VehicleMember, 1) as dependency_1.VehicleMember[];
    }
    set member_list(value: dependency_1.VehicleMember[]) {
        pb_1.Message.setRepeatedWrapperField(this, 1, value);
    }
    get owner_uid() {
        return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
    }
    set owner_uid(value: number) {
        pb_1.Message.setField(this, 2, value);
    }
    get cur_stamina() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set cur_stamina(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    static fromObject(data: {
        member_list?: ReturnType<typeof dependency_1.VehicleMember.prototype.toObject>[];
        owner_uid?: number;
        cur_stamina?: number;
    }): VehicleInfo {
        const message = new VehicleInfo({});
        if (data.member_list != null) {
            message.member_list = data.member_list.map(item => dependency_1.VehicleMember.fromObject(item));
        }
        if (data.owner_uid != null) {
            message.owner_uid = data.owner_uid;
        }
        if (data.cur_stamina != null) {
            message.cur_stamina = data.cur_stamina;
        }
        return message;
    }
    toObject() {
        const data: {
            member_list?: ReturnType<typeof dependency_1.VehicleMember.prototype.toObject>[];
            owner_uid?: number;
            cur_stamina?: number;
        } = {};
        if (this.member_list != null) {
            data.member_list = this.member_list.map((item: dependency_1.VehicleMember) => item.toObject());
        }
        if (this.owner_uid != null) {
            data.owner_uid = this.owner_uid;
        }
        if (this.cur_stamina != null) {
            data.cur_stamina = this.cur_stamina;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.member_list.length)
            writer.writeRepeatedMessage(1, this.member_list, (item: dependency_1.VehicleMember) => item.serialize(writer));
        if (this.owner_uid != 0)
            writer.writeUint32(2, this.owner_uid);
        if (this.cur_stamina != 0)
            writer.writeFloat(3, this.cur_stamina);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): VehicleInfo {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new VehicleInfo();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.member_list, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_1.VehicleMember.deserialize(reader), dependency_1.VehicleMember));
                    break;
                case 2:
                    message.owner_uid = reader.readUint32();
                    break;
                case 3:
                    message.cur_stamina = reader.readFloat();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): VehicleInfo {
        return VehicleInfo.deserialize(bytes);
    }
}
