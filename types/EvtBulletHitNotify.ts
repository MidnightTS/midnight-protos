// @generated by protobuf-ts 2.8.1 with parameter output_typescript
// @generated from protobuf file "EvtBulletHitNotify.proto" (syntax proto3)
// tslint:disable
//
// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.
//
import type { BinaryWriteOptions } from "@protobuf-ts/runtime";
import type { IBinaryWriter } from "@protobuf-ts/runtime";
import { WireType } from "@protobuf-ts/runtime";
import type { BinaryReadOptions } from "@protobuf-ts/runtime";
import type { IBinaryReader } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import type { PartialMessage } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
import { HitColliderType } from "./HitColliderType";
import { Vector } from "./Vector";
import { ForwardType } from "./ForwardType";
/**
 * enum CmdId {
 *   option allow_alias = true;
 *   NONE = 0;
 *   CMD_ID = 348;
 *   ENET_CHANNEL_ID = 0;
 *   ENET_IS_RELIABLE = 1;
 *   IS_ALLOW_CLIENT = 1;
 * }
 *
 * @generated from protobuf message EvtBulletHitNotify
 */
export interface EvtBulletHitNotify {
    /**
     * @generated from protobuf field: ForwardType forward_type = 2;
     */
    forwardType: ForwardType;
    /**
     * @generated from protobuf field: uint32 Unk3300_ELNFDKNGHFP = 4 [json_name = "Unk3300ELNFDKNGHFP"];
     */
    unk3300ELNFDKNGHFP: number;
    /**
     * @generated from protobuf field: Vector hit_normal = 9;
     */
    hitNormal?: Vector;
    /**
     * @generated from protobuf field: uint32 Unk3300_KANAJBJHCLG = 6 [json_name = "Unk3300KANAJBJHCLG"];
     */
    unk3300KANAJBJHCLG: number;
    /**
     * @generated from protobuf field: Vector hit_point = 8;
     */
    hitPoint?: Vector;
    /**
     * @generated from protobuf field: HitColliderType hit_collider_type = 10;
     */
    hitColliderType: HitColliderType;
    /**
     * @generated from protobuf field: uint32 entity_id = 14;
     */
    entityId: number;
    /**
     * @generated from protobuf field: uint32 forward_peer = 3;
     */
    forwardPeer: number;
    /**
     * @generated from protobuf field: int32 hit_box_index = 1;
     */
    hitBoxIndex: number;
}
// @generated message type with reflection information, may provide speed optimized methods
class EvtBulletHitNotify$Type extends MessageType<EvtBulletHitNotify> {
    constructor() {
        super("EvtBulletHitNotify", [
            { no: 2, name: "forward_type", kind: "enum", T: () => ["ForwardType", ForwardType, "FORWARD_TYPE_"] },
            { no: 4, name: "Unk3300_ELNFDKNGHFP", kind: "scalar", jsonName: "Unk3300ELNFDKNGHFP", T: 13 /*ScalarType.UINT32*/ },
            { no: 9, name: "hit_normal", kind: "message", T: () => Vector },
            { no: 6, name: "Unk3300_KANAJBJHCLG", kind: "scalar", jsonName: "Unk3300KANAJBJHCLG", T: 13 /*ScalarType.UINT32*/ },
            { no: 8, name: "hit_point", kind: "message", T: () => Vector },
            { no: 10, name: "hit_collider_type", kind: "enum", T: () => ["HitColliderType", HitColliderType, "HIT_COLLIDER_TYPE_"] },
            { no: 14, name: "entity_id", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 3, name: "forward_peer", kind: "scalar", T: 13 /*ScalarType.UINT32*/ },
            { no: 1, name: "hit_box_index", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value?: PartialMessage<EvtBulletHitNotify>): EvtBulletHitNotify {
        const message = { forwardType: 0, unk3300ELNFDKNGHFP: 0, unk3300KANAJBJHCLG: 0, hitColliderType: 0, entityId: 0, forwardPeer: 0, hitBoxIndex: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial<EvtBulletHitNotify>(this, message, value);
        return message;
    }
    internalBinaryRead(reader: IBinaryReader, length: number, options: BinaryReadOptions, target?: EvtBulletHitNotify): EvtBulletHitNotify {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* ForwardType forward_type */ 2:
                    message.forwardType = reader.int32();
                    break;
                case /* uint32 Unk3300_ELNFDKNGHFP = 4 [json_name = "Unk3300ELNFDKNGHFP"];*/ 4:
                    message.unk3300ELNFDKNGHFP = reader.uint32();
                    break;
                case /* Vector hit_normal */ 9:
                    message.hitNormal = Vector.internalBinaryRead(reader, reader.uint32(), options, message.hitNormal);
                    break;
                case /* uint32 Unk3300_KANAJBJHCLG = 6 [json_name = "Unk3300KANAJBJHCLG"];*/ 6:
                    message.unk3300KANAJBJHCLG = reader.uint32();
                    break;
                case /* Vector hit_point */ 8:
                    message.hitPoint = Vector.internalBinaryRead(reader, reader.uint32(), options, message.hitPoint);
                    break;
                case /* HitColliderType hit_collider_type */ 10:
                    message.hitColliderType = reader.int32();
                    break;
                case /* uint32 entity_id */ 14:
                    message.entityId = reader.uint32();
                    break;
                case /* uint32 forward_peer */ 3:
                    message.forwardPeer = reader.uint32();
                    break;
                case /* int32 hit_box_index */ 1:
                    message.hitBoxIndex = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message: EvtBulletHitNotify, writer: IBinaryWriter, options: BinaryWriteOptions): IBinaryWriter {
        /* ForwardType forward_type = 2; */
        if (message.forwardType !== 0)
            writer.tag(2, WireType.Varint).int32(message.forwardType);
        /* uint32 Unk3300_ELNFDKNGHFP = 4 [json_name = "Unk3300ELNFDKNGHFP"]; */
        if (message.unk3300ELNFDKNGHFP !== 0)
            writer.tag(4, WireType.Varint).uint32(message.unk3300ELNFDKNGHFP);
        /* Vector hit_normal = 9; */
        if (message.hitNormal)
            Vector.internalBinaryWrite(message.hitNormal, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* uint32 Unk3300_KANAJBJHCLG = 6 [json_name = "Unk3300KANAJBJHCLG"]; */
        if (message.unk3300KANAJBJHCLG !== 0)
            writer.tag(6, WireType.Varint).uint32(message.unk3300KANAJBJHCLG);
        /* Vector hit_point = 8; */
        if (message.hitPoint)
            Vector.internalBinaryWrite(message.hitPoint, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* HitColliderType hit_collider_type = 10; */
        if (message.hitColliderType !== 0)
            writer.tag(10, WireType.Varint).int32(message.hitColliderType);
        /* uint32 entity_id = 14; */
        if (message.entityId !== 0)
            writer.tag(14, WireType.Varint).uint32(message.entityId);
        /* uint32 forward_peer = 3; */
        if (message.forwardPeer !== 0)
            writer.tag(3, WireType.Varint).uint32(message.forwardPeer);
        /* int32 hit_box_index = 1; */
        if (message.hitBoxIndex !== 0)
            writer.tag(1, WireType.Varint).int32(message.hitBoxIndex);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message EvtBulletHitNotify
 */
export const EvtBulletHitNotify = new EvtBulletHitNotify$Type();
