/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: EvtBulletHitNotify.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ForwardType";
import * as dependency_2 from "./HitColliderType";
import * as dependency_3 from "./Vector";
import * as pb_1 from "google-protobuf";
export class EvtBulletHitNotify extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        Unk2700_FEALLBIBHOL?: number;
        hit_point?: dependency_3.Vector;
        hit_normal?: dependency_3.Vector;
        hit_box_index?: number;
        hit_entity_id?: number;
        entity_id?: number;
        forward_peer?: number;
        forward_type?: dependency_1.ForwardType;
        hit_collider_type?: dependency_2.HitColliderType;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("Unk2700_FEALLBIBHOL" in data && data.Unk2700_FEALLBIBHOL != undefined) {
                this.Unk2700_FEALLBIBHOL = data.Unk2700_FEALLBIBHOL;
            }
            if ("hit_point" in data && data.hit_point != undefined) {
                this.hit_point = data.hit_point;
            }
            if ("hit_normal" in data && data.hit_normal != undefined) {
                this.hit_normal = data.hit_normal;
            }
            if ("hit_box_index" in data && data.hit_box_index != undefined) {
                this.hit_box_index = data.hit_box_index;
            }
            if ("hit_entity_id" in data && data.hit_entity_id != undefined) {
                this.hit_entity_id = data.hit_entity_id;
            }
            if ("entity_id" in data && data.entity_id != undefined) {
                this.entity_id = data.entity_id;
            }
            if ("forward_peer" in data && data.forward_peer != undefined) {
                this.forward_peer = data.forward_peer;
            }
            if ("forward_type" in data && data.forward_type != undefined) {
                this.forward_type = data.forward_type;
            }
            if ("hit_collider_type" in data && data.hit_collider_type != undefined) {
                this.hit_collider_type = data.hit_collider_type;
            }
        }
    }
    get Unk2700_FEALLBIBHOL() {
        return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
    }
    set Unk2700_FEALLBIBHOL(value: number) {
        pb_1.Message.setField(this, 8, value);
    }
    get hit_point() {
        return pb_1.Message.getWrapperField(this, dependency_3.Vector, 15) as dependency_3.Vector;
    }
    set hit_point(value: dependency_3.Vector) {
        pb_1.Message.setWrapperField(this, 15, value);
    }
    get has_hit_point() {
        return pb_1.Message.getField(this, 15) != null;
    }
    get hit_normal() {
        return pb_1.Message.getWrapperField(this, dependency_3.Vector, 11) as dependency_3.Vector;
    }
    set hit_normal(value: dependency_3.Vector) {
        pb_1.Message.setWrapperField(this, 11, value);
    }
    get has_hit_normal() {
        return pb_1.Message.getField(this, 11) != null;
    }
    get hit_box_index() {
        return pb_1.Message.getFieldWithDefault(this, 9, 0) as number;
    }
    set hit_box_index(value: number) {
        pb_1.Message.setField(this, 9, value);
    }
    get hit_entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set hit_entity_id(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get entity_id() {
        return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
    }
    set entity_id(value: number) {
        pb_1.Message.setField(this, 5, value);
    }
    get forward_peer() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
    }
    set forward_peer(value: number) {
        pb_1.Message.setField(this, 7, value);
    }
    get forward_type() {
        return pb_1.Message.getFieldWithDefault(this, 2, dependency_1.ForwardType.FORWARD_TYPE_LOCAL) as dependency_1.ForwardType;
    }
    set forward_type(value: dependency_1.ForwardType) {
        pb_1.Message.setField(this, 2, value);
    }
    get hit_collider_type() {
        return pb_1.Message.getFieldWithDefault(this, 6, dependency_2.HitColliderType.HIT_COLLIDER_TYPE_INVALID) as dependency_2.HitColliderType;
    }
    set hit_collider_type(value: dependency_2.HitColliderType) {
        pb_1.Message.setField(this, 6, value);
    }
    static fromObject(data: {
        Unk2700_FEALLBIBHOL?: number;
        hit_point?: ReturnType<typeof dependency_3.Vector.prototype.toObject>;
        hit_normal?: ReturnType<typeof dependency_3.Vector.prototype.toObject>;
        hit_box_index?: number;
        hit_entity_id?: number;
        entity_id?: number;
        forward_peer?: number;
        forward_type?: dependency_1.ForwardType;
        hit_collider_type?: dependency_2.HitColliderType;
    }): EvtBulletHitNotify {
        const message = new EvtBulletHitNotify({});
        if (data.Unk2700_FEALLBIBHOL != null) {
            message.Unk2700_FEALLBIBHOL = data.Unk2700_FEALLBIBHOL;
        }
        if (data.hit_point != null) {
            message.hit_point = dependency_3.Vector.fromObject(data.hit_point);
        }
        if (data.hit_normal != null) {
            message.hit_normal = dependency_3.Vector.fromObject(data.hit_normal);
        }
        if (data.hit_box_index != null) {
            message.hit_box_index = data.hit_box_index;
        }
        if (data.hit_entity_id != null) {
            message.hit_entity_id = data.hit_entity_id;
        }
        if (data.entity_id != null) {
            message.entity_id = data.entity_id;
        }
        if (data.forward_peer != null) {
            message.forward_peer = data.forward_peer;
        }
        if (data.forward_type != null) {
            message.forward_type = data.forward_type;
        }
        if (data.hit_collider_type != null) {
            message.hit_collider_type = data.hit_collider_type;
        }
        return message;
    }
    toObject() {
        const data: {
            Unk2700_FEALLBIBHOL?: number;
            hit_point?: ReturnType<typeof dependency_3.Vector.prototype.toObject>;
            hit_normal?: ReturnType<typeof dependency_3.Vector.prototype.toObject>;
            hit_box_index?: number;
            hit_entity_id?: number;
            entity_id?: number;
            forward_peer?: number;
            forward_type?: dependency_1.ForwardType;
            hit_collider_type?: dependency_2.HitColliderType;
        } = {};
        if (this.Unk2700_FEALLBIBHOL != null) {
            data.Unk2700_FEALLBIBHOL = this.Unk2700_FEALLBIBHOL;
        }
        if (this.hit_point != null) {
            data.hit_point = this.hit_point.toObject();
        }
        if (this.hit_normal != null) {
            data.hit_normal = this.hit_normal.toObject();
        }
        if (this.hit_box_index != null) {
            data.hit_box_index = this.hit_box_index;
        }
        if (this.hit_entity_id != null) {
            data.hit_entity_id = this.hit_entity_id;
        }
        if (this.entity_id != null) {
            data.entity_id = this.entity_id;
        }
        if (this.forward_peer != null) {
            data.forward_peer = this.forward_peer;
        }
        if (this.forward_type != null) {
            data.forward_type = this.forward_type;
        }
        if (this.hit_collider_type != null) {
            data.hit_collider_type = this.hit_collider_type;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.Unk2700_FEALLBIBHOL != 0)
            writer.writeUint32(8, this.Unk2700_FEALLBIBHOL);
        if (this.has_hit_point)
            writer.writeMessage(15, this.hit_point, () => this.hit_point.serialize(writer));
        if (this.has_hit_normal)
            writer.writeMessage(11, this.hit_normal, () => this.hit_normal.serialize(writer));
        if (this.hit_box_index != 0)
            writer.writeInt32(9, this.hit_box_index);
        if (this.hit_entity_id != 0)
            writer.writeUint32(3, this.hit_entity_id);
        if (this.entity_id != 0)
            writer.writeUint32(5, this.entity_id);
        if (this.forward_peer != 0)
            writer.writeUint32(7, this.forward_peer);
        if (this.forward_type != dependency_1.ForwardType.FORWARD_TYPE_LOCAL)
            writer.writeEnum(2, this.forward_type);
        if (this.hit_collider_type != dependency_2.HitColliderType.HIT_COLLIDER_TYPE_INVALID)
            writer.writeEnum(6, this.hit_collider_type);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): EvtBulletHitNotify {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new EvtBulletHitNotify();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 8:
                    message.Unk2700_FEALLBIBHOL = reader.readUint32();
                    break;
                case 15:
                    reader.readMessage(message.hit_point, () => message.hit_point = dependency_3.Vector.deserialize(reader));
                    break;
                case 11:
                    reader.readMessage(message.hit_normal, () => message.hit_normal = dependency_3.Vector.deserialize(reader));
                    break;
                case 9:
                    message.hit_box_index = reader.readInt32();
                    break;
                case 3:
                    message.hit_entity_id = reader.readUint32();
                    break;
                case 5:
                    message.entity_id = reader.readUint32();
                    break;
                case 7:
                    message.forward_peer = reader.readUint32();
                    break;
                case 2:
                    message.forward_type = reader.readEnum();
                    break;
                case 6:
                    message.hit_collider_type = reader.readEnum();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): EvtBulletHitNotify {
        return EvtBulletHitNotify.deserialize(bytes);
    }
}
